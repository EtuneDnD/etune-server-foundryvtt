(()=>{var deferred,__webpack_modules__={44958:(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__)},90615:()=>{},25157:()=>{},17173:()=>{},46439:()=>{},89597:()=>{},91191:()=>{},65362:()=>{},77539:()=>{},28948:()=>{},72475:()=>{},57542:()=>{},1923:()=>{},48012:()=>{},9959:()=>{},99471:()=>{},78703:()=>{},17907:()=>{},10818:()=>{},26209:()=>{},3111:()=>{},51992:()=>{},87287:()=>{},42242:()=>{},24444:()=>{},54327:()=>{},89739:()=>{},87195:()=>{},8161:()=>{},35458:()=>{},89148:()=>{},67641:()=>{},89440:()=>{},33681:()=>{},93509:()=>{},97784:()=>{},69887:()=>{},45093:()=>{},71296:()=>{},43662:()=>{},14278:()=>{},44859:()=>{},16681:()=>{},73536:()=>{},55524:()=>{},38382:()=>{},63986:()=>{},30052:()=>{},77581:()=>{},92244:()=>{},62909:()=>{},66827:()=>{},24866:()=>{},52086:()=>{},95647:()=>{},57511:()=>{},62573:()=>{},1538:()=>{},78350:()=>{},23013:()=>{},13346:()=>{},12574:()=>{},50129:()=>{},6517:()=>{},8005:()=>{},82208:()=>{},83663:()=>{},2843:()=>{},97085:()=>{},23914:()=>{},62562:()=>{},54030:()=>{},36985:()=>{},87793:()=>{},32543:()=>{},46749:()=>{},66287:()=>{},60720:()=>{},32094:()=>{},70201:()=>{},96416:()=>{},42863:()=>{},1112:()=>{},60567:()=>{},91805:()=>{},91259:()=>{},76285:()=>{},25842:()=>{},49702:()=>{},66801:()=>{},65102:()=>{},49826:()=>{},87813:()=>{},63480:()=>{},67176:()=>{},40216:()=>{},77308:()=>{},97032:()=>{},83815:()=>{},6683:()=>{},88117:()=>{},15488:()=>{},37770:()=>{},62888:()=>{},41264:()=>{},55964:()=>{},3957:()=>{},42617:()=>{},78521:()=>{},50339:()=>{},1615:()=>{},99387:()=>{},55020:()=>{},6920:()=>{},74641:()=>{},68709:()=>{},8992:()=>{},99546:()=>{},13352:()=>{},7041:()=>{},32540:()=>{},40800:()=>{},75655:()=>{},11630:()=>{},49831:()=>{},29873:()=>{},22019:()=>{},24302:()=>{},13651:()=>{},63190:()=>{},76071:()=>{},95625:()=>{},79175:()=>{},71591:()=>{},60015:()=>{},82730:()=>{},45758:()=>{},7794:()=>{},28168:()=>{},49669:()=>{},33437:()=>{},65616:()=>{},94344:()=>{},50094:()=>{},93337:()=>{},55022:()=>{},78038:()=>{},57648:()=>{},18867:()=>{},55843:()=>{},68047:()=>{},22085:()=>{},50848:()=>{},2392:()=>{},78247:()=>{},64926:()=>{},31073:()=>{},45190:()=>{},10806:()=>{},77349:()=>{},71188:()=>{},41061:()=>{},84205:()=>{},28051:()=>{},32797:()=>{},43859:()=>{},7984:()=>{},76444:()=>{},52095:()=>{},34165:()=>{},1351:()=>{},51970:()=>{},64578:()=>{},59320:()=>{},93374:()=>{},64336:()=>{},24489:()=>{},30518:()=>{},51373:()=>{},41402:()=>{},55680:()=>{},81575:()=>{},15494:()=>{},97262:()=>{},26653:()=>{},77101:()=>{},89208:()=>{},21119:()=>{},76542:()=>{},25598:()=>{},82079:()=>{},10304:()=>{},45449:()=>{},10771:()=>{},63536:()=>{},81167:()=>{},35232:()=>{},57442:()=>{},67840:()=>{},21448:()=>{},76789:()=>{},7478:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.TemplatePreloader=void 0,__webpack_require__(90615),__webpack_require__(25157),__webpack_require__(17173),__webpack_require__(46439),__webpack_require__(89597),__webpack_require__(91191),__webpack_require__(65362),__webpack_require__(77539),__webpack_require__(28948),__webpack_require__(72475),__webpack_require__(57542),__webpack_require__(1923),__webpack_require__(48012),__webpack_require__(9959),__webpack_require__(99471),__webpack_require__(78703),__webpack_require__(17907),__webpack_require__(10818),__webpack_require__(26209),__webpack_require__(3111),__webpack_require__(51992),__webpack_require__(87287),__webpack_require__(42242),__webpack_require__(24444),__webpack_require__(54327),__webpack_require__(89739),__webpack_require__(87195),__webpack_require__(8161),__webpack_require__(35458),__webpack_require__(89148),__webpack_require__(67641),__webpack_require__(89440),__webpack_require__(33681),__webpack_require__(93509),__webpack_require__(97784),__webpack_require__(69887),__webpack_require__(45093),__webpack_require__(71296),__webpack_require__(43662),__webpack_require__(14278),__webpack_require__(44859),__webpack_require__(16681),__webpack_require__(73536),__webpack_require__(55524),__webpack_require__(38382),__webpack_require__(63986),__webpack_require__(30052),__webpack_require__(77581),__webpack_require__(92244),__webpack_require__(62909),__webpack_require__(66827),__webpack_require__(24866),__webpack_require__(52086),__webpack_require__(95647),__webpack_require__(57511),__webpack_require__(62573),__webpack_require__(1538),__webpack_require__(78350),__webpack_require__(23013),__webpack_require__(13346),__webpack_require__(12574),__webpack_require__(50129),__webpack_require__(6517),__webpack_require__(8005),__webpack_require__(82208),__webpack_require__(83663),__webpack_require__(2843),__webpack_require__(97085),__webpack_require__(23914),__webpack_require__(62562),__webpack_require__(36985),__webpack_require__(54030),__webpack_require__(87793),__webpack_require__(32543),__webpack_require__(46749),__webpack_require__(66287),__webpack_require__(60720),__webpack_require__(32094),__webpack_require__(70201),__webpack_require__(96416),__webpack_require__(42863),__webpack_require__(1112),__webpack_require__(60567),__webpack_require__(91805),__webpack_require__(91259),__webpack_require__(76285),__webpack_require__(25842),__webpack_require__(49702),__webpack_require__(66801),__webpack_require__(65102),__webpack_require__(49826),__webpack_require__(87813),__webpack_require__(63480),__webpack_require__(67176),__webpack_require__(40216),__webpack_require__(77308),__webpack_require__(97032),__webpack_require__(83815),__webpack_require__(6683),__webpack_require__(88117),__webpack_require__(15488),__webpack_require__(37770),__webpack_require__(62888),__webpack_require__(41264),__webpack_require__(55964),__webpack_require__(3957),__webpack_require__(42617),__webpack_require__(78521),__webpack_require__(50339),__webpack_require__(1615),__webpack_require__(99387),__webpack_require__(55020),__webpack_require__(6920),__webpack_require__(74641),__webpack_require__(68709),__webpack_require__(8992),__webpack_require__(99546),__webpack_require__(13352),__webpack_require__(7041),__webpack_require__(32540),__webpack_require__(40800),__webpack_require__(75655),__webpack_require__(11630),__webpack_require__(49831),__webpack_require__(29873),__webpack_require__(22019),__webpack_require__(24302),__webpack_require__(13651),__webpack_require__(63190),__webpack_require__(76071),__webpack_require__(95625),__webpack_require__(79175),__webpack_require__(71591),__webpack_require__(60015),__webpack_require__(82730),__webpack_require__(45758),__webpack_require__(7794),__webpack_require__(28168),__webpack_require__(49669),__webpack_require__(33437),__webpack_require__(65616),__webpack_require__(94344),__webpack_require__(50094),__webpack_require__(93337),__webpack_require__(55022),__webpack_require__(78038),__webpack_require__(57648),__webpack_require__(18867),__webpack_require__(55843),__webpack_require__(68047),__webpack_require__(22085),__webpack_require__(50848),__webpack_require__(2392),__webpack_require__(78247),__webpack_require__(64926),__webpack_require__(31073),__webpack_require__(45190),__webpack_require__(10806),__webpack_require__(77349),__webpack_require__(71188),__webpack_require__(41061),__webpack_require__(84205),__webpack_require__(28051),__webpack_require__(32797),__webpack_require__(43859),__webpack_require__(7984),__webpack_require__(76444),__webpack_require__(52095),__webpack_require__(34165),__webpack_require__(1351),__webpack_require__(51970),__webpack_require__(64578),__webpack_require__(59320),__webpack_require__(93374),__webpack_require__(64336),__webpack_require__(24489),__webpack_require__(30518),__webpack_require__(51373),__webpack_require__(41402),__webpack_require__(55680),__webpack_require__(81575),__webpack_require__(15494),__webpack_require__(97262),__webpack_require__(26653),__webpack_require__(77101),__webpack_require__(89208),__webpack_require__(21119),__webpack_require__(76542),__webpack_require__(25598),__webpack_require__(82079),__webpack_require__(10304),__webpack_require__(45449),__webpack_require__(10771),__webpack_require__(63536),__webpack_require__(81167),__webpack_require__(35232),__webpack_require__(57442),__webpack_require__(67840),__webpack_require__(21448),__webpack_require__(76789);exports.TemplatePreloader=class TemplatePreloader{static async preloadHandlebarsTemplates(){return loadTemplates(["systems/pf2e/templates/actors/add-coins.html","systems/pf2e/templates/actors/add-combat-proficiency-dialog.html","systems/pf2e/templates/actors/character/ability-builder.html","systems/pf2e/templates/actors/character/config.html","systems/pf2e/templates/actors/character/icons/d20.html","systems/pf2e/templates/actors/character/icons/pfs.html","systems/pf2e/templates/actors/character/icons/plus.html","systems/pf2e/templates/actors/character/limited.html","systems/pf2e/templates/actors/character/manage-tabs.html","systems/pf2e/templates/actors/character/partials/abilities.html","systems/pf2e/templates/actors/character/partials/background.html","systems/pf2e/templates/actors/character/partials/granted-feat.html","systems/pf2e/templates/actors/character/partials/header.html","systems/pf2e/templates/actors/character/partials/modifiers-tooltip.html","systems/pf2e/templates/actors/character/partials/proficiencylevels-dropdown.html","systems/pf2e/templates/actors/character/partials/traits.html","systems/pf2e/templates/actors/character/sheet.html","systems/pf2e/templates/actors/character/sidebar/armor-class.html","systems/pf2e/templates/actors/character/sidebar/class-dc.html","systems/pf2e/templates/actors/character/sidebar/health.html","systems/pf2e/templates/actors/character/sidebar/initiative.html","systems/pf2e/templates/actors/character/sidebar/perception.html","systems/pf2e/templates/actors/character/sidebar/resistances.html","systems/pf2e/templates/actors/character/sidebar/saves.html","systems/pf2e/templates/actors/character/sidebar/stamina.html","systems/pf2e/templates/actors/character/tabs/actions.html","systems/pf2e/templates/actors/character/tabs/biography.html","systems/pf2e/templates/actors/character/tabs/crafting.html","systems/pf2e/templates/actors/character/tabs/effects.html","systems/pf2e/templates/actors/character/tabs/feats.html","systems/pf2e/templates/actors/character/tabs/general.html","systems/pf2e/templates/actors/character/tabs/inventory.html","systems/pf2e/templates/actors/character/tabs/pfs.html","systems/pf2e/templates/actors/character/tabs/proficiencies.html","systems/pf2e/templates/actors/character/tabs/spellcasting.html","systems/pf2e/templates/actors/crafting-entry-alchemical.html","systems/pf2e/templates/actors/crafting-entry-list.html","systems/pf2e/templates/actors/crafting-select-spell-dialog.html","systems/pf2e/templates/actors/delete-condition-dialog.html","systems/pf2e/templates/actors/delete-item-dialog.html","systems/pf2e/templates/actors/delete-spellcasting-dialog.html","systems/pf2e/templates/actors/distribute-coins.html","systems/pf2e/templates/actors/familiar-sheet.html","systems/pf2e/templates/actors/hazard/partials/header.html","systems/pf2e/templates/actors/hazard/partials/sidebar.html","systems/pf2e/templates/actors/hazard/sheet.html","systems/pf2e/templates/actors/identify-item-chat-skill-checks.html","systems/pf2e/templates/actors/identify-item.html","systems/pf2e/templates/actors/limited/npc-sheet.html","systems/pf2e/templates/actors/loot/inventory.html","systems/pf2e/templates/actors/loot/loot-npcs-popup.html","systems/pf2e/templates/actors/loot/sheet.html","systems/pf2e/templates/actors/loot/sidebar.html","systems/pf2e/templates/actors/npc/config.html","systems/pf2e/templates/actors/npc/forms/npc-skills-editor.html","systems/pf2e/templates/actors/npc/loot-sheet.html","systems/pf2e/templates/actors/npc/partials/action.html","systems/pf2e/templates/actors/npc/partials/attack.html","systems/pf2e/templates/actors/npc/partials/header.html","systems/pf2e/templates/actors/npc/partials/sidebar.html","systems/pf2e/templates/actors/npc/sheet.html","systems/pf2e/templates/actors/npc/tabs/effects.html","systems/pf2e/templates/actors/npc/tabs/inventory.html","systems/pf2e/templates/actors/npc/tabs/main.html","systems/pf2e/templates/actors/npc/tabs/notes.html","systems/pf2e/templates/actors/npc/tabs/spells.html","systems/pf2e/templates/actors/partials/carry-type.html","systems/pf2e/templates/actors/partials/coinage.html","systems/pf2e/templates/actors/partials/conditions.html","systems/pf2e/templates/actors/partials/dying-pips.html","systems/pf2e/templates/actors/partials/images/header_stroke_large.html","systems/pf2e/templates/actors/partials/images/header_stroke.html","systems/pf2e/templates/actors/partials/inventory.html","systems/pf2e/templates/actors/partials/item-line.html","systems/pf2e/templates/actors/recall-knowledge.html","systems/pf2e/templates/actors/remove-coins.html","systems/pf2e/templates/actors/sell-all-treasure-dialog.html","systems/pf2e/templates/actors/spellcasting-dialog.html","systems/pf2e/templates/actors/spellcasting-prep-sheet.html","systems/pf2e/templates/actors/spellcasting-spell-list.html","systems/pf2e/templates/actors/trait-selector.html","systems/pf2e/templates/actors/vehicle/sidebar/vehicle-armorclass.html","systems/pf2e/templates/actors/vehicle/sidebar/vehicle-health.html","systems/pf2e/templates/actors/vehicle/sidebar/vehicle-resistances.html","systems/pf2e/templates/actors/vehicle/sidebar/vehicle-saves.html","systems/pf2e/templates/actors/vehicle/tabs/vehicle-actions.html","systems/pf2e/templates/actors/vehicle/tabs/vehicle-description.html","systems/pf2e/templates/actors/vehicle/tabs/vehicle-details.html","systems/pf2e/templates/actors/vehicle/tabs/vehicle-inventory.html","systems/pf2e/templates/actors/vehicle/vehicle-header.html","systems/pf2e/templates/actors/vehicle/vehicle-sheet.html","systems/pf2e/templates/chat/action-card.html","systems/pf2e/templates/chat/action/content.html","systems/pf2e/templates/chat/action/flavor.html","systems/pf2e/templates/chat/armor-card.html","systems/pf2e/templates/chat/backpack-card.html","systems/pf2e/templates/chat/chat-roll-details.html","systems/pf2e/templates/chat/check-modifiers-dialog.html","systems/pf2e/templates/chat/check/strike/attack-roll.html","systems/pf2e/templates/chat/check/target-dc-result.html","systems/pf2e/templates/chat/condition-card.html","systems/pf2e/templates/chat/consumable-card.html","systems/pf2e/templates/chat/crafting-result.html","systems/pf2e/templates/chat/damage/buttons.html","systems/pf2e/templates/chat/damage/damage-card-details.html","systems/pf2e/templates/chat/damage/damage-card-flavor.html","systems/pf2e/templates/chat/effect-card.html","systems/pf2e/templates/chat/equipment-card.html","systems/pf2e/templates/chat/feat-card.html","systems/pf2e/templates/chat/melee-card.html","systems/pf2e/templates/chat/roll-dialog.html","systems/pf2e/templates/chat/spell-card.html","systems/pf2e/templates/chat/strike-card.html","systems/pf2e/templates/chat/treasure-card.html","systems/pf2e/templates/chat/weapon-card.html","systems/pf2e/templates/compendium-browser/browser-settings.html","systems/pf2e/templates/compendium-browser/compendium-browser.html","systems/pf2e/templates/compendium-browser/filters.html","systems/pf2e/templates/compendium-browser/partials/action.html","systems/pf2e/templates/compendium-browser/partials/bestiary.html","systems/pf2e/templates/compendium-browser/partials/equipment.html","systems/pf2e/templates/compendium-browser/partials/feat.html","systems/pf2e/templates/compendium-browser/partials/hazard.html","systems/pf2e/templates/compendium-browser/partials/spell.html","systems/pf2e/templates/gm/travel/travel-speed-sheet.html","systems/pf2e/templates/items/action-details.html","systems/pf2e/templates/items/activation-panel.html","systems/pf2e/templates/items/ancestry-details.html","systems/pf2e/templates/items/ancestry-sidebar.html","systems/pf2e/templates/items/armor-details.html","systems/pf2e/templates/items/armor-sidebar.html","systems/pf2e/templates/items/background-details.html","systems/pf2e/templates/items/backpack-details.html","systems/pf2e/templates/items/backpack-sidebar.html","systems/pf2e/templates/items/book-details.html","systems/pf2e/templates/items/book-sidebar.html","systems/pf2e/templates/items/class-details.html","systems/pf2e/templates/items/condition-details.html","systems/pf2e/templates/items/condition-sidebar.html","systems/pf2e/templates/items/consumable-details.html","systems/pf2e/templates/items/consumable-sidebar.html","systems/pf2e/templates/items/deity-details.html","systems/pf2e/templates/items/effect-sidebar.html","systems/pf2e/templates/items/equipment-details.html","systems/pf2e/templates/items/equipment-sidebar.html","systems/pf2e/templates/items/feat-details.html","systems/pf2e/templates/items/feat-sidebar.html","systems/pf2e/templates/items/formula-sidebar.html","systems/pf2e/templates/items/heritage-sidebar.html","systems/pf2e/templates/items/item-sheet.html","systems/pf2e/templates/items/kit-details.html","systems/pf2e/templates/items/kit-sidebar.html","systems/pf2e/templates/items/lore-details.html","systems/pf2e/templates/items/lore-sidebar.html","systems/pf2e/templates/items/melee-details.html","systems/pf2e/templates/items/mystify-panel.html","systems/pf2e/templates/items/rules-panel.html","systems/pf2e/templates/items/rules/default.html","systems/pf2e/templates/items/rules/flat-modifier.html","systems/pf2e/templates/items/rules/grant-item.html","systems/pf2e/templates/items/rules/note.html","systems/pf2e/templates/items/spell-details.html","systems/pf2e/templates/items/spell-overlay.html","systems/pf2e/templates/items/spell-sidebar.html","systems/pf2e/templates/items/spell-variant-prompt.html","systems/pf2e/templates/items/treasure-sidebar.html","systems/pf2e/templates/items/weapon-details.html","systems/pf2e/templates/items/weapon-sidebar.html","systems/pf2e/templates/packs/license-viewer.html","systems/pf2e/templates/popups/loot/move-loot-popup.html","systems/pf2e/templates/popups/scroll-wand-popup.html","systems/pf2e/templates/scene/token/partials/appearance.html","systems/pf2e/templates/scene/token/partials/identity.html","systems/pf2e/templates/scene/token/partials/lighting.html","systems/pf2e/templates/scene/token/sheet.html","systems/pf2e/templates/sidebar/actor-document-partial.html","systems/pf2e/templates/sidebar/compendium-directory.html","systems/pf2e/templates/sidebar/encounter-tracker/config.html","systems/pf2e/templates/system/actions/craft-target-item.html","systems/pf2e/templates/system/actions/repair/chat-button-partial.html","systems/pf2e/templates/system/actions/repair/item-heading-partial.html","systems/pf2e/templates/system/actions/repair/repair-result-partial.html","systems/pf2e/templates/system/actions/repair/roll-damage-chat-message.html","systems/pf2e/templates/system/actions/repair/select-item-dialog.html","systems/pf2e/templates/system/effects-panel.html","systems/pf2e/templates/system/migration-summary.html","systems/pf2e/templates/system/rules-elements/choice-set-prompt.html","systems/pf2e/templates/system/scene-darkness-adjuster.html","systems/pf2e/templates/system/settings/homebrew.html","systems/pf2e/templates/system/settings/menu.html","systems/pf2e/templates/system/settings/variant-rules-settings.html","systems/pf2e/templates/system/settings/world-clock/confirm-reset.html","systems/pf2e/templates/system/settings/world-clock/index.html","systems/pf2e/templates/system/tag-selector/basic.html","systems/pf2e/templates/system/tag-selector/resistances.html","systems/pf2e/templates/system/tag-selector/senses.html","systems/pf2e/templates/system/tag-selector/speeds.html","systems/pf2e/templates/system/tag-selector/weaknesses.html","systems/pf2e/templates/system/world-clock.html","systems/pf2e/templates/user/sheet.html"])}}},2680:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.ActiveEffectPF2e=void 0;class ActiveEffectPF2e extends ActiveEffect{constructor(data,context){data.disabled=!0,data.transfer=!1,super(data,context)}static async createDocuments(){return[]}}exports.ActiveEffectPF2e=ActiveEffectPF2e},65532:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.ActorPF2e=void 0;const _item_1=__webpack_require__(10843),helpers_1=__webpack_require__(23247),helpers_2=__webpack_require__(44252),chat_message_1=__webpack_require__(40405),doc_helpers_1=__webpack_require__(77613),migration_1=__webpack_require__(63051),roll_option_1=__webpack_require__(33767),localize_1=__webpack_require__(41332),_scene_1=__webpack_require__(12789),dice_1=__webpack_require__(18235),sheet_util_1=__webpack_require__(15806),_util_1=__webpack_require__(6945),data_1=__webpack_require__(73204),size_1=__webpack_require__(43270),inventory_1=__webpack_require__(33835),item_transfer_1=__webpack_require__(46485),spellcasting_1=__webpack_require__(95438),token_effect_1=__webpack_require__(21075),values_1=__webpack_require__(8382);class ActorPF2e extends Actor{constructor(data,context={}){var _a,_b,_c;if(!(null===(_a=context.pf2e)||void 0===_a?void 0:_a.ready)){context.pf2e=mergeObject(null!==(_c=context.pf2e)&&void 0!==_c?_c:{},{ready:!0});const ActorConstructor=CONFIG.PF2E.Actor.documentClasses[data.type];return ActorConstructor?new ActorConstructor(data,context):new ActorPF2e(data,context)}if(context.pack&&data._id){const art=game.pf2e.system.moduleArt.map.get(`Compendium.${context.pack}.${data._id}`);if(art){data.img=art.actor;const tokenArt="string"==typeof art.token?{img:art.token}:{...art.token,flags:{pf2e:{autoscale:!1}}};data.prototypeToken=mergeObject(null!==(_b=data.prototypeToken)&&void 0!==_b?_b:{},tokenArt)}}super(data,context)}get itemTypes(){var _a;return null!==(_a=this._itemTypes)&&void 0!==_a?_a:this._itemTypes=super.itemTypes}get allowedItemTypes(){return["condition","effect"]}get sourceId(){var _a,_b;return null!==(_b=null===(_a=this.flags.core)||void 0===_a?void 0:_a.sourceId)&&void 0!==_b?_b:null}get schemaVersion(){var _a;return Number(null===(_a=this.system.schema)||void 0===_a?void 0:_a.version)||null}get primaryUpdater(){const activeUsers=game.users.filter((u=>u.active)),firstGM=activeUsers.filter((u=>u.isGM)).sort(((a,b)=>a.id>b.id?1:-1)).shift();if(firstGM)return firstGM;const primaryPlayer=this.isToken?null:activeUsers.find((u=>{var _a;return(null===(_a=u.character)||void 0===_a?void 0:_a.id)===this.id}));if(primaryPlayer)return primaryPlayer;const firstUpdater=game.users.filter((u=>this.canUserModify(u,"update"))).sort(((a,b)=>a.id>b.id?1:-1)).shift();return null!=firstUpdater?firstUpdater:null}get attributes(){return this.system.attributes}get hitPoints(){const{hp}=this.system.attributes;return hp?{value:hp.value,max:hp.max,temp:hp.temp,negativeHealing:hp.negativeHealing}:null}get traits(){return new Set(this.system.traits.value)}get level(){return this.system.details.level.value}get size(){return this.system.traits.size.value}get dimensions(){const{size}=this.system.traits;return{length:size.length,width:size.width,height:Math.min(size.length,size.width)}}get canSee(){return!0}get canAct(){return!0}get canAttack(){return!1}get isDead(){const deathIcon=game.settings.get("pf2e","deathIcon");if(this.token)return this.token.overlayEffect===deathIcon;const tokens=this.getActiveTokens(!0,!0);return tokens.length>0&&tokens.every((t=>t.overlayEffect===deathIcon))}get modeOfBeing(){const{traits}=this;return traits.has("undead")?"undead":traits.has("construct")?"construct":"living"}get visionLevel(){return data_1.VisionLevels.NORMAL}get emitsSound(){return!1}get rollOptions(){return this.flags.pf2e.rollOptions}get heldShield(){return null}get canHostRuleElements(){return!0}get alliance(){return this.system.details.alliance}get temporaryEffects(){const conditionTokenIcons=this.itemTypes.condition.map((condition=>(condition=>`${CONFIG.PF2E.statusEffects.iconDir}${condition.slug}.webp`)(condition))),conditionTokenEffects=Array.from(new Set(conditionTokenIcons)).map((icon=>new token_effect_1.TokenEffect(icon))),effectTokenEffects=this.itemTypes.effect.filter((effect=>{var _a;return null===(_a=effect.system.tokenIcon)||void 0===_a?void 0:_a.show})).filter((effect=>!effect.unidentified||game.user.isGM)).map((effect=>new token_effect_1.TokenEffect(effect.img)));return super.temporaryEffects.concat(this.system.tokenEffects).concat(conditionTokenEffects).concat(effectTokenEffects)}isOfType(...types){return types.some((t=>"creature"===t?(0,_util_1.tupleHasValue)(values_1.CREATURE_ACTOR_TYPES,this.type):this.type===t))}isAllyOf(actor){return null!==this.alliance&&this.alliance===actor.alliance}getSelfRollOptions(prefix="self"){const{rollOptions}=this;return Object.keys(rollOptions.all).flatMap((o=>o.startsWith("self:")&&rollOptions.all[o]?o.replace(/^self/,prefix):[]))}getReach(_options){return 0}getContextualClone(rollOptions){const rollOptionsAll=rollOptions.reduce(((options,option)=>({...options,[option]:!0})),{});return this.clone({flags:{pf2e:{rollOptions:{all:rollOptionsAll}}}},{keepId:!0})}async applyAreaEffects(aura,{origin}){var _a;if(game.user!==this.primaryUpdater)return;const toCreate=[];for(const data of aura.effects)if(!this.itemTypes.effect.some((e=>e.sourceId===data.uuid))&&"allies"===data.affects&&this.isAllyOf(origin)){const effect=await fromUuid(data.uuid);if(!(effect instanceof _item_1.ItemPF2e&&effect.isOfType("effect"))){console.warn(`Effect from ${data.uuid} not found`);continue}const flags={core:{sourceId:effect.uuid},pf2e:{aura:{slug:aura.slug,origin:origin.uuid,removeOnExit:data.removeOnExit}}},source=mergeObject(effect.toObject(),{flags});source.system.level.value=null!==(_a=data.level)&&void 0!==_a?_a:source.system.level.value,source.system.duration.unit="unlimited",source.system.duration.expiry=null,toCreate.push(source)}toCreate.length>0&&await this.createEmbeddedDocuments("Item",toCreate)}async checkAreaEffects(){var _a,_b,_c;if(!canvas.ready||game.user!==this.primaryUpdater)return;const thisTokens=this.getActiveTokens(!1,!0),toDelete=[],toKeep=[];for(const effect of this.itemTypes.effect){const auraData=effect.flags.pf2e.aura;if(!(null==auraData?void 0:auraData.removeOnExit))continue;const auraToken=await(async()=>{var _a;const document=await fromUuid(auraData.origin);return document instanceof _scene_1.TokenDocumentPF2e?document:document instanceof ActorPF2e&&null!==(_a=document.getActiveTokens(!1,!0).shift())&&void 0!==_a?_a:null})(),aura=null==auraToken?void 0:auraToken.auras.get(auraData.slug),auraHasEffect=(null!==(_c=null===(_b=null===(_a=null==auraToken?void 0:auraToken.actor)||void 0===_a?void 0:_a.auras.get(auraData.slug))||void 0===_b?void 0:_b.effects)&&void 0!==_c?_c:[]).some((e=>e.uuid===effect.sourceId));for(const token of thisTokens)auraHasEffect&&(null==aura?void 0:aura.containsToken(token))?toKeep.push(effect.id):toDelete.push(effect.id);0===thisTokens.length&&toDelete.push(effect.id)}const finalToDelete=toDelete.filter((id=>!toKeep.includes(id)));finalToDelete.length>0&&await this.deleteEmbeddedDocuments("Item",finalToDelete)}static async createDocuments(data=[],context={}){var _a,_b,_c,_d,_e,_f,_g,_h,_j;for(const datum of data){const{linkToActorSize}=null!==(_c=null===(_b=null===(_a=datum.prototypeToken)||void 0===_a?void 0:_a.flags)||void 0===_b?void 0:_b.pf2e)&&void 0!==_c?_c:{},merged=mergeObject(datum,{ownership:null!==(_d=datum.ownership)&&void 0!==_d?_d:{default:CONST.DOCUMENT_PERMISSION_LEVELS.NONE},prototypeToken:{flags:{pf2e:{linkToActorSize:null!=linkToActorSize?linkToActorSize:!["hazard","loot"].includes(datum.type)}}}}),dimensionMap={familiar:.5,vehicle:2};switch(null!==(_e=(_h=merged.prototypeToken).height)&&void 0!==_e||(_h.height=null!==(_f=dimensionMap[datum.type])&&void 0!==_f?_f:1),null!==(_g=(_j=merged.prototypeToken).width)&&void 0!==_g||(_j.width=merged.prototypeToken.height),merged.type){case"character":case"familiar":merged.ownership.default=CONST.DOCUMENT_PERMISSION_LEVELS.LIMITED,merged.prototypeToken.actorLink=!0,merged.prototypeToken.vision=!0;break;case"loot":merged.prototypeToken.actorLink=!0,merged.ownership.default=CONST.DOCUMENT_PERMISSION_LEVELS.LIMITED}}return super.createDocuments(data,context)}_initialize(){this.rules=[],this.conditions=new Map,this.auras=new Map;const preparationWarnings=new Set;this.synthetics={criticalSpecalizations:{standard:[],alternate:[]},damageDice:{damage:[]},degreeOfSuccessAdjustments:{},dexterityModifierCaps:[],modifierAdjustments:{all:[],damage:[]},movementTypes:{},multipleAttackPenalties:{},rollNotes:{},rollSubstitutions:{},rollTwice:{},senses:[],statisticsModifiers:{all:[],damage:[]},strikeAdjustments:[],strikes:new Map,striking:{},targetMarks:new Map,tokenOverrides:{},weaponPotency:{},preparationWarnings:{add:warning=>preparationWarnings.add(warning),flush:foundry.utils.debounce((()=>{for(const warning of preparationWarnings)console.warn(warning);preparationWarnings.clear()}),10)}},super._initialize(),this.initialized=!0,game._documentsReady&&this.synthetics.preparationWarnings.flush()}prepareData(){if(delete this._itemTypes,super.prepareData(),this.preparePrototypeToken(),this.initialized&&canvas.ready){const thisTokenIsControlled=canvas.tokens.controlled.some((t=>t.actor===this));(game.user.character===this||thisTokenIsControlled)&&game.pf2e.effectPanel.refresh()}}prepareBaseData(){var _a;super.prepareBaseData(),this.system.tokenEffects=[],this.system.autoChanges={},this.system.attributes.flanking={canFlank:!1,canGangUp:[],flankable:!1,flatFootable:!1},this.system.toggles=[];const traits=this.system.traits;(null==traits?void 0:traits.size)&&(traits.size=new size_1.ActorSizePF2e(traits.size)),this.flags.pf2e=mergeObject(null!==(_a=this.flags.pf2e)&&void 0!==_a?_a:{},{rollOptions:{all:{[`self:type:${this.type}`]:!0}}}),this.setEncounterRollOptions()}prepareEmbeddedDocuments(){super.prepareEmbeddedDocuments();const physicalItems=this.items.filter((item=>item instanceof _item_1.PhysicalItemPF2e));this.inventory=new inventory_1.ActorInventory(this,physicalItems);const spellcastingEntries=this.itemTypes.spellcastingEntry;this.spellcasting=new spellcasting_1.ActorSpellcasting(this,spellcastingEntries);for(const effect of this.itemTypes.effect)game.pf2e.effectTracker.register(effect);this.prepareDataFromItems()}prepareDataFromItems(){var _a,_b;for(const item of this.items)null===(_a=item.prepareSiblingData)||void 0===_a||_a.call(item),null===(_b=item.prepareActorData)||void 0===_b||_b.call(item);this.rules=this.prepareRuleElements()}prepareRuleElements(){return this.items.contents.flatMap((item=>item.prepareRuleElements())).filter((rule=>!rule.ignored)).sort(((elementA,elementB)=>elementA.priority-elementB.priority))}prepareSynthetics(){var _a;for(const rule of this.rules.filter((r=>!r.ignored)))try{null===(_a=rule.beforePrepareData)||void 0===_a||_a.call(rule)}catch(error){console.error(`PF2e | Failed to execute onBeforePrepareData on rule element ${rule}.`,error)}}prepareDerivedData(){const{rollOptions}=this;for(const trait of this.traits)rollOptions.all[`self:trait:${trait}`]=!0}preparePrototypeToken(){this.prototypeToken.flags=mergeObject({pf2e:{linkToActorSize:!["hazard","loot"].includes(this.type)}},this.prototypeToken.flags),_scene_1.TokenDocumentPF2e.prepareSize(this.prototypeToken,this)}setEncounterRollOptions(){var _a,_b,_c;const encounter=game.ready?game.combat:null;if(!(null==encounter?void 0:encounter.started))return;const participants=encounter.combatants.contents,participant=null!==(_b=null===(_a=this.token)||void 0===_a?void 0:_a.combatant)&&void 0!==_b?_b:participants.find((c=>c.actor===this));if(!participant||null===participant.initiative)return;const rollOptionsAll=this.rollOptions.all;rollOptionsAll.encounter=!0,rollOptionsAll[`encounter:round:${encounter.round}`]=!0,rollOptionsAll[`encounter:turn:${encounter.turn+1}`]=!0,rollOptionsAll["self:participant:own-turn"]=(null===(_c=encounter.combatant)||void 0===_c?void 0:_c.actor)===this;const rank=[...participants].reverse().indexOf(participant)+1;rollOptionsAll[`self:participant:initiative:roll:${participant.initiative}`]=!0,rollOptionsAll[`self:participant:initiative:rank:${rank}`]=!0}rollSave(event,saveType){var _a,_b;console.warn("ActorPF2e#rollSaves is deprecated: use actor.saves[saveType].check.roll()"),null===(_b=null===(_a=this.saves)||void 0===_a?void 0:_a[saveType])||void 0===_b||_b.check.roll((0,sheet_util_1.eventToRollParams)(event))}rollAttribute(event,attributeName){if(!(0,_util_1.objectHasKey)(this.system.attributes,attributeName))throw(0,_util_1.ErrorPF2e)(`Unrecognized attribute "${attributeName}"`);const attribute=this.attributes[attributeName];if(!(0,_util_1.isObject)(attribute)||!("value"in attribute))return;const parts=["@mod","@itemBonus"],configAttributes=CONFIG.PF2E.attributes;if((0,_util_1.isObject)(attribute)&&(0,_util_1.objectHasKey)(configAttributes,attributeName)){const flavor=`${game.i18n.localize(configAttributes[attributeName])} Check`;dice_1.DicePF2e.d20Roll({event,parts,data:{mod:attribute.value},title:flavor,speaker:ChatMessage.getSpeaker({actor:this})})}}async toggleRollOption(domain,option,itemId=null,value){var _a,_b;if(value="boolean"==typeof itemId?itemId:null!=value?value:!(null===(_a=this.rollOptions[domain])||void 0===_a?void 0:_a[option]),"string"==typeof itemId)return roll_option_1.RollOptionRuleElement.toggleOption({actor:this,domain,option,itemId,value});{const match=this.rules.find((rule=>rule instanceof roll_option_1.RollOptionRuleElement&&rule.domain===domain&&rule.option===option)),itemId=null!==(_b=null==match?void 0:match.item.id)&&void 0!==_b?_b:null;return roll_option_1.RollOptionRuleElement.toggleOption({actor:this,domain,option,itemId,value})}}async modifyTokenAttribute(attribute,value,isDelta=!1,isBar=!0){var _a,_b;const token=this.getActiveTokens(!1,!0).shift(),isDamage=isDelta||0===value&&!!(null==token?void 0:token.combatant);if(token&&"attributes.hp"===attribute&&isDamage){const damage=0===value?null!==(_b=null===(_a=this.hitPoints)||void 0===_a?void 0:_a.value)&&void 0!==_b?_b:0:-value;return this.applyDamage(damage,token)}return super.modifyTokenAttribute(attribute,value,isDelta,isBar)}async applyDamage(damage,token,shieldBlockRequest=!1){var _a,_b,_c,_d,_e,_f;const{hitPoints}=this;if(!hitPoints)return this;damage=Math.trunc(damage);const translations=localize_1.LocalizePF2e.translations.PF2E.Actor.ApplyDamage,{attributes}=this,actorShield="shield"in attributes?attributes.shield:null,shieldBlock=!(!actorShield||!shieldBlockRequest)&&(()=>{const warnings=localize_1.LocalizePF2e.translations.PF2E.Actions.RaiseAShield;return actorShield.broken?(ui.notifications.warn(game.i18n.format(warnings.ShieldIsBroken,{actor:token.name,shield:actorShield.name})),!1):actorShield.destroyed?(ui.notifications.warn(game.i18n.format(warnings.ShieldIsDestroyed,{actor:token.name,shield:actorShield.name})),!1):!!actorShield.raised||(ui.notifications.warn(game.i18n.format(translations.ShieldNotRaised,{actor:token.name})),!1)})(),shieldHardness=shieldBlock&&null!==(_a=null==actorShield?void 0:actorShield.hardness)&&void 0!==_a?_a:0,absorbedDamage=Math.min(shieldHardness,Math.abs(damage)),shieldDamage=shieldBlock?Math.min(null!==(_b=null==actorShield?void 0:actorShield.hp.value)&&void 0!==_b?_b:0,Math.abs(damage)-absorbedDamage):0,hpUpdate=this.calculateHealthDelta({hp:hitPoints,sp:this.isOfType("character")?this.attributes.sp:void 0,delta:damage-absorbedDamage}),hpDamage=hpUpdate.totalApplied;if(shieldDamage>0){const shield=(()=>{var _a;const item=this.items.get(null!==(_a=null==actorShield?void 0:actorShield.itemId)&&void 0!==_a?_a:"");return(null==item?void 0:item.isOfType("armor"))?item:null})();await(null==shield?void 0:shield.update({"system.hp.value":shield.hitPoints.value-shieldDamage},{render:0===hpDamage}))}0!==hpDamage&&await this.update(hpUpdate.updates);const deadAtZero=["npcsOnly","both"].includes(game.settings.get("pf2e","automation.actorsDeadAtZero"));this.isOfType("npc")&&deadAtZero&&this.isDead!==(null===(_c=token.combatant)||void 0===_c?void 0:_c.isDefeated)&&(null===(_d=token.combatant)||void 0===_d||_d.toggleDefeated());const hpStatement=0===damage?translations.TakesNoDamage:damage>0?absorbedDamage>0?hpDamage>0?translations.DamagedForNShield:translations.ShieldAbsorbsAll:translations.DamagedForN:hpDamage<0?translations.HealedForN:translations.AtFullHealth,updatedShield="shield"in this.attributes?this.attributes.shield:null,statements=[hpStatement,updatedShield&&shieldDamage>0?updatedShield.broken?translations.ShieldDamagedForNBroken:updatedShield.destroyed?translations.ShieldDamagedForNDestroyed:translations.ShieldDamagedForN:null].filter((s=>!!s)).map((s=>game.i18n.format(s,{actor:token.name,hpDamage:Math.abs(hpDamage),absorbedDamage,shieldDamage}))).join(" ");return await chat_message_1.ChatMessagePF2e.create({speaker:{alias:token.name,token:null!==(_e=token.id)&&void 0!==_e?_e:null},content:`<p>${statements}</p>`,type:CONST.CHAT_MESSAGE_TYPES.EMOTE,whisper:game.settings.get("pf2e","metagame_secretDamage")&&!(null===(_f=token.actor)||void 0===_f?void 0:_f.hasPlayerOwner)?chat_message_1.ChatMessagePF2e.getWhisperRecipients("GM").map((u=>u.id)):[]}),this}isLootableBy(user){return this.canUserModify(user,"update")}async transferItemToActor(targetActor,item,quantity,containerId,newStack=!1){var _a,_b;if(!(item instanceof _item_1.PhysicalItemPF2e))throw(0,_util_1.ErrorPF2e)("Only physical items (with quantities) can be transfered between actors");const container=targetActor.inventory.get(null!=containerId?containerId:"");if(container&&!(container instanceof _item_1.ContainerPF2e))throw(0,_util_1.ErrorPF2e)("containerId refers to a non-container");if(((source,target)=>{const bothAreOwned=source.isOwner&&target.isOwner,sourceIsOwnedOrLoot=source.isLootableBy(game.user),targetIsOwnedOrLoot=target.isLootableBy(game.user);return!bothAreOwned&&sourceIsOwnedOrLoot&&targetIsOwnedOrLoot})(this,targetActor)){const source={tokenId:null===(_a=this.token)||void 0===_a?void 0:_a.id,actorId:this.id,itemId:item.id},target={tokenId:null===(_b=targetActor.token)||void 0===_b?void 0:_b.id,actorId:targetActor.id};return await new item_transfer_1.ItemTransfer(source,target,quantity,null==container?void 0:container.id).request(),null}if(!this.canUserModify(game.user,"update"))return ui.notifications.error(game.i18n.localize("PF2E.ErrorMessage.CantMoveItemSource")),null;if(!targetActor.canUserModify(game.user,"update"))return ui.notifications.error(game.i18n.localize("PF2E.ErrorMessage.CantMoveItemDestination")),null;quantity=Math.min(quantity,item.quantity);const newQuantity=item.quantity-quantity;newQuantity<1?await item.delete():await item.update({"system.quantity":newQuantity});const newItemData=item.toObject();return newItemData.system.quantity=quantity,newItemData.system.equipped.carryType="worn",(0,helpers_2.hasInvestedProperty)(newItemData)&&(newItemData.system.equipped.invested=!item.traits.has("invested")&&null),targetActor.addToInventory(newItemData,container,newStack)}async addToInventory(itemSource,container,newStack){const stackItem=this.findStackableItem(this,itemSource);if(!newStack&&stackItem&&"backpack"!==stackItem.type){const stackQuantity=stackItem.quantity+itemSource.system.quantity;return await stackItem.update({"system.quantity":stackQuantity}),stackItem}const result=await _item_1.ItemPF2e.create(itemSource,{parent:this});if(!result)return null;const movedItem=this.inventory.get(result.id);return movedItem?(await this.stowOrUnstow(movedItem,container),movedItem):null}findStackableItem(actor,itemSource){const testItem=new _item_1.ItemPF2e(deepClone(itemSource)),stackCandidates=actor.inventory.filter((stackCandidate=>!stackCandidate.isInContainer&&testItem instanceof _item_1.PhysicalItemPF2e&&stackCandidate.isStackableWith(testItem)));if(0===stackCandidates.length)return null;if(stackCandidates.length>1){const notEquipped=stackCandidates.filter((item=>!item.isEquipped));return notEquipped.length>0?notEquipped[0]:stackCandidates[0]}return stackCandidates[0]}async stowOrUnstow(item,container){if(container){if(!(0,helpers_1.isCycle)(item,container)){const carryType=container.stowsItems?"stowed":"worn";await item.update({"system.containerId":container.id,"system.equipped.carryType":carryType,"system.equipped.handsHeld":0,"system.equipped.inSlot":!1})}}else await item.update({"system.containerId":null,"system.equipped.carryType":"worn","system.equipped.handsHeld":0,"system.equipped.inSlot":!1})}calculateHealthDelta(args){const updates={},{hp,sp,delta}=args,appliedToTemp=(()=>{if(!hp.temp||delta<=0)return 0;const applied=Math.min(hp.temp,delta);return updates["system.attributes.hp.temp"]=Math.max(hp.temp-applied,0),applied})(),appliedToSP=(()=>{if(!(!!sp&&game.settings.get("pf2e","staminaVariant"))||delta<=0)return 0;const remaining=delta-appliedToTemp,applied=Math.min(sp.value,remaining);return updates["system.attributes.sp.value"]=Math.max(sp.value-applied,0),applied})(),appliedToHP=(()=>{const remaining=delta-appliedToTemp-appliedToSP,applied=remaining>0?Math.min(hp.value,remaining):Math.max(hp.value-hp.max,remaining);return updates["system.attributes.hp.value"]=Math.max(hp.value-applied,0),applied})();return{updates,totalApplied:appliedToTemp+appliedToSP+appliedToHP}}static getActionGraphics(actionType,actionCount){let actionImg=0;"action"===actionType?actionImg=null!=actionCount?actionCount:1:"reaction"===actionType?actionImg="reaction":"free"===actionType?actionImg="free":"passive"===actionType&&(actionImg="passive");const graphics={1:{imageUrl:"systems/pf2e/icons/actions/OneAction.webp",actionGlyph:"A"},2:{imageUrl:"systems/pf2e/icons/actions/TwoActions.webp",actionGlyph:"D"},3:{imageUrl:"systems/pf2e/icons/actions/ThreeActions.webp",actionGlyph:"T"},free:{imageUrl:"systems/pf2e/icons/actions/FreeAction.webp",actionGlyph:"F"},reaction:{imageUrl:"systems/pf2e/icons/actions/Reaction.webp",actionGlyph:"R"},passive:{imageUrl:"systems/pf2e/icons/actions/Passive.webp",actionGlyph:""}};return(0,_util_1.objectHasKey)(graphics,actionImg)?{imageUrl:graphics[actionImg].imageUrl,actionGlyph:graphics[actionImg].actionGlyph}:{imageUrl:"systems/pf2e/icons/actions/Empty.webp",actionGlyph:""}}getRollOptions(domains=[]){var _a;const withAll=Array.from(new Set(["all",...domains])),{rollOptions}=this,toReturn=new Set;for(const domain of withAll)for(const[option,value]of Object.entries(null!==(_a=rollOptions[domain])&&void 0!==_a?_a:{}))value&&toReturn.add(option);return Array.from(toReturn).sort()}getRollData(){return{...duplicate(super.getRollData()),actor:this}}getCondition(slug,{all}={all:!1}){var _a;const conditions=this.itemTypes.condition.filter((condition=>condition.slug===slug)).sort(((conditionA,conditionB)=>{var _a,_b,_c,_d;const[valueA,valueB]=[null!==(_a=conditionA.value)&&void 0!==_a?_a:0,null!==(_b=conditionB.value)&&void 0!==_b?_b:0],[durationA,durationB]=[null!==(_c=conditionA.duration)&&void 0!==_c?_c:0,null!==(_d=conditionB.duration)&&void 0!==_d?_d:0];return valueA>valueB?1:valueB<valueB?-1:durationA>durationB?1:durationA<durationB?-1:0}));return all?conditions:null!==(_a=conditions[0])&&void 0!==_a?_a:null}hasCondition(...slugs){return slugs.some((s=>this.conditions.has(s)))}async decreaseCondition(conditionSlug,{forceRemove}={forceRemove:!1}){const condition="string"==typeof conditionSlug?this.getCondition(conditionSlug):conditionSlug;if(!condition)return;const value="number"==typeof condition.value?Math.max(condition.value-1,0):null;null===value||forceRemove?await this.deleteEmbeddedDocuments("Item",[condition.id]):await game.pf2e.ConditionManager.updateConditionValue(condition.id,this,value)}async increaseCondition(conditionSlug,{min,max=Number.MAX_SAFE_INTEGER}={}){var _a;const existing="string"==typeof conditionSlug?this.getCondition(conditionSlug):conditionSlug;if(existing){const conditionValue=(()=>{if(null===existing.value)return null;if(min&&max&&min>max)throw(0,_util_1.ErrorPF2e)(`min (${min}) > max (${max})`);return min&&max?Math.clamped(existing.value+1,min,max):max?Math.min(existing.value+1,max):existing.value+1})();return null===conditionValue||conditionValue>(null!=max?max:0)?null:(await game.pf2e.ConditionManager.updateConditionValue(existing.id,this,conditionValue),existing)}if("string"==typeof conditionSlug){const conditionSource=game.pf2e.ConditionManager.getCondition(conditionSlug).toObject(),conditionValue="number"==typeof(null==conditionSource?void 0:conditionSource.system.value.value)&&min&&max?Math.clamped(conditionSource.system.value.value,min,max):null;conditionSource.system.value.value=conditionValue;return null!==(_a=(await this.createEmbeddedDocuments("Item",[conditionSource])).shift())&&void 0!==_a?_a:null}return null}async toggleCondition(conditionSlug){this.hasCondition(conditionSlug)?await this.decreaseCondition(conditionSlug,{forceRemove:!0}):await this.increaseCondition(conditionSlug)}async importFromJSON(json){const processed=await(0,doc_helpers_1.preImportJSON)(this,json);return processed?super.importFromJSON(processed):this}async _preCreate(data,options,user){var _a;this._source.prototypeToken=mergeObject(null!==(_a=this._source.prototypeToken)&&void 0!==_a?_a:{},{texture:{}}),this._source.img===ActorPF2e.DEFAULT_ICON&&(this._source.img=this._source.prototypeToken.texture.src=`systems/pf2e/icons/default-icons/${data.type}.svg`),await super._preCreate(data,options,user),options.parent||await migration_1.MigrationRunner.ensureSchemaVersion(this,migration_1.MigrationList.constructFromVersion(this.schemaVersion))}async _preUpdate(changed,options,user){var _a,_b,_c;const changedHP=null===(_b=null===(_a=changed.system)||void 0===_a?void 0:_a.attributes)||void 0===_b?void 0:_b.hp,currentHP=this.hitPoints;if("number"==typeof(null==changedHP?void 0:changedHP.value)&&currentHP){const hpChange=changedHP.value-currentHP.value,levelChanged=!!(null===(_c=changed.system)||void 0===_c?void 0:_c.details)&&"level"in changed.system.details;0===hpChange||levelChanged||(options.damageTaken=hpChange)}const rules=this.rules.filter((r=>!!r.preUpdateActor));if(rules.length>0){const clone=this.clone(changed,{keepId:!0});this.flags.pf2e.rollOptions=clone.flags.pf2e.rollOptions;for(const rule of rules)await rule.preUpdateActor()}await super._preUpdate(changed,options,user)}_onUpdate(changed,options,userId){var _a;super._onUpdate(changed,options,userId);const hideFromUser=!this.hasPlayerOwner&&!game.user.isGM&&game.settings.get("pf2e","metagame_secretDamage");if(options.damageTaken&&!hideFromUser){const tokens=super.getActiveTokens();for(const token of tokens)token.showFloatyText(options.damageTaken)}if(canvas.ready&&(null===(_a=changed.system)||void 0===_a?void 0:_a.details)&&"alliance"in changed.system.details)for(const token of this.getActiveTokens(!0,!0))token.reset()}_onDelete(options,userId){for(const effect of this.itemTypes.effect)game.pf2e.effectTracker.unregister(effect);super._onDelete(options,userId)}_onEmbeddedDocumentChange(embeddedName){var _a;if(this.synthetics.preparationWarnings.flush(),this.isToken)return super._onEmbeddedDocumentChange(embeddedName);(null===(_a=game.combat)||void 0===_a?void 0:_a.getCombatantByActor(this.id))&&ui.combat.render();const tokenDocs=this.getActiveTokens(!0,!0);for(const tokenDoc of tokenDocs)tokenDoc.onActorEmbeddedItemChange()}}exports.ActorPF2e=ActorPF2e},7908:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.AutomaticBonusProgression=void 0;const modifiers_1=__webpack_require__(92823),predication_1=__webpack_require__(538);exports.AutomaticBonusProgression=class AutomaticBonusProgression{static get isEnabled(){return"noABP"!==game.settings.get("pf2e","automaticBonusVariant")}static concatModifiers(level,synthetics){var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k;if(!this.isEnabled)return;const values=this.abpValues(level),ac=values.ac,perception=values.perception,save=values.save,setting=game.settings.get("pf2e","automaticBonusVariant");if(save>0){(null!==(_a=(_f=synthetics.statisticsModifiers)["saving-throw"])&&void 0!==_a?_a:_f["saving-throw"]=[]).push((()=>new modifiers_1.ModifierPF2e({slug:"save-potency",label:"PF2E.AutomaticBonusProgression.savePotency",modifier:save,type:modifiers_1.MODIFIER_TYPE.POTENCY})))}if(ac>0){(null!==(_b=(_g=synthetics.statisticsModifiers).ac)&&void 0!==_b?_b:_g.ac=[]).push((()=>new modifiers_1.ModifierPF2e({slug:"defense-potency",label:"PF2E.AutomaticBonusProgression.defensePotency",modifier:ac,type:modifiers_1.MODIFIER_TYPE.POTENCY})))}if(perception>0){(null!==(_c=(_h=synthetics.statisticsModifiers).perception)&&void 0!==_c?_c:_h.perception=[]).push((()=>new modifiers_1.ModifierPF2e({slug:"perception-potency",label:"PF2E.AutomaticBonusProgression.perceptionPotency",modifier:perception,type:modifiers_1.MODIFIER_TYPE.POTENCY})))}if("ABPRulesAsWritten"===setting){const values=this.abpValues(level),attack=values.attack,damage=values.damage;if(attack>0){(null!==(_d=(_j=synthetics.statisticsModifiers)["mundane-attack"])&&void 0!==_d?_d:_j["mundane-attack"]=[]).push((()=>new modifiers_1.ModifierPF2e({slug:"attack-potency",label:"PF2E.AutomaticBonusProgression.attackPotency",modifier:attack,type:modifiers_1.MODIFIER_TYPE.POTENCY})))}damage>0&&synthetics.damageDice.damage.push((()=>new modifiers_1.DamageDicePF2e({slug:"devasting-attacks",label:game.i18n.localize("PF2E.AutomaticBonusProgression.devastatingAttacks"),selector:"damage",diceNumber:damage})))}if("ABPFundamentalPotency"===setting){const values=this.abpValues(level),attack=values.attack,damage=values.damage;if(damage>0){const s={label:game.i18n.localize("PF2E.AutomaticBonusProgression.devastatingAttacks"),bonus:damage,predicate:new predication_1.PredicatePF2e};(null!==(_e=(_k=synthetics.striking)["strike-damage"])&&void 0!==_e?_e:_k["strike-damage"]=[]).push(s)}if(attack>0){const potency={label:game.i18n.localize("PF2E.AutomaticBonusProgression.attackPotency"),type:modifiers_1.MODIFIER_TYPE.POTENCY,bonus:attack,predicate:new predication_1.PredicatePF2e};synthetics.weaponPotency["mundane-attack"]=(synthetics.weaponPotency["mundane-attack"]||[]).concat(potency)}}}static cleanupRunes(item){const setting=game.settings.get("pf2e","automaticBonusVariant");if("noABP"===setting)return;item.system.potencyRune.value=null;if((item.isOfType("weapon")?item.system.strikingRune:item.system.resiliencyRune).value=null,"ABPRulesAsWritten"===setting){const propertyRunes=[1,2,3,4].map((n=>item.system[`propertyRune${n}`]));for(const rune of propertyRunes)rune.value=null}}static applyPropertyRunes(potency,weapon){if("ABPFundamentalPotency"!==game.settings.get("pf2e","automaticBonusVariant"))return;const potencyBonuses=potency.filter((p=>"potency"===p.type));for(const bonus of potencyBonuses)bonus.property=deepClone(weapon.system.runes.property)}static suppressRuleElement(rule,value){return!("character"!==rule.actor.type||!this.isEnabled)&&("item"===rule.type&&value>=0&&rule.fromEquipment)}static abpValues(level){let attack,damage,ac,perception,save;return attack=level>=2&&level<10?1:level>=10&&level<16?2:level>=16?3:0,damage=level>=4&&level<12?1:level>=12&&level<19?2:level>=19?3:0,ac=level>=5&&level<11?1:level>=11&&level<18?2:level>=18?3:0,perception=level>=7&&level<13?1:level>=13&&level<19?2:level>=19?3:0,save=level>=8&&level<14?1:level>=14&&level<20?2:level>=20?3:0,{attack,damage,ac,perception,save}}}},78736:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.CharacterConfig=void 0;const config_1=__webpack_require__(81245);class CharacterConfig extends config_1.CreatureConfig{async getData(options={}){const{showBasicUnarmed}=this.actor.flags.pf2e;return{...await super.getData(options),showBasicUnarmed}}}exports.CharacterConfig=CharacterConfig},9212:function(__unused_webpack_module,exports,__webpack_require__){var _CraftingEntry_instances,_CraftingEntry_updateRE,__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.CraftingEntry=void 0;const formula_1=__webpack_require__(5093);exports.CraftingEntry=class CraftingEntry{constructor(actor,knownFormulas,data){var _a;_CraftingEntry_instances.add(this),this.selector=data.selector,this.name=data.name,this.isAlchemical=!!data.isAlchemical,this.isDailyPrep=!!data.isDailyPrep,this.isPrepared=!!data.isPrepared,this.maxSlots=null!==(_a=data.maxSlots)&&void 0!==_a?_a:0,this.maxItemLevel=data.maxItemLevel||actor.level,this.fieldDiscovery=data.fieldDiscovery,this.batchSize=data.batchSize,this.fieldDiscoveryBatchSize=data.fieldDiscoveryBatchSize,this.craftableItems=data.craftableItems,this.preparedFormulaData=(data.preparedFormulaData||[]).map((prepData=>knownFormulas.find((formula=>formula.uuid===prepData.itemUUID))?prepData:null)).filter((prepData=>!!prepData)),this.parentItem=actor.items.get(data.parentItem,{strict:!0}),this.preparedCraftingFormulas=this.preparedFormulaData.map((prepData=>{const formula=knownFormulas.find((formula=>formula.uuid===prepData.itemUUID));return formula?Object.assign(new formula_1.CraftingFormula(formula.item),{quantity:prepData.quantity||1,expended:!!prepData.expended,isSignatureItem:!!prepData.isSignatureItem}):null})).filter((prepData=>!!prepData))}get actor(){return this.parentItem.actor}get formulas(){const formulas=this.preparedCraftingFormulas.map((formula=>({uuid:formula.uuid,img:formula.img,name:formula.name,expended:formula.expended,quantity:formula.quantity,isSignatureItem:formula.isSignatureItem})));if(this.maxSlots>0){const fill=this.maxSlots-formulas.length;if(fill>0){const nulls=new Array(fill).fill(null);return formulas.concat(nulls)}}return formulas}get reagentCost(){if(!this.isAlchemical)return 0;const fieldDiscoveryQuantity=this.preparedCraftingFormulas.filter((f=>this.fieldDiscovery&&f.item.traits.has(this.fieldDiscovery)||f.isSignatureItem)).reduce(((sum,current)=>sum+current.quantity),0),otherQuantity=this.preparedCraftingFormulas.filter((f=>!f.item.traits.has(this.fieldDiscovery)&&!f.isSignatureItem)).reduce(((sum,current)=>sum+current.quantity),0),fieldDiscoveryBatchSize=this.fieldDiscoveryBatchSize||3,batchSize=this.batchSize||2;return Math.floor(fieldDiscoveryQuantity/fieldDiscoveryBatchSize)+Math.ceil((fieldDiscoveryQuantity%fieldDiscoveryBatchSize+otherQuantity)/batchSize)}static isValid(data){return!!data&&!!data.name&&!!data.selector}async prepareFormula(formula){this.checkEntryRequirements(formula);const index=this.preparedFormulaData.findIndex((f=>f.itemUUID===formula.uuid));if(this.isAlchemical&&-1!==index){const formula=this.preparedFormulaData[index];formula.quantity?formula.quantity+=1:formula.quantity=2}else this.preparedFormulaData.push({itemUUID:formula.uuid,quantity:1});return __classPrivateFieldGet(this,_CraftingEntry_instances,"m",_CraftingEntry_updateRE).call(this)}checkEntryRequirements(formula,{warn=!0}={}){return this.maxSlots&&this.formulas.filter((f=>null!==f)).length>=this.maxSlots?(warn&&ui.notifications.warn(game.i18n.localize("PF2E.CraftingTab.Alerts.MaxSlots")),!1):this.actor.level<formula.level?(warn&&ui.notifications.warn(game.i18n.localize("PF2E.CraftingTab.Alerts.CharacterLevel")),!1):formula.level>this.maxItemLevel?(warn&&ui.notifications.warn(game.i18n.localize("PF2E.CraftingTab.Alerts.MaxItemLevel")),!1):!!this.craftableItems.test(formula.item.getRollOptions("item"))||(warn&&ui.notifications.warn(game.i18n.localize("PF2E.CraftingTab.Alerts.ItemMissingTraits")),!1)}async unprepareFormula(index,itemUUID){const formula=this.preparedFormulaData[index];if(formula&&formula.itemUUID===itemUUID)return this.preparedFormulaData.splice(index,1),__classPrivateFieldGet(this,_CraftingEntry_instances,"m",_CraftingEntry_updateRE).call(this)}async increaseFormulaQuantity(index,itemUUID){const formula=this.preparedFormulaData[index];if(formula&&formula.itemUUID===itemUUID)return formula.quantity?formula.quantity+=1:formula.quantity=2,__classPrivateFieldGet(this,_CraftingEntry_instances,"m",_CraftingEntry_updateRE).call(this)}async decreaseFormulaQuantity(index,itemUUID){const formula=this.preparedFormulaData[index];if(formula&&formula.itemUUID===itemUUID){if(formula.quantity?formula.quantity-=1:formula.quantity=0,!(formula.quantity<=0))return __classPrivateFieldGet(this,_CraftingEntry_instances,"m",_CraftingEntry_updateRE).call(this);await this.unprepareFormula(index,itemUUID)}}async setFormulaQuantity(index,itemUUID,quantity){if(quantity<=0)return void await this.unprepareFormula(index,itemUUID);const formula=this.preparedFormulaData[index];return formula&&formula.itemUUID===itemUUID?(formula.quantity=quantity,__classPrivateFieldGet(this,_CraftingEntry_instances,"m",_CraftingEntry_updateRE).call(this)):void 0}async toggleFormulaExpended(index,itemUUID){const formula=this.preparedFormulaData[index];if(formula&&formula.itemUUID===itemUUID)return formula.expended=!formula.expended,__classPrivateFieldGet(this,_CraftingEntry_instances,"m",_CraftingEntry_updateRE).call(this)}async toggleSignatureItem(itemUUID){const formula=this.preparedFormulaData.find((f=>f.itemUUID===itemUUID));if(formula)return formula.isSignatureItem=!formula.isSignatureItem,__classPrivateFieldGet(this,_CraftingEntry_instances,"m",_CraftingEntry_updateRE).call(this)}},_CraftingEntry_instances=new WeakSet,_CraftingEntry_updateRE=async function(){const rules=this.parentItem.toObject().system.rules,thisRule=rules.find((r=>"CraftingEntry"===r.key&&r.selector===this.selector));thisRule&&(thisRule.preparedFormulas=this.preparedFormulaData,await this.parentItem.update({"system.rules":rules}))}},5093:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.CraftingFormula=void 0;const _item_1=__webpack_require__(10843),bulk_1=__webpack_require__(47297),helpers_1=__webpack_require__(73715),dc_1=__webpack_require__(84372);exports.CraftingFormula=class CraftingFormula{constructor(item,{dc,batchSize,deletable=!1}={}){this.item=item,this.dc=null!=dc?dc:(0,dc_1.calculateDC)(item.level,{rarity:item.rarity,proficiencyWithoutLevel:"ProficiencyWithoutLevel"===game.settings.get("pf2e","proficiencyVariant")}),this.batchSize=Math.max(null!=batchSize?batchSize:1,this.defaultBatchSize),this.deletable=deletable}get uuid(){return this.item.uuid}get img(){return this.item.img}get name(){return this.item.name}get level(){return this.item.level}get rarity(){return this.item.rarity}get price(){return this.item.price}get cost(){return helpers_1.CoinsPF2e.fromPrice(this.price,this.batchSize)}get minimumBatchSize(){var _a,_b,_c;return null!==(_c=null===(_b=bulk_1.stackDefinitions[null!==(_a=this.item.system.stackGroup)&&void 0!==_a?_a:""])||void 0===_b?void 0:_b.size)&&void 0!==_c?_c:1}get defaultBatchSize(){const{item}=this,isMundaneAmmo=item instanceof _item_1.ConsumablePF2e&&item.isAmmunition&&!item.isMagical,isConsumable=item instanceof _item_1.ConsumablePF2e&&"wand"!==item.consumableType||item instanceof _item_1.WeaponPF2e&&"alchemical-bomb"===item.baseType;return Math.max(this.minimumBatchSize,isMundaneAmmo?10:isConsumable?4:1)}get description(){return this.item.description}}},79911:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.renderCraftingInline=exports.craftSpellConsumable=exports.craftItem=void 0;const helpers_1=__webpack_require__(73715),degree_of_success_1=__webpack_require__(54870),earn_income_1=__webpack_require__(48369),_item_1=__webpack_require__(10843),spell_consumables_1=__webpack_require__(87458),chat_message_1=__webpack_require__(40405);async function prepStrings(costs,item){const rollData=item.getRollData();return{reductionPerDay:costs.reductionPerDay.toString(),materialCost:game.i18n.format("PF2E.Actions.Craft.Details.PayMaterials",{cost:costs.materials.toString()}),itemCost:game.i18n.format("PF2E.Actions.Craft.Details.PayFull",{cost:costs.itemPrice.toString()}),lostMaterials:game.i18n.format("PF2E.Actions.Craft.Details.LostMaterials",{cost:costs.lostMaterials.toString()}),itemLink:await game.pf2e.TextEditor.enrichHTML(item.link,{rollData,async:!0})}}async function craftItem(item,itemQuantity,actor,infused){const itemSource=item.toObject();itemSource.system.quantity=itemQuantity;const itemTraits=item.traits;if(infused&&itemTraits.has("alchemical")&&itemTraits.has("consumable")){itemSource.system.traits.value.push("infused"),itemSource.system.temporary=!0}await actor.addToInventory(itemSource)?await chat_message_1.ChatMessagePF2e.create({user:game.user.id,content:game.i18n.format("PF2E.Actions.Craft.Information.ReceiveItem",{actorName:actor.name,quantity:itemQuantity,itemName:item.name}),speaker:{alias:actor.name}}):ui.notifications.warn(game.i18n.localize("PF2E.Actions.Craft.Warning.CantAddItem"))}exports.craftItem=craftItem,exports.craftSpellConsumable=async function(item,itemQuantity,actor){const consumableType=item.consumableType;if("scroll"!==consumableType&&"wand"!==consumableType)return;const spellLevel="wand"===consumableType?Math.ceil(item.level/2)-1:Math.ceil(item.level/2),validSpells=actor.itemTypes.spell.filter((s=>s.baseLevel<=spellLevel&&!s.isCantrip&&!s.isFocusSpell&&!s.isRitual)).reduce(((result,spell)=>(result[spell.baseLevel]=[...result[spell.baseLevel]||[],spell],result)),{}),content=await renderTemplate("systems/pf2e/templates/actors/crafting-select-spell-dialog.html",{spells:validSpells});new Dialog({title:game.i18n.localize("PF2E.Actions.Craft.SelectSpellDialog.Title"),content,buttons:{cancel:{icon:'<i class="fa fa-times"></i>',label:game.i18n.localize("Cancel")},craft:{icon:'<i class="fa fa-hammer"></i>',label:game.i18n.localize("PF2E.Actions.Craft.SelectSpellDialog.CraftButtonLabel"),callback:async $dialog=>{const spellId=String($dialog.find("select[name=spell]").val()),spell=actor.items.get(spellId);if(!(null==spell?void 0:spell.isOfType("spell")))return;const item=await(0,spell_consumables_1.createConsumableFromSpell)(consumableType,spell,spellLevel);return craftItem(new _item_1.ConsumablePF2e(item),itemQuantity,actor)}}},default:"craft"}).render(!0)},exports.renderCraftingInline=async function(item,roll,quantity,actor,free){var _a;if(!actor.isOfType("character"))return null;const degreeOfSuccess=null!==(_a=roll.options.degreeOfSuccess)&&void 0!==_a?_a:0,costs=function(item,quantity,actor,degreeOfSuccess){const itemPrice=helpers_1.CoinsPF2e.fromPrice(item.price,quantity),materialCosts=itemPrice.scale(.5),lostMaterials=new helpers_1.CoinsPF2e,reductionPerDay=new helpers_1.CoinsPF2e,proficiency=actor.skills.crafting.rank;return proficiency?(degreeOfSuccess===degree_of_success_1.DegreeOfSuccess.CRITICAL_SUCCESS?Object.assign(reductionPerDay,(0,earn_income_1.getIncomeForLevel)(actor.level+1).rewards[proficiency]):degreeOfSuccess===degree_of_success_1.DegreeOfSuccess.SUCCESS?Object.assign(reductionPerDay,(0,earn_income_1.getIncomeForLevel)(actor.level).rewards[proficiency]):degreeOfSuccess===degree_of_success_1.DegreeOfSuccess.CRITICAL_FAILURE&&Object.assign(lostMaterials,materialCosts.scale(.1)),{itemPrice,materials:materialCosts,lostMaterials,reductionPerDay}):null}(item,quantity,actor,degreeOfSuccess);if(!costs)return null;const daysForZeroCost=degreeOfSuccess>1?function(costs){return Math.ceil((costs.itemPrice.copperValue-costs.materials.copperValue)/costs.reductionPerDay.copperValue)}(costs):0;return await renderTemplate("systems/pf2e/templates/chat/crafting-result.html",{daysForZeroCost,strings:await prepStrings(costs,item),item,quantity,success:degreeOfSuccess>1,criticalFailure:0===degreeOfSuccess,free})}},20663:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.craftSpellConsumable=exports.craftItem=exports.CraftingFormulaData=exports.CraftingFormula=exports.CraftingEntryData=exports.CraftingEntry=void 0;var entry_1=__webpack_require__(9212);Object.defineProperty(exports,"CraftingEntry",{enumerable:!0,get:function(){return entry_1.CraftingEntry}}),Object.defineProperty(exports,"CraftingEntryData",{enumerable:!0,get:function(){return entry_1.CraftingEntryData}});var formula_1=__webpack_require__(5093);Object.defineProperty(exports,"CraftingFormula",{enumerable:!0,get:function(){return formula_1.CraftingFormula}}),Object.defineProperty(exports,"CraftingFormulaData",{enumerable:!0,get:function(){return formula_1.CraftingFormulaData}});var helpers_1=__webpack_require__(79911);Object.defineProperty(exports,"craftItem",{enumerable:!0,get:function(){return helpers_1.craftItem}}),Object.defineProperty(exports,"craftSpellConsumable",{enumerable:!0,get:function(){return helpers_1.craftSpellConsumable}})},52544:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.FeatCategory=exports.CharacterFeats=void 0;const _util_1=__webpack_require__(6945);class CharacterFeats extends Collection{constructor(actor){var _a,_b,_c,_d,_e,_f,_g;super(),this.actor=actor,this.unorganized=[];const classFeatSlots=null===(_a=actor.class)||void 0===_a?void 0:_a.grantedFeatSlots,skillPrepend=(()=>{var _a;return actor.background&&Object.keys(actor.background.system.items).length?[{id:null===(_a=actor.background)||void 0===_a?void 0:_a.id,label:game.i18n.localize("PF2E.FeatBackgroundShort")}]:[]})();this.createCategory({id:"ancestryfeature",label:"PF2E.FeaturesAncestryHeader",supported:["ancestryfeature"]}),this.createCategory({id:"classfeature",label:"PF2E.FeaturesClassHeader",supported:["classfeature"]}),this.createCategory({id:"ancestry",label:"PF2E.FeatAncestryHeader",featFilter:(null===(_b=actor.system.details.ancestry)||void 0===_b?void 0:_b.trait)?`traits-${actor.system.details.ancestry.trait}`:null,supported:["ancestry"],slots:null!==(_c=null==classFeatSlots?void 0:classFeatSlots.ancestry)&&void 0!==_c?_c:[]});const classSlug=actor.class?null!==(_d=actor.class.slug)&&void 0!==_d?_d:(0,_util_1.sluggify)(actor.class.name):null,classTrait=(null!=classSlug?classSlug:"")in CONFIG.PF2E.featTraits?classSlug:`hb_${classSlug}`in CONFIG.PF2E.featTraits?`hb_${classSlug}`:null;this.createCategory({id:"class",label:"PF2E.FeatClassHeader",featFilter:classTrait?`traits-${classTrait},traits-archetype`:null,supported:["class"],slots:null!==(_e=null==classFeatSlots?void 0:classFeatSlots.class)&&void 0!==_e?_e:[]});const evenLevels=new Array(actor.level).fill(0).map(((_,idx)=>idx+1)).filter((idx=>idx%2==0));game.settings.get("pf2e","dualClassVariant")&&this.createCategory({id:"dualclass",label:"PF2E.FeatDualClassHeader",supported:["class"],slots:[1,...evenLevels]}),game.settings.get("pf2e","freeArchetypeVariant")&&this.createCategory({id:"archetype",label:"PF2E.FeatArchetypeHeader",supported:["class"],slots:evenLevels}),this.createCategory({id:"skill",label:"PF2E.FeatSkillHeader",supported:["skill"],slots:[...skillPrepend,...null!==(_f=null==classFeatSlots?void 0:classFeatSlots.skill)&&void 0!==_f?_f:[]]}),this.createCategory({id:"general",label:"PF2E.FeatGeneralHeader",supported:["general","skill"],slots:null!==(_g=null==classFeatSlots?void 0:classFeatSlots.general)&&void 0!==_g?_g:[]}),game.settings.get("pf2e","campaignFeats")&&this.createCategory({id:"campaign",label:"PF2E.FeatCampaignHeader"})}createCategory(options){this.set(options.id,new FeatCategory(this.actor,options))}combineGrants(feat){const getGrantedItems=grants=>Object.values(grants).flatMap((grant=>{const item=this.actor.items.get(grant.id);return(null==item?void 0:item.isOfType("feat"))&&!item.system.location?{feat:item,grants:getGrantedItems(item.flags.pf2e.itemGrants)}:[]}));return{feat,grants:getGrantedItems(feat.flags.pf2e.itemGrants)}}async insertFeat(feat,options){var _a,_b;const{category,slotId}=(null===(_a=this.get(options.categoryId))||void 0===_a?void 0:_a.isFeatValid(feat))?{category:this.get(options.categoryId),slotId:null!==(_b=options.slotId)&&void 0!==_b?_b:null}:this.findBestLocation(feat,{requested:options.categoryId}),location=((null==category?void 0:category.slotted)?slotId:null==category?void 0:category.id)||null,isFeatValidInSlot=!!(null==category?void 0:category.isFeatValid(feat)),alreadyHasFeat=this.actor.items.has(feat.id),existing=this.actor.itemTypes.feat.filter((x=>x.system.location===location));if("bonus"!==options.categoryId&&!category){const badCategory=this.get(options.categoryId);if(badCategory)return ui.notifications.warn(game.i18n.format("PF2E.Item.Feat.Warning.InvalidCategory",{item:feat.name,category:game.i18n.format(badCategory.label)})),[]}if(alreadyHasFeat&&feat.system.location&&!isFeatValidInSlot)return this.actor.updateEmbeddedDocuments("Item",[{_id:feat.id,"system.location":null}]);const changed=[];if(!alreadyHasFeat&&(isFeatValidInSlot||!location)){const source=feat.toObject();source.system.location=location,changed.push(...await this.actor.createEmbeddedDocuments("Item",[source]));const label=game.i18n.localize(location&&(null==category?void 0:category.label)?category.label:"PF2E.FeatBonusHeader");ui.notifications.info(game.i18n.format("PF2E.Item.Feat.Info.Added",{item:feat.name,category:label}))}const locationUpdates=(null==category?void 0:category.slotted)?existing.map((x=>({_id:x.id,"system.location":null}))):[];return alreadyHasFeat&&isFeatValidInSlot&&locationUpdates.push({_id:feat.id,"system.location":location}),locationUpdates.length>0&&changed.push(...await this.actor.updateEmbeddedDocuments("Item",locationUpdates)),changed}findBestLocation(feat,{requested}){var _a,_b;if(feat.isFeature)return{category:null!==(_a=this.get(feat.featType))&&void 0!==_a?_a:null,slotId:null};if("bonus"===requested)return{category:null,slotId:null};const validCategories=this.filter((c=>c.isFeatValid(feat)&&!c.isFull)),category=validCategories.at(0);if(1===validCategories.length&&category){const slotId=category.slotted&&null!==(_b=Object.keys(category.slots).find((s=>!category.slots[s].feat)))&&void 0!==_b?_b:null;return{category,slotId}}return{category:null,slotId:null}}assignFeats(){var _a,_b;const categoryBySlot=this.contents.filter((category=>category.slotted)).reduce(((previous,current)=>{for(const slot of Object.keys(current.slots))previous[slot]=current;return previous}),{}),feats=this.actor.itemTypes.feat.sort(((f1,f2)=>f1.sort-f2.sort));for(const feat of feats){if(feat.flags.pf2e.grantedBy&&!feat.system.location){const granter=this.actor.items.get(feat.flags.pf2e.grantedBy.id);if(null==granter?void 0:granter.isOfType("feat"))continue}if(["pfsboon","deityboon","curse"].includes(feat.featType))continue;const base=this.combineGrants(feat),location=feat.system.location,categoryForSlot=categoryBySlot[null!=location?location:""],slot=null==categoryForSlot?void 0:categoryForSlot.slots[null!=location?location:""];if(slot&&slot.feat)console.debug(`PF2e System | Multiple feats with same index: ${feat.name}, ${slot.feat.name}`),this.unorganized.push(base);else if(slot)slot.feat=feat,slot.grants=base.grants,feat.category=categoryForSlot;else{const group=null!==(_b=this.get(null!==(_a=feat.system.location)&&void 0!==_a?_a:""))&&void 0!==_b?_b:this.get(feat.featType);group&&!group.slotted?(group.feats.push(base),feat.category=group):this.unorganized.push(base)}}this.get("classfeature").feats.sort(((a,b)=>{var _a,_b;return((null===(_a=a.feat)||void 0===_a?void 0:_a.level)||0)-((null===(_b=b.feat)||void 0===_b?void 0:_b.level)||0)}))}}exports.CharacterFeats=CharacterFeats;class FeatCategory{constructor(actor,options){var _a,_b,_c;this.feats=[],this.slotted=!1,this.supported=[],this.slots={};const maxLevel=null!==(_a=options.level)&&void 0!==_a?_a:actor.level;if(this.id=options.id,this.label=options.label,this.supported=null!==(_b=options.supported)&&void 0!==_b?_b:[],this.featFilter=null!==(_c=options.featFilter)&&void 0!==_c?_c:null,options.slots){this.slotted=!0;for(const level of options.slots){if("number"==typeof level&&level>maxLevel)continue;const{id,label}="object"==typeof level?level:{id:`${this.id}-${level}`,label:level},slot={id,level:label,grants:[]};this.feats.push(slot),this.slots[id]=slot}}}get isFull(){return this.slotted&&Object.values(this.slots).every((s=>!!s.feat))}isFeatValid(feat){const resolvedFeatType="archetype"===feat.featType?feat.system.traits.value.includes("skill")?"skill":"class":feat.featType;return 0===this.supported.length||this.supported.includes(resolvedFeatType)}}exports.FeatCategory=FeatCategory},14866:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.StrikeWeaponTraits=exports.createShoddyPenalty=exports.createForceOpenPenalty=void 0;const modifiers_1=__webpack_require__(92823),predication_1=__webpack_require__(538),_util_1=__webpack_require__(6945),values_1=__webpack_require__(6089),util_1=__webpack_require__(58903);exports.StrikeWeaponTraits=class StrikeWeaponTraits{static adjustWeapon(weapon){var _a;const traits=weapon.system.traits.value;for(const trait of[...traits])switch(trait.replace(/-d?\d{1,3}$/,"")){case"fatal-aim":if(weapon.rangeIncrement&&2===weapon.handsHeld){const fatal=trait.replace("-aim","");(0,_util_1.objectHasKey)(CONFIG.PF2E.weaponTraits,fatal)&&!traits.includes(fatal)&&traits.push(fatal)}break;case"jousting":if(1===weapon.handsHeld){const die=null===(_a=/(d\d{1,2})$/.exec(trait))||void 0===_a?void 0:_a[1];(0,_util_1.setHasElement)(values_1.DAMAGE_DIE_FACES,die)&&(weapon.system.damage.die=die)}}}static createAttackModifiers(weapon,domains){const{actor}=weapon;if(!actor)throw(0,_util_1.ErrorPF2e)("The weapon must be embedded");const traitsAndTags=[weapon.system.traits.value,weapon.system.traits.otherTags].flat(),getLabel=traitOrTag=>{var _a,_b;const traits=CONFIG.PF2E.weaponTraits,tags=CONFIG.PF2E.otherWeaponTags;return null!==(_b=null!==(_a=traits[traitOrTag])&&void 0!==_a?_a:tags[traitOrTag])&&void 0!==_b?_b:traitOrTag};return traitsAndTags.flatMap((trait=>{const reducedTrait=trait.replace(/-d?\d{1,3}$/,"");switch(reducedTrait){case"kickback":return new modifiers_1.ModifierPF2e({slug:reducedTrait,label:CONFIG.PF2E.weaponTraits.kickback,modifier:-2,type:modifiers_1.MODIFIER_TYPE.CIRCUMSTANCE,predicate:new predication_1.PredicatePF2e({lt:["ability:str:score",14]})});case"volley":{if(!weapon.rangeIncrement)return[];const penaltyRange=Number(/-(\d+)$/.exec(trait)[1]);return new modifiers_1.ModifierPF2e({slug:reducedTrait,label:getLabel(trait),modifier:-2,type:modifiers_1.MODIFIER_TYPE.UNTYPED,ignored:!0,predicate:new predication_1.PredicatePF2e({lte:["target:distance",penaltyRange]},{not:"self:ignore-volley-penalty"})})}case"improvised":return new modifiers_1.ModifierPF2e({slug:reducedTrait,label:getLabel(trait),modifier:-2,type:modifiers_1.MODIFIER_TYPE.ITEM,predicate:new predication_1.PredicatePF2e({not:"self:ignore-improvised-penalty"})});case"sweep":return new modifiers_1.ModifierPF2e({slug:reducedTrait,label:getLabel(trait),modifier:1,type:modifiers_1.MODIFIER_TYPE.CIRCUMSTANCE,predicate:new predication_1.PredicatePF2e("self:sweep-bonus")});case"backswing":return new modifiers_1.ModifierPF2e({slug:reducedTrait,label:getLabel(trait),modifier:1,type:modifiers_1.MODIFIER_TYPE.CIRCUMSTANCE,predicate:new predication_1.PredicatePF2e("self:backswing-bonus")});default:return[]}})).map((modifier=>{const synthetics=actor.synthetics.modifierAdjustments;return modifier.adjustments=(0,util_1.extractModifierAdjustments)(synthetics,domains,modifier.slug),modifier}))}},exports.createForceOpenPenalty=function(actor,domains){const{modifierAdjustments}=actor.synthetics;return new modifiers_1.ModifierPF2e({slug:"no-crowbar",label:"PF2E.Actions.ForceOpen.NoCrowbarPenalty",type:"item",modifier:-2,predicate:["action:force-open","action:force-open:prying"],hideIfDisabled:!0,adjustments:(0,util_1.extractModifierAdjustments)(modifierAdjustments,domains,"no-crowbar")})},exports.createShoddyPenalty=function(actor,item,domains){if(!item.isShoddy)return null;const{modifierAdjustments}=actor.synthetics;return new modifiers_1.ModifierPF2e({label:"PF2E.Item.Physical.OtherTag.Shoddy",type:"item",slug:"shoddy",modifier:-2,adjustments:(0,util_1.extractModifierAdjustments)(modifierAdjustments,domains,"shoddy")})}},886:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.CharacterPF2e=void 0;const _actor_1=__webpack_require__(85530),values_1=__webpack_require__(49976),size_1=__webpack_require__(43270),helpers_1=__webpack_require__(89503),modifiers_1=__webpack_require__(92823),values_2=__webpack_require__(8382),_item_1=__webpack_require__(10843),armor_1=__webpack_require__(83200),physical_1=__webpack_require__(6560),values_3=__webpack_require__(12759),weapon_1=__webpack_require__(14299),chat_message_1=__webpack_require__(40405),data_1=__webpack_require__(52769),util_1=__webpack_require__(58903),check_1=__webpack_require__(11848),damage_1=__webpack_require__(12227),predication_1=__webpack_require__(538),rolls_1=__webpack_require__(87525),statistic_1=__webpack_require__(77486),_util_1=__webpack_require__(6945),from_uuids_1=__webpack_require__(16539),crafting_1=__webpack_require__(20663),values_4=__webpack_require__(85846),feats_1=__webpack_require__(52544),helpers_2=__webpack_require__(14866);class CharacterPF2e extends _actor_1.CreaturePF2e{constructor(){super(...arguments),this.familiar=null}get allowedItemTypes(){return[...super.allowedItemTypes,"ancestry","heritage","background","class","deity","feat","physical","spellcastingEntry","spell","action","lore"]}get keyAbility(){return this.system.details.keyability.value||"str"}get abilities(){return deepClone(this.system.abilities)}get hitPoints(){return{...super.hitPoints,recoveryMultiplier:this.system.attributes.hp.recoveryMultiplier,recoveryAddend:this.system.attributes.hp.recoveryAddend}}get skills(){var _a,_b;const skills=super.skills;for(const[key,skill]of Object.entries(skills)){if(!skill)continue;const originalKey=null!==(_a=values_2.SKILL_DICTIONARY_REVERSE[skill.slug])&&void 0!==_a?_a:skill.slug;if(!(0,_util_1.objectHasKey)(this.system.skills,originalKey))continue;const data=this.system.skills[originalKey];skills[key]=mergeObject(skill,{rank:data.rank,ability:data.ability,proficient:data.rank>=1,abilityModifier:null!==(_b=data.modifiers.find((m=>m.enabled&&"ability"===m.type)))&&void 0!==_b?_b:null})}return skills}get heroPoints(){return deepClone(this.system.resources.heroPoints)}async getCraftingFormulas(){const{formulas}=this.system.crafting,formulaMap=new Map(formulas.map((data=>[data.uuid,data]))),items=await(0,from_uuids_1.fromUUIDs)(formulas.map((data=>data.uuid)));return items.every((i=>i instanceof _item_1.ItemPF2e))?items.filter((item=>item instanceof _item_1.PhysicalItemPF2e)).map((item=>{var _a;const{dc,batchSize,deletable}=null!==(_a=formulaMap.get(item.uuid))&&void 0!==_a?_a:{deletable:!1};return new crafting_1.CraftingFormula(item,{dc,batchSize,deletable})})):[]}async getCraftingEntries(){const craftingFormulas=await this.getCraftingFormulas();return Object.values(this.system.crafting.entries).filter((entry=>crafting_1.CraftingEntry.isValid(entry))).map((entry=>new crafting_1.CraftingEntry(this,craftingFormulas,entry)))}async getCraftingEntry(selector){const craftingFormulas=await this.getCraftingFormulas(),craftingEntryData=this.system.crafting.entries[selector];return crafting_1.CraftingEntry.isValid(craftingEntryData)?new crafting_1.CraftingEntry(this,craftingFormulas,craftingEntryData):null}async performDailyCrafting(){var _a;const entries=(await this.getCraftingEntries()).filter((e=>e.isDailyPrep)),reagentCost=entries.filter((e=>e.isAlchemical)).reduce(((sum,entry)=>sum+entry.reagentCost),0),reagentValue=(this.system.resources.crafting.infusedReagents.value||0)-reagentCost;if(reagentValue<0)ui.notifications.warn(game.i18n.localize("PF2E.CraftingTab.Alerts.MissingReagents"));else{await this.update({"system.resources.crafting.infusedReagents.value":reagentValue});for(const item of this.inventory)item.system.temporary&&await item.delete();for(const entry of entries)for(const formula of entry.preparedCraftingFormulas){const itemSource=formula.item.toObject();itemSource.system.quantity=formula.quantity,itemSource.system.temporary=!0,itemSource.system.size="tiny"===(null===(_a=this.ancestry)||void 0===_a?void 0:_a.size)?"tiny":"med",!entry.isAlchemical||"consumable"!==itemSource.type&&"weapon"!==itemSource.type&&"equipment"!==itemSource.type||itemSource.system.traits.value.push("infused"),await this.addToInventory(itemSource)}}}prepareData(){super.prepareData(),game.ready&&this.familiar&&game.actors.has(this.familiar.id)&&this.familiar.prepareData({fromMaster:!0})}prepareBaseData(){var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l,_m,_o,_p,_q,_r,_s,_t,_u,_v,_w,_x,_y,_z,_0,_1,_2,_3,_4,_5;super.prepareBaseData();const systemData=this.system,{flags}=this;flags.pf2e.favoredWeaponRank=0,null!==(_a=(_3=flags.pf2e).freeCrafting)&&void 0!==_a||(_3.freeCrafting=!1),null!==(_b=(_4=flags.pf2e).quickAlchemy)&&void 0!==_b||(_4.quickAlchemy=!1),flags.pf2e.sheetTabs=mergeObject(values_4.CHARACTER_SHEET_TABS.reduce(((tabs,tab)=>({...tabs,[tab]:!0})),{}),null!==(_c=flags.pf2e.sheetTabs)&&void 0!==_c?_c:{}),null!==(_d=(_5=flags.pf2e).showBasicUnarmed)&&void 0!==_d||(_5.showBasicUnarmed=!0);const isGradual=game.settings.get("pf2e","gradualBoostsVariant"),allowedBoosts=[1,5,10,15,20].reduce(((result,level)=>{const allowed=(()=>0===this.level&&1===level?4:isGradual?4-Math.clamped(level-this.level,0,4):this.level>=level?4:0)();return result[level]=allowed,result}),{}),existingBoosts=null===(_f=null===(_e=systemData.build)||void 0===_e?void 0:_e.abilities)||void 0===_f?void 0:_f.boosts;systemData.build={abilities:{manual:Object.keys(systemData.abilities).length>0,keyOptions:[],boosts:{ancestry:[],background:[],class:null,1:null!==(_h=null===(_g=null==existingBoosts?void 0:existingBoosts[1])||void 0===_g?void 0:_g.slice(0,allowedBoosts[1]))&&void 0!==_h?_h:[],5:null!==(_k=null===(_j=null==existingBoosts?void 0:existingBoosts[5])||void 0===_j?void 0:_j.slice(0,allowedBoosts[5]))&&void 0!==_k?_k:[],10:null!==(_m=null===(_l=null==existingBoosts?void 0:existingBoosts[10])||void 0===_l?void 0:_l.slice(0,allowedBoosts[10]))&&void 0!==_m?_m:[],15:null!==(_p=null===(_o=null==existingBoosts?void 0:existingBoosts[15])||void 0===_o?void 0:_o.slice(0,allowedBoosts[15]))&&void 0!==_p?_p:[],20:null!==(_r=null===(_q=null==existingBoosts?void 0:existingBoosts[20])||void 0===_q?void 0:_q.slice(0,allowedBoosts[20]))&&void 0!==_r?_r:[]},allowedBoosts,flaws:{ancestry:[]}}};for(const abbrev of values_2.ABILITY_ABBREVIATIONS)systemData.abilities[abbrev]=mergeObject({value:10},null!==(_s=systemData.abilities[abbrev])&&void 0!==_s?_s:{});const{details}=this.system;for(const property of["ancestry","heritage","background","class","deity"])this[property]=null,"deity"===property?details.deities={primary:null,secondary:null,domains:{}}:"background"!==property&&(details[property]=null);details.alliance=values_1.ALLIANCES.has(details.alliance)?details.alliance:this.hasPlayerOwner?"party":"opposition";const attributes=this.system.attributes;attributes.ac={},attributes.classDC=null,attributes.polymorphed=!1,attributes.battleForm=!1;const perception=null!==(_t=attributes.perception)&&void 0!==_t?_t:attributes.perception={ability:"wis",rank:0};perception.ability="wis",null!==(_u=perception.rank)&&void 0!==_u||(perception.rank=0);const hitPoints=this.system.attributes.hp;hitPoints.recoveryMultiplier=1,hitPoints.recoveryAddend=0,attributes.ancestryhp=0,attributes.classhp=0,attributes.familiarAbilities={value:0};const saves=this.system.saves;for(const save of values_2.SAVE_TYPES)saves[save]={ability:CONFIG.PF2E.savingThrowDefaultAbilities[save],rank:null!==(_w=null===(_v=saves[save])||void 0===_v?void 0:_v.rank)&&void 0!==_w?_w:0};const skills=this.system.skills;for(const key of values_2.SKILL_ABBREVIATIONS){const skill=skills[key];skill.ability=values_2.SKILL_EXPANDED[values_2.SKILL_DICTIONARY[key]].ability,skill.armor=["dex","str"].includes(skill.ability)}systemData.proficiencies={classDCs:{},traditions:Array.from(values_3.MAGIC_TRADITIONS).reduce(((accumulated,t)=>({...accumulated,[t]:{rank:0}})),{})};const{resources}=this.system;resources.heroPoints.max=3,resources.investiture={value:0,max:10},resources.focus=mergeObject({value:0,max:0},null!==(_x=resources.focus)&&void 0!==_x?_x:{}),resources.focus.max=0,resources.focus.cap=3,resources.crafting=mergeObject({infusedReagents:{value:0,max:0}},null!==(_y=resources.crafting)&&void 0!==_y?_y:{}),resources.crafting.infusedReagents.max=0,this.system.traits.size=new size_1.ActorSizePF2e({value:"med"});const martial=this.system.martial;for(const category of[...armor_1.ARMOR_CATEGORIES,...weapon_1.WEAPON_CATEGORIES]){const proficiency=null!==(_z=martial[category])&&void 0!==_z?_z:{};proficiency.rank=null!==(_1=null===(_0=martial[category])||void 0===_0?void 0:_0.rank)&&void 0!==_1?_1:0,martial[category]=proficiency}const homebrewCategories=game.settings.get("pf2e","homebrew.weaponCategories").map((tag=>tag.id));for(const category of homebrewCategories)null!==(_2=martial[category])&&void 0!==_2||(martial[category]={rank:0,value:0,breakdown:""});for(const formula of this.system.crafting.formulas)formula.deletable=!0;this.system.crafting.entries={},this.rollOptions.all[`self:level:${this.level}`]=!0}prepareEmbeddedDocuments(){var _a;super.prepareEmbeddedDocuments();for(const ability of Object.values(this.system.abilities))ability.mod=Math.floor((ability.value-10)/2);this.setNumericRollOptions(),null===(_a=this.deity)||void 0===_a||_a.setFavoredWeaponRank()}prepareDataFromItems(){super.prepareDataFromItems(),this.setAbilityScores()}prepareDerivedData(){var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l,_m,_o,_p,_q;super.prepareDerivedData();const systemData=this.system,{synthetics}=this;this.flags.pf2e.disableABP||game.pf2e.variantRules.AutomaticBonusProgression.concatModifiers(this.level,synthetics);const{statisticsModifiers,rollNotes}=synthetics;systemData.details.xp.pct=Math.min(Math.round(100*systemData.details.xp.value/systemData.details.xp.max),99.5);const itemTypes=this.itemTypes;if(systemData.pfs.levelBump){const params={slug:"level-bump",label:"PF2E.PFS.LevelBump",modifier:1};statisticsModifiers.all.push((()=>new modifiers_1.ModifierPF2e(params))),statisticsModifiers.damage.push((()=>new modifiers_1.ModifierPF2e(params)))}{const ancestryHP=systemData.attributes.ancestryhp,classHP=systemData.attributes.classhp,hitPoints=systemData.attributes.hp,modifiers=[new modifiers_1.ModifierPF2e("PF2E.AncestryHP",ancestryHP,modifiers_1.MODIFIER_TYPE.UNTYPED)];if(game.settings.get("pf2e","staminaVariant")){const halfClassHp=Math.floor(classHP/2);systemData.attributes.sp.max=(halfClassHp+systemData.abilities.con.mod)*this.level,systemData.attributes.resolve.max=systemData.abilities[systemData.details.keyability.value].mod,modifiers.push(new modifiers_1.ModifierPF2e("PF2E.ClassHP",halfClassHp*this.level,modifiers_1.MODIFIER_TYPE.UNTYPED))}else{modifiers.push(new modifiers_1.ModifierPF2e("PF2E.ClassHP",classHP*this.level,modifiers_1.MODIFIER_TYPE.UNTYPED));const conHP=systemData.abilities.con.mod*Math.max(this.level,1);modifiers.push(new modifiers_1.ModifierPF2e({slug:"hp-con",label:"PF2E.AbilityCon",ability:"con",type:modifiers_1.MODIFIER_TYPE.ABILITY,modifier:conHP,adjustments:(0,util_1.extractModifierAdjustments)(synthetics.modifierAdjustments,["con-based"],"hp-con")}))}const hpRollOptions=this.getRollOptions(["hp"]);modifiers.push(...(0,util_1.extractModifiers)(synthetics,["hp"],{test:hpRollOptions}));const perLevelRollOptions=this.getRollOptions(["hp-per-level"]);modifiers.push(...(0,util_1.extractModifiers)(synthetics,["hp-per-level"],{test:perLevelRollOptions}).map((clone=>(clone.modifier*=this.level,clone))));const stat=mergeObject(new modifiers_1.StatisticModifier("hp",modifiers),hitPoints,{overwrite:!1});if(systemData.pfs.levelBump){const hitPointsBump=Math.max(10,.1*stat.totalModifier);stat.push(new modifiers_1.ModifierPF2e("PF2E.PFS.LevelBump",hitPointsBump,modifiers_1.MODIFIER_TYPE.UNTYPED))}stat.max=stat.totalModifier,stat.value=Math.min(stat.value,stat.max),stat.breakdown=stat.modifiers.filter((m=>m.enabled)).map((m=>`${m.label} ${m.modifier<0?"":"+"}${m.modifier}`)).join(", "),systemData.attributes.hp=stat;const percentRemaining=Math.floor(stat.value/stat.max*100);this.rollOptions.all[`hp-percent:${percentRemaining}`]=!0}this.prepareFeats(),this.prepareSaves(),this.prepareMartialProficiencies();{const domains=["perception","wis-based","all"],proficiencyRank=systemData.attributes.perception.rank,modifiers=[(0,modifiers_1.createAbilityModifier)({actor:this,ability:"wis",domains}),modifiers_1.ProficiencyModifier.fromLevelAndRank(this.level,proficiencyRank)];modifiers.push(...(0,util_1.extractModifiers)(synthetics,domains));const stat=mergeObject(new modifiers_1.StatisticModifier("perception",modifiers,this.getRollOptions(domains)),systemData.attributes.perception,{overwrite:!1});stat.adjustments=(0,util_1.extractDegreeOfSuccessAdjustments)(synthetics,domains),stat.breakdown=stat.modifiers.filter((m=>m.enabled)).map((m=>`${m.label} ${m.modifier<0?"":"+"}${m.modifier}`)).join(", "),stat.notes=(0,util_1.extractNotes)(rollNotes,domains),stat.value=stat.totalModifier,stat.roll=async params=>{var _a,_b,_c;const label=game.i18n.localize("PF2E.PerceptionCheck"),rollOptions=new Set(null!==(_a=params.options)&&void 0!==_a?_a:[]);(0,modifiers_1.ensureProficiencyOption)(rollOptions,proficiencyRank),params.dc&&stat.adjustments&&(params.dc.adjustments=stat.adjustments);for(const rule of this.rules.filter((r=>!r.ignored)))null===(_b=rule.beforeRoll)||void 0===_b||_b.call(rule,domains,rollOptions);const rollTwice=(0,util_1.extractRollTwice)(synthetics.rollTwice,domains,rollOptions),context={actor:this,type:"perception-check",options:rollOptions,dc:params.dc,rollTwice,notes:stat.notes},roll=await check_1.CheckPF2e.roll(new modifiers_1.CheckModifier(label,stat),context,params.event,params.callback);for(const rule of this.rules.filter((r=>!r.ignored)))await(null===(_c=rule.afterRoll)||void 0===_c?void 0:_c.call(rule,{roll,selectors:domains,domains,rollOptions}));return roll},systemData.attributes.perception=stat}systemData.skills=this.prepareSkills(),this.system.traits.senses=this.prepareSenses(this.system.traits.senses,synthetics),this.traditions=Array.from(values_3.MAGIC_TRADITIONS).reduce(((traditions,tradition)=>(traditions[tradition]=new statistic_1.Statistic(this,{slug:tradition,label:CONFIG.PF2E.magicTraditions[tradition],rank:systemData.proficiencies.traditions[tradition].rank,domains:["all","spell-attack-dc"],check:{type:"check",domains:[`${tradition}-spell-attack`]},dc:{domains:[`${tradition}-spell-dc`]}}),traditions)),{}),this.classDC=null,this.classDCs={};for(const[slug,classDC]of Object.entries(systemData.proficiencies.classDCs)){const statistic=this.prepareClassDC(slug,classDC);systemData.proficiencies.classDCs[slug]=mergeObject(classDC,statistic.getTraceData({value:"dc"})),this.classDCs[slug]=statistic,classDC.primary&&(this.classDC=statistic)}systemData.attributes.classDC=null!==(_a=Object.values(systemData.proficiencies.classDCs).find((c=>c.primary)))&&void 0!==_a?_a:null;const{wornArmor,heldShield}=this;{const modifiers=[null!==(_b=this.getShieldBonus())&&void 0!==_b?_b:[]].flat(),dexCapSources=[{value:1/0,source:""},...synthetics.dexterityModifierCaps];let armorCheckPenalty=0;const proficiency=null!==(_c=null==wornArmor?void 0:wornArmor.category)&&void 0!==_c?_c:"unarmored";if(wornArmor){dexCapSources.push({value:Number(null!==(_d=wornArmor.dexCap)&&void 0!==_d?_d:0),source:wornArmor.name}),wornArmor.checkPenalty&&"number"==typeof wornArmor.strength&&systemData.abilities.str.value<wornArmor.strength&&(armorCheckPenalty=Number(null!==(_e=wornArmor.checkPenalty)&&void 0!==_e?_e:0));const slug=null!==(_g=null!==(_f=wornArmor.baseType)&&void 0!==_f?_f:wornArmor.slug)&&void 0!==_g?_g:(0,_util_1.sluggify)(wornArmor.name);modifiers.unshift(new modifiers_1.ModifierPF2e({label:wornArmor.name,type:"item",slug,modifier:wornArmor.acBonus,adjustments:(0,util_1.extractModifierAdjustments)(synthetics.modifierAdjustments,["all","ac"],slug)}));const shoddyPenalty=(0,helpers_2.createShoddyPenalty)(this,wornArmor,["all","ac"]);shoddyPenalty&&modifiers.push(shoddyPenalty)}modifiers.unshift(modifiers_1.ProficiencyModifier.fromLevelAndRank(this.level,null!==(_j=null===(_h=systemData.martial[proficiency])||void 0===_h?void 0:_h.rank)&&void 0!==_j?_j:0));const dexModifier=(0,modifiers_1.createAbilityModifier)({actor:this,ability:"dex",domains:["all","ac","dex-based"]}),dexCap=dexCapSources.reduce(((lowest,candidate)=>lowest.value>candidate.value?candidate:lowest));dexModifier.modifier=Math.min(dexModifier.modifier,dexCap.value),modifiers.unshift(dexModifier);const domains=["all","ac",`${modifiers.filter((m=>"ability"===m.type&&!!m.ability)).reduce(((best,modifier)=>modifier.modifier>best.modifier?modifier:best),dexModifier).ability}-based`];modifiers.push(...(0,util_1.extractModifiers)(synthetics,domains));const rollOptions=this.getRollOptions(domains),stat=mergeObject(new modifiers_1.StatisticModifier("ac",modifiers,rollOptions),{value:10,breakdown:"",check:armorCheckPenalty,dexCap});stat.value+=stat.totalModifier,stat.breakdown=[game.i18n.localize("PF2E.ArmorClassBase")].concat(stat.modifiers.filter((m=>m.enabled)).map((m=>`${m.label} ${m.modifier<0?"":"+"}${m.modifier}`))).join(", "),systemData.attributes.ac=stat}if(null==heldShield?void 0:heldShield.speedPenalty){const speedPenalty=new modifiers_1.ModifierPF2e(heldShield.name,heldShield.speedPenalty,modifiers_1.MODIFIER_TYPE.UNTYPED);speedPenalty.predicate.push({not:"self:shield:ignore-speed-penalty"}),null!==(_k=statisticsModifiers.speed)&&void 0!==_k||(statisticsModifiers.speed=[]),statisticsModifiers.speed.push((()=>speedPenalty))}(systemData.attributes.speed=this.prepareSpeed("land")).otherSpeeds=["burrow","climb","fly","swim"].flatMap((m=>{var _a;return null!==(_a=this.prepareSpeed(m))&&void 0!==_a?_a:[]})),systemData.actions=this.prepareStrikes(),systemData.actions.sort(((l,r)=>{var _a,_b;return l.ready!==r.ready?(l.ready?0:1)-(r.ready?0:1):(null!==(_a=l.item.sort)&&void 0!==_a?_a:0)-(null!==(_b=r.item.sort)&&void 0!==_b?_b:0)}));for(const entry of itemTypes.spellcastingEntry){if(entry.isInnate){const allRanks=Object.values(this.traditions).map((t=>{var _a;return null!==(_a=t.rank)&&void 0!==_a?_a:0}));entry.system.proficiency.value=Math.max(1,entry.rank,...allRanks)}const baseStat=this.getProficiencyStatistic(entry.system.proficiency.slug);baseStat&&(entry.system.ability.value=null!==(_l=baseStat.ability)&&void 0!==_l?_l:entry.system.ability.value,entry.system.proficiency.value=Math.max(entry.rank,null!==(_m=baseStat.rank)&&void 0!==_m?_m:0),entry.statistic=baseStat.extend({slug:null!==(_o=entry.slug)&&void 0!==_o?_o:(0,_util_1.sluggify)(entry.name),ability:entry.ability,rank:entry.rank,rollOptions:entry.getRollOptions("spellcasting"),domains:["spell-attack-dc",`${entry.ability}-based`],check:{type:"spell-attack-roll",domains:["spell-attack","spell-attack-roll","attack","attack-roll"]},dc:{domains:["spell-dc"]}}))}if(itemTypes.spellcastingEntry.length>0){const best=itemTypes.spellcastingEntry.reduce(((previous,current)=>current.statistic.dc.value>previous.statistic.dc.value?current:previous));this.system.attributes.spellDC={rank:null!==(_p=best.statistic.rank)&&void 0!==_p?_p:0,value:best.statistic.dc.value}}else this.system.attributes.spellDC=null;this.system.attributes.classOrSpellDC=(()=>{const classDC=Object.values(this.system.proficiencies.classDCs).reduce(((best,classDC)=>null===best||classDC.totalModifier>best.totalModifier?classDC:best),null),spellDC=this.system.attributes.spellDC;return spellDC&&classDC?spellDC.value>classDC.value?{...spellDC}:{rank:classDC.rank,value:classDC.value}:classDC&&!spellDC?{rank:classDC.rank,value:classDC.value}:spellDC&&!classDC?{...spellDC}:{rank:0,value:0}})(),this.prepareInitiative();const{focus,crafting}=this.system.resources;focus.max=Math.clamped(focus.max,0,focus.cap),crafting.infusedReagents.value=Math.clamped(crafting.infusedReagents.value,0,crafting.infusedReagents.max),0===focus.max&&this.spellcasting.regular.some((entry=>entry.isFocusPool))&&(focus.max=1),systemData.attributes.familiarAbilities.value>0&&(this.rollOptions.all["self:has-familiar"]=!0);for(const rule of this.rules)try{null===(_q=rule.afterPrepareData)||void 0===_q||_q.call(rule)}catch(error){console.error(`PF2e | Failed to execute onAfterPrepareData on rule element ${rule}.`,error)}}getProficiencyStatistic(slug){var _a,_b;return"classDC"===slug?this.classDC:(0,_util_1.objectHasKey)(this.traditions,slug)?this.traditions[slug]:null!==(_b=null!==(_a=this.classDCs[slug])&&void 0!==_a?_a:this.skills[slug])&&void 0!==_b?_b:null}setAbilityScores(){var _a;const{build,details}=this.system;if(!build.abilities.manual){for(const section of["ancestry","background","class",1,5,10,15,20]){const boosts=build.abilities.boosts[section];if("string"==typeof boosts){const ability=this.system.abilities[boosts];ability.value+=ability.value>=18?1:2}else if(Array.isArray(boosts))for(const abbrev of boosts){const ability=this.system.abilities[abbrev];ability.value+=ability.value>=18?1:2}const flaws="ancestry"===section?build.abilities.flaws[section]:[];for(const abbrev of flaws){this.system.abilities[abbrev].value-=2}}details.keyability.value=null!==(_a=build.abilities.boosts.class)&&void 0!==_a?_a:"str"}for(const ability of Object.values(this.system.abilities))ability.value=Math.clamped(ability.value,1,30),ability.base=ability.value}setNumericRollOptions(){const rollOptionsAll=this.rollOptions.all;rollOptionsAll[`perception:rank:${this.system.attributes.perception.rank}`]=!0;for(const key of values_2.ABILITY_ABBREVIATIONS){rollOptionsAll[`ability:${key}:score:${this.abilities[key].value}`]=!0}for(const key of values_2.SKILL_ABBREVIATIONS){rollOptionsAll[`skill:${key}:rank:${this.system.skills[key].rank}`]=!0}for(const key of armor_1.ARMOR_CATEGORIES){rollOptionsAll[`defense:${key}:rank:${this.system.martial[key].rank}`]=!0}for(const key of weapon_1.WEAPON_CATEGORIES){rollOptionsAll[`attack:${key}:rank:${this.system.martial[key].rank}`]=!0}for(const key of values_2.SAVE_TYPES){rollOptionsAll[`save:${key}:rank:${this.system.saves[key].rank}`]=!0}const heldItems=this.inventory.filter((i=>i.isHeld)),handsFree=heldItems.reduce(((count,item)=>{const handsOccupied=item.traits.has("free-hand")?0:item.handsHeld;return Math.max(count-handsOccupied,0)}),2);this.attributes.handsFree=handsFree,rollOptionsAll[`hands-free:${handsFree}`]=!0;rollOptionsAll[`hands-free:but-really:${heldItems.reduce(((count,i)=>Math.max(count-i.handsHeld,0)),2)}`]=!0}prepareSaves(){var _a,_b;const systemData=this.system,{wornArmor}=this,saves={};for(const saveType of values_2.SAVE_TYPES){const save=systemData.saves[saveType],saveName=game.i18n.localize(CONFIG.PF2E.saves[saveType]),modifiers=[],selectors=[saveType,`${save.ability}-based`,"saving-throw","all"];if(null==wornArmor?void 0:wornArmor.system.resiliencyRune.value){const resilientBonus=(0,physical_1.getResiliencyBonus)(wornArmor.system);resilientBonus>0&&wornArmor.isInvested&&modifiers.push(new modifiers_1.ModifierPF2e(wornArmor.name,resilientBonus,modifiers_1.MODIFIER_TYPE.ITEM))}if("reflex"===saveType&&(null==wornArmor?void 0:wornArmor.traits.has("bulwark"))){const slug="bulwark",bulwarkModifier=new modifiers_1.ModifierPF2e({slug,type:modifiers_1.MODIFIER_TYPE.UNTYPED,label:CONFIG.PF2E.armorTraits.bulwark,modifier:3,predicate:["damaging-effect"],adjustments:(0,util_1.extractModifierAdjustments)(this.synthetics.modifierAdjustments,selectors,slug)});modifiers.push(bulwarkModifier);(null!==(_a=(_b=this.synthetics.modifierAdjustments)[saveType])&&void 0!==_a?_a:_b[saveType]=[]).push({slug:"dex",predicate:new predication_1.PredicatePF2e("damaging-effect"),suppress:!0})}const stat=new statistic_1.Statistic(this,{slug:saveType,label:saveName,ability:save.ability,rank:save.rank,modifiers,domains:selectors,check:{type:"saving-throw"}});saves[saveType]=stat,this.system.saves[saveType]=mergeObject(this.system.saves[saveType],stat.getTraceData())}this.saves=saves}prepareSkills(){const systemData=this.system,{synthetics,wornArmor}=this,skills=Array.from(values_2.SKILL_ABBREVIATIONS).reduce(((builtSkills,shortForm)=>{var _a,_b,_c;const skill=systemData.skills[shortForm],longForm=values_2.SKILL_DICTIONARY[shortForm],domains=[longForm,`${skill.ability}-based`,"skill-check",`${skill.ability}-skill-check`,"all"],modifiers=[(0,modifiers_1.createAbilityModifier)({actor:this,ability:skill.ability,domains}),modifiers_1.ProficiencyModifier.fromLevelAndRank(this.level,skill.rank)];for(const modifier of modifiers)modifier.adjustments=(0,util_1.extractModifierAdjustments)(synthetics.modifierAdjustments,domains,modifier.slug);if("number"==typeof(null==wornArmor?void 0:wornArmor.strength)&&this.system.abilities.str.value>=wornArmor.strength)for(const selector of["skill-check","initiative"]){const rollOptions=null!==(_a=(_c=this.rollOptions)[selector])&&void 0!==_a?_a:_c[selector]={};null!==(_b=rollOptions["self:armor:strength-requirement-met"])&&void 0!==_b||(rollOptions["self:armor:strength-requirement-met"]=!0)}if(skill.armor&&"number"==typeof(null==wornArmor?void 0:wornArmor.checkPenalty)){const slug="armor-check-penalty",armorCheckPenalty=new modifiers_1.ModifierPF2e({slug,label:"PF2E.ArmorCheckPenalty",modifier:wornArmor.checkPenalty,type:modifiers_1.MODIFIER_TYPE.UNTYPED,adjustments:(0,util_1.extractModifierAdjustments)(synthetics.modifierAdjustments,domains,slug)});armorCheckPenalty.predicate.push({nor:["attack","armor:ignore-check-penalty"]}),["acrobatics","athletics"].includes(longForm)?armorCheckPenalty.predicate.push({nor:["self:armor:strength-requirement-met","self:armor:trait:flexible"]}):"stealth"===longForm&&wornArmor.traits.has("noisy")?armorCheckPenalty.predicate.push({nand:["self:armor:strength-requirement-met","armor:ignore-noisy-penalty"]}):armorCheckPenalty.predicate.push({not:"self:armor:strength-requirement-met"}),modifiers.push(armorCheckPenalty)}"athletics"===longForm&&modifiers.push((0,helpers_2.createForceOpenPenalty)(this,domains)),modifiers.push(...(0,util_1.extractModifiers)(synthetics,domains));const stat=mergeObject(new modifiers_1.StatisticModifier(longForm,modifiers,this.getRollOptions(domains)),skill,{overwrite:!1});return stat.adjustments=(0,util_1.extractDegreeOfSuccessAdjustments)(synthetics,domains),stat.breakdown=stat.modifiers.filter((modifier=>modifier.enabled)).map((modifier=>{const prefix=modifier.modifier<0?"":"+";return`${modifier.label} ${prefix}${modifier.modifier}`})).join(", "),stat.value=stat.totalModifier,stat.notes=(0,util_1.extractNotes)(synthetics.rollNotes,domains),stat.rank=skill.rank,stat.roll=async params=>{var _a,_b,_c;console.warn(`Rolling skill checks via actor.system.skills.${shortForm}.roll() is deprecated, use actor.skills.${longForm}.check.roll() instead`);const label=game.i18n.format("PF2E.SkillCheckWithName",{skillName:game.i18n.localize(CONFIG.PF2E.skills[shortForm])}),rollOptions=new Set(null!==(_a=params.options)&&void 0!==_a?_a:[]);(0,modifiers_1.ensureProficiencyOption)(rollOptions,skill.rank),params.dc&&stat.adjustments&&(params.dc.adjustments=stat.adjustments);for(const rule of this.rules.filter((r=>!r.ignored)))null===(_b=rule.beforeRoll)||void 0===_b||_b.call(rule,domains,rollOptions);const rollTwice=(0,util_1.extractRollTwice)(synthetics.rollTwice,domains,rollOptions),substitutions=(0,util_1.extractRollSubstitutions)(synthetics.rollSubstitutions,domains,rollOptions),context={actor:this,type:"skill-check",options:rollOptions,dc:params.dc,rollTwice,substitutions,notes:stat.notes},roll=await check_1.CheckPF2e.roll(new modifiers_1.CheckModifier(label,stat),context,params.event,params.callback);for(const rule of this.rules.filter((r=>!r.ignored)))await(null===(_c=rule.afterRoll)||void 0===_c?void 0:_c.call(rule,{roll,selectors:domains,domains,rollOptions}));return roll},builtSkills[shortForm]=stat,builtSkills}),{});for(const loreItem of this.itemTypes.lore){const shortForm=(0,_util_1.sluggify)(loreItem.name),rank=loreItem.system.proficient.value,domains=[shortForm,"int-based","skill-check","lore-skill-check","int-skill-check","all"],modifiers=[(0,modifiers_1.createAbilityModifier)({actor:this,ability:"int",domains}),modifiers_1.ProficiencyModifier.fromLevelAndRank(this.level,rank)];for(const modifier of modifiers)modifier.adjustments=(0,util_1.extractModifierAdjustments)(synthetics.modifierAdjustments,domains,modifier.slug);modifiers.push(...(0,util_1.extractModifiers)(synthetics,domains));const loreSkill=systemData.skills[shortForm],stat=mergeObject(new modifiers_1.StatisticModifier(shortForm,modifiers,this.getRollOptions(domains)),loreSkill,{overwrite:!1}),additionalData={itemID:loreItem.id,shortform:shortForm,expanded:loreItem,lore:!0};stat.adjustments=(0,util_1.extractDegreeOfSuccessAdjustments)(synthetics,domains),stat.label=loreItem.name,stat.ability="int",stat.notes=(0,util_1.extractNotes)(synthetics.rollNotes,domains),stat.rank=null!=rank?rank:0,stat.value=stat.totalModifier,stat.breakdown=stat.modifiers.filter((m=>m.enabled)).map((m=>`${m.label} ${m.modifier<0?"":"+"}${m.modifier}`)).join(", "),stat.roll=async params=>{var _a,_b,_c;console.warn(`Rolling skill checks via actor.system.skills.${shortForm}.roll() is deprecated, use actor.skills.${shortForm}.check.roll() instead`);const label=game.i18n.format("PF2E.SkillCheckWithName",{skillName:loreItem.name}),rollOptions=new Set(null!==(_a=params.options)&&void 0!==_a?_a:[]);(0,modifiers_1.ensureProficiencyOption)(rollOptions,rank);for(const rule of this.rules.filter((r=>!r.ignored)))null===(_b=rule.beforeRoll)||void 0===_b||_b.call(rule,domains,rollOptions);const rollTwice=(0,util_1.extractRollTwice)(synthetics.rollTwice,domains,rollOptions),substitutions=(0,util_1.extractRollSubstitutions)(synthetics.rollSubstitutions,domains,rollOptions),context={actor:this,type:"skill-check",options:rollOptions,dc:params.dc,rollTwice,substitutions,notes:stat.notes},roll=await check_1.CheckPF2e.roll(new modifiers_1.CheckModifier(label,stat),context,params.event,params.callback);for(const rule of this.rules.filter((r=>!r.ignored)))await(null===(_c=rule.afterRoll)||void 0===_c?void 0:_c.call(rule,{roll,selectors:domains,domains,rollOptions}));return roll},skills[shortForm]=mergeObject(stat,additionalData)}return skills}prepareSpeed(movementType){var _a,_b,_c,_d,_e;const{wornArmor}=this,basePenalty=null!==(_a=null==wornArmor?void 0:wornArmor.speedPenalty)&&void 0!==_a?_a:0,strength=this.system.abilities.str.value,value=strength>=(null!==(_b=null==wornArmor?void 0:wornArmor.strength)&&void 0!==_b?_b:strength)?Math.min(basePenalty+5,0):basePenalty,modifierName=null!==(_c=null==wornArmor?void 0:wornArmor.name)&&void 0!==_c?_c:"PF2E.ArmorSpeedLabel",slug="armor-speed-penalty",armorPenalty=value?new modifiers_1.ModifierPF2e({slug,label:modifierName,modifier:value,type:modifiers_1.MODIFIER_TYPE.UNTYPED,adjustments:(0,util_1.extractModifierAdjustments)(this.synthetics.modifierAdjustments,["speed",`${movementType}-speed`],slug)}):null;if(armorPenalty){const speedModifiers=null!==(_d=(_e=this.synthetics.statisticsModifiers).speed)&&void 0!==_d?_d:_e.speed=[];armorPenalty.predicate.push({not:"armor:ignore-speed-penalty"}),armorPenalty.test(this.getRollOptions(["speed",`${movementType}-speed`])),speedModifiers.push((()=>armorPenalty))}return super.prepareSpeed(movementType)}prepareFeats(){this.pfsBoons=[],this.deityBoonsCurses=[],this.feats=new feats_1.CharacterFeats(this);const campaignFeatSections=game.settings.get("pf2e","campaignFeatSections");for(const section of campaignFeatSections)this.feats.createCategory(section);this.feats.assignFeats();const feats=this.itemTypes.feat.filter((f=>["pfsboon","deityboon","curse"].includes(f.featType))).sort(((f1,f2)=>f1.sort-f2.sort));for(const feat of feats)"pfsboon"===feat.featType?this.pfsBoons.push(feat):this.deityBoonsCurses.push(feat)}prepareClassDC(slug,classDC){var _a,_b,_c;return null!==(_a=classDC.ability)&&void 0!==_a||(classDC.ability="str"),null!==(_b=classDC.rank)&&void 0!==_b||(classDC.rank=0),null!==(_c=classDC.primary)&&void 0!==_c||(classDC.primary=!1),new statistic_1.Statistic(this,{slug,label:classDC.label,ability:classDC.ability,rank:classDC.rank,domains:["class",slug,`${classDC.ability}-based`,"all"],check:{type:"check"}})}createAuxAction({weapon,action,purpose,hands}){const[actions,carryType,fullPurpose]=(()=>{var _a;switch(purpose){case"Draw":case"PickUp":return[1,"held",`${purpose}${hands}H`];case"Retrieve":return[(null===(_a=weapon.container)||void 0===_a?void 0:_a.isHeld)?2:3,"held",`${purpose}${hands}H`];case"Grip":return["Interact"===action?1:0,"held",purpose];case"Sheathe":return[1,"worn",purpose];case"Drop":return[0,"dropped",purpose]}})(),actionGlyph=(0,_util_1.getActionGlyph)(actions);return{label:game.i18n.localize(`PF2E.Actions.${action}.${fullPurpose}.Title`),img:actionGlyph,execute:async()=>{if(await this.adjustCarryType(weapon,carryType,hands),!game.combat)return;const templates_flavor="./systems/pf2e/templates/chat/action/flavor.html",templates_content="./systems/pf2e/templates/chat/action/content.html",flavorAction={title:`PF2E.Actions.${action}.Title`,subtitle:`PF2E.Actions.${action}.${fullPurpose}.Title`,typeNumber:actionGlyph},flavor=await renderTemplate(templates_flavor,{action:flavorAction,traits:[{name:CONFIG.PF2E.featTraits.manipulate,description:CONFIG.PF2E.traitsDescriptions.manipulate}]}),content=await renderTemplate(templates_content,{imgPath:weapon.img,message:game.i18n.format(`PF2E.Actions.${action}.${fullPurpose}.Description`,{actor:this.name,weapon:weapon.name})});await chat_message_1.ChatMessagePF2e.create({content,speaker:chat_message_1.ChatMessagePF2e.getSpeaker({actor:this}),flavor,type:CONST.CHAT_MESSAGE_TYPES.EMOTE})}}}prepareStrikes({includeBasicUnarmed=!0}={}){const{itemTypes,synthetics}=this,handwraps=itemTypes.weapon.find((w=>"handwraps-of-mighty-blows"===w.slug&&"unarmed"===w.category&&w.isEquipped)),unarmedRunes=(()=>{var _a;const{potencyRune,strikingRune,propertyRune1,propertyRune2,propertyRune3,propertyRune4}=null!==(_a=null==handwraps?void 0:handwraps._source.system)&&void 0!==_a?_a:{};return(null==handwraps?void 0:handwraps.isInvested)?deepClone({potencyRune,strikingRune,propertyRune1,propertyRune2,propertyRune3,propertyRune4}):null})(),basicUnarmed=includeBasicUnarmed?(()=>{const source={_id:"xxPF2ExUNARMEDxx",name:game.i18n.localize("PF2E.WeaponTypeUnarmed"),type:"weapon",img:"systems/pf2e/icons/features/classes/powerful-fist.webp",system:{slug:"basic-unarmed",category:"unarmed",baseItem:null,bonus:{value:0},damage:{dice:1,die:"d4",damageType:"bludgeoning"},equipped:{carryType:"worn",inSlot:!0,handsHeld:0},group:"brawling",traits:{value:["agile","finesse","nonlethal","unarmed"]},usage:{value:"worngloves"},...null!=unarmedRunes?unarmedRunes:{}}};return new _item_1.WeaponPF2e(source,{parent:this,pf2e:{ready:!0}})})():null;if(unarmedRunes)for(const[slug,weapon]of synthetics.strikes.entries()){"unarmed"===weapon.category&&synthetics.strikes.set(slug,weapon.clone({system:unarmedRunes},{keepId:!0}));const clone=synthetics.strikes.get(slug);clone.name=clone._source.name}const ammos=itemTypes.consumable.filter((i=>"ammo"===i.consumableType&&!i.isStowed)),homebrewCategoryTags=game.settings.get("pf2e","homebrew.weaponCategories"),offensiveCategories=[...weapon_1.WEAPON_CATEGORIES,...homebrewCategoryTags.map((tag=>tag.id))];return[itemTypes.weapon.filter((w=>"handwraps-of-mighty-blows"!==w.slug)),Array.from(synthetics.strikes.values()),null!=basicUnarmed?basicUnarmed:[]].flat().map((w=>this.prepareStrike(w,{categories:offensiveCategories,ammos})))}prepareStrike(weapon,options){var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l,_m,_o,_p,_q,_r;const{synthetics}=this,{rollNotes,statisticsModifiers,strikeAdjustments}=synthetics,modifiers=[],systemData=this.system,{categories}=options,ammos=null!==(_a=options.ammos)&&void 0!==_a?_a:[];for(const adjustment of strikeAdjustments)null===(_b=adjustment.adjustWeapon)||void 0===_b||_b.call(adjustment,weapon);const weaponRollOptions=weapon.getRollOptions("item"),weaponTraits=weapon.traits,categoryRank=null!==(_d=null===(_c=systemData.martial[weapon.category])||void 0===_c?void 0:_c.rank)&&void 0!==_d?_d:0,groupRank=null!==(_f=null===(_e=systemData.martial[`weapon-group-${weapon.group}`])||void 0===_e?void 0:_e.rank)&&void 0!==_f?_f:0,baseWeapon=null!==(_h=CONFIG.PF2E.equivalentWeapons[null!==(_g=weapon.baseType)&&void 0!==_g?_g:""])&&void 0!==_h?_h:weapon.baseType,baseWeaponRank=null!==(_k=null===(_j=systemData.martial[`weapon-base-${baseWeapon}`])||void 0===_j?void 0:_j.rank)&&void 0!==_k?_k:0,equivalentCategories=Object.values(systemData.martial).flatMap((p=>"sameAs"in p&&p.definition.test(weaponRollOptions)?`item:category:${p.sameAs}`:[])),weaponProficiencyOptions=new Set(weaponRollOptions.concat(equivalentCategories)),syntheticRanks=Object.values(systemData.martial).filter((p=>"definition"in p&&p.definition.test(weaponProficiencyOptions))).map((p=>p.rank)),proficiencyRank=Math.max(categoryRank,groupRank,baseWeaponRank,...syntheticRanks);modifiers.push(modifiers_1.ProficiencyModifier.fromLevelAndRank(this.level,proficiencyRank)),weaponRollOptions.push(`item:proficiency:rank:${proficiencyRank}`);const unarmedOrWeapon="unarmed"===weapon.category?"unarmed":"weapon",meleeOrRanged=weapon.isMelee?"melee":"ranged",slug=null!==(_l=weapon.slug)&&void 0!==_l?_l:(0,_util_1.sluggify)(weapon.name),baseSelectors=[...[weapon.baseType?`${weapon.baseType}-base-attack-roll`:[],weapon.group?`${weapon.group}-group-attack-roll`:[],weapon.system.traits.otherTags.map((t=>`${t}-tag-attack-roll`))].flat(),"attack","mundane-attack",`${weapon.id}-attack`,`${slug}-attack`,`${slug}-attack-roll`,"strike-attack-roll",`${unarmedOrWeapon}-attack-roll`,`${meleeOrRanged}-attack-roll`,"attack-roll","all"],baseOptions=new Set([...this.getRollOptions(baseSelectors),...weaponTraits,...weaponRollOptions,meleeOrRanged]);(0,modifiers_1.ensureProficiencyOption)(baseOptions,proficiencyRank);const defaultAbility=null!==(_m=options.defaultAbility)&&void 0!==_m?_m:weapon.isMelee?"str":"dex";modifiers.push((0,modifiers_1.createAbilityModifier)({actor:this,ability:defaultAbility,domains:baseSelectors})),weapon.isMelee&&weaponTraits.has("finesse")&&modifiers.push((0,modifiers_1.createAbilityModifier)({actor:this,ability:"dex",domains:baseSelectors})),weapon.isRanged&&weaponTraits.has("brutal")&&modifiers.push((0,modifiers_1.createAbilityModifier)({actor:this,ability:"str",domains:baseSelectors}));const selectors=(()=>{const options={resolvables:{weapon}},abilityModifier=[...modifiers,...(0,util_1.extractModifiers)(synthetics,baseSelectors,options)].filter((m=>"ability"===m.type)).flatMap((modifier=>modifier.predicate.test(baseOptions)?modifier:[])).reduce(((best,candidate)=>candidate.modifier>best.modifier?candidate:best));if(!abilityModifier)return console.warn(`PF2e System | No ability modifier was determined for attack roll with ${weapon.name} (${weapon.uuid})`),baseSelectors;const ability=abilityModifier.ability;return[baseSelectors,baseWeapon&&!baseWeapon.includes(`${baseWeapon}-attack`)?`${baseWeapon}-attack`:[],weapon.group?`${weapon.group}-weapon-group-attack`:[],`${ability}-attack`,`${ability}-based`].flat()})(),attackRollNotes=(0,util_1.extractNotes)(rollNotes,selectors),ABP=game.pf2e.variantRules.AutomaticBonusProgression;if("bomb"===weapon.group&&!ABP.isEnabled){const attackBonus=Number(null===(_o=weapon.system.bonus)||void 0===_o?void 0:_o.value)||0;0!==attackBonus&&modifiers.push(new modifiers_1.ModifierPF2e("PF2E.ItemBonusLabel",attackBonus,modifiers_1.MODIFIER_TYPE.ITEM))}const weaponPotency=(()=>{const potency=selectors.flatMap((key=>{var _a;return deepClone(null!==(_a=synthetics.weaponPotency[key])&&void 0!==_a?_a:[])})).filter((wp=>predication_1.PredicatePF2e.test(wp.predicate,baseOptions)));ABP.applyPropertyRunes(potency,weapon);const potencyRune=weapon.system.runes.potency;if(potencyRune){const property=(0,physical_1.getPropertyRunes)(weapon,(0,physical_1.getPropertySlots)(weapon)).filter((r=>(0,_util_1.setHasElement)(weapon_1.WEAPON_PROPERTY_RUNE_TYPES,r)));potency.push({label:"PF2E.PotencyRuneLabel",bonus:potencyRune,type:"item",property,predicate:new predication_1.PredicatePF2e})}return potency.length>0?potency.reduce(((highest,current)=>highest.bonus>current.bonus?highest:current)):null})();weaponPotency&&(modifiers.push(new modifiers_1.ModifierPF2e(weaponPotency.label,weaponPotency.bonus,weaponPotency.type)),weaponTraits.add("magical"));const shoddyPenalty=(0,helpers_2.createShoddyPenalty)(this,weapon,selectors);shoddyPenalty&&modifiers.push(shoddyPenalty),modifiers.push(...(0,util_1.extractModifiers)(synthetics,selectors,{injectables:{weapon},resolvables:{weapon}}));const multipleAttackPenalty=(0,helpers_1.calculateMAPs)(weapon,{domains:selectors,options:baseOptions}),auxiliaryActions=[];if(this.items.has(weapon.id)&&"unarmed"!==weapon.category){const traitsArray=weapon.system.traits.value,hasFatalAimTrait=traitsArray.some((t=>t.startsWith("fatal-aim"))),hasTwoHandTrait=traitsArray.some((t=>t.startsWith("two-hand"))),{usage}=weapon.system,canWield2H="held"===usage.type&&2===usage.hands||hasFatalAimTrait||hasTwoHandTrait;switch(weapon.carryType){case"held":2===weapon.handsHeld?auxiliaryActions.push(this.createAuxAction({weapon,action:"Release",purpose:"Grip",hands:1})):1===weapon.handsHeld&&canWield2H&&auxiliaryActions.push(this.createAuxAction({weapon,action:"Interact",purpose:"Grip",hands:2})),auxiliaryActions.push(this.createAuxAction({weapon,action:"Interact",purpose:"Sheathe",hands:0})),auxiliaryActions.push(this.createAuxAction({weapon,action:"Release",purpose:"Drop",hands:0}));break;case"worn":canWield2H&&auxiliaryActions.push(this.createAuxAction({weapon,action:"Interact",purpose:"Draw",hands:2})),auxiliaryActions.push(this.createAuxAction({weapon,action:"Interact",purpose:"Draw",hands:1}));break;case"stowed":auxiliaryActions.push(this.createAuxAction({weapon,action:"Interact",purpose:"Retrieve",hands:1}));break;case"dropped":canWield2H&&auxiliaryActions.push(this.createAuxAction({weapon,action:"Interact",purpose:"PickUp",hands:2})),auxiliaryActions.push(this.createAuxAction({weapon,action:"Interact",purpose:"PickUp",hands:1}))}}const flavor=this.getStrikeDescription(weapon),rollOptions=[...this.getRollOptions(selectors),...weaponRollOptions,...weaponTraits,meleeOrRanged],strikeStat=new modifiers_1.StatisticModifier(`${slug}-strike`,modifiers,rollOptions),altUsages=weapon.getAltUsages().map((w=>this.prepareStrike(w,{categories})));strikeStat.adjustments=(0,util_1.extractDegreeOfSuccessAdjustments)(synthetics,selectors);const action=mergeObject(strikeStat,{label:weapon.name,imageUrl:weapon.img,quantity:weapon.quantity,slug:weapon.slug,ready:weapon.isEquipped,visible:"basic-unarmed"!==weapon.slug||this.flags.pf2e.showBasicUnarmed,glyph:"A",item:weapon,type:"strike",...flavor,options:null!==(_q=null===(_p=weapon.system.options)||void 0===_p?void 0:_p.value)&&void 0!==_q?_q:[],traits:[],weaponTraits:Array.from(weaponTraits).map((t=>(0,_util_1.traitSlugToObject)(t,CONFIG.PF2E.npcAttackTraits))),variants:[],selectedAmmoId:weapon.system.selectedAmmoId,altUsages,auxiliaryActions});if(Object.defineProperty(action,"origin",{get:()=>this.items.get(weapon.id)}),weapon.requiresAmmo){const compatible=ammos.filter((a=>a.isAmmoFor(weapon))),incompatible=ammos.filter((a=>!a.isAmmoFor(weapon))),ammo=weapon.ammo,selected=ammo?{id:ammo.id,compatible:ammo.isAmmoFor(weapon)}:null;action.ammunition={compatible,incompatible,selected}}const actionTraits=["attack","alchemical-bomb"===weapon.baseType?"manipulate":[]].flat();for(const adjustment of this.synthetics.strikeAdjustments)null===(_r=adjustment.adjustTraits)||void 0===_r||_r.call(adjustment,weapon,actionTraits);action.traits=actionTraits.map((t=>(0,_util_1.traitSlugToObject)(t,CONFIG.PF2E.actionTraits))),action.breakdown=action.modifiers.filter((m=>m.enabled)).map((m=>`${m.label} ${m.modifier<0?"":"+"}${m.modifier}`)).join(", ");const checkName=game.i18n.format(weapon.isMelee?"PF2E.Action.Strike.MeleeLabel":"PF2E.Action.Strike.RangedLabel",{weapon:weapon.name}),labels=[(()=>{const strike=game.i18n.localize("PF2E.WeaponStrikeLabel"),value=action.totalModifier;return`${strike} ${value<0?"":"+"}${value}`})(),game.i18n.format("PF2E.MAPAbbreviationLabel",{penalty:multipleAttackPenalty.map1}),game.i18n.format("PF2E.MAPAbbreviationLabel",{penalty:multipleAttackPenalty.map2})],checkModifiers=[otherModifiers=>new modifiers_1.CheckModifier(checkName,action,otherModifiers),otherModifiers=>new modifiers_1.CheckModifier(checkName,action,[...otherModifiers,new modifiers_1.ModifierPF2e(multipleAttackPenalty.label,multipleAttackPenalty.map1,modifiers_1.MODIFIER_TYPE.UNTYPED)]),otherModifiers=>new modifiers_1.CheckModifier(checkName,action,[...otherModifiers,new modifiers_1.ModifierPF2e(multipleAttackPenalty.label,multipleAttackPenalty.map2,modifiers_1.MODIFIER_TYPE.UNTYPED)])];action.variants=[0,1,2].map((index=>[labels[index],checkModifiers[index]])).map((([label,constructModifier])=>({label,roll:async(params={})=>{var _a,_b,_c,_d,_e,_f,_g,_h;if(weapon.requiresAmmo&&!weapon.ammo)return ui.notifications.warn(game.i18n.format("PF2E.Strike.Ranged.NoAmmo",{weapon:weapon.name,actor:this.name})),null;null!==(_a=params.options)&&void 0!==_a||(params.options=[]);const context=this.getAttackRollContext({item:weapon,domains:selectors,options:new Set([...baseOptions,...params.options,...action.options]),viewOnly:null!==(_b=params.getFormula)&&void 0!==_b&&_b});if(context.self.item.isRanged&&"number"==typeof(null===(_c=context.target)||void 0===_c?void 0:_c.distance)){const maxRange=null!==(_d=context.self.item.maxRange)&&void 0!==_d?_d:10;if(context.target.distance>maxRange)return ui.notifications.warn("PF2E.Action.Strike.OutOfRange",{localize:!0}),null}for(const rule of this.rules.filter((r=>!r.ignored)))null===(_e=rule.beforeRoll)||void 0===_e||_e.call(rule,selectors,context.options);const dc=null!==(_f=params.dc)&&void 0!==_f?_f:context.dc;dc&&action.adjustments&&(dc.adjustments=action.adjustments);const rollTwice=params.rollTwice||(0,util_1.extractRollTwice)(synthetics.rollTwice,selectors,context.options),substitutions=(0,util_1.extractRollSubstitutions)(synthetics.rollSubstitutions,selectors,context.options),checkContext={type:"attack-roll",actor:context.self.actor,target:context.target,item:context.self.item,altUsage:null!==(_g=params.altUsage)&&void 0!==_g?_g:null,domains:selectors,options:context.options,notes:attackRollNotes,dc,traits:context.traits,rollTwice,substitutions};if(!this.consumeAmmo(context.self.item,params))return null;const roll=await check_1.CheckPF2e.roll(constructModifier(context.self.modifiers),checkContext,params.event,params.callback);for(const rule of this.rules.filter((r=>!r.ignored)))await(null===(_h=rule.afterRoll)||void 0===_h?void 0:_h.call(rule,{roll,selectors,domains:selectors,rollOptions:context.options}));return roll}}))),action.attack=action.roll=action.variants[0].roll;for(const method of["damage","critical"])action[method]=async(params={})=>{var _a,_b;const domains=["all","strike-damage","damage-roll"];null!==(_a=params.options)&&void 0!==_a||(params.options=[]);const context=this.getDamageRollContext({item:weapon,viewOnly:null!==(_b=params.getFormula)&&void 0!==_b&&_b,domains,options:new Set([...params.options,...baseOptions,...action.options])});if(!context.self.item.dealsDamage)return params.getFormula?"":ui.notifications.warn("PF2E.ErrorMessage.WeaponNoDamage",{localize:!0});const damage=damage_1.WeaponDamagePF2e.calculate(context.self.item,context.self.actor,context.traits,deepClone(statisticsModifiers),deepClone(synthetics.modifierAdjustments),deepClone(synthetics.damageDice),proficiencyRank,context.options,deepClone(rollNotes),weaponPotency,synthetics.striking,synthetics.strikeAdjustments);if(!damage)return;const outcome="damage"===method?"success":"criticalSuccess",critSpecs=context.self.actor.synthetics.criticalSpecalizations;if("criticalSuccess"===outcome&&!params.getFormula&&critSpecs.standard.length>0){const standard=critSpecs.standard.flatMap((cs=>{var _a;return null!==(_a=cs(context.self.item,context.options))&&void 0!==_a?_a:[]})).pop(),alternate=critSpecs.alternate.flatMap((cs=>{var _a;return null!==(_a=cs(context.self.item,context.options))&&void 0!==_a?_a:[]})).pop(),note=standard?null!=alternate?alternate:standard:null;note&&damage.notes.push(note)}if(params.getFormula)return damage.formula[outcome].formula;{const{self,target,options}=context,damageContext={type:"damage-roll",self,target,outcome,options,domains};await rolls_1.DamageRollPF2e.roll(damage,damageContext,params.callback)}};return action}getStrikeDescription(weapon){const flavor={description:"PF2E.Strike.Default.Description",criticalSuccess:"PF2E.Strike.Default.CriticalSuccess",success:"PF2E.Strike.Default.Success"},traits=weapon.traits;return traits.has("unarmed")?(flavor.description="PF2E.Strike.Unarmed.Description",flavor.success="PF2E.Strike.Unarmed.Success"):[...traits].some((trait=>trait.startsWith("thrown-")||"combination"===trait))?(flavor.description="PF2E.Strike.Combined.Description",flavor.success="PF2E.Strike.Combined.Success"):weapon.isMelee?(flavor.description="PF2E.Strike.Melee.Description",flavor.success="PF2E.Strike.Melee.Success"):(flavor.description="PF2E.Strike.Ranged.Description",flavor.success="PF2E.Strike.Ranged.Success"),flavor}getStrikeRollContext(params){const context=super.getStrikeRollContext(params);return context.self.item.isOfType("weapon")&&helpers_2.StrikeWeaponTraits.adjustWeapon(context.self.item),context}getAttackRollContext(params){const context=super.getAttackRollContext(params);if(context.self.item.isOfType("weapon")){const fromTraits=helpers_2.StrikeWeaponTraits.createAttackModifiers(context.self.item,params.domains);context.self.modifiers.push(...fromTraits)}return context}consumeAmmo(weapon,params){const ammo=weapon.ammo;if(ammo){if(ammo.quantity<1)return ui.notifications.warn(game.i18n.localize("PF2E.ErrorMessage.NotEnoughAmmo")),!1;{const existingCallback=params.callback;return params.callback=async roll=>{null==existingCallback||existingCallback(roll),await ammo.consume()},!0}}return!0}prepareMartialProficiencies(){var _a;const systemData=this.system,linkedProficiencies=Object.values(systemData.martial).filter((p=>"sameAs"in p&&String(p.sameAs)in systemData.martial));for(const proficiency of linkedProficiencies){const category=systemData.martial[null!==(_a=proficiency.sameAs)&&void 0!==_a?_a:""];proficiency.rank=(()=>{var _a;const maxRankIndex=data_1.PROFICIENCY_RANKS.indexOf(null!==(_a=proficiency.maxRank)&&void 0!==_a?_a:"legendary");return Math.min(category.rank,maxRankIndex)})()}const allProficiencies=Object.entries(systemData.martial);for(const[_key,proficiency]of allProficiencies){const stringDefinition="definition"in proficiency?(0,_util_1.sortedStringify)(proficiency.definition):null,duplicates=allProficiencies.flatMap((([k,p])=>proficiency!==p&&proficiency.rank>=p.rank&&"definition"in proficiency&&"definition"in p&&proficiency.sameAs===p.sameAs&&(0,_util_1.sortedStringify)(p.definition)===stringDefinition?k:[]));for(const duplicate of duplicates)delete systemData.martial[duplicate];const proficiencyBonus=modifiers_1.ProficiencyModifier.fromLevelAndRank(this.level,proficiency.rank||0);proficiency.value=proficiencyBonus.modifier;const sign=proficiencyBonus.modifier<0?"":"+";proficiency.breakdown=`${proficiencyBonus.label} ${sign}${proficiencyBonus.modifier}`}}async toggleInvested(itemId){const item=this.inventory.get(itemId);if(!(null==item?void 0:item.traits.has("invested")))throw(0,_util_1.ErrorPF2e)("Unexpected error toggling item investment");const invested=item.isInvested;return invested||item.isEquipped||await this.adjustCarryType(item,item.system.usage.type,item.system.usage.hands,!0),!!await item.update({"system.equipped.invested":!invested})}async addAttackProficiency(key){if(key in this.system.martial)return;await this.update({[`system.martial.${key}`]:{rank:0,value:0,breakdown:"",custom:!0}})}async deleteEmbeddedDocuments(embeddedName,ids,context={}){if("Item"===embeddedName){const featureIds=[this.ancestry,this.background,this.class].filter((item=>!!item&&ids.includes(item.id))).flatMap((item=>item.getLinkedFeatures().map((feature=>feature.id))));ids.push(...featureIds)}return super.deleteEmbeddedDocuments(embeddedName,[...new Set(ids)],context)}async _preUpdate(changed,options,user){var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l,_m,_o,_p,_q,_r,_s,_t,_u,_v,_w,_x,_y,_z,_0;const systemData=this.system;if((null===(_b=null===(_a=changed.system)||void 0===_a?void 0:_a.details)||void 0===_b?void 0:_b.level)||(null===(_d=null===(_c=changed.system)||void 0===_c?void 0:_c.build)||void 0===_d?void 0:_d.abilities)){const level=null===(_f=null===(_e=changed.system)||void 0===_e?void 0:_e.details)||void 0===_f?void 0:_f.level;"number"==typeof(null==level?void 0:level.value)&&(level.value=Math.clamped(Number(level.value)||0,0,30)||0);const hpMaxDifference=this.clone(changed).hitPoints.max-this.hitPoints.max;if(0!==hpMaxDifference){options.allowHPOverage=!0;const currentHP=this.hitPoints.value,newHP=Math.max(currentHP+hpMaxDifference,0===currentHP?0:1);changed.system=mergeObject(null!==(_g=changed.system)&&void 0!==_g?_g:{},{attributes:{hp:{value:newHP}}})}}game.settings.get("pf2e","staminaVariant")&&((null===(_j=null===(_h=changed.system)||void 0===_h?void 0:_h.attributes)||void 0===_j?void 0:_j.sp)&&(changed.system.attributes.sp.value=Math.clamped((null===(_m=null===(_l=null===(_k=changed.system)||void 0===_k?void 0:_k.attributes)||void 0===_l?void 0:_l.sp)||void 0===_m?void 0:_m.value)||0,0,systemData.attributes.sp.max)),(null===(_p=null===(_o=changed.system)||void 0===_o?void 0:_o.attributes)||void 0===_p?void 0:_p.resolve)&&(changed.system.attributes.resolve.value=Math.clamped((null===(_s=null===(_r=null===(_q=changed.system)||void 0===_q?void 0:_q.attributes)||void 0===_r?void 0:_r.resolve)||void 0===_s?void 0:_s.value)||0,0,systemData.attributes.resolve.max)));const newLevel=null!==(_w=null===(_v=null===(_u=null===(_t=changed.system)||void 0===_t?void 0:_t.details)||void 0===_u?void 0:_u.level)||void 0===_v?void 0:_v.value)&&void 0!==_w?_w:this.level,actorClass=this.class;if(actorClass&&newLevel!==this.level){const current=this.itemTypes.feat.filter((feat=>"classfeature"===feat.featType));if(newLevel>this.level){const classFeaturesToCreate=(await actorClass.getFeatures({level:newLevel})).filter((feature=>feature.system.level.value>this.level&&!current.some((currentFeature=>{var _a;return currentFeature.sourceId===(null===(_a=feature.flags.core)||void 0===_a?void 0:_a.sourceId)}))));await this.createEmbeddedDocuments("Item",classFeaturesToCreate,{keepId:!0,render:!1})}else if(newLevel<this.level){const classFeaturestoDelete=current.filter((feat=>feat.level>newLevel)).map((feat=>feat.id));await this.deleteEmbeddedDocuments("Item",classFeaturestoDelete,{render:!1})}}for(const property of["playerNumber","characterNumber"])if("number"==typeof(null===(_y=null===(_x=changed.system)||void 0===_x?void 0:_x.pfs)||void 0===_y?void 0:_y[property])){const[min,max]="playerNumber"===property?[1,9999999]:[2001,9999];changed.system.pfs[property]=Math.clamped(changed.system.pfs[property]||0,min,max)}else(null===(_z=changed.system)||void 0===_z?void 0:_z.pfs)&&null!==changed.system.pfs[property]&&(changed.system.pfs[property]=null!==(_0=this.system.pfs[property])&&void 0!==_0?_0:null);await super._preUpdate(changed,options,user)}async preCreateDelete(toCreate){const{itemTypes}=this,preCreateDeletions=["heritage","deity"].filter((t=>toCreate.some((i=>i.type===t)))).flatMap((t=>itemTypes[t])).map((i=>i.id));preCreateDeletions.length>0&&await this.deleteEmbeddedDocuments("Item",preCreateDeletions,{render:!1})}async toggleAbilityManagement(){if(0===Object.keys(this._source.system.abilities).length){const baseAbilities=Array.from(values_2.ABILITY_ABBREVIATIONS).reduce(((accumulated,abbrev)=>({...accumulated,[abbrev]:{value:10}})),{});await this.update({"system.abilities":baseAbilities})}else{const deletions=Array.from(values_2.ABILITY_ABBREVIATIONS).reduce(((accumulated,abbrev)=>({...accumulated,[`-=${abbrev}`]:null})),{});await this.update({"system.abilities":deletions})}}}exports.CharacterPF2e=CharacterPF2e},39481:function(__unused_webpack_module,exports,__webpack_require__){var _CharacterSheetPF2e_instances,_CharacterSheetPF2e_onClickBrowseFeats,_CharacterSheetPF2e_onChangeAdjustStat,_CharacterSheetPF2e_onClickAdjustStat,_CharacterSheetPF2e_onChangeAdjustItemStat,_CharacterSheetPF2e_onClickAdjustItemStat,_CharacterSheetPF2e_onIncrementModifierValue,_CharacterSheetPF2e_onDecrementModifierValue,_CharacterSheetPF2e_onAddCustomModifier,_CharacterSheetPF2e_onRemoveCustomModifier,_CharacterSheetPF2e_getNearestFeatSlotId,__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.CharacterSheetPF2e=void 0;const modifiers_1=__webpack_require__(92823),_item_1=__webpack_require__(10843),data_1=__webpack_require__(52769),rest_for_the_night_1=__webpack_require__(27397),craft_1=__webpack_require__(61297),localize_1=__webpack_require__(41332),_util_1=__webpack_require__(6945),_1=__webpack_require__(886),sheet_1=__webpack_require__(83936),ability_builder_1=__webpack_require__(42811),manage_attack_proficiencies_1=__webpack_require__(37113),config_1=__webpack_require__(78736),crafting_1=__webpack_require__(20663),tab_manager_1=__webpack_require__(16135);class CharacterSheetPF2e extends sheet_1.CreatureSheetPF2e{constructor(){super(...arguments),_CharacterSheetPF2e_instances.add(this),this.actorConfigClass=config_1.CharacterConfig,this.knownFormulas={},this.formulaQuantities={}}static get defaultOptions(){const options=super.defaultOptions;return options.classes=["default","sheet","actor","character"],options.width=750,options.height=800,options.scrollY.push(".tab.active .tab-content"),options.tabs=[{navSelector:".sheet-navigation",contentSelector:".sheet-content",initial:"character"},{navSelector:".actions-nav",contentSelector:".actions-panels",initial:"encounter"}],options}get template(){return`systems/pf2e/templates/actors/character/${this.actor.limited&&!game.user.isGM?"limited":"sheet"}.html`}async getData(options){var _a,_b,_c;const sheetData=await super.getData(options),proficiencies=Object.entries(sheetData.data.martial);for(const[key,proficiency]of proficiencies){const groupMatch=/^weapon-group-([-\w]+)$/.exec(key),baseWeaponMatch=/^weapon-base-([-\w]+)$/.exec(key),label=(()=>{var _a;if((0,_util_1.objectHasKey)(CONFIG.PF2E.martialSkills,key))return CONFIG.PF2E.martialSkills[key];if((0,_util_1.objectHasKey)(CONFIG.PF2E.weaponCategories,key))return CONFIG.PF2E.weaponCategories[key];if(Array.isArray(groupMatch)){const weaponGroup=groupMatch[1];return CONFIG.PF2E.weaponGroups[weaponGroup]}if(Array.isArray(baseWeaponMatch)){const baseWeapon=baseWeaponMatch[1];return localize_1.LocalizePF2e.translations.PF2E.Weapon.Base[baseWeapon]}return null!==(_a=proficiency.label)&&void 0!==_a?_a:key})();proficiency.label=game.i18n.localize(label),proficiency.value=modifiers_1.ProficiencyModifier.fromLevelAndRank(sheetData.data.details.level.value,proficiency.rank||0).modifier}sheetData.ancestry=this.actor.ancestry,sheetData.heritage=this.actor.heritage,sheetData.background=this.actor.background,sheetData.class=this.actor.class,sheetData.deity=this.actor.deity,sheetData.data.resources.heroPoints.icon=this.getHeroPointsIcon(sheetData.data.resources.heroPoints.value),sheetData.data.resources.heroPoints.hover=game.i18n.format(1===this.actor.heroPoints.value?"PF2E.HeroPointRatio.One":"PF2E.HeroPointRatio.Many",this.actor.heroPoints);const classDCs=Object.values(sheetData.data.proficiencies.classDCs).map((classDC=>({...classDC,icon:this.getProficiencyIcon(classDC.rank),hover:CONFIG.PF2E.proficiencyLevels[classDC.rank],rankSlug:data_1.PROFICIENCY_RANKS[classDC.rank],rankName:game.i18n.format(`PF2E.ProficiencyLevel${classDC.rank}`)}))).sort(((a,b)=>a.primary?-1:b.primary?1:a.slug.localeCompare(b.slug))),primaryClassDC=null!==(_b=null===(_a=sheetData.data.attributes.classDC)||void 0===_a?void 0:_a.slug)&&void 0!==_b?_b:null;sheetData.classDCs={dcs:classDCs,primary:primaryClassDC,perDCDetails:classDCs.length>1||!primaryClassDC},sheetData.magicTraditions=CONFIG.PF2E.magicTraditions,sheetData.preparationType=CONFIG.PF2E.preparationType,sheetData.data.attributes.perception.rankName=game.i18n.format(`PF2E.ProficiencyLevel${sheetData.data.attributes.perception.rank}`),sheetData.data.saves={fortitude:sheetData.data.saves.fortitude,reflex:sheetData.data.saves.reflex,will:sheetData.data.saves.will};for(const save of Object.values(sheetData.data.saves))save.rankName=game.i18n.format(`PF2E.ProficiencyLevel${save.rank}`);for(const save of Object.values(sheetData.data.saves))save.short=game.i18n.format(`PF2E.Saves${save.label}Short`);sheetData.data.details.keyability.singleOption=1===(null===(_c=this.actor.class)||void 0===_c?void 0:_c.system.keyAbility.value.length),sheetData.hasStamina=game.settings.get("pf2e","staminaVariant")>0,sheetData.spellcastingEntries=await this.prepareSpellcasting(),sheetData.feats=this.prepareFeats();const formulasByLevel=await this.prepareCraftingFormulas(),flags=this.actor.flags.pf2e,hasQuickAlchemy=!(!this.actor.rollOptions.all["feature:quick-alchemy"]&&!this.actor.rollOptions.all["feat:quick-alchemy"]),useQuickAlchemy=hasQuickAlchemy&&flags.quickAlchemy;sheetData.crafting={noCost:flags.freeCrafting||useQuickAlchemy,hasQuickAlchemy,knownFormulas:formulasByLevel,entries:await this.prepareCraftingEntries()},this.knownFormulas=Object.values(formulasByLevel).flat().reduce(((result,entry)=>{var _a;return entry.batchSize=null!==(_a=this.formulaQuantities[entry.uuid])&&void 0!==_a?_a:entry.batchSize,result[entry.uuid]=entry,result}),{}),sheetData.abpEnabled="noABP"!==game.settings.get("pf2e","automaticBonusVariant");const combatProficiencies=sheetData.data.martial,isWeaponProficiency=key=>(0,_util_1.setHasElement)(_item_1.WEAPON_CATEGORIES,key)||/\bweapon\b/.test(key);sheetData.data.martial=Object.entries(combatProficiencies).sort((([keyA,valueA],[keyB,valueB])=>{var _a,_b;return isWeaponProficiency(keyA)&&!isWeaponProficiency(keyB)?-1:!isWeaponProficiency(keyA)&&isWeaponProficiency(keyB)?1:(null!==(_a=valueA.label)&&void 0!==_a?_a:"").localeCompare(null!==(_b=valueB.label)&&void 0!==_b?_b:"")})).reduce(((proficiencies,[key,proficiency])=>({...proficiencies,[key]:proficiency})),{}),sheetData.data.skills=Object.fromEntries(Object.entries(sheetData.data.skills).sort((([_keyA,skillA],[_keyB,skillB])=>{var _a,_b;return game.i18n.localize(null!==(_a=skillA.label)&&void 0!==_a?_a:"").localeCompare(game.i18n.localize(null!==(_b=skillB.label)&&void 0!==_b?_b:""),game.i18n.lang)})));const baseData=this.actor.toObject();sheetData.adjustedBonusEncumbranceBulk=this.actor.attributes.bonusEncumbranceBulk!==baseData.system.attributes.bonusEncumbranceBulk,sheetData.adjustedBonusLimitBulk=this.actor.attributes.bonusLimitBulk!==baseData.system.attributes.bonusLimitBulk,sheetData.tabVisibility=deepClone(this.actor.flags.pf2e.sheetTabs);const rollData=this.actor.getRollData(),{biography}=this.actor.system.details;return sheetData.enrichedContent.appearance=await TextEditor.enrichHTML(biography.appearance,{rollData,async:!0}),sheetData.enrichedContent.backstory=await TextEditor.enrichHTML(biography.backstory,{rollData,async:!0}),sheetData.enrichedContent.campaignNotes=await TextEditor.enrichHTML(biography.campaignNotes,{rollData,async:!0}),sheetData.enrichedContent.allies=await TextEditor.enrichHTML(biography.allies,{rollData,async:!0}),sheetData.enrichedContent.enemies=await TextEditor.enrichHTML(biography.enemies,{rollData,async:!0}),sheetData.enrichedContent.organaizations=await TextEditor.enrichHTML(biography.organaizations,{rollData,async:!0}),sheetData}async prepareItems(sheetData){var _a;const actorData=sheetData.actor,actions={action:{label:game.i18n.localize("PF2E.ActionsActionsHeader"),actions:[]},reaction:{label:game.i18n.localize("PF2E.ActionsReactionsHeader"),actions:[]},free:{label:game.i18n.localize("PF2E.ActionsFreeActionsHeader"),actions:[]}},lores=[];for(const itemData of sheetData.items){const item=this.actor.items.get(itemData._id,{strict:!0});if("feat"===itemData.type){const actionType=itemData.system.actionType.value||"passive";Object.keys(actions).includes(actionType)&&(itemData.feat=!0,itemData.img=_1.CharacterPF2e.getActionGraphics(actionType,parseInt((itemData.system.actions||{}).value,10)||1).imageUrl,actions[actionType].actions.push(itemData))}else if("lore"===itemData.type){itemData.system.icon=this.getProficiencyIcon((itemData.system.proficient||{}).value),itemData.system.hover=CONFIG.PF2E.proficiencyLevels[(itemData.system.proficient||{}).value];const rank=(null===(_a=itemData.system.proficient)||void 0===_a?void 0:_a.value)||0,proficiency=modifiers_1.ProficiencyModifier.fromLevelAndRank(actorData.system.details.level.value,rank).modifier,modifier=actorData.system.abilities.int.mod,itemBonus=Number((itemData.system.item||{}).value||0);itemData.system.itemBonus=itemBonus,itemData.system.value=modifier+proficiency+itemBonus,itemData.system.breakdown=`int modifier(${modifier}) + proficiency(${proficiency}) + item bonus(${itemBonus})`,lores.push(itemData)}else if(item.isOfType("action")){const actionType=["free","reaction","passive"].includes(item.system.actionType.value)?item.system.actionType.value:"action";itemData.img=_1.CharacterPF2e.getActionGraphics(actionType,Number(item.system.actions.value)||1).imageUrl,"passive"===actionType?actions.free.actions.push(itemData):actions[actionType].actions.push(itemData)}}for(const action of Object.values(actions).flatMap((section=>section.actions)))action.downtime=action.system.traits.value.includes("downtime"),action.exploration=action.system.traits.value.includes("exploration"),action.encounter=!(action.downtime||action.exploration);actorData.pfsBoons=this.actor.pfsBoons,actorData.deityBoonsCurses=this.actor.deityBoonsCurses,actorData.actions=actions,actorData.lores=lores}async prepareCraftingFormulas(){const craftingFormulas=await this.actor.getCraftingFormulas();return Object.fromEntries((0,_util_1.groupBy)(craftingFormulas,(formula=>formula.level)))}async prepareCraftingEntries(){const actorCraftingEntries=await this.actor.getCraftingEntries(),craftingEntries={dailyCrafting:!1,other:[],alchemical:{entries:[],totalReagentCost:0,infusedReagents:this.actor.system.resources.crafting.infusedReagents}};for(const entry of actorCraftingEntries)entry.isAlchemical?(craftingEntries.alchemical.entries.push(entry),craftingEntries.alchemical.totalReagentCost+=entry.reagentCost||0,craftingEntries.dailyCrafting=!0):(craftingEntries.other.push(entry),entry.isDailyPrep&&(craftingEntries.dailyCrafting=!0));return craftingEntries}prepareFeats(){const unorganized={id:"bonus",label:"PF2E.FeatBonusHeader",feats:this.actor.feats.unorganized};return[...this.actor.feats,unorganized]}disableInitiativeButton(){this.element.find(".sidebar a.roll-init").addClass("disabled").attr({title:game.i18n.localize("PF2E.Encounter.NoActiveEncounter")})}enableInitiativeButton(){this.element.find(".sidebar a.roll-init").removeClass("disabled").removeAttr("title")}activateListeners($html){var _a,_b,_c;super.activateListeners($html);const html=$html[0];game.combat?this.enableInitiativeButton():this.disableInitiativeButton(),$html.find(".roll-init").on("mouseenter",(event=>{const $target=$(event.currentTarget);$target.hasClass("disabled")&&game.combat?this.enableInitiativeButton():$target.hasClass("disabled")||game.combat||this.disableInitiativeButton()})),$html.find(".adjust-stat").on("click contextmenu",(event=>__classPrivateFieldGet(this,_CharacterSheetPF2e_instances,"m",_CharacterSheetPF2e_onClickAdjustStat).call(this,event))),$html.find(".adjust-stat-select").on("change",(event=>__classPrivateFieldGet(this,_CharacterSheetPF2e_instances,"m",_CharacterSheetPF2e_onChangeAdjustStat).call(this,event))),$html.find(".adjust-item-stat").on("click contextmenu",(event=>__classPrivateFieldGet(this,_CharacterSheetPF2e_instances,"m",_CharacterSheetPF2e_onClickAdjustItemStat).call(this,event))),$html.find(".adjust-item-stat-select").on("change",(event=>__classPrivateFieldGet(this,_CharacterSheetPF2e_instances,"m",_CharacterSheetPF2e_onChangeAdjustItemStat).call(this,event)));{const title=$(".sheet-navigation .active").attr("title");title&&$html.find(".navigation-title").text(title)}$html.find(".sheet-navigation").on("mouseover",".item,.manage-tabs",(event=>{const title=event.currentTarget.title;title&&$(event.currentTarget).parents(".sheet-navigation").find(".navigation-title").text(title)})),$html.find(".sheet-navigation").on("mouseout",".item,.manage-tabs",(event=>{const parent=$(event.currentTarget).parents(".sheet-navigation"),title=parent.find(".item.active").attr("title");title&&parent.find(".navigation-title").text(title)})),$html.find(".open-compendium").on("click",(event=>{if(event.currentTarget.dataset.compendium){const compendium=game.packs.get(event.currentTarget.dataset.compendium);compendium&&compendium.render(!0)}})),$html.find(".crb-tag-selector").on("click",(event=>this.onTraitSelector(event)));const $actions=$html.find(".tab.actions");$actions.find(".toggle-unready-strikes").on("click",(()=>{this.actor.setFlag("pf2e","showUnreadyStrikes",!this.actor.flags.pf2e.showUnreadyStrikes)}));const $strikesList=$actions.find(".strikes-list"),damageButtonSelectors=['button[data-action="strike-damage"]','button[data-action="strike-critical"]'].join(", "),$damageButtons=$strikesList.find(damageButtonSelectors);for(const damageButton of $damageButtons){const $button=$(damageButton),method="strike-damage"===$button.attr("data-action")?"damage":"critical",altUsage=(0,_util_1.tupleHasValue)(["thrown","melee"],damageButton.dataset.altUsage)?damageButton.dataset.altUsage:null,strike=this.getStrikeFromDOM($button[0]);null===(_a=null==strike?void 0:strike[method])||void 0===_a||_a.call(strike,{getFormula:!0,altUsage}).then((formula=>{formula&&($button.attr({title:formula}),$button.tooltipster({position:"bottom",theme:"crb-hover"}))}))}$strikesList.find(".item-summary .item-properties.tags .tag").each(((_idx,span)=>{span.dataset.description&&$(span).tooltipster({content:game.i18n.localize(span.dataset.description),maxWidth:400,theme:"crb-hover"})}));$strikesList.find("button[data-action=auxiliary-action]").on("click",(event=>{var _a,_b;const auxiliaryActionIndex=$(event.currentTarget).closest("[data-auxiliary-action-index]").attr("data-auxiliary-action-index"),strike=this.getStrikeFromDOM(event.currentTarget);null===(_b=null===(_a=null==strike?void 0:strike.auxiliaryActions)||void 0===_a?void 0:_a[Number(auxiliaryActionIndex)])||void 0===_b||_b.execute()})),$strikesList.find(".melee-icon").tooltipster({content:game.i18n.localize("PF2E.Item.Weapon.MeleeUsage.Label"),position:"left",theme:"crb-hover"}),$strikesList.find("select[name=ammo-used]").on("change",(event=>{var _a,_b,_c;event.stopPropagation();const actionIndex=$(event.currentTarget).parents(".item").attr("data-action-index"),action=this.actor.system.actions[Number(actionIndex)],weapon=this.actor.items.get(null!==(_b=null===(_a=action.item)||void 0===_a?void 0:_a.id)&&void 0!==_b?_b:""),ammo=this.actor.items.get($(event.currentTarget).val());weapon&&weapon.update({system:{selectedAmmoId:null!==(_c=null==ammo?void 0:ammo.id)&&void 0!==_c?_c:null}})})),$html.find(".add-modifier .fas.fa-plus-circle").on("click",(event=>__classPrivateFieldGet(this,_CharacterSheetPF2e_instances,"m",_CharacterSheetPF2e_onIncrementModifierValue).call(this,event))),$html.find(".add-modifier .fas.fa-minus-circle").on("click",(event=>__classPrivateFieldGet(this,_CharacterSheetPF2e_instances,"m",_CharacterSheetPF2e_onDecrementModifierValue).call(this,event))),$html.find(".add-modifier .add-modifier-submit").on("click",(event=>__classPrivateFieldGet(this,_CharacterSheetPF2e_instances,"m",_CharacterSheetPF2e_onAddCustomModifier).call(this,event))),$html.find(".modifier-list .remove-modifier").on("click",(event=>__classPrivateFieldGet(this,_CharacterSheetPF2e_instances,"m",_CharacterSheetPF2e_onRemoveCustomModifier).call(this,event))),$html.find(".item-toggle-invest").on("click",(event=>{var _a;const itemId=null!==(_a=$(event.currentTarget).parents(".item").attr("data-item-id"))&&void 0!==_a?_a:"";this.actor.toggleInvested(itemId)})),$html.find("i.fa-info-circle.small[title]").tooltipster({maxWidth:275,position:"right",theme:"crb-hover",contentAsHTML:!0});{const tab=html.querySelector(".tab.proficiencies"),header=null==tab?void 0:tab.querySelector("h3.attacks-defenses");null===(_b=null==header?void 0:header.querySelector("button[data-action=add-attack-proficiency]"))||void 0===_b||_b.addEventListener("click",(event=>{manage_attack_proficiencies_1.ManageAttackProficiencies.add(this.actor,event)}));const list=null!==(_c=null==tab?void 0:tab.querySelector("ol.combat-list"))&&void 0!==_c?_c:null,links=(0,_util_1.htmlQueryAll)(list,"li.custom a[data-action=remove-attack-proficiency]");for(const link of links)link.addEventListener("click",(event=>{manage_attack_proficiencies_1.ManageAttackProficiencies.remove(this.actor,event)}))}$html.find(".hover").tooltipster({trigger:"click",arrow:!1,contentAsHTML:!0,debug:!1,interactive:!0,side:["right","bottom"],theme:"crb-hover",minWidth:120}),$html.find("a[data-action=rest]").tooltipster({theme:"crb-hover"}).on("click",(event=>{(0,rest_for_the_night_1.restForTheNight)({event,actors:this.actor})})),$html.find("a[data-action=perception-check]").tooltipster({theme:"crb-hover"}),$html.find("button[data-action=edit-ability-scores]").on("click",(async()=>{await new ability_builder_1.AbilityBuilderPopup(this.actor).render(!0)}));$html.find(".tab.spellcasting").find(".focus-pool").on("click contextmenu",(event=>{var _a,_b;const change="click"===event.type?1:-1,points=(null!==(_b=null===(_a=this.actor.system.resources.focus)||void 0===_a?void 0:_a.value)&&void 0!==_b?_b:0)+change;this.actor.update({"system.resources.focus.value":points})}));const $craftingTab=$html.find(".tab.crafting"),$craftingOptions=$craftingTab.find(".crafting-options input:checkbox");$craftingOptions.on("click",(async event=>{const flags=[];$craftingOptions.each(((_index,element)=>{element!==event.target&&flags.push($(element).attr("flag"))})),flags.forEach((async flag=>{await this.actor.setFlag("pf2e",flag,!1)}))})),$craftingTab.find("a[data-action=quick-add]").on("click",(async event=>{const{itemUuid}=event.currentTarget.dataset,formula=(await this.actor.getCraftingFormulas()).find((f=>f.uuid===itemUuid));if(!formula)return;const entries=(await this.actor.getCraftingEntries()).filter((e=>!!e.selector&&e.checkEntryRequirements(formula,{warn:!1})));for(const entry of entries)await entry.prepareFormula(formula);0===entries.length&&ui.notifications.warn(game.i18n.localize("PF2E.CraftingTab.NoEligibleEntry"))}));const $formulas=$craftingTab.find(".craftingEntry-list");$formulas.find("a[data-action=craft-item]").on("click",(async event=>{var _a;const{itemUuid,free,prepared}=event.currentTarget.dataset,itemQuantity=Number($(event.currentTarget).parent().siblings(".formula-quantity").children("input").val())||1,formula=this.knownFormulas[null!=itemUuid?itemUuid:""];if(!formula)return;if("true"===prepared){if("true"===$(event.currentTarget).closest("li.formula-item").attr("data-expended-state"))return void ui.notifications.warn(game.i18n.localize("PF2E.CraftingTab.Alerts.FormulaExpended"));const index=$(event.currentTarget).closest("li.formula-item").attr("data-item-index"),entrySelector=$(event.currentTarget).closest("li.crafting-entry").attr("data-entry-selector");if(!itemUuid||!index||!entrySelector)return;const craftingEntry=await this.actor.getCraftingEntry(entrySelector);if(!craftingEntry)throw(0,_util_1.ErrorPF2e)("Crafting entry not found");await craftingEntry.toggleFormulaExpended(Number(index),itemUuid)}if(this.actor.flags.pf2e.quickAlchemy){const reagentValue=this.actor.system.resources.crafting.infusedReagents.value-itemQuantity;return reagentValue<0?void ui.notifications.warn(game.i18n.localize("PF2E.CraftingTab.Alerts.MissingReagents")):(await this.actor.update({"system.resources.crafting.infusedReagents.value":reagentValue}),(0,crafting_1.craftItem)(formula.item,itemQuantity,this.actor,!0))}if(this.actor.flags.pf2e.freeCrafting){const itemId=null!==(_a=null==itemUuid?void 0:itemUuid.split(".").pop())&&void 0!==_a?_a:"";return(0,_item_1.isSpellConsumable)(itemId)&&formula.item.isOfType("consumable")?(0,crafting_1.craftSpellConsumable)(formula.item,itemQuantity,this.actor):(0,crafting_1.craftItem)(formula.item,itemQuantity,this.actor)}const difficultyClass={value:formula.dc,visible:!0,adjustments:this.actor.system.skills.cra.adjustments,scope:"check"};(0,craft_1.craft)({difficultyClass,item:formula.item,quantity:itemQuantity,event,actors:this.actor,free:"true"===free})})),$formulas.find("[data-action=enter-quantity]").on("change",(async event=>{const $target=$(event.currentTarget),itemUUID=$target.closest("li.formula-item").attr("data-item-id"),entrySelector=$target.closest("li.crafting-entry").attr("data-entry-selector");if(entrySelector){const craftingEntry=await this.actor.getCraftingEntry(entrySelector);if(!craftingEntry)throw(0,_util_1.ErrorPF2e)("Crafting entry not found");const index=$target.closest("li.formula-item").attr("data-item-index");return void await craftingEntry.setFormulaQuantity(Number(index),null!=itemUUID?itemUUID:"",Number($target.val()))}const formula=this.knownFormulas[null!=itemUUID?itemUUID:""];if(!formula)throw(0,_util_1.ErrorPF2e)("Formula not found");this.formulaQuantities[formula.uuid]=Math.max(formula.minimumBatchSize,Number($target.val())),this.render(!0)})),$formulas.find("[data-action=increase-quantity], [data-action=decrease-quantity]").on("click",(async event=>{const $target=$(event.currentTarget),itemUUID=$target.closest("li.formula-item").attr("data-item-id"),entrySelector=$target.closest("li.crafting-entry").attr("data-entry-selector");if(entrySelector){const craftingEntry=await this.actor.getCraftingEntry(entrySelector);if(!craftingEntry)throw(0,_util_1.ErrorPF2e)("Crafting entry not found");const index=$target.closest("li.formula-item").attr("data-item-index");return void("increase-quantity"===$target.attr("data-action")?await craftingEntry.increaseFormulaQuantity(Number(index),null!=itemUUID?itemUUID:""):await craftingEntry.decreaseFormulaQuantity(Number(index),null!=itemUUID?itemUUID:""))}const formula=this.knownFormulas[null!=itemUUID?itemUUID:""];if(!formula)throw(0,_util_1.ErrorPF2e)("Formula not found");const minBatchSize=formula.minimumBatchSize,step="increase-quantity"===$target.attr("data-action")?minBatchSize:-minBatchSize,newValue=(Number($target.siblings("input").val())||step)+step;this.formulaQuantities[formula.uuid]=Math.max(newValue,minBatchSize),this.render()})),$formulas.find(".formula-unprepare").on("click",(async event=>{const $target=$(event.currentTarget),itemUUID=$target.closest("li.formula-item").attr("data-item-id"),index=$target.closest("li.formula-item").attr("data-item-index"),entrySelector=$target.closest("li.crafting-entry").attr("data-entry-selector");if(!itemUUID||!index||!entrySelector)return;const craftingEntry=await this.actor.getCraftingEntry(entrySelector);if(!craftingEntry)throw(0,_util_1.ErrorPF2e)("Crafting entry not found");await craftingEntry.unprepareFormula(Number(index),itemUUID)})),$formulas.find(".toggle-formula-expended").on("click",(async event=>{const $target=$(event.currentTarget),itemUUID=$target.closest("li.formula-item").attr("data-item-id"),index=$target.closest("li.formula-item").attr("data-item-index"),entrySelector=$target.closest("li.crafting-entry").attr("data-entry-selector");if(!itemUUID||!index||!entrySelector)return;const craftingEntry=await this.actor.getCraftingEntry(entrySelector);if(!craftingEntry)throw(0,_util_1.ErrorPF2e)("Crafting entry not found");await craftingEntry.toggleFormulaExpended(Number(index),itemUUID)})),$formulas.find(".toggle-signature-item").on("click",(async event=>{const $target=$(event.currentTarget),itemUUID=$target.closest("li.formula-item").attr("data-item-id"),entrySelector=$target.closest("li.crafting-entry").attr("data-entry-selector");if(!itemUUID||!entrySelector)return;const craftingEntry=await this.actor.getCraftingEntry(entrySelector);if(!craftingEntry)throw(0,_util_1.ErrorPF2e)("Crafting entry not found");await craftingEntry.toggleSignatureItem(itemUUID)})),$formulas.find(".infused-reagents").on("change",(event=>{var _a;const change=Number($(event.target).val()),infusedReagents=this.actor.system.resources.crafting.infusedReagents,value=Math.clamped(change,0,null!==(_a=null==infusedReagents?void 0:infusedReagents.max)&&void 0!==_a?_a:0);this.actor.update({"system.resources.crafting.infusedReagents.value":value})})),$formulas.find(".daily-crafting").on("click",(async()=>await this.actor.performDailyCrafting())),tab_manager_1.PCSheetTabManager.initialize(this.actor,$html.find("a[data-action=manage-tabs]")[0]);for(const link of html.querySelectorAll(".feat-browse").values())link.addEventListener("click",(event=>__classPrivateFieldGet(this,_CharacterSheetPF2e_instances,"m",_CharacterSheetPF2e_onClickBrowseFeats).call(this,event)))}async _onDropItem(event,data){var _a,_b,_c;const item=await _item_1.ItemPF2e.fromDropData(data);if(!item)throw(0,_util_1.ErrorPF2e)("Unable to create item from drop data!");const actor=this.actor,sourceActor=null==item?void 0:item.parent;if(sourceActor){if(sourceActor.id===actor.id||actor.isToken&&(null===(_a=null==sourceActor?void 0:sourceActor.token)||void 0===_a?void 0:_a.id)===(null===(_b=actor.token)||void 0===_b?void 0:_b.id))return super._onDropItem(event,data)}if(item.isOfType("feat")){const featSlot=null!==(_c=__classPrivateFieldGet(this,_CharacterSheetPF2e_instances,"m",_CharacterSheetPF2e_getNearestFeatSlotId).call(this,event))&&void 0!==_c?_c:{categoryId:""};return await this.actor.feats.insertFeat(item,featSlot)}return item.isOfType("ancestry","background","class")?_item_1.AncestryBackgroundClassManager.addABCItem(item,actor):super._onDropItem(event,data)}async _onDrop(event){var _a,_b;const dataString=null===(_a=event.dataTransfer)||void 0===_a?void 0:_a.getData("text/plain"),dropData=(()=>{try{return JSON.parse(null!=dataString?dataString:"")}catch(_a){return null}})();if(dropData){if(!(0,_util_1.isObject)(dropData.pf2e)||"CraftingFormula"!==dropData.pf2e.type)return super._onDrop(event);{const $containerEl=$(event.target).closest(".item-container");if("craftingEntry"===$containerEl.attr("data-container-type")){const entrySelector=null!==(_b=$containerEl.attr("data-entry-selector"))&&void 0!==_b?_b:"",craftingEntry=await this.actor.getCraftingEntry(entrySelector);if(!craftingEntry)return;const craftingFormulas=await this.actor.getCraftingFormulas(),uuid=dropData.pf2e.itemUuid,formula=craftingFormulas.find((f=>f.uuid===uuid));if(formula)return craftingEntry.prepareFormula(formula)}}}}async _onSortItem(event,itemData){var _a;const item=this.actor.items.get(itemData._id);if(null==item?void 0:item.isOfType("feat")){const featSlot=__classPrivateFieldGet(this,_CharacterSheetPF2e_instances,"m",_CharacterSheetPF2e_getNearestFeatSlotId).call(this,event);if(!featSlot)return[];const group=null!==(_a=this.actor.feats.get(featSlot.categoryId))&&void 0!==_a?_a:null,resorting=item.category===group&&!(null==group?void 0:group.slotted);if((null==group?void 0:group.slotted)&&!featSlot.slotId)return[];if(!resorting)return this.actor.feats.insertFeat(item,featSlot)}return super._onSortItem(event,itemData)}getHeroPointsIcon(level){var _a;const icons=['<i class="far fa-circle"></i><i class="far fa-circle"></i><i class="far fa-circle"></i>','<i class="fas fa-hospital-symbol"></i><i class="far fa-circle"></i><i class="far fa-circle"></i>','<i class="fas fa-hospital-symbol"></i><i class="fas fa-hospital-symbol"></i><i class="far fa-circle"></i>','<i class="fas fa-hospital-symbol"></i><i class="fas fa-hospital-symbol"></i><i class="fas fa-hospital-symbol"></i>'];return null!==(_a=icons[level])&&void 0!==_a?_a:icons[0]}}exports.CharacterSheetPF2e=CharacterSheetPF2e,_CharacterSheetPF2e_instances=new WeakSet,_CharacterSheetPF2e_onClickBrowseFeats=async function(event){var _a,_b;if(!(event.currentTarget instanceof HTMLElement))return;const maxLevel=Number(event.currentTarget.dataset.level)||this.actor.level,checkboxesFilterCodes=null!==(_b=null===(_a=event.currentTarget.dataset.filter)||void 0===_a?void 0:_a.split(",").filter((f=>!!f)))&&void 0!==_b?_b:[];checkboxesFilterCodes.includes("feattype-general")&&checkboxesFilterCodes.push("feattype-skill"),checkboxesFilterCodes.includes("feattype-class")&&checkboxesFilterCodes.push("feattype-archetype");const feattype=[],traits=[];for(const filterCode of checkboxesFilterCodes){const[filterType,value]=filterCode.split("-");if(!filterType||!value){const codesData=JSON.stringify(checkboxesFilterCodes);throw(0,_util_1.ErrorPF2e)(`Invalid filter value for opening the compendium browser:\n${codesData}`)}"feattype"===filterType?feattype.push(value):"traits"===filterType&&traits.push(value)}const filter={level:{max:maxLevel},feattype,traits};await game.pf2e.compendiumBrowser.openTab("feat",filter)},_CharacterSheetPF2e_onChangeAdjustStat=async function(event){var _a;const $select=$(event.delegateTarget),propertyKey=null!==(_a=$select.attr("data-property"))&&void 0!==_a?_a:"",currentValue=getProperty(this.actor,propertyKey),selectedValue=Number($select.val());if("number"!=typeof currentValue)throw(0,_util_1.ErrorPF2e)("Actor property not found");const newValue=Math.clamped(selectedValue,0,4);await this.actor.update({[propertyKey]:newValue}),newValue!==getProperty(this.actor,propertyKey)&&ui.notifications.warn(game.i18n.localize("PF2E.ErrorMessage.MinimumProfLevelSetByFeatures"))},_CharacterSheetPF2e_onClickAdjustStat=async function(event){var _a;const propertyKey=null!==(_a=$(event.delegateTarget).attr("data-property"))&&void 0!==_a?_a:"",currentValue=getProperty(this.actor,propertyKey);if("number"!=typeof currentValue)throw(0,_util_1.ErrorPF2e)("Actor property not found");const change="click"===event.type?1:-1,max=propertyKey.includes("heroPoints")?3:4,update=currentValue+change,newValue=Math.clamped(update,0,max);await this.actor.update({[propertyKey]:newValue})},_CharacterSheetPF2e_onChangeAdjustItemStat=async function(event){var _a,_b;const $select=$(event.delegateTarget),propertyKey=null!==(_a=$select.attr("data-item-property"))&&void 0!==_a?_a:"",selectedValue=Number($select.val()),itemId=null!==(_b=$select.closest(".item").attr("data-item-id"))&&void 0!==_b?_b:"",item=this.actor.items.get(itemId);if(!item)throw(0,_util_1.ErrorPF2e)("Item not found");const newValue=(()=>{var _a;if(item.isOfType("spellcastingEntry")){const dispatch={"system.proficiency.value":()=>Math.clamped(selectedValue,0,4)};return null===(_a=dispatch[propertyKey])||void 0===_a?void 0:_a.call(dispatch)}if(item.isOfType("lore"))return Math.clamped(selectedValue,0,4);throw(0,_util_1.ErrorPF2e)("Item not recognized")})();"number"==typeof newValue&&await item.update({[propertyKey]:newValue}),newValue!==getProperty(item,propertyKey)&&ui.notifications.warn(game.i18n.localize("PF2E.ErrorMessage.MinimumProfLevelSetByFeatures"))},_CharacterSheetPF2e_onClickAdjustItemStat=async function(event){var _a,_b;const $button=$(event.delegateTarget),itemId=null!==(_a=$button.closest(".item").attr("data-item-id"))&&void 0!==_a?_a:"",item=this.actor.items.get(itemId);if(!item)throw(0,_util_1.ErrorPF2e)("Item not found");const propertyKey=null!==(_b=$button.attr("data-item-property"))&&void 0!==_b?_b:"",change="click"===event.type?1:-1,newValue=(()=>{var _a;if(item.isOfType("spellcastingEntry")){const proficiencyRank=item.system.proficiency.value,dispatch={"system.proficiency.value":()=>Math.clamped(proficiencyRank+change,0,4)};return null===(_a=dispatch[propertyKey])||void 0===_a?void 0:_a.call(dispatch)}if(item.isOfType("lore")){const currentRank=item.system.proficient.value;return Math.clamped(currentRank+change,0,4)}throw(0,_util_1.ErrorPF2e)("Item not recognized")})();"number"==typeof newValue&&await item.update({[propertyKey]:newValue})},_CharacterSheetPF2e_onIncrementModifierValue=function(event){$(event.currentTarget).parents(".add-modifier").find(".add-modifier-value input[type=number]")[0].stepUp()},_CharacterSheetPF2e_onDecrementModifierValue=function(event){$(event.currentTarget).parents(".add-modifier").find(".add-modifier-value input[type=number]")[0].stepDown()},_CharacterSheetPF2e_onAddCustomModifier=function(event){var _a,_b,_c,_d,_e;const parent=$(event.currentTarget).parents(".add-modifier"),stat=null!==(_a=$(event.currentTarget).attr("data-stat"))&&void 0!==_a?_a:"",modifier=Number(parent.find(".add-modifier-value input[type=number]").val())||1,type=null!==(_c=null===(_b=parent.find(".add-modifier-type")[0])||void 0===_b?void 0:_b.value)&&void 0!==_c?_c:"",name=(null!==(_e=null===(_d=parent.find(".add-modifier-name")[0])||void 0===_d?void 0:_d.value)&&void 0!==_e?_e:"").trim()||game.i18n.localize(`PF2E.ModifierType.${type}`),errors=[];if(!stat.trim())throw(0,_util_1.ErrorPF2e)("No character attribute found");Object.values(modifiers_1.MODIFIER_TYPE).includes(type)||errors.push("Type is required."),errors.length>0?ui.notifications.error(errors.join(" ")):this.actor.addCustomModifier(stat,name,modifier,type)},_CharacterSheetPF2e_onRemoveCustomModifier=function(event){var _a,_b;const stat=null!==(_a=$(event.currentTarget).attr("data-stat"))&&void 0!==_a?_a:"",slug=null!==(_b=$(event.currentTarget).attr("data-slug"))&&void 0!==_b?_b:"",errors=[];stat.trim()||errors.push("Statistic is required."),slug.trim()||errors.push("Slug is required."),errors.length>0?ui.notifications.error(errors.join(" ")):this.actor.removeCustomModifier(stat,slug)},_CharacterSheetPF2e_getNearestFeatSlotId=function(event){var _a,_b,_c,_d;const categoryId=null===(_b=null===(_a=event.target)||void 0===_a?void 0:_a.closest("[data-category-id]"))||void 0===_b?void 0:_b.dataset.categoryId,slotId=null===(_d=null===(_c=event.target)||void 0===_c?void 0:_c.closest("[data-slot-id]"))||void 0===_d?void 0:_d.dataset.slotId;return"string"==typeof categoryId?{slotId,categoryId}:null}},16135:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.PCSheetTabManager=void 0;exports.PCSheetTabManager=class PCSheetTabManager{constructor(actor,link){this.actor=actor,this.link=link,renderTemplate("systems/pf2e/templates/actors/character/manage-tabs.html").then((template=>{$(this.link).tooltipster({content:template,contentAsHTML:!0,delay:250,interactive:!0,theme:"crb-hover",title:game.i18n.localize("PF2E.TabManageTabsLabel"),trigger:"custom",triggerOpen:{click:!0},triggerClose:{originClick:!0,mouseleave:!0},functionReady:(_origin,helper)=>this.onReady(helper.tooltip),functionAfter:()=>this.onClose()})}))}static initialize(actor,link){new this(actor,link)}onReady(tooltip){var _a,_b;const tabVisibility=this.actor.flags.pf2e.sheetTabs,nav=this.link.closest("nav"),tabs=null!==(_a=null==nav?void 0:nav.querySelectorAll("a.item[data-tab]"))&&void 0!==_a?_a:[];for(const tab of Array.from(tabs)){const tabName=null!==(_b=tab.dataset.tab)&&void 0!==_b?_b:"",selector=`input[data-tab-name="${tabName}"]`;tooltip.querySelector(selector).checked=tabVisibility[tabName],tab.classList.contains("hidden")&&(tab.classList.remove("hidden"),tab.classList.add("to-hide"))}const checkboxes=Array.from(tooltip.querySelectorAll('input[type="checkbox"]'));for(const checkbox of checkboxes)this.handleOnChange(checkbox,checkboxes)}handleOnChange(checkbox,checkboxes){checkbox.addEventListener("change",(async()=>{var _a;const nav=this.link.closest("nav"),tabName=null!==(_a=null==checkbox?void 0:checkbox.dataset.tabName)&&void 0!==_a?_a:"",tab=null==nav?void 0:nav.querySelector(`a.item[data-tab="${tabName}"]`);for(const c of checkboxes)c.readOnly=!0;checkbox.checked?(null==tab||tab.classList.remove("to-hide"),await this.actor.update({[`flags.pf2e.sheetTabs.-=${tabName}`]:null},{render:!1})):(null==tab||tab.classList.add("to-hide"),await this.actor.update({[`flags.pf2e.sheetTabs.${tabName}`]:!1},{render:!1}));for(const c of checkboxes)c.readOnly=!1}))}onClose(){var _a,_b;const tabs=Array.from(null!==(_b=null===(_a=this.link.closest("nav"))||void 0===_a?void 0:_a.querySelectorAll("a.item[data-tab]"))&&void 0!==_b?_b:[]);for(const tab of tabs)tab.classList.contains("to-hide")&&(tab.classList.remove("to-hide"),tab.classList.add("hidden"))}}},85846:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.CHARACTER_SHEET_TABS=void 0;exports.CHARACTER_SHEET_TABS=["character","actions","inventory","spellcasting","crafting","proficiencies","feats","effects","biography","pfs"]},81245:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.CreatureConfig=void 0;const values_1=__webpack_require__(49976),helpers_1=__webpack_require__(69554),_util_1=__webpack_require__(6945);class CreatureConfig extends DocumentSheet{get title(){const namespace=this.actor.isOfType("character")?"Character":"NPC";return game.i18n.localize(`PF2E.Actor.${namespace}.Configure.Title`)}get template(){return`systems/pf2e/templates/actors/${this.actor.type}/config.html`}get actor(){return this.object}static get defaultOptions(){const options=super.defaultOptions;return options.width=450,options}async getData(options={}){var _a,_b,_c;const source=this.actor._source,alliance=null===(null===(_a=source.system.details)||void 0===_a?void 0:_a.alliance)?"neutral":null!==(_c=null===(_b=source.system.details)||void 0===_b?void 0:_b.alliance)&&void 0!==_c?_c:"default",defaultValue=game.i18n.localize(this.actor.hasPlayerOwner?"PF2E.Actor.Creature.Alliance.Party":"PF2E.Actor.Creature.Alliance.Opposition"),allianceOptions={default:game.i18n.format("PF2E.Actor.Creature.Alliance.Default",{alliance:defaultValue}),opposition:"PF2E.Actor.Creature.Alliance.Opposition",party:"PF2E.Actor.Creature.Alliance.Party",neutral:"PF2E.Actor.Creature.Alliance.Neutral"};return{...await super.getData(options),alliances:(0,helpers_1.createSheetOptions)(allianceOptions,{value:[alliance]})}}async _updateObject(event,formData){const key="system.details.alliance",alliance=formData[key];if("default"===alliance)delete formData[key],formData["system.details.-=alliance"]=null;else if("neutral"===alliance)formData[key]=null;else if(!(0,_util_1.setHasElement)(values_1.ALLIANCES,alliance))throw(0,_util_1.ErrorPF2e)("Unrecognized alliance");return super._updateObject(event,formData)}}exports.CreatureConfig=CreatureConfig},73204:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.VisionLevels=exports.SkillAbbreviation=void 0;const types_1=__webpack_require__(49685);var VisionLevels;Object.defineProperty(exports,"SkillAbbreviation",{enumerable:!0,get:function(){return types_1.SkillAbbreviation}}),function(VisionLevels){VisionLevels[VisionLevels.BLINDED=0]="BLINDED",VisionLevels[VisionLevels.NORMAL=1]="NORMAL",VisionLevels[VisionLevels.LOWLIGHT=2]="LOWLIGHT",VisionLevels[VisionLevels.DARKVISION=3]="DARKVISION"}(VisionLevels||(VisionLevels={})),exports.VisionLevels=VisionLevels},30653:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.CreaturePF2e=void 0;const _actor_1=__webpack_require__(85530),helpers_1=__webpack_require__(89503),modifiers_1=__webpack_require__(92823),values_1=__webpack_require__(8382),_item_1=__webpack_require__(10843),helpers_2=__webpack_require__(23247),usage_1=__webpack_require__(65441),data_1=__webpack_require__(52769),notes_1=__webpack_require__(46379),util_1=__webpack_require__(58903),data_2=__webpack_require__(54096),check_1=__webpack_require__(11848),localize_1=__webpack_require__(41332),predication_1=__webpack_require__(538),statistic_1=__webpack_require__(77486),_util_1=__webpack_require__(6945),data_3=__webpack_require__(73204),sense_1=__webpack_require__(82280),values_2=__webpack_require__(49976);class CreaturePF2e extends _actor_1.ActorPF2e{get skills(){return Object.entries(this.system.skills).reduce(((current,[shortForm,skill])=>{var _a;if(!(0,_util_1.objectHasKey)(this.system.skills,shortForm))return current;const longForm=skill.slug,skillName=game.i18n.localize(null!==(_a=skill.label)&&void 0!==_a?_a:CONFIG.PF2E.skills[shortForm])||skill.slug,domains=["all","skill-check",longForm,`${skill.ability}-based`,`${skill.ability}-skill-check`];return current[longForm]=new statistic_1.Statistic(this,{slug:longForm,label:skillName,lore:!!skill.lore,proficient:skill.visible,domains,check:{type:"skill-check"},modifiers:[...skill.modifiers]}),shortForm!==longForm&&Object.defineProperty(current,shortForm,{get:()=>(console.warn(`Short-form skill abbreviations such as actor.skills.${shortForm} are deprecated.`,`Use actor.skills.${longForm} instead.`),current[longForm])}),current}),{})}get alignment(){return this.system.details.alignment.value}get rarity(){return this.system.traits.rarity}getReach({action="interact",weapon=null}={}){var _a;const baseReach=this.attributes.reach.general;if("interact"===action||"familiar"===this.type)return baseReach;{const traitsFromWeapons=(weapon?[{item:weapon,ready:!0}]:null!==(_a=this.system.actions)&&void 0!==_a?_a:[]).filter((a=>a.ready)).map((a=>a.item.traits));if(0===traitsFromWeapons.length)return baseReach;const reaches=traitsFromWeapons.map((traits=>{var _a;if(traits.has("reach"))return baseReach+5;const reachNPattern=/^reach-\d{1,3}$/;return Number(null===(_a=[...traits].find((t=>reachNPattern.test(t))))||void 0===_a?void 0:_a.replace("reach-",""))||baseReach}));return Math.max(...reaches)}}get visionLevel(){const senses=this.system.traits.senses;if(!Array.isArray(senses))return data_3.VisionLevels.NORMAL;const senseTypes=new Set(senses.map((sense=>sense.type)));return this.getCondition("blinded")?data_3.VisionLevels.BLINDED:senseTypes.has("darkvision")||senseTypes.has("greaterDarkvision")?data_3.VisionLevels.DARKVISION:senseTypes.has("lowLightVision")?data_3.VisionLevels.LOWLIGHT:data_3.VisionLevels.NORMAL}get hasDarkvision(){return this.visionLevel===data_3.VisionLevels.DARKVISION&&!this.hasCondition("blinded")}get hasLowLightVision(){return this.visionLevel>=data_3.VisionLevels.LOWLIGHT&&!this.hasCondition("blinded")}get canSee(){if(!canvas.scene)return!0;if(this.visionLevel===data_3.VisionLevels.BLINDED)return!1;return canvas.scene.lightLevel>data_2.LightLevels.DARKNESS||this.hasDarkvision}get canAct(){const traits=this.system.traits.value;return(!this.isDead||traits.some((t=>"eidolon"===t)))&&!this.hasCondition("paralyzed","stunned","unconscious")}get canAttack(){return"familiar"!==this.type&&this.canAct}get isDead(){var _a;const{hitPoints}=this;if(hitPoints.max>0&&0===hitPoints.value&&!this.hasCondition("dying","unconscious"))return!0;const token=null!==(_a=this.token)&&void 0!==_a?_a:this.getActiveTokens(!1,!0).shift();return!!(null==token?void 0:token.hasStatusEffect("dead"))}get emitsSound(){return this.system.attributes.emitsSound}get isSpellcaster(){const{itemTypes}=this;return itemTypes.spellcastingEntry.length>0&&itemTypes.spell.length>0}get perception(){const stat=this.system.attributes.perception;return statistic_1.Statistic.from(this,stat,"perception","PF2E.PerceptionCheck","perception-check")}get wornArmor(){var _a;return null!==(_a=this.itemTypes.armor.find((armor=>armor.isEquipped&&armor.isArmor)))&&void 0!==_a?_a:null}get heldShield(){const heldShields=this.itemTypes.armor.filter((armor=>armor.isEquipped&&armor.isShield));return 0===heldShields.length?null:heldShields.slice(0,-1).reduce(((bestShield,shield)=>{var _a,_b;if(bestShield===shield)return bestShield;const withBetterAC=bestShield.acBonus>shield.acBonus?bestShield:shield.acBonus>bestShield.acBonus?shield:null,withMoreHP=bestShield.hitPoints.value>shield.hitPoints.value?bestShield:shield.hitPoints.value>bestShield.hitPoints.value?shield:null,withBetterHardness=bestShield.hardness>shield.hardness?bestShield:shield.hardness>bestShield.hardness?shield:null;return null!==(_b=null!==(_a=null!=withBetterAC?withBetterAC:withMoreHP)&&void 0!==_a?_a:withBetterHardness)&&void 0!==_b?_b:bestShield}),heldShields.slice(-1)[0])}isFlatFooted({dueTo}){if(!game.ready)return!1;if("flanking"===dueTo){const{flanking}=this.attributes;if(!flanking.flankable)return!1;const rollOptions=this.getRollOptions();return"number"==typeof flanking.flatFootable&&(flanking.flatFootable=!predication_1.PredicatePF2e.test([{lte:["origin:level",flanking.flatFootable]}],rollOptions)),flanking.flatFootable&&predication_1.PredicatePF2e.test(["origin:flanking"],rollOptions)}return!1}prepareBaseData(){var _a,_b,_c,_d;super.prepareBaseData();const attributes=this.system.attributes;attributes.hp=mergeObject(null!==(_a=attributes.hp)&&void 0!==_a?_a:{},{negativeHealing:!1}),null!==(_b=attributes.hardness)&&void 0!==_b||(attributes.hardness={value:0}),attributes.flanking.canFlank=!0,attributes.flanking.flankable=!0,attributes.flanking.flatFootable=!0,attributes.reach={general:0,manipulate:0},"initiative"in attributes&&(attributes.initiative.tiebreakPriority=this.hasPlayerOwner?2:1);const customModifiers=null!==(_c=(_d=this.system).customModifiers)&&void 0!==_c?_c:_d.customModifiers={};for(const selector of Object.keys(customModifiers))customModifiers[selector]=customModifiers[selector].map((rawModifier=>new modifiers_1.ModifierPF2e(rawModifier)));this.isOfType("character","npc")&&(this.system.attributes.shield={itemId:null,name:game.i18n.localize("PF2E.ArmorTypeShield"),ac:0,hp:{value:0,max:0},brokenThreshold:0,hardness:0,raised:!1,broken:!1,destroyed:!1,icon:"systems/pf2e/icons/actions/raise-a-shield.webp"}),this.system.toggles=[],attributes.doomed={value:0,max:3},attributes.dying={value:0,max:4,recoveryDC:10},attributes.wounded={value:0,max:3}}prepareEmbeddedDocuments(){var _a;super.prepareEmbeddedDocuments();for(const rule of this.rules)null===(_a=rule.onApplyActiveEffects)||void 0===_a||_a.call(rule);for(const changeEntries of Object.values(this.system.autoChanges))changeEntries.sort(((a,b)=>Number(a.level)>Number(b.level)?1:-1));this.rollOptions.all[`self:mode:${this.modeOfBeing}`]=!0}prepareDerivedData(){var _a,_b;super.prepareDerivedData();const{attributes}=this,reachFromSize=values_2.SIZE_TO_REACH[this.size];attributes.reach.general=Math.max(attributes.reach.general,reachFromSize),attributes.reach.manipulate=Math.max(attributes.reach.manipulate,attributes.reach.general,reachFromSize);const alignmentTraits=(()=>{const{alignment}=this;return[["LG","NG","CG"].includes(alignment)?"good":[],["LE","NE","CE"].includes(alignment)?"evil":[],["LG","LN","LE"].includes(alignment)?"lawful":[],["CG","CN","CE"].includes(alignment)?"chaotic":[]].flat()})(),{rollOptions}=this;for(const trait of alignmentTraits)this.system.traits.value.push(trait),rollOptions.all[`self:trait:${trait}`]=!0;this.isSpellcaster&&(rollOptions.all["self:caster"]=!0),this.hitPoints.negativeHealing&&(rollOptions.all["self:negative-healing"]=!0),rollOptions.all["self:armored"]=!!this.wornArmor&&"unarmored"!==this.wornArmor.category,this.system.attributes.emitsSound=!this.isDead,this.prepareSynthetics();const sizeIndex=data_1.SIZES.indexOf(this.size),sizeSlug=data_1.SIZE_SLUGS[sizeIndex];if(rollOptions.all[`self:size:${sizeIndex}`]=!0,rollOptions.all[`self:size:${sizeSlug}`]=!0,this.isFlatFooted({dueTo:"flanking"})){const name=game.i18n.localize("PF2E.Item.Condition.Flanked"),condition=game.pf2e.ConditionManager.getCondition("flat-footed",{name}),rule=new _item_1.ConditionPF2e(condition.toObject(),{parent:this}).prepareRuleElements().shift();if(!rule)throw(0,_util_1.ErrorPF2e)("Unexpected error retrieving condition");null===(_a=rule.beforePrepareData)||void 0===_a||_a.call(rule),this.rollOptions.all["self:condition:flat-footed"]=!0,this.rollOptions.all["self:flatFooted"]=!0}attributes.wounded.max=Math.max(0,attributes.dying.max-1),attributes.doomed.max=attributes.dying.max;for(const conditionName of["doomed","wounded","dying"]){const condition=this.itemTypes.condition.find((condition=>condition.slug===conditionName)),status=attributes[conditionName];"dying"===conditionName&&(status.max-=attributes.doomed.value),status.value=Math.min(null!==(_b=null==condition?void 0:condition.value)&&void 0!==_b?_b:0,status.max)}}prepareInitiative(){var _a,_b,_c,_d;if(!this.isOfType("character","npc"))return;const systemData=this.system,checkType=systemData.attributes.initiative.ability||"perception",[ability,initStat,proficiency,proficiencyLabel]="perception"===checkType?["wis",systemData.attributes.perception,"perception","PF2E.PerceptionLabel"]:[null!==(_b=null===(_a=systemData.skills[checkType])||void 0===_a?void 0:_a.ability)&&void 0!==_b?_b:"int",systemData.skills[checkType],values_1.SKILL_DICTIONARY[checkType],CONFIG.PF2E.skills[checkType]],{rollNotes}=this.synthetics,domains=["all","initiative",`${ability}-based`,proficiency],rollOptions=this.getRollOptions(domains),modifiers=(0,util_1.extractModifiers)(this.synthetics,domains,{test:[proficiency,...rollOptions]}),notes=null!==(_d=null===(_c=rollNotes.initiative)||void 0===_c?void 0:_c.map((n=>n.clone())))&&void 0!==_d?_d:[],label=game.i18n.format("PF2E.InitiativeWithSkill",{skillName:game.i18n.localize(proficiencyLabel)}),stat=mergeObject(new modifiers_1.CheckModifier("initiative",initStat,modifiers,rollOptions),{ability:checkType,label,tiebreakPriority:systemData.attributes.initiative.tiebreakPriority,roll:async args=>{var _a,_b,_c,_d;if(!("initiative"in this.system.attributes))return null;const rollOptions=new Set([...this.getRollOptions(domains),...null!==(_a=args.options)&&void 0!==_a?_a:[],proficiency]);if(this.isOfType("character")){const rank="perception"===checkType?this.system.attributes.perception.rank:this.system.skills[checkType].rank;(0,modifiers_1.ensureProficiencyOption)(rollOptions,rank)}const combatant=await(async()=>{var _a;if(!game.combat)return ui.notifications.error(game.i18n.localize("PF2E.Encounter.NoActiveEncounter")),null;const token=this.getActiveTokens().pop(),existing=game.combat.combatants.find((combatant=>combatant.actor===this));return existing||(token?(await token.toggleCombat(game.combat),null!==(_a=token.combatant)&&void 0!==_a?_a:null):(ui.notifications.error(game.i18n.format("PF2E.Encounter.NoTokenInScene",{actor:this.name})),null))})();if(!combatant)return null;const rollTwice=(0,util_1.extractRollTwice)(this.synthetics.rollTwice,domains,rollOptions),substitutions=(0,util_1.extractRollSubstitutions)(this.synthetics.rollSubstitutions,domains,rollOptions),context={actor:this,type:"initiative",options:rollOptions,notes,dc:args.dc,rollTwice,skipDialog:args.skipDialog,rollMode:args.rollMode,substitutions};combatant.hidden&&(context.rollMode=CONST.DICE_ROLL_MODES.PRIVATE);const roll=await check_1.CheckPF2e.roll(new modifiers_1.CheckModifier(label,systemData.attributes.initiative,args.modifiers),context,args.event);if(!roll)return null;for(const rule of this.rules.filter((r=>!r.ignored)))await(null===(_b=rule.afterRoll)||void 0===_b?void 0:_b.call(rule,{roll,selectors:domains,domains,rollOptions}));return(null===(_c=args.updateTracker)||void 0===_c||_c)&&(null===(_d=game.combat)||void 0===_d||_d.setInitiative(combatant.id,roll.total)),{combatant,roll}}});systemData.attributes.initiative=stat}prepareSynthetics(){var _a;super.prepareSynthetics();const{customModifiers}=this.system,{statisticsModifiers}=this.synthetics;for(const[selector,modifiers]of Object.entries(customModifiers)){(null!==(_a=statisticsModifiers[selector])&&void 0!==_a?_a:statisticsModifiers[selector]=[]).push(...modifiers.map((m=>()=>m)))}}getShieldBonus(){if(!this.isOfType("character","npc"))return null;const shieldData=this.system.attributes.shield;if(shieldData.raised&&!shieldData.broken){const slug="raised-shield";return this.rollOptions.all["self:shield:raised"]=!0,new modifiers_1.ModifierPF2e({label:shieldData.name,slug,adjustments:(0,util_1.extractModifierAdjustments)(this.synthetics.modifierAdjustments,["all","dex-based","ac"],slug),type:modifiers_1.MODIFIER_TYPE.CIRCUMSTANCE,modifier:shieldData.ac})}return null}async adjustCarryType(item,carryType,handsHeld=0,inSlot=!1){const{usage}=item.system;if("stowed"===carryType){const container=item.actor.itemTypes.backpack.find((c=>c!==item.container&&!(0,helpers_2.isCycle)(item,c)));container&&await item.actor.stowOrUnstow(item,container)}else{const equipped={carryType,handsHeld:"held"===carryType?handsHeld:0,inSlot:"worn"===usage.type&&usage.where?inSlot:void 0},updates=[];if((0,usage_1.isEquipped)(usage,equipped)&&item instanceof _item_1.ArmorPF2e&&item.isArmor){const wornArmors=this.itemTypes.armor.filter((a=>a!==item&&a.isEquipped&&a.isArmor));for(const armor of wornArmors)updates.push({_id:armor.id,system:{equipped:{inSlot:!1}}})}updates.push({_id:item.id,system:{containerId:null,equipped}}),await this.updateEmbeddedDocuments("Item",updates)}}async addCustomModifier(stat,label,value,type,predicate=[],damageType,damageCategory){var _a,_b;if(!this.isOfType("character","npc"))return;if(0===stat.length)throw(0,_util_1.ErrorPF2e)("A custom modifier's statistic must be a non-empty string");if(0===label.length)throw(0,_util_1.ErrorPF2e)("A custom modifier's label must be a non-empty string");const modifiers=null!==(_b=(null!==(_a=this.toObject().system.customModifiers)&&void 0!==_a?_a:{})[stat])&&void 0!==_b?_b:[];if(!modifiers.some((m=>m.label===label))){const modifierType=(0,_util_1.setHasElement)(modifiers_1.MODIFIER_TYPES,type)?type:"untyped",modifier=new modifiers_1.ModifierPF2e({label,modifier:value,type:modifierType,predicate,custom:!0}).toObject();damageType&&(modifier.damageType=damageType),damageCategory&&(modifier.damageCategory=damageCategory),await this.update({[`system.customModifiers.${stat}`]:[...modifiers,modifier]})}}async removeCustomModifier(stat,slug){var _a,_b;if(0===stat.length)throw(0,_util_1.ErrorPF2e)("A custom modifier's statistic must be a non-empty string");const modifiers=null!==(_b=(null!==(_a=this.toObject().system.customModifiers)&&void 0!==_a?_a:{})[stat])&&void 0!==_b?_b:[];if(0!==modifiers.length){if("string"!=typeof slug)throw(0,_util_1.ErrorPF2e)("Custom modifiers can only be removed by slug (string) or index (number)");{const withRemoved=modifiers.filter((m=>m.slug!==slug));await this.update({[`system.customModifiers.${stat}`]:withRemoved})}}}async rollRecovery(event){const{dying}=this.attributes;if(!(null==dying?void 0:dying.value))return null;const translations=localize_1.LocalizePF2e.translations.PF2E,{Recovery}=translations,recoveryDC=dying.recoveryDC,dc={label:game.i18n.format(translations.Recovery.rollingDescription,{dying:dying.value,dc:"{dc}"}),value:recoveryDC+dying.value,visible:!0},notes=[new notes_1.RollNotePF2e({selector:"all",text:game.i18n.localize(Recovery.critSuccess),outcome:["criticalSuccess"]}),new notes_1.RollNotePF2e({selector:"all",text:game.i18n.localize(Recovery.success),outcome:["success"]}),new notes_1.RollNotePF2e({selector:"all",text:game.i18n.localize(Recovery.failure),outcome:["failure"]}),new notes_1.RollNotePF2e({selector:"all",text:game.i18n.localize(Recovery.critFailure),outcome:["criticalFailure"]})],modifier=new modifiers_1.StatisticModifier(game.i18n.localize(translations.Check.Specific.Recovery),[]),token=this.getActiveTokens(!1,!0).shift();return check_1.CheckPF2e.roll(modifier,{actor:this,token,dc,notes},event)}prepareSenses(data,synthetics){const preparedSenses=data.map((datum=>new sense_1.CreatureSensePF2e(datum)));for(const{sense,predicate,force}of synthetics.senses){if(predicate&&!predicate.test(this.getRollOptions(["all","sense"])))continue;const existing=preparedSenses.find((oldSense=>oldSense.type===sense.type));existing?force?preparedSenses.findSplice((oldSense=>oldSense===existing),sense):(sense.isMoreAcuteThan(existing)&&(existing.acuity=sense.acuity),sense.hasLongerRangeThan(existing)&&(existing.value=sense.value)):preparedSenses.push(sense)}return preparedSenses}prepareSpeed(movementType){var _a,_b,_c;const systemData=this.system,selectors=["speed","all-speeds",`${movementType}-speed`],rollOptions=this.getRollOptions(selectors);if("land"===movementType){const landSpeed=systemData.attributes.speed;landSpeed.value=Number(landSpeed.value)||0;const fromSynthetics=(null!==(_a=this.synthetics.movementTypes[movementType])&&void 0!==_a?_a:[]).map((d=>{var _a;return null!==(_a=d())&&void 0!==_a?_a:[]})).flat();landSpeed.value=[landSpeed.value,...fromSynthetics.map((s=>s.value))].sort().pop();const base=landSpeed.value,modifiers=(0,util_1.extractModifiers)(this.synthetics,selectors),stat=mergeObject(new modifiers_1.StatisticModifier(`${movementType}-speed`,modifiers,rollOptions),landSpeed,{overwrite:!1}),typeLabel=game.i18n.localize("PF2E.SpeedTypesLand"),otherData={type:"land",label:game.i18n.format("PF2E.SpeedLabel",{type:typeLabel}),total:base+stat.totalModifier,breakdown:[`${game.i18n.format("PF2E.SpeedBaseLabel",{type:typeLabel})} ${landSpeed.value}`,...stat.modifiers.filter((m=>m.enabled)).map((m=>`${m.label} ${m.modifier<0?"":"+"}${m.modifier}`))].join(", ")};return mergeObject(stat,otherData)}{const speeds=systemData.attributes.speed,{otherSpeeds}=speeds,existing=null!==(_b=otherSpeeds.find((s=>s.type===movementType)))&&void 0!==_b?_b:[],fromSynthetics=(null!==(_c=this.synthetics.movementTypes[movementType])&&void 0!==_c?_c:[]).map((d=>{var _a;return null!==(_a=d())&&void 0!==_a?_a:[]})).flat(),fastest=[existing,fromSynthetics].flat().reduce(((best,speed)=>best?(null==speed?void 0:speed.value)>best.value?speed:best:speed),null);if(!fastest)return null;const label=game.i18n.format("PF2E.SpeedLabel",{type:game.i18n.localize(CONFIG.PF2E.speedTypes[movementType])}),speed={type:movementType,label,value:fastest.value};fastest.source&&(speed.source=fastest.source);const base=speed.value,modifiers=(0,util_1.extractModifiers)(this.synthetics,selectors),stat=mergeObject(new modifiers_1.StatisticModifier(`${movementType}-speed`,modifiers,rollOptions),speed,{overwrite:!1});return stat.total=base+stat.totalModifier,stat.breakdown=[`${game.i18n.format("PF2E.SpeedBaseLabel",{type:speed.label})} ${base}`].concat(stat.modifiers.filter((m=>m.enabled)).map((m=>`${m.label} ${m.modifier<0?"":"+"}${m.modifier}`))).join(", "),stat}}getAttackRollContext(params){var _a,_b,_c;const context=this.getStrikeRollContext(params),targetActor=null===(_a=context.target)||void 0===_a?void 0:_a.actor,rangeIncrement=null!==(_c=null===(_b=context.target)||void 0===_b?void 0:_b.rangeIncrement)&&void 0!==_c?_c:null,rangePenalty=(0,helpers_1.calculateRangePenalty)(this,rangeIncrement,params.domains,context.options);return rangePenalty&&context.self.modifiers.push(rangePenalty),{...context,dc:(null==targetActor?void 0:targetActor.attributes.ac)?{scope:"attack",slug:"ac",value:targetActor.attributes.ac.value}:null}}getDamageRollContext(params){return this.getStrikeRollContext(params)}getStrikeRollContext(params){var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l,_m;const targetToken=null!==(_a=Array.from(game.user.targets).find((t=>{var _a;return null===(_a=t.actor)||void 0===_a?void 0:_a.isOfType("creature")})))&&void 0!==_a?_a:null,selfToken=null!==(_c=null!==(_b=canvas.tokens.controlled.find((t=>t.actor===this)))&&void 0!==_b?_b:this.getActiveTokens().shift())&&void 0!==_c?_c:null,reach=params.item.isOfType("melee")?params.item.reach:params.item.isOfType("weapon")?this.getReach({action:"attack",weapon:params.item}):null,selfOptions=this.getRollOptions(null!==(_d=params.domains)&&void 0!==_d?_d:[]);targetToken&&"number"==typeof reach&&(null==selfToken?void 0:selfToken.isFlanking(targetToken,{reach}))&&selfOptions.push("self:flanking");const selfActor=params.viewOnly?this:this.getContextualClone(selfOptions),actions=null!==(_f=null===(_e=selfActor.system.actions)||void 0===_e?void 0:_e.flatMap((a=>{var _a;return[a,null!==(_a=a.altUsages)&&void 0!==_a?_a:[]].flat()})))&&void 0!==_f?_f:[],selfItem=params.viewOnly||params.item.isOfType("spell")?params.item:null!==(_g=actions.map((a=>a.item)).find((weapon=>params.item.id===weapon.id&&weapon.name===params.item.name&&(!(!params.item.isOfType("melee")||!weapon.isOfType("melee"))||params.item.isOfType("weapon")&&weapon.isOfType("weapon")&&params.item.isMelee===weapon.isMelee))))&&void 0!==_g?_g:params.item,traitSlugs=["attack",selfItem.isOfType("weapon")&&"alchemical-bomb"===selfItem.baseType?"manipulate":[]].flat();for(const adjustment of this.synthetics.strikeAdjustments)selfItem.isOfType("weapon","melee")&&(null===(_h=adjustment.adjustTraits)||void 0===_h||_h.call(adjustment,selfItem,traitSlugs));const traits=traitSlugs.map((t=>(0,_util_1.traitSlugToObject)(t,CONFIG.PF2E.actionTraits))),targetActor=params.viewOnly?null:null!==(_k=null===(_j=null==targetToken?void 0:targetToken.actor)||void 0===_j?void 0:_j.getContextualClone([...selfActor.getSelfRollOptions("origin")]))&&void 0!==_k?_k:null,targetOptions=null!==(_l=null==targetActor?void 0:targetActor.getSelfRollOptions("target"))&&void 0!==_l?_l:[];if(targetToken&&targetOptions.length>0){const mark=this.synthetics.targetMarks.get(targetToken.document.uuid);mark&&targetOptions.push(`target:mark:${mark}`)}const rollOptions=new Set([...params.options,...selfOptions,...targetOptions,...selfItem.getRollOptions("item"),"attack"]),distance=selfToken&&targetToken&&canvas.grid?selfToken.distanceTo(targetToken):null;rollOptions.add(`target:distance:${distance}`);const rangeIncrement=(0,helpers_1.getRangeIncrement)(selfItem,distance);rangeIncrement&&rollOptions.add(`target:range-increment:${rangeIncrement}`);return{options:rollOptions,self:{actor:selfActor,token:null!==(_m=null==selfToken?void 0:selfToken.document)&&void 0!==_m?_m:null,item:selfItem,modifiers:[]},target:targetActor&&targetToken&&null!==distance?{actor:targetActor,token:targetToken.document,distance,rangeIncrement}:null,traits}}async _preUpdate(changed,options,user){var _a,_b,_c,_d,_e,_f,_g,_h;const hitPoints=null===(_b=null===(_a=changed.system)||void 0===_a?void 0:_a.attributes)||void 0===_b?void 0:_b.hp;"number"==typeof(null==hitPoints?void 0:hitPoints.value)&&(hitPoints.value=options.allowHPOverage?Math.max(0,hitPoints.value):Math.clamped(hitPoints.value,0,this.hitPoints.max));const focusUpdate=null===(_d=null===(_c=changed.system)||void 0===_c?void 0:_c.resources)||void 0===_d?void 0:_d.focus;if(focusUpdate&&this.system.resources){"number"==typeof focusUpdate.max&&(focusUpdate.max=Math.clamped(focusUpdate.max,0,3));const updatedPoints=Number(null!==(_e=focusUpdate.value)&&void 0!==_e?_e:null===(_f=this.system.resources.focus)||void 0===_f?void 0:_f.value)||0,enforcedMax=null!==(_h=Number(focusUpdate.max)||(null===(_g=this.system.resources.focus)||void 0===_g?void 0:_g.max))&&void 0!==_h?_h:0;focusUpdate.value=Math.clamped(updatedPoints,0,enforcedMax),this.isToken&&(options.diff=!1)}await super._preUpdate(changed,options,user)}}exports.CreaturePF2e=CreaturePF2e},82280:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.SENSE_TYPES=exports.SENSE_ACUITIES=exports.CreatureSensePF2e=void 0;exports.CreatureSensePF2e=class CreatureSensePF2e{constructor(data){var _a,_b;this.type=data.type,this.acuity=null!==(_a=data.acuity)&&void 0!==_a?_a:"precise",this.value=null!==(_b=data.value)&&void 0!==_b?_b:"",this.source=data.source||void 0}get range(){return Number(this.value)||1/0}get label(){const buildLabel=(type,acuity,range)=>{var _a;const senses=CONFIG.PF2E.senses,sense=game.i18n.localize(null!==(_a=senses[type])&&void 0!==_a?_a:"")||type,acuityLabel=acuity?game.i18n.localize(CONFIG.PF2E.senseAcuity[acuity]):null;return acuity&&range?game.i18n.format("PF2E.Actor.Creature.Sense.WithAcuityAndRange",{sense,acuity:acuityLabel,range}):acuity?game.i18n.format("PF2E.Actor.Creature.Sense.WithAcuity",{sense,acuity:acuityLabel}):sense},range=this.range<1/0?this.range:void 0;switch(this.type){case"darkvision":case"greaterDarkvision":case"lowLightVision":case"seeInvisibility":return buildLabel(this.type);case"scent":return"vague"===this.acuity?null:buildLabel(this.type,this.acuity,range);default:return buildLabel(this.type,this.acuity,range)}}isMoreAcuteThan(sense){var _a;return"precise"===this.acuity&&["imprecise","vague"].includes(null!==(_a=sense.acuity)&&void 0!==_a?_a:"precise")||"imprecise"===this.acuity&&"vague"===sense.acuity}hasLongerRangeThan(sense){return this.range>Number(sense.value)}},exports.SENSE_ACUITIES=["precise","imprecise","vague"],exports.SENSE_TYPES=new Set(["darkvision","echolocation","greaterDarkvision","lifesense","lowLightVision","motionsense","scent","seeInvisibility","spiritsense","tremorsense","wavesense"])},83936:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.CreatureSheetPF2e=void 0;const item_summary_renderer_1=__webpack_require__(26910),spellcasting_dialog_1=__webpack_require__(93198),values_1=__webpack_require__(8382),_item_1=__webpack_require__(10843),values_2=__webpack_require__(67189),data_1=__webpack_require__(52769),helpers_1=__webpack_require__(69554),sheet_util_1=__webpack_require__(15806),_util_1=__webpack_require__(6945),base_1=__webpack_require__(11291),spell_preparation_sheet_1=__webpack_require__(75198);class CreatureSheetPF2e extends base_1.ActorSheetPF2e{constructor(){super(...arguments),this.itemRenderer=new item_summary_renderer_1.CreatureSheetItemRenderer(this)}async getData(options){var _a,_b;const sheetData=await super.getData(options),{actor}=this;if(sheetData.data.saves)for(const key of["fortitude","reflex","will"]){const save=sheetData.data.saves[key];save.icon=this.getProficiencyIcon(save.rank),save.hover=CONFIG.PF2E.proficiencyLevels[save.rank],save.label=CONFIG.PF2E.saves[key]}if(void 0!==sheetData.data.attributes&&(sheetData.data.attributes.perception.icon=this.getProficiencyIcon(sheetData.data.attributes.perception.rank),sheetData.data.attributes.perception.hover=CONFIG.PF2E.proficiencyLevels[sheetData.data.attributes.perception.rank]),sheetData.data.abilities)for(const key of values_1.ABILITY_ABBREVIATIONS)sheetData.data.abilities[key].label=CONFIG.PF2E.abilities[key];if(sheetData.data.skills){const skills=sheetData.data.skills;for(const[key,skill]of Object.entries(skills)){const label=(0,_util_1.objectHasKey)(CONFIG.PF2E.skills,key)?CONFIG.PF2E.skills[key]:null;skill.icon=this.getProficiencyIcon(skill.rank),skill.hover=CONFIG.PF2E.proficiencyLevels[skill.rank],skill.label=null!==(_b=null!==(_a=skill.label)&&void 0!==_a?_a:label)&&void 0!==_b?_b:""}}const enrich=async(content,rollData)=>TextEditor.enrichHTML(content,{rollData,async:!0}),actorRollData=this.actor.getRollData(),conditions=game.pf2e.ConditionManager.getFlattenedConditions(actor.itemTypes.condition);for(const condition of conditions){const item=this.actor.items.get(condition.id);if(item){const rollData={...item.getRollData(),...actorRollData};if(condition.enrichedDescription=await enrich(condition.description,rollData),condition.parents.length)for(const parent of condition.parents)parent.enrichedText=await enrich(parent.text,rollData);if(condition.children.length)for(const child of condition.children)child.enrichedText=await enrich(child.text,rollData);if(condition.overrides.length)for(const override of condition.overrides)override.enrichedText=await enrich(override.text,rollData);if(condition.overriddenBy.length)for(const overridenBy of condition.overriddenBy)overridenBy.enrichedText=await enrich(overridenBy.text,rollData)}}return{...sheetData,languages:(0,helpers_1.createSheetTags)(CONFIG.PF2E.languages,actor.system.traits.languages),abilities:CONFIG.PF2E.abilities,skills:CONFIG.PF2E.skills,actorSizes:CONFIG.PF2E.actorSizes,alignments:deepClone(CONFIG.PF2E.alignments),rarity:CONFIG.PF2E.rarityTraits,frequencies:CONFIG.PF2E.frequencies,attitude:CONFIG.PF2E.attitude,pfsFactions:CONFIG.PF2E.pfsFactions,conditions,dying:{maxed:actor.attributes.dying.value>=actor.attributes.dying.max,remainingDying:Math.max(actor.attributes.dying.max-actor.attributes.dying.value),remainingWounded:Math.max(actor.attributes.wounded.max-actor.attributes.wounded.value)}}}openSpellPreparationSheet(entryId){var _a;const entry=this.actor.items.get(entryId);if((null==entry?void 0:entry.isOfType("spellcastingEntry"))&&entry.isPrepared){const offset=null!==(_a=this.element.find(`.item-container[data-container-id="${entry.id}"] .prepared-toggle`).offset())&&void 0!==_a?_a:{left:0,top:0};new spell_preparation_sheet_1.SpellPreparationSheet(entry,{top:offset.top-60,left:offset.left+200}).render(!0)}}async prepareSpellcasting(){return(await Promise.all(this.actor.spellcasting.map((async entry=>{const data=entry.toObject(!1),spellData=await entry.getSpellData();return mergeObject(data,spellData)})))).sort(((a,b)=>a.sort-b.sort))}getProficiencyIcon(level){return[...Array(level)].map((()=>(0,_util_1.fontAwesomeIcon)("check-circle").outerHTML)).join("")}async _render(force,options){var _a,_b;const focused=document.activeElement,contained=null===(_a=this.element.get(0))||void 0===_a?void 0:_a.contains(focused);if(await super._render(force,options),focused instanceof HTMLInputElement&&focused.name&&contained){const selector=`input[data-property="${focused.name}"]:not([name])`,sameInput=null===(_b=this.element.get(0))||void 0===_b?void 0:_b.querySelector(selector);null==sameInput||sameInput.focus(),null==sameInput||sameInput.select()}}activateListeners($html){var _a,_b,_c,_d,_e;super.activateListeners($html);const html=$html[0];$html.find("input[data-property]").on("focus",(event=>{var _a;const $input=$(event.target),propertyPath=null!==(_a=$input.attr("data-property"))&&void 0!==_a?_a:"",baseValue=Number(getProperty(this.actor._source,propertyPath));$input.val(baseValue).attr({name:propertyPath})})),$html.find("input[data-property]").on("blur",(event=>{var _a;const $input=$(event.target);$input.removeAttr("name").removeAttr("style").attr({type:"text"});const propertyPath=null!==(_a=$input.attr("data-property"))&&void 0!==_a?_a:"",preparedValue=Number(getProperty(this.actor,propertyPath));$input.val(preparedValue>=0&&$input.hasClass("modifier")?`+${preparedValue}`:preparedValue)})),$html.find(".tab.inventory a[data-carry-type]").on("click",(event=>{var _a,_b,_c;$html.find(".carry-type-hover").tooltipster("close");const itemId=null!==(_a=$(event.currentTarget).closest("[data-item-id]").attr("data-item-id"))&&void 0!==_a?_a:"",item=this.actor.items.get(itemId,{strict:!0});if(!(item instanceof _item_1.PhysicalItemPF2e))throw(0,_util_1.ErrorPF2e)("Tried to update carry type of non-physical item");const carryType=null!==(_b=$(event.currentTarget).attr("data-carry-type"))&&void 0!==_b?_b:"",handsHeld=null!==(_c=Number($(event.currentTarget).attr("data-hands-held")))&&void 0!==_c?_c:1,inSlot="true"===$(event.currentTarget).attr("data-in-slot");carryType&&(0,_util_1.setHasElement)(values_2.ITEM_CARRY_TYPES,carryType)&&this.actor.adjustCarryType(item,carryType,handsHeld,inSlot)}));$html.find("input[data-item-id][data-item-property], select[data-item-id][data-item-property]").on("change",(event=>{const $target=$(event.target),{itemId,itemProperty}=event.target.dataset;if(!itemId||!itemProperty)return;const value=(()=>{var _a,_b;const value=$(event.target).val();if(null==value)return value;switch(null!==(_a=$target.attr("data-dtype"))&&void 0!==_a?_a:"checkbox"===$target.attr("type")?"Boolean":["number","range"].includes(null!==(_b=$target.attr("type"))&&void 0!==_b?_b:"")?"Number":"String"){case"Boolean":return"boolean"==typeof value?value:"true"===value;case"Number":return Number(value);case"String":return String(value);default:return value}})();this.actor.updateEmbeddedDocuments("Item",[{_id:itemId,[itemProperty]:value}])})),$html.find(".dots.dying, .dots.wounded").on("click contextmenu",(event=>{var _a;const condition=Array.from(event.delegateTarget.classList).find((className=>["dying","wounded"].includes(className)));if(condition){const currentMax=null===(_a=this.actor.system.attributes[condition])||void 0===_a?void 0:_a.max;"click"===event.type&&currentMax?this.actor.increaseCondition(condition,{max:currentMax}):"contextmenu"===event.type&&this.actor.decreaseCondition(condition)}})),$html.find("[data-action=recovery-check]").tooltipster({theme:"crb-hover"}).filter(":not(.disabled)").on("click",(event=>{this.actor.rollRecovery(event)})),$html.find(".skill-name.rollable, .skill-score.rollable").on("click",(event=>{var _a,_b,_c;const skill=null!==(_b=null===(_a=event.currentTarget.closest("[data-skill]"))||void 0===_a?void 0:_a.dataset.skill)&&void 0!==_b?_b:"",key=(0,_util_1.objectHasKey)(values_1.SKILL_DICTIONARY,skill)?values_1.SKILL_DICTIONARY[skill]:skill,rollParams=(0,sheet_util_1.eventToRollParams)(event);null===(_c=this.actor.skills[key])||void 0===_c||_c.check.roll(rollParams)}));const $strikesList=$html.find("ol.strikes-list");$strikesList.find("button[data-action=strike-damage]").on("click",(async event=>{var _a,_b;if(!this.actor.isOfType("character","npc"))throw(0,_util_1.ErrorPF2e)("This sheet only works for characters and NPCs");await(null===(_b=null===(_a=this.getStrikeFromDOM(event.currentTarget))||void 0===_a?void 0:_a.damage)||void 0===_b?void 0:_b.call(_a,{event}))})),$strikesList.find("button[data-action=strike-critical]").on("click",(async event=>{var _a,_b;if(!this.actor.isOfType("character","npc"))throw(0,_util_1.ErrorPF2e)("This sheet only works for characters and NPCs");await(null===(_b=null===(_a=this.getStrikeFromDOM(event.currentTarget))||void 0===_a?void 0:_a.critical)||void 0===_b?void 0:_b.call(_a,{event}))}));for(const section of null!==(_a=(0,_util_1.htmlQueryAll)(html,".tab.spellcasting, .tab.spells"))&&void 0!==_a?_a:[]){for(const element of null!==(_b=(0,_util_1.htmlQueryAll)(section,"[data-action=spellcasting-create]"))&&void 0!==_b?_b:[])element.addEventListener("click",(event=>{(0,spellcasting_dialog_1.createSpellcastingDialog)(event,this.actor)}));for(const element of null!==(_c=(0,_util_1.htmlQueryAll)(section,"[data-action=spellcasting-edit]"))&&void 0!==_c?_c:[])element.addEventListener("click",(event=>{var _a;const containerId=null===(_a=(0,_util_1.htmlClosest)(event.target,"[data-item-id]"))||void 0===_a?void 0:_a.dataset.itemId,entry=this.actor.spellcasting.get(containerId,{strict:!0});(0,spellcasting_dialog_1.createSpellcastingDialog)(event,entry)}));for(const element of null!==(_d=(0,_util_1.htmlQueryAll)(section,"[data-action=spellcasting-remove]"))&&void 0!==_d?_d:[])element.addEventListener("click",(event=>{var _a;const itemId=null===(_a=(0,_util_1.htmlClosest)(event.currentTarget,"[data-item-id]"))||void 0===_a?void 0:_a.dataset.itemId,item=this.actor.items.get(itemId,{strict:!0});renderTemplate("systems/pf2e/templates/actors/delete-spellcasting-dialog.html").then((html=>{new Dialog({title:"Delete Confirmation",content:html,buttons:{Yes:{icon:'<i class="fa fa-check"></i>',label:"Yes",callback:async()=>{console.debug("PF2e System | Deleting Spell Container: ",item.name);const itemsToDelete=[];for(const item of this.actor.itemTypes.spell)item.system.location.value===itemId&&itemsToDelete.push(item.id);itemsToDelete.push(item.id),await this.actor.deleteEmbeddedDocuments("Item",itemsToDelete)}},cancel:{icon:'<i class="fas fa-times"></i>',label:"Cancel"}},default:"Yes"}).render(!0)}))}))}$html.find(".spell-attack").on("click",(async event=>{if(!this.actor.isOfType("character"))throw(0,_util_1.ErrorPF2e)("This sheet only works for characters");const index=$(event.currentTarget).closest("[data-container-id]").data("containerId"),entry=this.actor.spellcasting.get(index);entry&&await entry.statistic.check.roll((0,sheet_util_1.eventToRollParams)(event))})),$html.find(".prepared-toggle").on("click",(async event=>{var _a;event.preventDefault();const itemId=null!==(_a=$(event.currentTarget).parents(".item-container").attr("data-container-id"))&&void 0!==_a?_a:"";this.openSpellPreparationSheet(itemId)})),$html.find(".slotless-level-toggle").on("click",(async event=>{var _a;event.preventDefault();const itemId=null!==(_a=$(event.currentTarget).parents(".item-container").attr("data-container-id"))&&void 0!==_a?_a:"",itemToEdit=this.actor.items.get(itemId);if(!(null==itemToEdit?void 0:itemToEdit.isOfType("spellcastingEntry")))throw new Error("Tried to toggle visibility of slotless levels on a non-spellcasting entry");const bool=!(itemToEdit.system.showSlotlessLevels||{}).value;await this.actor.updateEmbeddedDocuments("Item",[{_id:null!=itemId?itemId:"","system.showSlotlessLevels.value":bool}])})),$html.find("button[data-action=cast-spell]").on("click",(event=>{const $spellEl=$(event.currentTarget).closest(".item"),{itemId,slotLevel,slotId,entryId}=$spellEl.data(),collection=this.actor.spellcasting.collections.get(entryId,{strict:!0}),spell=collection.get(itemId,{strict:!0});collection.entry.cast(spell,{slot:slotId,level:slotLevel})})),$html.find(".spell-slots-increment-reset").on("click",(event=>{var _a;const target=$(event.currentTarget),itemId=target.data().itemId,itemLevel=target.data().level,item=this.actor.items.get(itemId);if(null==item?void 0:item.isOfType("spellcastingEntry")){const{system}=item.toObject();if(!system.slots)return;const slotLevel=(0,data_1.goesToEleven)(itemLevel)?`slot${itemLevel}`:"slot0";system.slots[slotLevel].value=system.slots[slotLevel].max,item.update({system})}else if(null==item?void 0:item.isOfType("spell")){const max=null===(_a=item.system.location.uses)||void 0===_a?void 0:_a.max;if(!max)return;item.update({"system.location.uses.value":max})}}));$strikesList.find('.item-image[data-action="strike-attack"], button[data-action="strike-attack"]').on("click",(event=>{var _a;if(!("actions"in this.actor.system))throw(0,_util_1.ErrorPF2e)("Strikes are not supported on this actor");const target=event.currentTarget,altUsage=(0,_util_1.tupleHasValue)(["thrown","melee"],target.dataset.altUsage)?target.dataset.altUsage:null,strike=this.getStrikeFromDOM(event.currentTarget);if(!strike)return;const $button=$(event.currentTarget),variantIndex=Number($button.attr("data-variant-index"));null===(_a=strike.variants[variantIndex])||void 0===_a||_a.roll({event,altUsage})})),$html.find(".focus-pool").on("change",(event=>{this.actor.update({"system.resources.focus.max":$(event.target).val()})})),$html.find(".toggle-signature-spell").on("click",(event=>{this.onToggleSignatureSpell(event)})),$html.find(".action-browse").on("click",(()=>game.pf2e.compendiumBrowser.openTab("action"))),$html.find(".spell-browse").on("click",(event=>this.onClickBrowseSpellCompendia(event))),$html.find(".effects-list .decrement").on("click",(async event=>{var _a;const parent=$(event.currentTarget).parents(".item"),effect=this.actor.items.get(null!==(_a=parent.attr("data-item-id"))&&void 0!==_a?_a:"");effect instanceof _item_1.AbstractEffectPF2e&&await effect.decrease()})),$html.find(".effects-list .increment").on("click",(async event=>{var _a,_b;const parent=$(event.currentTarget).parents(".item"),effect=null===(_a=this.actor)||void 0===_a?void 0:_a.items.get(null!==(_b=parent.attr("data-item-id"))&&void 0!==_b?_b:"");effect instanceof _item_1.AbstractEffectPF2e&&await effect.increase()}));for(const element of null!==(_e=(0,_util_1.htmlQueryAll)(html,".effects-list [data-action=effect-toggle-unidentified]"))&&void 0!==_e?_e:[])element.addEventListener("click",(async event=>{var _a;const effectId=null===(_a=(0,_util_1.htmlClosest)(event.currentTarget,"[data-item-id]"))||void 0===_a?void 0:_a.dataset.itemId,effect=this.actor.items.get(effectId,{strict:!0});if(effect instanceof _item_1.AbstractEffectPF2e){const isUnidentified=effect.unidentified;await effect.update({"system.unidentified":!isUnidentified})}}))}async _onSortItem(event,itemSource){var _a,_b,_c;const $dropItemEl=$(event.target).closest(".item"),$dropContainerEl=$(event.target).closest(".item-container"),dropSlotType=$dropItemEl.attr("data-item-type"),dropContainerType=$dropContainerEl.attr("data-container-type"),item=this.actor.items.get(itemSource._id);if(!item)return[];if(item.isOfType("spell")){const targetLocation=null!==(_a=$dropContainerEl.attr("data-container-id"))&&void 0!==_a?_a:"",collection=this.actor.spellcasting.collections.get(targetLocation,{strict:!0});if("spellLevel"===dropSlotType){const{level}=$dropItemEl.data(),spell=await collection.addSpell(item,{slotLevel:Number(level)});return this.openSpellPreparationSheet(collection.id),[null!=spell?spell:[]].flat()}if($dropItemEl.attr("data-slot-id")){const dropId=Number($dropItemEl.attr("data-slot-id")),slotLevel=Number($dropItemEl.attr("data-slot-level"));if(Number.isInteger(dropId)&&Number.isInteger(slotLevel)){const allocated=await collection.prepareSpell(item,slotLevel,dropId);if(allocated)return[allocated]}}else if("spell"===dropSlotType){const dropId=null!==(_b=$dropItemEl.attr("data-item-id"))&&void 0!==_b?_b:"",target=this.actor.items.get(dropId);if((null==target?void 0:target.isOfType("spell"))&&item.id!==dropId){const sourceLocation=item.system.location.value,testSibling=(item,test)=>item.isCantrip===test.isCantrip&&(!(!item.isCantrip||!test.isCantrip)||(!(!item.isFocusSpell||!test.isFocusSpell)||item.level===test.level));if(sourceLocation===targetLocation&&testSibling(item,target)){const siblings=collection.filter((spell=>testSibling(item,spell)));return await item.sortRelative({target,siblings}),[target]}{const spell=await collection.addSpell(item,{slotLevel:target.level});return this.openSpellPreparationSheet(collection.id),[null!=spell?spell:[]].flat()}}}else if("spellcastingEntry"===dropContainerType){CONFIG.debug.hooks&&console.debug("PF2e System | ***** spell from same actor dropped on a spellcasting entry *****");const dropId=$(event.target).parents(".item-container").attr("data-container-id");return dropId?[await item.update({"system.location.value":dropId})]:[]}}else if(item.isOfType("spellcastingEntry")&&"spellcastingEntry"===dropContainerType){const sourceId=item.id,dropId=null!==(_c=$dropContainerEl.attr("data-container-id"))&&void 0!==_c?_c:"",source=this.actor.items.get(sourceId),target=this.actor.items.get(dropId);if(source&&target&&source.id!==target.id){const siblings=this.actor.spellcasting.contents;return source.sortRelative({target,siblings}),[target]}}return super._onSortItem(event,itemSource)}async _handleDroppedItem(event,item,data){var _a,_b,_c;const containerEl=(0,_util_1.htmlClosest)(event.target,".item-container");if(item.isOfType("spell")&&"spellcastingEntry"===(null==containerEl?void 0:containerEl.dataset.containerType)){const entryId=containerEl.dataset.containerId,collection=this.actor.spellcasting.collections.get(entryId,{strict:!0}),slotLevel=Number(null!==(_b=null===(_a=(0,_util_1.htmlClosest)(event.target,"[data-slot-level]"))||void 0===_a?void 0:_a.dataset.slotLevel)&&void 0!==_b?_b:0);return this.openSpellPreparationSheet(collection.id),[null!==(_c=await collection.addSpell(item,{slotLevel:Math.max(slotLevel,item.baseLevel)}))&&void 0!==_c?_c:[]].flat()}return super._handleDroppedItem(event,item,data)}_getHeaderButtons(){const buttons=super._getHeaderButtons();if(!this.actor.isOfType("character","npc"))return buttons;if(this.isEditable){const index=buttons.findIndex((b=>"close"===b.class));buttons.splice(index,0,{label:"Configure",class:"configure-creature",icon:"fas fa-cog",onclick:()=>this.onConfigureActor()})}return buttons}onConfigureActor(){this.actorConfigClass&&new this.actorConfigClass(this.actor).render(!0)}getStrikeFromDOM(target){var _a,_b,_c,_d;const actionIndex=Number(null===(_a=target.closest("[data-action-index]"))||void 0===_a?void 0:_a.dataset.actionIndex),rootAction=null===(_b=this.actor.system.actions)||void 0===_b?void 0:_b[actionIndex];if(!rootAction)return null;const altUsage=(0,_util_1.tupleHasValue)(["thrown","melee"],target.dataset.altUsage)?target.dataset.altUsage:null;return altUsage?null!==(_d=null===(_c=rootAction.altUsages)||void 0===_c?void 0:_c.find((s=>"thrown"===altUsage?s.item.isThrown:s.item.isMelee)))&&void 0!==_d?_d:null:rootAction}onToggleSignatureSpell(event){const{itemId}=event.target.closest(".item").dataset,spell=this.actor.items.get(itemId);spell instanceof _item_1.SpellPF2e&&spell.update({"system.location.signature":!spell.system.location.signature})}onClickBrowseSpellCompendia(event){var _a,_b;const level=null!==(_a=Number($(event.currentTarget).attr("data-level")))&&void 0!==_a?_a:null,spellcastingIndex=null!==(_b=$(event.currentTarget).closest("[data-container-id]").attr("data-container-id"))&&void 0!==_b?_b:"",entry=this.actor.spellcasting.get(spellcastingIndex);entry instanceof _item_1.SpellcastingEntryPF2e&&game.pf2e.compendiumBrowser.openSpellTab(entry,level)}async _onSubmit(event,options={}){if(!(event.currentTarget instanceof HTMLInputElement))return super._onSubmit(event,options);const target=event.currentTarget;if("system.attributes.hp.value"===target.name){const inputted=Number(target.value)||0;target.value=Math.floor(Math.clamped(inputted,0,this.actor.hitPoints.max)).toString()}return super._onSubmit(event,options)}async _updateObject(event,formData){const heldShield=this.actor.heldShield;return heldShield&&"number"==typeof formData["system.attributes.shield.hp.value"]&&await heldShield.update({"system.hp.value":formData["system.attributes.shield.hp.value"]}),delete formData["system.attributes.shield.hp.value"],super._updateObject(event,formData)}}exports.CreatureSheetPF2e=CreatureSheetPF2e},75198:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.SpellPreparationSheet=void 0;const item_summary_renderer_1=__webpack_require__(26910),_item_1=__webpack_require__(10843);class SpellPreparationSheet extends ActorSheet{constructor(item,options){super(item.actor,options),this.item=item,this.itemRenderer=new item_summary_renderer_1.ItemSummaryRenderer(this)}static get defaultOptions(){const options=super.defaultOptions;return options.classes=["default","sheet","spellcasting-entry","preparation"],options.width=480,options.height=600,options.template="systems/pf2e/templates/actors/spellcasting-prep-sheet.html",options.scrollY=[".sheet-content"],options}get id(){return`${super.id}-spellprep-${this.item.id}`}get title(){return game.i18n.format("PF2E.Actor.Creature.SpellPreparation.Title",{actor:this.actor.name})}_getHeaderButtons(){return[{label:"Close",class:"close",icon:"fas fa-times",onclick:()=>this.close()}]}async getData(){return{...await super.getData(),owner:this.actor.isOwner,entry:await this.item.getSpellData()}}activateListeners($html){super.activateListeners($html),this.itemRenderer.activateListeners($html),$html.find(".item-edit").on("click",(event=>{const item=this.getItemFromEvent(event);item&&item.sheet.render(!0)})),$html.find(".item-delete").on("click",(event=>{var _a;null===(_a=this.getItemFromEvent(event))||void 0===_a||_a.delete()})),$html.find(".item[data-item-id] .item-image").on("click",(event=>{var _a;null===(_a=this.getItemFromEvent(event))||void 0===_a||_a.toChat(event)})),$html.find(".toggle-signature-spell").on("click",(event=>{const item=this.getItemFromEvent(event);item instanceof _item_1.SpellPF2e&&item.update({"system.location.signature":!item.system.location.signature})})),$html.find(".spell-create").on("click",(event=>{var _a;const data=duplicate(event.currentTarget.dataset),level=Number(null!==(_a=data.level)&&void 0!==_a?_a:1),newLabel=game.i18n.localize("PF2E.NewLabel"),levelLabel=game.i18n.localize(`PF2E.SpellLevel${level}`),spellLabel=level>0?game.i18n.localize("PF2E.SpellLabel"):"";data.name=`${newLabel} ${levelLabel} ${spellLabel}`,mergeObject(data,{"system.level.value":level,"system.location.value":this.item.id}),this.actor.createEmbeddedDocuments("Item",[data])})),$html.find(".spell-browse").on("click",(event=>{var _a;const level=null!==(_a=Number($(event.currentTarget).attr("data-level")))&&void 0!==_a?_a:null;game.pf2e.compendiumBrowser.openSpellTab(this.item,level)}))}getItemFromEvent(event){var _a;const itemId=null!==(_a=$(event.currentTarget).closest("li[data-item-id]").attr("data-item-id"))&&void 0!==_a?_a:"";return this.actor.items.get(itemId,{strict:!0})}async _onDropItemCreate(itemSource){const spellSources=(Array.isArray(itemSource)?itemSource:[itemSource]).filter((source=>"spell"===source.type));for(const spellSource of spellSources)spellSource.system.location.value=this.item.id;return super._onDropItemCreate(spellSources)}async _onSortItem(event,itemData){var _a;if("spell"!==itemData.type)return[];const spell=this.actor.items.get(itemData._id);if(itemData.system.location.value!==this.item.id&&(null==spell?void 0:spell.isOfType("spell"))){const addedSpell=await(null===(_a=this.item.spells)||void 0===_a?void 0:_a.addSpell(spell));return[null!=addedSpell?addedSpell:[]].flat()}return super._onSortItem(event,itemData)}async _renderInner(data,options){return this.itemRenderer.saveAndRestoreState((()=>super._renderInner(data,options)))}}exports.SpellPreparationSheet=SpellPreparationSheet},49976:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.SIZE_TO_REACH=exports.ALLIANCES=exports.ALIGNMENT_TRAITS=exports.ALIGNMENTS=void 0;const ALIGNMENTS=new Set(["LG","NG","CG","LN","N","CN","LE","NE","CE"]);exports.ALIGNMENTS=ALIGNMENTS;const ALIGNMENT_TRAITS=new Set(["chaotic","evil","good","lawful"]);exports.ALIGNMENT_TRAITS=ALIGNMENT_TRAITS;const ALLIANCES=new Set(["party","opposition",null]);exports.ALLIANCES=ALLIANCES;exports.SIZE_TO_REACH={tiny:0,sm:5,med:5,lg:5,huge:10,grg:15}},43270:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.ActorSizePF2e=void 0;const data_1=__webpack_require__(52769);class ActorSizePF2e{constructor({value,length,width}){var _a;"string"!=typeof value&&(value="med"),this.value=value;const spaces=null!==(_a=ActorSizePF2e.defaultSpaces[value])&&void 0!==_a?_a:ActorSizePF2e.defaultSpaces.med;this.length=null!=length?length:spaces.length,this.width=null!=width?width:spaces.width}equals(size,{smallIsMedium=!1}={}){return this.getEffectiveSize(this.value,{smallIsMedium})===this.getEffectiveSize(size.value,{smallIsMedium})}isLargerThan(size,{smallIsMedium=!1}={}){const other=size instanceof ActorSizePF2e?size:new ActorSizePF2e({value:size}),thisSize=this.getEffectiveSize(this.value,{smallIsMedium}),otherSize=this.getEffectiveSize(other.value,{smallIsMedium});return ActorSizePF2e.sizeRanks[thisSize]>ActorSizePF2e.sizeRanks[otherSize]}isSmallerThan(size,{smallIsMedium=!1}={}){const other=size instanceof ActorSizePF2e?size:new ActorSizePF2e({value:size}),thisSize=this.getEffectiveSize(this.value,{smallIsMedium}),otherSize=this.getEffectiveSize(other.value,{smallIsMedium});return ActorSizePF2e.sizeRanks[thisSize]<ActorSizePF2e.sizeRanks[otherSize]}difference(size,{smallIsMedium=!1}={}){const thisSize=this.getEffectiveSize(this.value,{smallIsMedium}),otherSize=this.getEffectiveSize(size.value,{smallIsMedium});return ActorSizePF2e.sizeRanks[thisSize]-ActorSizePF2e.sizeRanks[otherSize]}getEffectiveSize(size,{smallIsMedium}){return smallIsMedium&&"sm"===size?"med":size}increment({skipSmall=!1}={}){this.value="tiny"===this.value&&skipSmall?"med":"sm"===this.value&&skipSmall?"lg":"grg"===this.value?"grg":data_1.SIZES[data_1.SIZES.indexOf(this.value)+1];const newSpace=ActorSizePF2e.defaultSpaces[this.value];this.length=newSpace.length,this.width=newSpace.width}decrement({skipSmall=!1}={}){const toTiny="med"===this.value&&skipSmall||"tiny"===this.value;this.value=toTiny?"tiny":data_1.SIZES[data_1.SIZES.indexOf(this.value)-1];const newSpace=ActorSizePF2e.defaultSpaces[this.value];this.length=newSpace.length,this.width=newSpace.width}toString(){return game.i18n.localize(CONFIG.PF2E.actorSizes[this.value])}}exports.ActorSizePF2e=ActorSizePF2e,ActorSizePF2e.defaultSpaces={tiny:{length:2.5,width:2.5},sm:{length:5,width:5},med:{length:5,width:5},lg:{length:10,width:10},huge:{length:15,width:15},grg:{length:20,width:20}},ActorSizePF2e.sizeRanks={grg:5,huge:4,lg:3,med:2,sm:1,tiny:0}},75826:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.FamiliarPF2e=void 0;const _actor_1=__webpack_require__(85530),size_1=__webpack_require__(43270),modifiers_1=__webpack_require__(92823),values_1=__webpack_require__(8382),util_1=__webpack_require__(58903),check_1=__webpack_require__(11848),statistic_1=__webpack_require__(77486);class FamiliarPF2e extends _actor_1.CreaturePF2e{get master(){var _a,_b;if(!game.ready||!this.system.master.id)return null;const master=game.actors.get(null!==(_a=this.system.master.id)&&void 0!==_a?_a:"");return master instanceof _actor_1.CharacterPF2e?(null!==(_b=master.familiar)&&void 0!==_b||(master.familiar=this),master):null}get masterAbilityModifier(){var _a;const master=this.master;return master?((_a=this.system.master).ability||(_a.ability="cha"),master.system.abilities[this.system.master.ability].mod):null}prepareData({fromMaster=!1}={}){super.prepareData(),fromMaster&&this.sheet.render(!1)}prepareBaseData(){super.prepareBaseData();const systemData=this.system;systemData.details.alignment={value:"N"},systemData.details.level={value:0},systemData.details.alliance=this.hasPlayerOwner?"party":"opposition",systemData.traits={value:["minion"],senses:[{type:"lowLightVision",label:CONFIG.PF2E.senses.lowLightVision,value:""}],size:new size_1.ActorSizePF2e({value:"tiny"})},systemData.attributes.flanking.canFlank=!1,systemData.attributes.perception={},systemData.attributes.speed={value:25,label:game.i18n.localize("PF2E.SpeedTypesLand"),otherSpeeds:[]},systemData.skills={},systemData.saves={fortitude:{},reflex:{},will:{}},systemData.traits=mergeObject(systemData.traits,{dv:[],di:[],dr:[]})}prepareDerivedData(){var _a,_b;super.prepareDerivedData();const master=this.master,systemData=this.system,{attributes,details}=systemData;if(super.applyActiveEffects(),systemData.traits.value=[...this.traits].sort(),!master)return;const level=details.level.value=master.level;this.rollOptions.all[`self:level:${level}`]=!0,details.alliance=master.system.details.alliance;const masterLevel="ProficiencyWithoutLevel"===game.settings.get("pf2e","proficiencyVariant")?0:master.level,masterAbilityModifier=this.masterAbilityModifier,{synthetics}=this;this.stripInvalidModifiers();(systemData.attributes.speed=this.prepareSpeed("land")).otherSpeeds=["burrow","climb","fly","swim"].flatMap((m=>{var _a;return null!==(_a=this.prepareSpeed(m))&&void 0!==_a?_a:[]}));{const perLevelModifiers=(0,util_1.extractModifiers)(synthetics,["hp-per-level"]).map((modifier=>{const clone=modifier.clone();return clone.modifier*=level,clone})),modifiers=[new modifiers_1.ModifierPF2e("PF2E.MasterLevelHP",5*level,modifiers_1.MODIFIER_TYPE.UNTYPED),(0,util_1.extractModifiers)(synthetics,["hp"]),perLevelModifiers].flat(),stat=mergeObject(new modifiers_1.StatisticModifier("hp",modifiers),attributes.hp,{overwrite:!1});stat.max=stat.totalModifier,stat.value=Math.min(stat.value,stat.max),stat.breakdown=stat.modifiers.filter((m=>m.enabled)).map((m=>`${m.label} ${m.modifier<0?"":"+"}${m.modifier}`)).join(", "),systemData.attributes.hp=stat}{const source=master.system.attributes.ac.modifiers.filter((modifier=>!["status","circumstance"].includes(modifier.type))),base=10+new modifiers_1.StatisticModifier("base",source).totalModifier,modifiers=(0,util_1.extractModifiers)(synthetics,["ac","dex-based","all"]),stat=mergeObject(new modifiers_1.StatisticModifier("ac",modifiers),systemData.attributes.ac,{overwrite:!1});stat.value=base+stat.totalModifier,stat.breakdown=[game.i18n.format("PF2E.MasterArmorClass",{base})].concat(stat.modifiers.filter((m=>m.enabled)).map((m=>`${m.label} ${m.modifier<0?"":"+"}${m.modifier}`))).join(", "),systemData.attributes.ac=stat}this.saves=values_1.SAVE_TYPES.reduce(((partialSaves,saveType)=>{const save=master.saves[saveType],saveName=game.i18n.localize(CONFIG.PF2E.saves[saveType]),source=save.modifiers.filter((modifier=>!["status","circumstance"].includes(modifier.type))),totalMod=(0,modifiers_1.applyStackingRules)(source),selectors=[saveType,`${save.ability}-based`,"saving-throw","all"];return{...partialSaves,[saveType]:new statistic_1.Statistic(this,{slug:saveType,label:saveName,domains:selectors,modifiers:[new modifiers_1.ModifierPF2e(`PF2E.MasterSavingThrow.${saveType}`,totalMod,modifiers_1.MODIFIER_TYPE.UNTYPED)],check:{type:"saving-throw"}})}}),{}),this.system.saves=values_1.SAVE_TYPES.reduce(((partial,saveType)=>({...partial,[saveType]:this.saves[saveType].getTraceData()})),{}),this.system.traits.senses=this.prepareSenses(this.system.traits.senses,synthetics);{const domains=["attack","attack-roll","all"],modifiers=[new modifiers_1.ModifierPF2e("PF2E.MasterLevel",masterLevel,modifiers_1.MODIFIER_TYPE.UNTYPED),...(0,util_1.extractModifiers)(synthetics,domains)],stat=mergeObject(new modifiers_1.StatisticModifier("attack",modifiers),{roll:async params=>{var _a,_b;const options=new Set(null!==(_a=params.options)&&void 0!==_a?_a:[]),rollTwice=(0,util_1.extractRollTwice)(this.synthetics.rollTwice,domains,options),roll=await check_1.CheckPF2e.roll(new modifiers_1.CheckModifier("Attack Roll",stat),{actor:this,type:"attack-roll",options,rollTwice},params.event,params.callback);for(const rule of this.rules.filter((r=>!r.ignored)))await(null===(_b=rule.afterRoll)||void 0===_b?void 0:_b.call(rule,{roll,selectors:domains,domains,rollOptions:options}));return roll}});stat.adjustments=(0,util_1.extractDegreeOfSuccessAdjustments)(synthetics,domains),stat.breakdown=stat.modifiers.filter((m=>m.enabled)).map((m=>`${m.label} ${m.modifier<0?"":"+"}${m.modifier}`)).join(", "),systemData.attack=mergeObject(stat,{value:stat.totalModifier})}{const domains=["perception","wis-based","all"],modifiers=[new modifiers_1.ModifierPF2e("PF2E.MasterLevel",masterLevel,modifiers_1.MODIFIER_TYPE.UNTYPED),new modifiers_1.ModifierPF2e(`PF2E.MasterAbility.${systemData.master.ability}`,masterAbilityModifier,modifiers_1.MODIFIER_TYPE.UNTYPED),...(0,util_1.extractModifiers)(synthetics,domains)],stat=mergeObject(new modifiers_1.StatisticModifier("perception",modifiers),systemData.attributes.perception,{overwrite:!1});stat.adjustments=(0,util_1.extractDegreeOfSuccessAdjustments)(synthetics,domains),stat.value=stat.totalModifier,stat.breakdown=stat.modifiers.filter((m=>m.enabled)).map((m=>`${m.label} ${m.modifier<0?"":"+"}${m.modifier}`)).join(", "),stat.roll=async params=>{var _a,_b;const label=game.i18n.localize("PF2E.PerceptionCheck"),rollOptions=new Set(null!==(_a=params.options)&&void 0!==_a?_a:[]),rollTwice=(0,util_1.extractRollTwice)(this.synthetics.rollTwice,domains,rollOptions),roll=await check_1.CheckPF2e.roll(new modifiers_1.CheckModifier(label,stat),{actor:this,type:"perception-check",options:rollOptions,dc:params.dc,rollTwice},params.event,params.callback);for(const rule of this.rules.filter((r=>!r.ignored)))await(null===(_b=rule.afterRoll)||void 0===_b?void 0:_b.call(rule,{roll,selectors:domains,domains,rollOptions}));return roll},systemData.attributes.perception=stat}for(const shortForm of values_1.SKILL_ABBREVIATIONS){const longForm=values_1.SKILL_DICTIONARY[shortForm],modifiers=[new modifiers_1.ModifierPF2e("PF2E.MasterLevel",masterLevel,modifiers_1.MODIFIER_TYPE.UNTYPED)];["acr","ste"].includes(shortForm)&&modifiers.push(new modifiers_1.ModifierPF2e(`PF2E.MasterAbility.${systemData.master.ability}`,masterAbilityModifier,modifiers_1.MODIFIER_TYPE.UNTYPED));const ability=values_1.SKILL_EXPANDED[longForm].ability,domains=[longForm,`${ability}-based`,"skill-check","all"];modifiers.push(...(0,util_1.extractModifiers)(synthetics,domains));const label=null!==(_a=CONFIG.PF2E.skills[shortForm])&&void 0!==_a?_a:longForm,stat=mergeObject(new modifiers_1.StatisticModifier(longForm,modifiers),{adjustments:(0,util_1.extractDegreeOfSuccessAdjustments)(synthetics,domains),label,ability,value:0,roll:async params=>{var _a,_b;const label=game.i18n.format("PF2E.SkillCheckWithName",{skillName:game.i18n.localize(CONFIG.PF2E.skills[shortForm])}),rollOptions=new Set(null!==(_a=params.options)&&void 0!==_a?_a:[]),rollTwice=(0,util_1.extractRollTwice)(this.synthetics.rollTwice,domains,rollOptions),roll=await check_1.CheckPF2e.roll(new modifiers_1.CheckModifier(label,stat),{actor:this,type:"skill-check",options:rollOptions,dc:params.dc,rollTwice},params.event,params.callback);for(const rule of this.rules.filter((r=>!r.ignored)))await(null===(_b=rule.afterRoll)||void 0===_b?void 0:_b.call(rule,{roll,selectors:domains,domains,rollOptions}));return roll}});stat.value=stat.totalModifier,stat.breakdown=stat.modifiers.filter((m=>m.enabled)).map((m=>`${m.label} ${m.modifier<0?"":"+"}${m.modifier}`)).join(", "),systemData.skills[shortForm]=stat}for(const rule of this.rules)try{null===(_b=rule.afterPrepareData)||void 0===_b||_b.call(rule)}catch(error){console.error(`PF2e | Failed to execute onAfterPrepareData on rule element ${rule}.`,error)}}stripInvalidModifiers(){var _a;const invalidModifierTypes=[modifiers_1.MODIFIER_TYPE.ABILITY,modifiers_1.MODIFIER_TYPE.PROFICIENCY,modifiers_1.MODIFIER_TYPE.ITEM];for(const key of Object.keys(this.synthetics.statisticsModifiers))this.synthetics.statisticsModifiers[key]=null===(_a=this.synthetics.statisticsModifiers[key])||void 0===_a?void 0:_a.filter((modifier=>{const resolvedModifier=modifier();return resolvedModifier&&!invalidModifierTypes.includes(resolvedModifier.type)}))}_onDelete(options,userId){this.master&&(this.master.familiar=null),super._onDelete(options,userId)}}exports.FamiliarPF2e=FamiliarPF2e},46949:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.FamiliarSheetPF2e=void 0;const sheet_1=__webpack_require__(83936);class FamiliarSheetPF2e extends sheet_1.CreatureSheetPF2e{constructor(){super(...arguments),this.actorConfigClass=null}static get defaultOptions(){const options=super.defaultOptions;return mergeObject(options,{classes:["sheet","actor","familiar"],width:650,height:680,tabs:[{navSelector:".sheet-navigation",contentSelector:".sheet-content",initial:"attributes"}]}),options}get template(){return"systems/pf2e/templates/actors/familiar-sheet.html"}async getData(options){var _a,_b,_c,_d;const baseData=await super.getData(options),familiar=this.actor,masters=game.actors.filter((a=>a.isOfType("character")&&a.testUserPermission(game.user,"OWNER"))),abilities=CONFIG.PF2E.abilities,size=null!==(_a=CONFIG.PF2E.actorSizes[familiar.system.traits.size.value])&&void 0!==_a?_a:null,familiarAbilities=null!==(_d=null===(_c=null===(_b=this.actor.master)||void 0===_b?void 0:_b.attributes)||void 0===_c?void 0:_c.familiarAbilities)&&void 0!==_d?_d:{value:0};if(baseData.data.saves)for(const key of["fortitude","reflex","will"]){baseData.data.saves[key].label=CONFIG.PF2E.saves[key]}return{...baseData,master:this.actor.master,masters,abilities,size,familiarAbilities}}async prepareItems(_sheetData){}activateListeners($html){super.activateListeners($html),$html.find("[data-action=perception-check]").on("click",(event=>{const options=this.actor.getRollOptions(["all","perception"]);this.actor.attributes.perception.roll({event,options})})),$html.find("[data-attack-roll] *").on("click",(event=>{const options=this.actor.getRollOptions(["all","attack"]);this.actor.system.attack.roll({event,options})}))}}exports.FamiliarSheetPF2e=FamiliarSheetPF2e},17197:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.HazardPF2e=void 0;const _actor_1=__webpack_require__(85530),modifiers_1=__webpack_require__(92823),values_1=__webpack_require__(8382),util_1=__webpack_require__(58903),statistic_1=__webpack_require__(77486);class HazardPF2e extends _actor_1.ActorPF2e{get allowedItemTypes(){return[...super.allowedItemTypes,"action","melee"]}get rarity(){return this.system.traits.rarity}get isComplex(){return this.system.details.isComplex}get canAttack(){return this.itemTypes.melee.length>0}get emitsSound(){var _a;const{emitsSound}=this.system.attributes;return this.isDead||"boolean"!=typeof emitsSound?!!(null===(_a=game.combats.active)||void 0===_a?void 0:_a.started)&&game.combats.active.combatants.some((c=>c.actor===this)):emitsSound}prepareBaseData(){super.prepareBaseData();const{attributes,details}=this.system;attributes.initiative={tiebreakPriority:this.hasPlayerOwner?2:1},attributes.hp.negativeHealing=!1,attributes.hp.brokenThreshold=Math.floor(attributes.hp.max/2),attributes.hasHealth=attributes.hp.max>0,details.alliance=null}prepareDerivedData(){super.prepareDerivedData();const{system}=this;this.prepareSynthetics();{const base=system.attributes.ac.value,domains=["ac","dex-based","all"],modifiers=[new modifiers_1.ModifierPF2e("PF2E.BaseModifier",base,modifiers_1.MODIFIER_TYPE.UNTYPED),...(0,util_1.extractModifiers)(this.synthetics,domains,{test:this.getRollOptions(domains)})],stat=mergeObject(new modifiers_1.StatisticModifier("ac",modifiers),system.attributes.ac,{overwrite:!1});stat.value=stat.totalModifier,stat.breakdown=stat.modifiers.filter((m=>m.enabled)).map((m=>`${m.label} ${m.modifier<0?"":"+"}${m.modifier}`)).join(", "),system.attributes.ac=mergeObject(stat,{base})}this.saves=this.prepareSaves()}prepareSaves(){const{system}=this;return values_1.SAVE_TYPES.reduce(((saves,saveType)=>{const save=system.saves[saveType],saveName=game.i18n.localize(CONFIG.PF2E.saves[saveType]),base=save.value,ability=CONFIG.PF2E.savingThrowDefaultAbilities[saveType];if(!base)return saves;const selectors=[saveType,`${ability}-based`,"saving-throw","all"],stat=new statistic_1.Statistic(this,{slug:saveType,label:saveName,domains:selectors,modifiers:[new modifiers_1.ModifierPF2e("PF2E.BaseModifier",base,modifiers_1.MODIFIER_TYPE.UNTYPED),...(0,util_1.extractModifiers)(this.synthetics,selectors)],check:{type:"saving-throw"}});return mergeObject(this.system.saves[saveType],stat.getTraceData()),saves[saveType]=stat,saves}),{})}}exports.HazardPF2e=HazardPF2e},13945:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.HazardSheetPF2e=void 0;const base_1=__webpack_require__(11291),values_1=__webpack_require__(8382),dice_1=__webpack_require__(18235),_util_1=__webpack_require__(6945);class HazardSheetPF2e extends base_1.ActorSheetPF2e{static get defaultOptions(){const options=super.defaultOptions;return mergeObject(options,{classes:["default","sheet","hazard","actor"],scrollY:[".container > section"],width:700,height:680}),options}get template(){return"systems/pf2e/templates/actors/hazard/sheet.html"}get title(){return this.editing?game.i18n.format("PF2E.Actor.Hazard.TitleEdit",{name:super.title}):super.title}get editing(){return this.options.editable&&!!this.actor.getFlag("pf2e","editHazard.value")}async getData(){var _a,_b,_c,_d,_e,_f,_g,_h,_j;const sheetData=await super.getData();null!==(_a=(_j=sheetData.actor.flags).editHazard)&&void 0!==_a||(_j.editHazard={value:!1});const systemData=sheetData.data,actor=this.actor,hasDefenses=!!(null===(_b=actor.hitPoints)||void 0===_b?void 0:_b.max)||!!actor.attributes.ac.value,hasImmunities=systemData.traits.di.value.length>0,hasResistances=systemData.traits.dr.length>0,hasWeaknesses=systemData.traits.dv.length>0,hasIWR=hasDefenses||hasImmunities||hasResistances||hasWeaknesses,stealthMod=actor.system.attributes.stealth.value,stealthDC="number"==typeof stealthMod?stealthMod+10:null,hasStealthDescription=!!(null===(_c=systemData.attributes.stealth)||void 0===_c?void 0:_c.details),rollData=this.actor.getRollData(),enrich=async content=>TextEditor.enrichHTML(null!=content?content:"",{rollData,async:!0});return sheetData.enrichedContent=mergeObject(sheetData.enrichedContent,{stealthDetails:await enrich(systemData.attributes.stealth.details),description:await enrich(systemData.details.description),disable:await enrich(systemData.details.disable),routine:await enrich(systemData.details.routine),reset:await enrich(systemData.details.reset)}),{...sheetData,actions:this.prepareActions(),editing:this.editing,actorTraits:systemData.traits.value,rarity:CONFIG.PF2E.rarityTraits,rarityLabel:CONFIG.PF2E.rarityTraits[this.actor.rarity],brokenThreshold:systemData.attributes.hp.brokenThreshold,stealthDC,saves:this.prepareSaves(),hasDefenses,hasHPDetails:!!systemData.attributes.hp.details.trim(),hasSaves:Object.keys(null!==(_d=actor.saves)&&void 0!==_d?_d:{}).length>0,hasIWR,hasStealth:null!==stealthDC||hasStealthDescription,hasStealthDescription,hasDescription:!!(null===(_e=systemData.details.description)||void 0===_e?void 0:_e.trim()),hasDisable:!!(null===(_f=systemData.details.disable)||void 0===_f?void 0:_f.trim()),hasRoutineDetails:!!(null===(_g=systemData.details.routine)||void 0===_g?void 0:_g.trim()),hasResetDetails:!!(null===(_h=systemData.details.reset)||void 0===_h?void 0:_h.trim())}}prepareActions(){const actions=this.actor.itemTypes.action.sort(((a,b)=>a.sort-b.sort));return{reaction:actions.filter((a=>{var _a;return"reaction"===(null===(_a=a.actionCost)||void 0===_a?void 0:_a.type)})),action:actions.filter((a=>{var _a;return"reaction"!==(null===(_a=a.actionCost)||void 0===_a?void 0:_a.type)}))}}prepareSaves(){if(!this.actor.saves)return[];const results=[];for(const saveType of values_1.SAVE_TYPES){const save=this.actor.saves[saveType];(this.editing||save)&&results.push({label:game.i18n.localize(`PF2E.Saves${saveType.titleCase()}Short`),type:saveType,mod:null==save?void 0:save.check.mod})}return results}async prepareItems(sheetData){const actorData=sheetData.actor,attacks=[],weaponTraits=CONFIG.PF2E.npcAttackTraits,traitsDescriptions=CONFIG.PF2E.traitsDescriptions;for(const itemData of actorData.items)if(itemData.img=itemData.img||CONST.DEFAULT_TOKEN,"melee"===itemData.type){const weaponType=itemData.system.weaponType.value||"melee",traits=itemData.system.traits.value,isAgile=traits.includes("agile");itemData.attackRollType="melee"===weaponType?"PF2E.NPCAttackMelee":"PF2E.NPCAttackRanged",itemData.system.bonus.total=Number(itemData.system.bonus.value)||0,itemData.system.isAgile=isAgile,itemData.traits=traits.map((trait=>{var _a,_b;return{label:null!==(_a=weaponTraits[trait])&&void 0!==_a?_a:trait.charAt(0).toUpperCase()+trait.slice(1),description:null!==(_b=traitsDescriptions[trait])&&void 0!==_b?_b:""}}));const item=this.actor.items.get(itemData._id),rollData={...this.actor.getRollData(),...null==item?void 0:item.getRollData()};itemData.system.description.value=await TextEditor.enrichHTML(itemData.system.description.value,{rollData,async:!0}),attacks.push(itemData)}actorData.attacks=attacks}activateListeners($html){super.activateListeners($html);const html=$html[0],traitsEl=html.querySelector('input[name="system.traits.value"]');if(traitsEl){const tags=(0,_util_1.tagify)(traitsEl,{whitelist:CONFIG.PF2E.hazardTraits}),traitsPrepend=html.querySelector(".traits-extra");traitsPrepend&&tags.DOM.scope.prepend(traitsPrepend.content)}$html.find(".edit-mode-button").on("click",(()=>{this.actor.setFlag("pf2e","editHazard.value",!this.editing)})),$html.find("input[data-property]").on("focus",(event=>{var _a;const $input=$(event.target),propertyPath=null!==(_a=$input.attr("data-property"))&&void 0!==_a?_a:"",baseValue=Number(getProperty(this.actor._source,propertyPath));$input.val(baseValue).attr({name:propertyPath})})),$html.find("input[data-property]").on("blur",(event=>{var _a;const $input=$(event.target);$input.removeAttr("name").removeAttr("style").attr({type:"text"});const propertyPath=null!==(_a=$input.attr("data-property"))&&void 0!==_a?_a:"",valueAttr=$input.attr("data-value");if(valueAttr)$input.val(valueAttr);else{const preparedValue=Number(getProperty(this.actor,propertyPath));$input.val(null!==preparedValue&&preparedValue>=0?`+${preparedValue}`:preparedValue)}})),$html.find("[data-action=edit-section]").on("click",(event=>{const name=$(event.target).closest(".section-container").find("[data-edit]").attr("data-edit");name&&this.activateEditor(name)})),$html.find("button").on("click",(event=>{var _a;event.preventDefault(),event.stopPropagation();const itemId=null===(_a=(0,_util_1.htmlClosest)(event.currentTarget,".item"))||void 0===_a?void 0:_a.dataset.itemId,item=this.actor.items.get(null!=itemId?itemId:"",{strict:!0});if(item.isOfType("melee"))switch(event.target.dataset.action){case"attack":{const attackNumber=Number(event.currentTarget.dataset.attackNumber);this.rollAttack(event,item,attackNumber);break}case"damage":this.rollDamage(event,item);break;case"damageCritical":this.rollDamage(event,item,!0);break;default:throw new Error("Unknown action type")}}));$html.find(".emits-sound i.hint").tooltipster({maxWidth:275,position:"right",theme:"crb-hover",content:game.i18n.localize("PF2E.Actor.Hazard.EmitsSound.Hint")}),this.options.editable&&$html.find(".isHazardEditable").on("change",(event=>{this.actor.setFlag("pf2e","editHazard",{value:event.target.checked})}))}async rollAttack(event,item,attackNumber=1){const itemData=await item.getChatData(),parts=["@itemBonus"],title=`${item.name} - Attack Roll${attackNumber>1?` (MAP ${attackNumber})`:""}`,rollData=item.getRollData();rollData.itemBonus=Number(itemData.bonus.value)||0,2===attackNumber?parts.push(itemData.map2):3===attackNumber&&parts.push(itemData.map3),dice_1.DicePF2e.d20Roll({event,parts,actor:this.actor,data:rollData,rollType:"attack-roll",title,speaker:ChatMessage.getSpeaker({actor:this.actor}),dialogOptions:{width:400,top:event?event.clientY-80:400,left:window.innerWidth-710}})}rollDamage(event,item,critical=!1){const systemData=item.system;let parts=[];const partsType=[];systemData.damageRolls&&"object"==typeof systemData.damageRolls&&Object.keys(systemData.damageRolls).forEach((key=>{systemData.damageRolls[key].damage&&parts.push(systemData.damageRolls[key].damage),partsType.push(`${systemData.damageRolls[key].damage} ${systemData.damageRolls[key].damageType}`)}));const title=`${item.name}: ${partsType.join(", ")}`;0===parts.length&&(console.warn("PF2e System | No damage parts provided in damage roll"),parts=["0"]),dice_1.DicePF2e.damageRoll({event,parts,critical,actor:this.actor,data:item.getRollData(),title,speaker:ChatMessage.getSpeaker({actor:this.actor}),dialogOptions:{width:400,top:event.clientY-80,left:window.innerWidth-710}})}async _updateObject(event,formData){const emitsSound=formData["system.attributes.emitsSound"];return"encounter"!==emitsSound&&(formData["system.attributes.emitsSound"]="true"===emitsSound),super._updateObject(event,formData)}}exports.HazardSheetPF2e=HazardSheetPF2e},89503:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.resetAndRerenderActors=exports.getRangeIncrement=exports.calculateRangePenalty=exports.calculateMAPs=void 0;const util_1=__webpack_require__(58903),modifiers_1=__webpack_require__(92823);exports.resetAndRerenderActors=async function(actors){var _a;null!=actors||(actors=[game.actors.contents,game.scenes.contents.flatMap((s=>s.tokens.contents)).flatMap((t=>{var _a;return null!==(_a=t.actor)&&void 0!==_a?_a:[]}))].flat());for(const actor of actors)actor.reset(),null===(_a=ui.windows[actor.sheet.appId])||void 0===_a||_a.render();if(game.pf2e.effectPanel.refresh(),game.settings.get("pf2e","automation.effectExpiration")&&!game.settings.get("pf2e","automation.removeExpiredEffects")){const scenes=new Set(Array.from(actors).flatMap((a=>a.getActiveTokens(!1,!0))).flatMap((t=>t.scene)));for(const scene of scenes)scene.reset(),scene.isView&&canvas.perception.update({initializeVision:!0},!0)}},exports.calculateMAPs=function(item,{domains,options}){var _a,_b;const optionSet=options instanceof Set?options:new Set(options),baseMap=function(item){if(item.isOfType("melee","weapon")){switch(item.isOfType("weapon")?item.system.MAP.value:null){case"1":return{label:"PF2E.MultipleAttackPenalty",map1:-1,map2:-2};case"2":return{label:"PF2E.MultipleAttackPenalty",map1:-2,map2:-4};case"3":return{label:"PF2E.MultipleAttackPenalty",map1:-3,map2:-6};case"4":return{label:"PF2E.MultipleAttackPenalty",map1:-4,map2:-8};case"5":return{label:"PF2E.MultipleAttackPenalty",map1:-5,map2:-10};default:return item.traits.has("agile")?{label:"PF2E.MultipleAttackPenalty",map1:-4,map2:-8}:{label:"PF2E.MultipleAttackPenalty",map1:-5,map2:-10}}}return{label:"PF2E.MultipleAttackPenalty",map1:-5,map2:-10}}(item),maps=null!==(_b=null===(_a=item.actor)||void 0===_a?void 0:_a.synthetics.multipleAttackPenalties)&&void 0!==_b?_b:{},fromSynthetics=domains.flatMap((d=>{var _a;return null!==(_a=maps[d])&&void 0!==_a?_a:[]})).filter((p=>{var _a,_b;return null===(_b=null===(_a=p.predicate)||void 0===_a?void 0:_a.test(optionSet))||void 0===_b||_b})).map((p=>({label:p.label,map1:p.penalty,map2:2*p.penalty})));return[baseMap,...fromSynthetics].reduce(((lowest,p)=>p.map1>lowest.map1?p:lowest))},exports.getRangeIncrement=function(attackItem,distance){return attackItem.isOfType("spell")?null:attackItem.rangeIncrement&&"number"==typeof distance?Math.max(Math.ceil(distance/attackItem.rangeIncrement),1):null},exports.calculateRangePenalty=function(actor,increment,selectors,rollOptions){if(!increment||1===increment)return null;const slug="range-penalty",modifier=new modifiers_1.ModifierPF2e({label:"PF2E.RangePenalty",slug,type:modifiers_1.MODIFIER_TYPE.UNTYPED,modifier:Math.max(-2*(increment-1),-12),predicate:[{nor:["ignore-range-penalty",{gte:["ignore-range-penalty",increment]}]}],adjustments:(0,util_1.extractModifierAdjustments)(actor.synthetics.modifierAdjustments,selectors,slug)});return modifier.test(rollOptions),modifier}},85530:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.VehiclePF2e=exports.LootPF2e=exports.HazardPF2e=exports.FamiliarPF2e=exports.NPCPF2e=exports.CharacterPF2e=exports.CreaturePF2e=exports.ActorPF2e=void 0;var base_1=__webpack_require__(65532);Object.defineProperty(exports,"ActorPF2e",{enumerable:!0,get:function(){return base_1.ActorPF2e}});var creature_1=__webpack_require__(30653);Object.defineProperty(exports,"CreaturePF2e",{enumerable:!0,get:function(){return creature_1.CreaturePF2e}});var character_1=__webpack_require__(886);Object.defineProperty(exports,"CharacterPF2e",{enumerable:!0,get:function(){return character_1.CharacterPF2e}});var npc_1=__webpack_require__(78382);Object.defineProperty(exports,"NPCPF2e",{enumerable:!0,get:function(){return npc_1.NPCPF2e}});var familiar_1=__webpack_require__(75826);Object.defineProperty(exports,"FamiliarPF2e",{enumerable:!0,get:function(){return familiar_1.FamiliarPF2e}});var hazard_1=__webpack_require__(17197);Object.defineProperty(exports,"HazardPF2e",{enumerable:!0,get:function(){return hazard_1.HazardPF2e}});var loot_1=__webpack_require__(36011);Object.defineProperty(exports,"LootPF2e",{enumerable:!0,get:function(){return loot_1.LootPF2e}});var vehicle_1=__webpack_require__(47341);Object.defineProperty(exports,"VehiclePF2e",{enumerable:!0,get:function(){return vehicle_1.VehiclePF2e}})},78246:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.InventoryBulk=void 0;const bulk_1=__webpack_require__(47297),_util_1=__webpack_require__(6945);class InventoryBulk{constructor(actor){this.value=InventoryBulk.computeTotalBulk(actor.inventory.filter((i=>!i.isInContainer)),actor.size);const strengthModifier=actor.isOfType("character","npc")?actor.abilities.str.mod:1/0,[bonusBulkLimit,bonusEncumbranceBulk]=actor.isOfType("character")?[actor.attributes.bonusLimitBulk,actor.attributes.bonusEncumbranceBulk]:[0,0];this.max=Math.floor(strengthModifier+bonusBulkLimit+10),this.encumberedAt=Math.floor(strengthModifier+bonusEncumbranceBulk+5)}get encumberedPercentage(){const totalTimes10=this.value.toLightBulk(),encumberedAtTimes10=10*this.encumberedAt+10;return Math.floor(totalTimes10/encumberedAtTimes10*100)}get maxPercentage(){const totalTimes10=this.value.toLightBulk(),limitTimes10=10*this.max+10;return Math.floor(totalTimes10/limitTimes10*100)}get maxPercentageInteger(){return this.maxPercentage>100?100:this.maxPercentage}get isEncumbered(){return this.value.normal>this.encumberedAt}get isOverMax(){return this.value.normal>this.max}get bulk(){return this.value.normal}static computeTotalBulk(items,actorSize){const nonStackingItems=(items=this.flattenNonStowing(items)).filter((i=>i.isOfType("backpack")||1===i.system.bulk.per&&i.system.baseItem)),nonStackingIds=new Set(nonStackingItems.map((i=>i.id))),stackingItems=items.filter((i=>!nonStackingIds.has(i.id))),baseBulk=nonStackingItems.map((i=>i.bulk)).reduce(((first,second)=>first.plus(second)),new bulk_1.Bulk),stackingBehaviors=stackingItems.map((item=>({per:item.system.bulk.per,item,group:item.system.baseItem,bulk:new bulk_1.Bulk({light:item.system.bulk.value}).convertToSize(item.size,actorSize)}))),bulks=[...(0,_util_1.groupBy)(stackingBehaviors,(d=>`${d.group}-${d.per}-${d.bulk.toLightBulk()}`)).values()].map((dataEntries=>{const{bulk,per}=dataEntries[0],quantity=dataEntries.map((entry=>entry.item.quantity)).reduce(((sum,value)=>sum+value),0),bulkRelevantQuantity=Math.floor(quantity/per);return bulk.times(bulkRelevantQuantity)}));return baseBulk.plus(bulks.reduce(((first,second)=>first.plus(second)),new bulk_1.Bulk))}static flattenNonStowing(items){return items.map((item=>item.isOfType("backpack")&&!item.stowsItems?this.flattenNonStowing(item.contents.contents):item)).flat()}}exports.InventoryBulk=InventoryBulk},33835:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.InventoryBulk=exports.ActorInventory=void 0;const values_1=__webpack_require__(66870),helpers_1=__webpack_require__(73715),_util_1=__webpack_require__(6945),bulk_1=__webpack_require__(78246);Object.defineProperty(exports,"InventoryBulk",{enumerable:!0,get:function(){return bulk_1.InventoryBulk}});class ActorInventory extends Collection{constructor(actor,entries){super(null==entries?void 0:entries.map((entry=>[entry.id,entry]))),this.actor=actor}get coins(){return this.filter((i=>i.isOfType("treasure")&&i.isCoinage)).map((item=>item.assetValue)).reduce(((first,second)=>first.add(second)),new helpers_1.CoinsPF2e)}get totalWealth(){return this.filter((item=>game.user.isGM||item.isIdentified)).map((item=>item.assetValue)).reduce(((first,second)=>first.add(second)),new helpers_1.CoinsPF2e)}get invested(){return this.actor.isOfType("character")?{value:this.filter((item=>!!item.isInvested)).length,max:this.actor.system.resources.investiture.max}:null}get bulk(){return new bulk_1.InventoryBulk(this.actor)}async addCoins(coins,{combineStacks=!0}={}){var _a,_b,_c;const topLevelCoins=this.actor.itemTypes.treasure.filter((item=>combineStacks&&item.isCoinage)),coinsByDenomination=(0,_util_1.groupBy)(topLevelCoins,(item=>item.denomination));for(const denomination of values_1.DENOMINATIONS){const quantity=null!==(_a=coins[denomination])&&void 0!==_a?_a:0;if(quantity>0){const item=null===(_b=coinsByDenomination.get(denomination))||void 0===_b?void 0:_b.at(0);if(item)await item.update({"system.quantity":item.quantity+quantity});else{const compendiumId=helpers_1.coinCompendiumIds[denomination],pack=game.packs.find((p=>"pf2e.equipment-srd"===p.collection));if(!pack)throw(0,_util_1.ErrorPF2e)("Unexpected error retrieving equipment compendium");const item=null===(_c=await pack.getDocument(compendiumId))||void 0===_c?void 0:_c.clone();(null==item?void 0:item.isOfType("treasure"))&&(item.updateSource({"system.quantity":quantity}),await this.actor.createEmbeddedDocuments("Item",[item.toObject()]))}}}}async removeCoins(coins,{byValue=!0}={}){const coinsToRemove=new helpers_1.CoinsPF2e(coins),actorCoins=this.coins,coinsToAdd=new helpers_1.CoinsPF2e;if(byValue){let valueToRemoveInCopper=coinsToRemove.copperValue;if(valueToRemoveInCopper>actorCoins.copperValue)return!1;if(valueToRemoveInCopper%10>actorCoins.cp)coinsToAdd.cp=10,coinsToRemove.cp=valueToRemoveInCopper%10,valueToRemoveInCopper+=10-coinsToRemove.cp;else{coinsToRemove.cp=valueToRemoveInCopper%10,valueToRemoveInCopper-=coinsToRemove.cp;const newCopper=actorCoins.cp-coinsToRemove.cp,extraCopper=10*Math.min(valueToRemoveInCopper/10,Math.trunc(newCopper/10));coinsToRemove.cp+=extraCopper,valueToRemoveInCopper-=extraCopper}if(valueToRemoveInCopper/10%10>actorCoins.sp)coinsToAdd.sp=10,coinsToRemove.sp=valueToRemoveInCopper/10%10,valueToRemoveInCopper+=100-10*coinsToRemove.sp;else{coinsToRemove.sp=valueToRemoveInCopper/10%10,valueToRemoveInCopper-=10*coinsToRemove.sp;const newSilver=actorCoins.sp-coinsToRemove.sp,extraSilver=10*Math.min(valueToRemoveInCopper/100,Math.trunc(newSilver/10));coinsToRemove.sp+=extraSilver,valueToRemoveInCopper-=10*extraSilver}if(valueToRemoveInCopper/100%10>actorCoins.gp)coinsToAdd.gp=10,coinsToRemove.gp=valueToRemoveInCopper/100%10,valueToRemoveInCopper+=1e3-100*coinsToRemove.gp;else{coinsToRemove.gp=valueToRemoveInCopper/100%10,valueToRemoveInCopper-=100*coinsToRemove.gp;const newGold=actorCoins.gp-coinsToRemove.gp,extraGold=10*Math.min(valueToRemoveInCopper/1e3,Math.trunc(newGold/10));coinsToRemove.gp+=extraGold,valueToRemoveInCopper-=100*extraGold}coinsToRemove.pp=valueToRemoveInCopper/1e3}const coinsToPull=actorCoins.add(coinsToAdd);if(!(coinsToRemove.pp<=coinsToPull.pp&&coinsToRemove.gp<=coinsToPull.gp&&coinsToRemove.sp<=coinsToPull.sp&&coinsToRemove.cp<=coinsToPull.cp))return!1;Object.values(coinsToAdd).some((value=>0!==value))&&await this.addCoins(coinsToAdd);const topLevelCoins=this.actor.itemTypes.treasure.filter((item=>item.isCoinage)),coinsByDenomination=(0,_util_1.groupBy)(topLevelCoins,(item=>item.denomination));for(const denomination of values_1.DENOMINATIONS){let quantityToRemove=coinsToRemove[denomination];const coinItems=coinsByDenomination.get(denomination);if(quantityToRemove&&coinItems){const itemsToUpdate=[],itemsToDelete=[];for(const item of coinItems){if(0===quantityToRemove)break;if(item.quantity>quantityToRemove){itemsToUpdate.push({_id:item.id,"system.quantity":item.quantity-quantityToRemove}),quantityToRemove=0;break}quantityToRemove-=item.quantity,itemsToDelete.push(item.id)}itemsToUpdate.length>0&&await this.actor.updateEmbeddedDocuments("Item",itemsToUpdate),itemsToDelete.length>0&&await this.actor.deleteEmbeddedDocuments("Item",itemsToDelete),quantityToRemove>0&&console.warn("Attempted to remove more coinage than exists")}}return!0}async sellAllTreasure(){const treasures=this.actor.itemTypes.treasure.filter((item=>!item.isCoinage)),treasureIds=treasures.map((item=>item.id)),coins=treasures.map((item=>item.assetValue)).reduce(((first,second)=>first.add(second)),new helpers_1.CoinsPF2e);await this.actor.deleteEmbeddedDocuments("Item",treasureIds),await this.actor.inventory.addCoins(coins)}}exports.ActorInventory=ActorInventory},46485:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.ItemTransfer=void 0;const index_1=__webpack_require__(10843),localize_1=__webpack_require__(41332),_util_1=__webpack_require__(6945),index_2=__webpack_require__(85530);class ItemTransfer{constructor(source,target,quantity,containerId){this.source=source,this.target=target,this.quantity=quantity,this.containerId=containerId,this.templatePaths={flavor:"./systems/pf2e/templates/chat/action/flavor.html",content:"./systems/pf2e/templates/chat/action/content.html"}}async request(){const gamemaster=game.users.find((u=>u.isGM&&u.active));if(gamemaster)console.debug(`PF2e System | Requesting item transfer from GM ${gamemaster.name}`),game.socket.emit("system.pf2e",{request:"itemTransfer",data:this});else{const loot=[this.getSource(),this.getTarget()].find((a=>(null==a?void 0:a.isLootableBy(game.user))&&!a.isOwner));if(!(loot instanceof index_2.ActorPF2e))throw(0,_util_1.ErrorPF2e)("Unexpected missing actor");const translations=localize_1.LocalizePF2e.translations.PF2E.loot;ui.notifications.error(game.i18n.format(translations.GMSupervisionError,{loot:ItemTransfer.tokenName(loot)}))}}async enact(requester){var _a;if(!game.user.isGM)throw(0,_util_1.ErrorPF2e)("Unauthorized item transfer");console.debug("PF2e System | Enacting item transfer");const sourceActor=this.getSource(),sourceItem=null===(_a=null==sourceActor?void 0:sourceActor.items)||void 0===_a?void 0:_a.find((i=>i.id===this.source.itemId)),targetActor=this.getTarget();if(!(sourceActor instanceof index_2.ActorPF2e&&sourceItem instanceof index_1.PhysicalItemPF2e&&targetActor instanceof index_2.ActorPF2e&&sourceActor.isLootableBy(game.user)&&targetActor.isLootableBy(game.user)))throw(0,_util_1.ErrorPF2e)("Failed sanity check during item transfer");const targetItem=await sourceActor.transferItemToActor(targetActor,sourceItem,this.quantity,this.containerId),sourceIsLoot=sourceActor.isOfType("loot")&&"Loot"===sourceActor.system.lootSheetType;!sourceItem&&sourceIsLoot||this.sendMessage(requester,sourceActor,targetActor,targetItem)}getActor(tokenId,actorId){var _a,_b;if("string"==typeof tokenId){const token=canvas.tokens.placeables.find((t=>t.id===tokenId));return null!==(_a=null==token?void 0:token.actor)&&void 0!==_a?_a:null}return null!==(_b=game.actors.get(actorId))&&void 0!==_b?_b:null}getSource(){return this.getActor(this.source.tokenId,this.source.actorId)}getTarget(){return this.getActor(this.target.tokenId,this.target.actorId)}static tokenName(document){var _a,_b,_c,_d;if(document instanceof index_2.ActorPF2e)return document.token?document.token.name:null!==(_b=null===(_a=document.prototypeToken)||void 0===_a?void 0:_a.name)&&void 0!==_b?_b:document.name;if(document.character instanceof index_2.ActorPF2e){const token=canvas.tokens.placeables.find((t=>{var _a;return(null===(_a=t.actor)||void 0===_a?void 0:_a.id)===document.id}));return null!==(_c=null==token?void 0:token.name)&&void 0!==_c?_c:null===(_d=document.character)||void 0===_d?void 0:_d.name}return document.name}async sendMessage(requester,sourceActor,targetActor,item){const translations=localize_1.LocalizePF2e.translations.PF2E.loot;if(!item){if(sourceActor.isOfType("loot")&&"Merchant"===sourceActor.system.lootSheetType){const message=translations.InsufficientFundsMessage,content=await renderTemplate(this.templatePaths.content,{imgPath:targetActor.img,message:game.i18n.format(message,{buyer:targetActor.name})}),flavor=await this.messageFlavor(sourceActor,targetActor,translations.BuySubtitle);return void await ChatMessage.create({user:requester.id,speaker:{alias:ItemTransfer.tokenName(targetActor)},type:CONST.CHAT_MESSAGE_TYPES.EMOTE,flavor,content})}throw(0,_util_1.ErrorPF2e)("Unexpected item-transfer failure")}const[speaker,subtitle,formatArgs]=(()=>{var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l,_m;const isMerchant=actor=>actor.isOfType("loot")&&"Merchant"===actor.system.lootSheetType,isWhat=actor=>({isCharacter:actor.testUserPermission(requester,"OWNER")&&actor.isOfType("character"),isMerchant:isMerchant(actor),isNPC:actor.isOfType("npc")&&actor.isLootableBy(requester)&&!actor.testUserPermission(requester,"OWNER"),isLoot:actor.isOfType("loot")&&actor.isLootableBy(requester)&&!actor.testUserPermission(requester,"OWNER")&&!isMerchant(actor)}),source=isWhat(sourceActor),target=isWhat(targetActor);if(source.isCharacter&&target.isLoot)return[ItemTransfer.tokenName(sourceActor),translations.DepositSubtitle,[translations.DepositMessage,{depositor:ItemTransfer.tokenName(sourceActor),container:ItemTransfer.tokenName(targetActor)}]];if(source.isCharacter&&target.isMerchant)return[ItemTransfer.tokenName(sourceActor),translations.GiveSubtitle,[translations.GiveMessage,{giver:ItemTransfer.tokenName(sourceActor),recipient:ItemTransfer.tokenName(targetActor)}]];if(source.isCharacter&&target.isNPC)return[ItemTransfer.tokenName(sourceActor),translations.PlantSubtitle,[translations.PlantMessage,{planter:ItemTransfer.tokenName(sourceActor),corpse:ItemTransfer.tokenName(targetActor)}]];if(source.isLoot&&target.isCharacter)return[ItemTransfer.tokenName(targetActor),translations.TakeSubtitle,[translations.TakeMessage,{taker:ItemTransfer.tokenName(targetActor),container:ItemTransfer.tokenName(sourceActor)}]];if(source.isNPC&&target.isCharacter)return[ItemTransfer.tokenName(targetActor),translations.LootSubtitle,[translations.LootMessage,{looter:ItemTransfer.tokenName(targetActor),corpse:ItemTransfer.tokenName(sourceActor)}]];if([source,target].every((actor=>actor.isLoot||actor.isNPC)))return[null!==(_b=null===(_a=requester.character)||void 0===_a?void 0:_a.name)&&void 0!==_b?_b:requester.name,translations.TransferSubtitle,[translations.TransferMessage,{transferrer:null!==(_d=null===(_c=requester.character)||void 0===_c?void 0:_c.name)&&void 0!==_d?_d:requester.name,fromContainer:ItemTransfer.tokenName(sourceActor),toContainer:ItemTransfer.tokenName(targetActor)}]];if(source.isLoot&&target.isMerchant)return[null!==(_f=null===(_e=requester.character)||void 0===_e?void 0:_e.name)&&void 0!==_f?_f:requester.name,translations.GiveSubtitle,[translations.GiveMessage,{seller:null!==(_h=null===(_g=requester.character)||void 0===_g?void 0:_g.name)&&void 0!==_h?_h:requester.name,buyer:ItemTransfer.tokenName(targetActor)}]];if(source.isMerchant&&target.isCharacter)return[ItemTransfer.tokenName(sourceActor),translations.SellSubtitle,[translations.SellMessage,{seller:ItemTransfer.tokenName(sourceActor),buyer:ItemTransfer.tokenName(targetActor)}]];if(source.isMerchant&&target.isLoot)return[null!==(_k=null===(_j=requester.character)||void 0===_j?void 0:_j.name)&&void 0!==_k?_k:requester.name,translations.SellSubtitle,[translations.SellMessage,{seller:ItemTransfer.tokenName(sourceActor),buyer:null!==(_m=null===(_l=requester.character)||void 0===_l?void 0:_l.name)&&void 0!==_m?_m:requester.name}]];throw(0,_util_1.ErrorPF2e)("Unexpected item-transfer failure")})(),formatProperties=formatArgs[1];if(!formatProperties)throw(0,_util_1.ErrorPF2e)("Unexpected item-transfer failure");formatProperties.quantity=this.quantity,formatProperties.item=item.name;const content=await renderTemplate(this.templatePaths.content,{imgPath:item.img,message:game.i18n.format(...formatArgs).replace(/\b1 × /,"")}),flavor=await this.messageFlavor(sourceActor,targetActor,subtitle);await ChatMessage.create({user:requester.id,speaker:{alias:speaker},type:CONST.CHAT_MESSAGE_TYPES.EMOTE,flavor,content})}async messageFlavor(sourceActor,targetActor,subtitle){return await renderTemplate(this.templatePaths.flavor,{action:{title:"PF2E.TraitInteract",subtitle,tooltip:"PF2E.TraitInteract",typeNumber:sourceActor.isOfType("loot")&&targetActor.isOfType("loot")?2:1},traits:[{name:CONFIG.PF2E.featTraits.manipulate,description:CONFIG.PF2E.traitsDescriptions.manipulate}]})}}exports.ItemTransfer=ItemTransfer},36011:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.LootPF2e=void 0;const base_1=__webpack_require__(65532),_util_1=__webpack_require__(6945),helpers_1=__webpack_require__(73715);class LootPF2e extends base_1.ActorPF2e{get allowedItemTypes(){return["physical"]}get isLoot(){return"Loot"===this.system.lootSheetType}get isMerchant(){return"Merchant"===this.system.lootSheetType}get hiddenWhenEmpty(){return this.isLoot&&this.system.hiddenWhenEmpty}get canHostRuleElements(){return!1}get canAct(){return!1}canUserModify(user,action){return"update"===action?this.permission>=CONST.DOCUMENT_PERMISSION_LEVELS.LIMITED:super.canUserModify(user,action)}get visible(){return this.permission>=CONST.DOCUMENT_PERMISSION_LEVELS.OBSERVER}async transferItemToActor(targetActor,item,quantity,containerId,newStack=!1){if(!this.isOwner||!targetActor.isOwner)return super.transferItemToActor(targetActor,item,quantity,containerId,newStack);if(this.isMerchant&&item.isOfType("physical")){const itemValue=helpers_1.CoinsPF2e.fromPrice(item.price,quantity);if(await targetActor.inventory.removeCoins(itemValue))return await item.actor.inventory.addCoins(itemValue),super.transferItemToActor(targetActor,item,quantity,containerId,newStack);if(this.isLoot)throw(0,_util_1.ErrorPF2e)("Loot transfer failed");return null}return super.transferItemToActor(targetActor,item,quantity,containerId,newStack)}async toggleTokenHiding(){if(!this.hiddenWhenEmpty)return;const hiddenStatus=0===this.items.size,promises=game.scenes.contents.map((scene=>[scene,scene.tokens.filter((tokenDoc=>tokenDoc.actor===this))])).map((([scene,tokenDocs])=>scene.updateEmbeddedDocuments("Token",tokenDocs.map((tokenDoc=>({_id:tokenDoc.id,hidden:hiddenStatus}))))));await Promise.allSettled(promises)}_onCreate(data,options,userId){this.toggleTokenHiding(),super._onCreate(data,options,userId)}_onUpdate(changed,options,userId){var _a;void 0!==(null===(_a=changed.system)||void 0===_a?void 0:_a.hiddenWhenEmpty)&&this.toggleTokenHiding(),super._onUpdate(changed,options,userId)}_onCreateEmbeddedDocuments(embeddedName,documents,result,options,userId){this.toggleTokenHiding(),super._onCreateEmbeddedDocuments(embeddedName,documents,result,options,userId)}_onDeleteEmbeddedDocuments(embeddedName,documents,result,options,userId){this.toggleTokenHiding(),super._onDeleteEmbeddedDocuments(embeddedName,documents,result,options,userId)}}exports.LootPF2e=LootPF2e},58693:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.LootSheetPF2e=void 0;const base_1=__webpack_require__(11291),distribute_coins_popup_1=__webpack_require__(25289),loot_npcs_popup_1=__webpack_require__(87e3);class LootSheetPF2e extends base_1.ActorSheetPF2e{static get defaultOptions(){const options=super.defaultOptions;return{...options,editable:!0,classes:[...options.classes,"loot"],width:650,height:680,tabs:[{navSelector:".sheet-navigation",contentSelector:".sheet-content",initial:"inventory"}]}}get template(){return"systems/pf2e/templates/actors/loot/sheet.html"}get isLootSheet(){return!this.actor.isOwner&&this.actor.isLootableBy(game.user)}async getData(){const sheetData=await super.getData(),isLoot="Loot"===this.actor.system.lootSheetType,rollData=this.actor.getRollData();return sheetData.enrichedContent.description=await TextEditor.enrichHTML(sheetData.data.details.description.value,{rollData,async:!0}),{...sheetData,isLoot}}activateListeners($html){super.activateListeners($html),this.options.editable&&($html.find(".split-coins").removeAttr("disabled").on("click",(event=>this.distributeCoins(event))),$html.find(".loot-npcs").removeAttr("disabled").on("click",(event=>this.lootNPCs(event))),$html.find("i.fa-info-circle.help[title]").tooltipster({maxWidth:275,position:"right",theme:"crb-hover",contentAsHTML:!0}))}async prepareItems(){}async distributeCoins(event){event.preventDefault(),await new distribute_coins_popup_1.DistributeCoinsPopup(this.actor,{}).render(!0)}async lootNPCs(event){event.preventDefault(),canvas.tokens.controlled.some((token=>{var _a;return(null===(_a=token.actor)||void 0===_a?void 0:_a.id)!==this.actor.id}))?await new loot_npcs_popup_1.LootNPCsPopup(this.actor).render(!0):ui.notifications.warn("No tokens selected.")}async _onDropItem(event,itemData){return this.actor.id!==itemData.actorId||this.actor.testUserPermission(game.user,"OWNER")?super._onDropItem(event,itemData):[]}}exports.LootSheetPF2e=LootSheetPF2e},92823:function(__unused_webpack_module,exports,__webpack_require__){var _ModifierPF2e_originalValue,__classPrivateFieldSet=this&&this.__classPrivateFieldSet||function(receiver,state,value,kind,f){if("m"===kind)throw new TypeError("Private method is not writable");if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===kind?f.call(receiver,value):f?f.value=value:state.set(receiver,value),value},__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.ensureProficiencyOption=exports.createAbilityModifier=exports.applyStackingRules=exports.adjustModifiers=exports.StatisticModifier=exports.ProficiencyModifier=exports.PROFICIENCY_RANK_OPTION=exports.ModifierPF2e=exports.MODIFIER_TYPES=exports.MODIFIER_TYPE=exports.DiceModifierPF2e=exports.DamageDicePF2e=exports.CheckModifier=void 0;const util_1=__webpack_require__(58903),helpers_1=__webpack_require__(2853),values_1=__webpack_require__(6089),predication_1=__webpack_require__(538),_util_1=__webpack_require__(6945),PROFICIENCY_RANK_OPTION=["proficiency:untrained","proficiency:trained","proficiency:expert","proficiency:master","proficiency:legendary"];exports.PROFICIENCY_RANK_OPTION=PROFICIENCY_RANK_OPTION,exports.ensureProficiencyOption=function(options,rank){rank>=0&&options.add(`skill:rank:${rank}`).add(PROFICIENCY_RANK_OPTION[rank])};const MODIFIER_TYPE={ABILITY:"ability",PROFICIENCY:"proficiency",CIRCUMSTANCE:"circumstance",ITEM:"item",POTENCY:"potency",STATUS:"status",UNTYPED:"untyped"};exports.MODIFIER_TYPE=MODIFIER_TYPE;const MODIFIER_TYPES=new Set(["ability","circumstance","item","potency","proficiency","status","untyped"]);exports.MODIFIER_TYPES=MODIFIER_TYPES;class ModifierPF2e{constructor(...args){var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l,_m,_o,_p,_q,_r;_ModifierPF2e_originalValue.set(this,void 0);const params=(args=>"string"==typeof args[0])(args)?{label:args[0],modifier:args[1],type:null!==(_a=args[2])&&void 0!==_a?_a:"untyped",enabled:args[3],ignored:args[4],source:args[5],notes:args[6]}:args[0];var type;if(this.label=game.i18n.localize(null!==(_b=params.label)&&void 0!==_b?_b:params.name),this.slug=(0,_util_1.sluggify)(null!==(_c=params.slug)&&void 0!==_c?_c:this.label),__classPrivateFieldSet(this,_ModifierPF2e_originalValue,this.modifier=params.modifier,"f"),this.type=(type=params.type,Object.values(MODIFIER_TYPE).includes(type)?params.type:"untyped"),this.ability=null!==(_d=params.ability)&&void 0!==_d?_d:null,this.force=null!==(_e=params.force)&&void 0!==_e&&_e,this.adjustments=deepClone(null!==(_f=params.adjustments)&&void 0!==_f?_f:[]),this.enabled=null===(_g=params.enabled)||void 0===_g||_g,this.ignored=null!==(_h=params.ignored)&&void 0!==_h&&_h,this.custom=null!==(_j=params.custom)&&void 0!==_j&&_j,this.source=null!==(_k=params.source)&&void 0!==_k?_k:null,this.predicate=predication_1.PredicatePF2e.create(null!==(_l=params.predicate)&&void 0!==_l?_l:[]),this.notes=null!==(_m=params.notes)&&void 0!==_m?_m:"",this.traits=deepClone(null!==(_o=params.traits)&&void 0!==_o?_o:[]),this.hideIfDisabled=null!==(_p=params.hideIfDisabled)&&void 0!==_p&&_p,this.modifier=params.modifier,this.damageType=(0,_util_1.setHasElement)(values_1.DAMAGE_TYPES,params.damageType)?params.damageType:null,this.damageCategory=null!==(_q=params.damageCategory)&&void 0!==_q?_q:null,this.critical="splash"===this.damageCategory?!!params.critical:null!==(_r=params.critical)&&void 0!==_r?_r:null,this.force&&"untyped"===this.type)throw(0,_util_1.ErrorPF2e)("A forced modifier must have a type")}clone(options={}){const clone=this.modifier===__classPrivateFieldGet(this,_ModifierPF2e_originalValue,"f")?new ModifierPF2e(this):new ModifierPF2e({...this,modifier:__classPrivateFieldGet(this,_ModifierPF2e_originalValue,"f")});return options.test&&clone.test(options.test),clone}getRollOptions(){const isBonus=(this.modifier>0||"proficiency"===this.type)&&!["ability","untyped"].includes(this.type),isPenalty=this.modifier<0&&!["ability","proficiency"].includes(this.type),options=[`${isBonus?"bonus":isPenalty?"penalty":"modifier"}:type:${this.type}`];return"ability"===this.type&&this.ability&&options.push(`modifier:ability:${this.ability}`),new Set(options)}test(options){this.ignored=!this.predicate.test(options)}toObject(){return duplicate(this)}toString(){return this.label}}exports.ModifierPF2e=ModifierPF2e,_ModifierPF2e_originalValue=new WeakMap,exports.createAbilityModifier=function({actor,ability,domains}){const withAbilityBased=domains.includes(`${ability}-based`)?domains:[...domains,`${ability}-based`];return new ModifierPF2e({slug:ability,label:`PF2E.Ability${(0,_util_1.sluggify)(ability,{camel:"bactrian"})}`,modifier:Math.floor((actor.abilities[ability].value-10)/2),type:"ability",ability,adjustments:(0,util_1.extractModifierAdjustments)(actor.synthetics.modifierAdjustments,withAbilityBased,ability)})};const ProficiencyModifier={fromLevelAndRank:(level,rank,{addLevel=rank>0}={})=>{rank=Math.clamped(rank,0,4);const pwolVariant="ProficiencyWithoutLevel"===game.settings.get("pf2e","proficiencyVariant"),baseBonuses=pwolVariant?[game.settings.get("pf2e","proficiencyUntrainedModifier"),game.settings.get("pf2e","proficiencyTrainedModifier"),game.settings.get("pf2e","proficiencyExpertModifier"),game.settings.get("pf2e","proficiencyMasterModifier"),game.settings.get("pf2e","proficiencyLegendaryModifier")]:[0,2,4,6,8];return new ModifierPF2e({label:`PF2E.ProficiencyLevel${rank}`,modifier:baseBonuses[rank]+(addLevel&&!pwolVariant?level:0),type:"proficiency"})}};exports.ProficiencyModifier=ProficiencyModifier;const HIGHER_BONUS=(a,b)=>a.modifier>=b.modifier,LOWER_PENALTY=(a,b)=>a.modifier<=b.modifier;function applyStacking(best,modifier,isBetter){const existing=best[modifier.type];return void 0===existing?(modifier.enabled=!0,best[modifier.type]=modifier,modifier.modifier):isBetter(modifier,existing)?(existing.enabled=!1,modifier.enabled=!0,best[modifier.type]=modifier,modifier.modifier-existing.modifier):(modifier.enabled=!1,0)}function applyStackingRules(modifiers){let total=0;const highestBonus={},lowestPenalty={},abilityModifiers=modifiers.filter((m=>m.type===MODIFIER_TYPE.ABILITY&&!m.ignored)),bestAbility=abilityModifiers.reduce(((best,modifier)=>null===best||modifier.force?modifier:best.force?best:modifier.modifier>best.modifier?modifier:best),null);for(const modifier of abilityModifiers)modifier.ignored=modifier!==bestAbility;for(const modifier of modifiers)modifier.ignored?modifier.enabled=!1:modifier.type!==MODIFIER_TYPE.UNTYPED?modifier.modifier<0?total+=applyStacking(lowestPenalty,modifier,LOWER_PENALTY):total+=applyStacking(highestBonus,modifier,HIGHER_BONUS):(modifier.enabled=!0,total+=modifier.modifier);return total}exports.applyStackingRules=applyStackingRules;class StatisticModifier{constructor(slug,modifiers=[],rollOptions=new Set){this.breakdown="",rollOptions=rollOptions instanceof Set?rollOptions:new Set(rollOptions),this.slug=slug;const seen=[];for(const modifier of modifiers){seen.some((m=>m.slug===modifier.slug))&&"ability"!==modifier.type||seen.push(modifier)}this._modifiers=seen,this.calculateTotal(rollOptions)}get name(){var _a;return foundry.utils.logCompatibilityWarning("StatisticModifier#name has been split into #slug and #label",{mode:CONST.COMPATIBILITY_MODES.WARNING,since:"4.1.0",until:"4.5.0"}),null!==(_a=this.label)&&void 0!==_a?_a:this.slug}set name(_value){}get modifiers(){return[...this._modifiers]}push(modifier){return void 0===this._modifiers.find((o=>o.slug===modifier.slug))&&(this._modifiers.push(modifier),this.calculateTotal()),this._modifiers.length}unshift(modifier){return void 0===this._modifiers.find((o=>o.slug===modifier.slug))&&(this._modifiers.unshift(modifier),this.calculateTotal()),this._modifiers.length}delete(modifierSlug){const toDelete="object"==typeof modifierSlug?modifierSlug:this._modifiers.find((modifier=>modifier.slug===modifierSlug)),wasDeleted=!(!toDelete||!this._modifiers.includes(toDelete))&&!!this._modifiers.findSplice((modifier=>modifier===toDelete));return wasDeleted&&this.calculateTotal(),wasDeleted}calculateTotal(rollOptions=new Set){if(rollOptions.size>0){for(const modifier of this._modifiers)modifier.test(rollOptions);adjustModifiers(this._modifiers,rollOptions)}applyStackingRules(this._modifiers),this.totalModifier=this._modifiers.filter((m=>m.enabled)).reduce(((total,m)=>total+m.modifier),0)}}function adjustModifiers(modifiers,rollOptions){for(const modifier of modifiers){const adjustments=modifier.adjustments.filter((a=>a.predicate.test([...rollOptions,...modifier.getRollOptions()])));if(adjustments.some((a=>a.suppress))){modifier.ignored=!0;continue}const resolvedAdjustment=adjustments.reduce(((resolved,adjustment)=>{var _a,_b,_c;const newValue=null!==(_b=null===(_a=adjustment.getNewValue)||void 0===_a?void 0:_a.call(adjustment,resolved.value))&&void 0!==_b?_b:resolved.value;return newValue!==resolved.value&&(resolved.value=newValue,resolved.relabel=null!==(_c=adjustment.relabel)&&void 0!==_c?_c:null),resolved}),{value:modifier.modifier,relabel:null});modifier.modifier=resolvedAdjustment.value,resolvedAdjustment.relabel&&(modifier.label=game.i18n.localize(resolvedAdjustment.relabel)),modifier.damageType=adjustments.reduce(((damageType,adjustment)=>{var _a,_b;return null!==(_b=null===(_a=adjustment.getDamageType)||void 0===_a?void 0:_a.call(adjustment,damageType))&&void 0!==_b?_b:damageType}),modifier.damageType)}}exports.StatisticModifier=StatisticModifier,exports.adjustModifiers=adjustModifiers;exports.CheckModifier=class CheckModifier extends StatisticModifier{constructor(slug,statistic,modifiers=[],rollOptions=new Set){super(slug,statistic.modifiers.map((modifier=>modifier.clone())).concat(modifiers),rollOptions)}};class DiceModifierPF2e{constructor(param){var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l;if(this.label=game.i18n.localize(null!==(_a=param.label)&&void 0!==_a?_a:""),this.slug=(0,_util_1.sluggify)(null!==(_b=param.slug)&&void 0!==_b?_b:this.label),!this.slug)throw(0,_util_1.ErrorPF2e)("A DiceModifier must have a slug");this.diceNumber=null!==(_c=param.diceNumber)&&void 0!==_c?_c:0,this.dieSize=null!==(_d=param.dieSize)&&void 0!==_d?_d:null,this.critical=null!==(_e=param.critical)&&void 0!==_e?_e:null,this.damageType=null!==(_f=param.damageType)&&void 0!==_f?_f:null,this.category=null!==(_g=param.category)&&void 0!==_g?_g:null,this.override=null!==(_h=param.override)&&void 0!==_h?_h:null,this.custom=null!==(_j=param.custom)&&void 0!==_j&&_j,this.damageType&&(null!==(_k=this.category)&&void 0!==_k||(this.category=helpers_1.DamageCategorization.fromDamageType(this.damageType))),this.predicate=new predication_1.PredicatePF2e(null!==(_l=param.predicate)&&void 0!==_l?_l:[]),this.enabled=this.predicate.test([]),this.ignored=!this.enabled}}exports.DiceModifierPF2e=DiceModifierPF2e;class DamageDicePF2e extends DiceModifierPF2e{constructor(params){var _a;const predicate=params.predicate instanceof predication_1.PredicatePF2e?params.predicate:new predication_1.PredicatePF2e(null!==(_a=params.predicate)&&void 0!==_a?_a:[]);if(super({...params,predicate}),!params.selector)throw(0,_util_1.ErrorPF2e)("Selector is mandatory");this.selector=params.selector}clone(){return new DamageDicePF2e(this)}}exports.DamageDicePF2e=DamageDicePF2e},43497:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.NPCConfig=void 0;const config_1=__webpack_require__(81245),helpers_1=__webpack_require__(69554);class NPCConfig extends config_1.CreatureConfig{async getData(options={}){const lootableOptions={default:"PF2E.Actor.NPC.Configure.Lootable."+(game.settings.get("pf2e","automation.lootableNPCs")?"DefaultLootable":"DefaultNotLootable"),lootable:"PF2E.Actor.NPC.Configure.Lootable.Lootable",notLootable:"PF2E.Actor.NPC.Configure.Lootable.NotLootable"},lootableSelection=(()=>{var _a;const storedSelection=null===(_a=this.actor._source.flags.pf2e)||void 0===_a?void 0:_a.lootable;return"boolean"==typeof storedSelection?storedSelection?"lootable":"notLootable":"default"})();return{...await super.getData(options),lootable:(0,helpers_1.createSheetOptions)(lootableOptions,{value:[lootableSelection]})}}async _updateObject(event,formData){const key="flags.pf2e.lootable",lootable=formData[key];return"default"===lootable?(delete formData[key],formData["flags.pf2e.-=lootable"]=null):formData[key]="lootable"===lootable,super._updateObject(event,formData)}}exports.NPCConfig=NPCConfig},78382:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.NPCPF2e=void 0;const _actor_1=__webpack_require__(85530),values_1=__webpack_require__(49976),helpers_1=__webpack_require__(89503),modifiers_1=__webpack_require__(92823),values_2=__webpack_require__(8382),_item_1=__webpack_require__(10843),notes_1=__webpack_require__(46379),recall_knowledge_1=__webpack_require__(25306),util_1=__webpack_require__(58903),damage_1=__webpack_require__(12227),rolls_1=__webpack_require__(87525),check_1=__webpack_require__(11848),localize_1=__webpack_require__(41332),predication_1=__webpack_require__(538),statistic_1=__webpack_require__(77486),_util_1=__webpack_require__(6945),strike_attack_traits_1=__webpack_require__(27582);class NPCPF2e extends _actor_1.CreaturePF2e{get allowedItemTypes(){return[...super.allowedItemTypes,"physical","spellcastingEntry","spell","action","melee","lore"]}get abilities(){return deepClone(this.system.abilities)}get description(){return this.system.details.publicNotes}get isElite(){return"elite"===this.attributes.adjustment}get isWeak(){return"weak"===this.attributes.adjustment}canUserModify(user,action){return"update"===action&&this.isLootable?this.permission>=CONST.DOCUMENT_PERMISSION_LEVELS.LIMITED:super.canUserModify(user,action)}get visible(){return!this.isToken&&this.prototypeToken.actorLink?super.visible:this.permission>=CONST.DOCUMENT_PERMISSION_LEVELS.OBSERVER}get isLootable(){const npcsAreLootable=game.settings.get("pf2e","automation.lootableNPCs");return this.isDead&&(npcsAreLootable||this.flags.pf2e.lootable)}get permission(){return game.user.isGM||!this.isLootable?super.permission:Math.max(super.permission,1)}testUserPermission(user,permission,options){return game.user.isGM||!this.isLootable?super.testUserPermission(user,permission,options):[1,"LIMITED"].includes(permission)&&!options?this.permission>=CONST.DOCUMENT_PERMISSION_LEVELS.LIMITED:super.testUserPermission(user,permission,options)}prepareBaseData(){var _a,_b;super.prepareBaseData(),null!==(_a=(_b=this.flags.pf2e).lootable)&&void 0!==_a||(_b.lootable=!1);const systemData=this.system;systemData.actions=[];for(const key of values_2.SAVE_TYPES)systemData.saves[key].ability=CONFIG.PF2E.savingThrowDefaultAbilities[key];const{attributes,details}=systemData;attributes.perception.ability="wis",attributes.reach={general:values_1.SIZE_TO_REACH[this.size],manipulate:values_1.SIZE_TO_REACH[this.size]},void 0===details.alliance&&(details.alliance=this.hasPlayerOwner?"party":"opposition");const proficiencyWithoutLevel="ProficiencyWithoutLevel"===game.settings.get("pf2e","proficiencyVariant");details.identification=(0,recall_knowledge_1.identifyCreature)(this,{proficiencyWithoutLevel}),this.system.attributes.flanking.flankable=!systemData.traits.value.includes("troop")}prepareEmbeddedDocuments(){const{level}=this.system.details,baseLevel=level.value;level.value=this.isElite?baseLevel+1:this.isWeak?baseLevel-1:baseLevel,level.base=baseLevel,this.rollOptions.all[`self:level:${level.value}`]=!0,super.prepareEmbeddedDocuments()}prepareDerivedData(){var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l,_m;super.prepareDerivedData();const{system}=this,{synthetics}=this,{modifierAdjustments,damageDice,statisticsModifiers,strikes,rollNotes}=synthetics,itemTypes=this.itemTypes,baseLevel=this.system.details.level.base;this.isElite?(modifierAdjustments.all.push({slug:"base",getNewValue:base=>base+2,predicate:new predication_1.PredicatePF2e}),statisticsModifiers.hp=null!==(_a=statisticsModifiers.hp)&&void 0!==_a?_a:[],statisticsModifiers.hp.push((()=>new modifiers_1.ModifierPF2e("PF2E.NPC.Adjustment.EliteLabel",this.getHpAdjustment(baseLevel,"elite"),modifiers_1.MODIFIER_TYPE.UNTYPED)))):this.isWeak&&(modifierAdjustments.all.push({slug:"base",getNewValue:base=>base-2,predicate:new predication_1.PredicatePF2e}),statisticsModifiers.hp=null!==(_b=statisticsModifiers.hp)&&void 0!==_b?_b:[],statisticsModifiers.hp.push((()=>new modifiers_1.ModifierPF2e("PF2E.NPC.Adjustment.WeakLabel",-1*this.getHpAdjustment(baseLevel,"weak"),modifiers_1.MODIFIER_TYPE.UNTYPED)))),system.details.level.base=baseLevel;for(const ability of Object.values(this.system.abilities))ability.mod=Number(ability.mod)||0,ability.value=2*ability.mod+10;{const base=system.attributes.hp.max,modifiers=[(0,util_1.extractModifiers)(this.synthetics,["hp"],{test:this.getRollOptions(["hp"])}),(0,util_1.extractModifiers)(this.synthetics,["hp-per-level"],{test:this.getRollOptions(["hp-per-level"])}).map((modifier=>(modifier.modifier*=this.level,modifier)))].flat(),hpData=deepClone(system.attributes.hp),stat=mergeObject(new modifiers_1.StatisticModifier("hp",modifiers),hpData,{overwrite:!1});stat.base=base,stat.max=stat.max+stat.totalModifier,stat.value=Math.min(stat.value,stat.max),stat.breakdown=[game.i18n.format("PF2E.MaxHitPointsBaseLabel",{base}),...stat.modifiers.filter((m=>m.enabled)).map((m=>`${m.label} ${m.modifier<0?"":"+"}${m.modifier}`))].join(", "),system.attributes.hp=stat;const percentRemaining=Math.floor(stat.value/stat.max*100);this.rollOptions.all[`hp-remaining:${stat.value}`]=!0,this.rollOptions.all[`hp-percent:${percentRemaining}`]=!0}(system.attributes.speed=this.prepareSpeed("land")).otherSpeeds=["burrow","climb","fly","swim"].flatMap((m=>{var _a;return null!==(_a=this.prepareSpeed(m))&&void 0!==_a?_a:[]}));{const base=system.attributes.ac.value,domains=["ac","dex-based","all"],modifiers=[new modifiers_1.ModifierPF2e({slug:"base",label:"PF2E.ModifierTitle",modifier:base,adjustments:(0,util_1.extractModifierAdjustments)(modifierAdjustments,domains,"base")}),null!==(_c=this.getShieldBonus())&&void 0!==_c?_c:[],(0,util_1.extractModifiers)(this.synthetics,domains)].flat(),rollOptions=this.getRollOptions(domains),stat=mergeObject(new modifiers_1.StatisticModifier("ac",modifiers,rollOptions),system.attributes.ac,{overwrite:!1});stat.base=base,stat.value=stat.totalModifier,stat.breakdown=stat.modifiers.filter((m=>m.enabled)).map((m=>{if("base"===m.slug)return`10 + ${m.modifier-10} ${m.label}`;{const sign=m.modifier<0?"":"+";return`${m.label} ${sign}${m.modifier}`}})).join(", "),system.attributes.ac=stat}this.prepareSaves();{const domains=["perception","wis-based","all"],base=system.attributes.perception.value,modifiers=[new modifiers_1.ModifierPF2e({slug:"base",label:"PF2E.ModifierTitle",modifier:base,adjustments:(0,util_1.extractModifierAdjustments)(modifierAdjustments,domains,"base")}),...(0,util_1.extractModifiers)(this.synthetics,domains)],stat=mergeObject(new modifiers_1.StatisticModifier("perception",modifiers,this.getRollOptions(domains)),system.attributes.perception,{overwrite:!1});stat.adjustments=(0,util_1.extractDegreeOfSuccessAdjustments)(synthetics,domains),stat.base=base,stat.notes=(0,util_1.extractNotes)(rollNotes,domains),stat.value=stat.totalModifier,stat.breakdown=stat.modifiers.filter((m=>m.enabled)).map((m=>`${m.label} ${m.modifier<0?"":"+"}${m.modifier}`)).join(", "),stat.roll=async params=>{var _a,_b,_c;const label=game.i18n.localize("PF2E.PerceptionCheck"),rollOptions=new Set(null!==(_a=params.options)&&void 0!==_a?_a:[]),rollTwice=(0,util_1.extractRollTwice)(this.synthetics.rollTwice,domains,rollOptions),roll=await check_1.CheckPF2e.roll(new modifiers_1.CheckModifier(label,stat),{actor:this,type:"perception-check",options:new Set(null!==(_b=params.options)&&void 0!==_b?_b:[]),dc:params.dc,rollTwice,notes:stat.notes},params.event,params.callback);for(const rule of this.rules.filter((r=>!r.ignored)))await(null===(_c=rule.afterRoll)||void 0===_c?void 0:_c.call(rule,{roll,selectors:domains,domains,rollOptions}));return roll},system.attributes.perception=stat}system.skills={};for(const skill of values_2.SKILL_LONG_FORMS){const{ability,shortform}=values_2.SKILL_EXPANDED[skill],domains=[skill,`${ability}-based`,"skill-check",`${ability}-skill-check`,"all"],modifiers=[new modifiers_1.ModifierPF2e({slug:"base",label:"PF2E.ModifierTitle",modifier:system.abilities[ability].mod,adjustments:(0,util_1.extractModifierAdjustments)(modifierAdjustments,domains,"base")}),...(0,util_1.extractModifiers)(this.synthetics,domains)],notes=(0,util_1.extractNotes)(rollNotes,domains),name=game.i18n.localize(`PF2E.Skill${values_2.SKILL_DICTIONARY[shortform].capitalize()}`),stat=mergeObject(new modifiers_1.StatisticModifier(skill,modifiers,this.getRollOptions(domains)),{ability,expanded:skill,label:name,value:0,visible:!1,roll:async params=>{var _a,_b;console.warn(`Rolling skill checks via actor.system.skills.${shortform}.roll() is deprecated, use actor.skills.${skill}.check.roll() instead`);const label=game.i18n.format("PF2E.SkillCheckWithName",{skillName:name}),rollOptions=new Set(null!==(_a=params.options)&&void 0!==_a?_a:[]),rollTwice=(0,util_1.extractRollTwice)(this.synthetics.rollTwice,domains,rollOptions),context={actor:this,type:"skill-check",options:rollOptions,dc:params.dc,rollTwice,notes},roll=await check_1.CheckPF2e.roll(new modifiers_1.CheckModifier(label,stat),context,params.event,params.callback);for(const rule of this.rules.filter((r=>!r.ignored)))await(null===(_b=rule.afterRoll)||void 0===_b?void 0:_b.call(rule,{roll,selectors:domains,domains,rollOptions}));return roll},lore:!1},{overwrite:!1});stat.adjustments=(0,util_1.extractDegreeOfSuccessAdjustments)(synthetics,domains),stat.value=stat.totalModifier,stat.breakdown=stat.modifiers.filter((m=>m.enabled)).map((m=>`${m.label} ${m.modifier<0?"":"+"}${m.modifier}`)).join(", "),system.skills[shortform]=stat}const generatedMelee=Array.from(strikes.values()).flatMap((w=>w.toNPCAttacks())),items=this.items.contents.concat(generatedMelee);for(const item of items)if(item.isOfType("lore")){const skill=(0,_util_1.sluggify)(item.name),{ability,shortform}=(0,_util_1.objectHasKey)(values_2.SKILL_EXPANDED,skill)?values_2.SKILL_EXPANDED[skill]:{ability:"int",shortform:skill},base=item.system.mod.value,domains=[skill,`${ability}-based`,"skill-check","lore-skill-check",`${ability}-skill-check`,"all"],modifiers=[new modifiers_1.ModifierPF2e({slug:"base",label:"PF2E.ModifierTitle",modifier:base,adjustments:(0,util_1.extractModifierAdjustments)(modifierAdjustments,domains,"base")}),(0,util_1.extractModifiers)(this.synthetics,domains)].flat(),stat=new modifiers_1.StatisticModifier(skill,modifiers,this.getRollOptions(domains)),additionalData={itemID:item.id,lore:!(0,_util_1.objectHasKey)(values_2.SKILL_EXPANDED,skill),ability,rank:1,adjustments:(0,util_1.extractDegreeOfSuccessAdjustments)(synthetics,domains),notes:(0,util_1.extractNotes)(rollNotes,domains),base,expanded:skill,label:item.name,value:stat.totalModifier,visible:!0,breakdown:stat.modifiers.filter((m=>m.enabled)).map((m=>`${m.label} ${m.modifier<0?"":"+"}${m.modifier}`)).join(", "),variants:Object.values(null!==(_d=item.system.variants)&&void 0!==_d?_d:{}),roll:async params=>{var _a,_b;console.warn(`Rolling skill checks via actor.system.skills.${shortform}.roll() is deprecated, use actor.skills.${skill}.check.roll() instead`);const label=game.i18n.format("PF2E.SkillCheckWithName",{skillName:item.name}),rollOptions=new Set(null!==(_a=params.options)&&void 0!==_a?_a:[]),rollTwice=(0,util_1.extractRollTwice)(this.synthetics.rollTwice,domains,rollOptions),context={actor:this,type:"skill-check",options:rollOptions,dc:params.dc,rollTwice,notes:stat.notes},roll=await check_1.CheckPF2e.roll(new modifiers_1.CheckModifier(label,stat),context,params.event,params.callback);for(const rule of this.rules.filter((r=>!r.ignored)))await(null===(_b=rule.afterRoll)||void 0===_b?void 0:_b.call(rule,{roll,selectors:domains,domains,rollOptions}));return roll}};system.skills[shortform]=mergeObject(stat,additionalData)}else if(item.isOfType("melee")){const{ability,traits,isMelee,isThrown}=item,slug=null!==(_e=item.slug)&&void 0!==_e?_e:(0,_util_1.sluggify)(item.name),unarmedOrWeapon=traits.has("unarmed")?"unarmed":"weapon",meleeOrRanged=isMelee?"melee":"ranged",domains=["attack","mundane-attack",`${slug}-attack`,`${ability}-attack`,`${ability}-based`,`${item.id}-attack`,`${unarmedOrWeapon}-attack-roll`,`${meleeOrRanged}-attack-roll`,"strike-attack-roll","attack-roll","all"],modifiers=[new modifiers_1.ModifierPF2e({slug:"base",label:"PF2E.ModifierTitle",modifier:item.attackModifier,adjustments:(0,util_1.extractModifierAdjustments)(modifierAdjustments,domains,"base")})];modifiers.push(...(0,util_1.extractModifiers)(this.synthetics,domains)),modifiers.push(...strike_attack_traits_1.StrikeAttackTraits.createAttackModifiers(item));const notes=(0,util_1.extractNotes)(rollNotes,domains),{imageUrl,actionGlyph}=_actor_1.ActorPF2e.getActionGraphics("action",1),attackEffects=CONFIG.PF2E.attackEffects,additionalEffects=item.attackEffects.map((tag=>{var _a,_b,_c;const label=null!==(_c=null!==(_a=attackEffects[tag])&&void 0!==_a?_a:null===(_b=this.items.find((item=>{var _a;return(null!==(_a=item.slug)&&void 0!==_a?_a:(0,_util_1.sluggify)(item.name))===tag})))||void 0===_b?void 0:_b.name)&&void 0!==_c?_c:tag;return{tag,label}})),baseOptions=[...this.getRollOptions(domains),...item.traits];isMelee?baseOptions.push("melee"):isThrown?baseOptions.push("ranged","thrown"):baseOptions.push("ranged");const statistic=new modifiers_1.StatisticModifier(`${slug}-strike`,modifiers,baseOptions);statistic.adjustments=(0,util_1.extractDegreeOfSuccessAdjustments)(synthetics,domains);const traitObjects=Array.from(traits).map((t=>{var _a;return{name:t,label:null!==(_a=CONFIG.PF2E.npcAttackTraits[t])&&void 0!==_a?_a:t,description:CONFIG.PF2E.traitsDescriptions[t]}})),action=mergeObject(statistic,{label:item.name,type:"strike",glyph:actionGlyph,description:item.description,imageUrl,sourceId:item.id,attackRollType:item.isRanged?"PF2E.NPCAttackRanged":"PF2E.NPCAttackMelee",additionalEffects,item,weapon:item,traits:traitObjects,options:[],variants:[],success:"",ready:!0,criticalSuccess:""});action.breakdown=action.modifiers.filter((m=>m.enabled)).map((m=>`${m.label} ${m.modifier<0?"":"+"}${m.modifier}`)).join(", "),action.damageBreakdown=Object.values(item.system.damageRolls).flatMap((roll=>{const damageType=game.i18n.localize(CONFIG.PF2E.damageTypes[roll.damageType]);return[`${roll.damage} ${damageType}`]}));const strikeLabel=game.i18n.localize("PF2E.WeaponStrikeLabel"),multipleAttackPenalty=(0,helpers_1.calculateMAPs)(item,{domains,options:baseOptions}),sign=action.totalModifier<0?"":"+",attackTrait={name:"attack",label:CONFIG.PF2E.featTraits.attack,description:CONFIG.PF2E.traitsDescriptions.attack};action.variants=[null,new modifiers_1.ModifierPF2e("PF2E.MultipleAttackPenalty",multipleAttackPenalty.map1,modifiers_1.MODIFIER_TYPE.UNTYPED),new modifiers_1.ModifierPF2e("PF2E.MultipleAttackPenalty",multipleAttackPenalty.map2,modifiers_1.MODIFIER_TYPE.UNTYPED)].map((map=>({label:map?game.i18n.format("PF2E.MAPAbbreviationLabel",{penalty:map.modifier}):`${strikeLabel} ${sign}${action.totalModifier}`,roll:async(params={})=>{var _a,_b,_c,_d,_e;const attackEffects=await this.getAttackEffects(item),rollNotes=notes.concat(attackEffects);null!==(_a=params.options)&&void 0!==_a||(params.options=[]);const context=this.getAttackRollContext({item,viewOnly:!1,domains,options:new Set([...baseOptions,...params.options,...traits])});if(context.self.item.isRanged&&"number"==typeof(null===(_b=context.target)||void 0===_b?void 0:_b.distance)){const maxRange=null!==(_c=item.maxRange)&&void 0!==_c?_c:10;if(context.target.distance>maxRange)return ui.notifications.warn("PF2E.Action.Strike.OutOfRange",{localize:!0}),null}const otherModifiers=[null!=map?map:[],context.self.modifiers].flat(),checkName=game.i18n.format(item.isMelee?"PF2E.Action.Strike.MeleeLabel":"PF2E.Action.Strike.RangedLabel",{weapon:item.name}),roll=await check_1.CheckPF2e.roll(new modifiers_1.CheckModifier(checkName,action,otherModifiers),{type:"attack-roll",actor:context.self.actor,item:context.self.item,target:context.target,domains,options:context.options,notes:rollNotes,dc:null!==(_d=params.dc)&&void 0!==_d?_d:context.dc,rollTwice:(0,util_1.extractRollTwice)(this.synthetics.rollTwice,domains,context.options),substitutions:(0,util_1.extractRollSubstitutions)(synthetics.rollSubstitutions,domains,context.options),traits:[attackTrait]},params.event);for(const rule of this.rules.filter((r=>!r.ignored)))await(null===(_e=rule.afterRoll)||void 0===_e?void 0:_e.call(rule,{roll,selectors:domains,domains,rollOptions:context.options}));return roll}}))),action.roll=action.attack=action.variants[0].roll;const damageRoll=outcome=>async(params={})=>{var _a;const domains=["all","strike-damage","damage-roll"],context=this.getDamageRollContext({item,viewOnly:!1,domains,options:new Set(null!==(_a=params.options)&&void 0!==_a?_a:[])}),options=new Set([...context.options,...traits,...context.self.item.getRollOptions("item")]);if(!context.self.item.dealsDamage)return ui.notifications.warn("PF2E.ErrorMessage.WeaponNoDamage",{localize:!0});const damage=damage_1.WeaponDamagePF2e.calculateStrikeNPC(context.self.item,context.self.actor,[attackTrait],deepClone(statisticsModifiers),deepClone(modifierAdjustments),deepClone(damageDice),1,options,rollNotes,this.synthetics.strikeAdjustments);if(!damage)throw(0,_util_1.ErrorPF2e)("This weapon deals no damage");const{self,target}=context;await rolls_1.DamageRollPF2e.roll(damage,{type:"damage-roll",self,target,outcome,options,domains},params.callback)};action.damage=damageRoll("success"),action.critical=damageRoll("criticalSuccess"),system.actions.push(action)}for(const entry of itemTypes.spellcastingEntry){const{ability,tradition}=entry;entry.system.spelldc.dc=Number(entry.system.spelldc.dc),entry.system.spelldc.value=Number(entry.system.spelldc.value),this.isElite?(entry.system.spelldc.dc+=2,entry.system.spelldc.value+=2):this.isWeak&&(entry.system.spelldc.dc-=2,entry.system.spelldc.value-=2);const baseSelectors=["all",`${ability}-based`,"spell-attack-dc"],attackSelectors=[`${tradition}-spell-attack`,"spell-attack","spell-attack-roll","attack","attack-roll"],saveSelectors=[`${tradition}-spell-dc`,"spell-dc"],baseMod=Number(null!==(_h=null===(_g=null===(_f=entry.system)||void 0===_f?void 0:_f.spelldc)||void 0===_g?void 0:_g.value)&&void 0!==_h?_h:0),attackModifiers=[new modifiers_1.ModifierPF2e("PF2E.ModifierTitle",baseMod,modifiers_1.MODIFIER_TYPE.UNTYPED)],baseDC=Number(null!==(_l=null===(_k=null===(_j=entry.system)||void 0===_j?void 0:_j.spelldc)||void 0===_k?void 0:_k.dc)&&void 0!==_l?_l:0),saveModifiers=[new modifiers_1.ModifierPF2e("PF2E.ModifierTitle",baseDC-10,modifiers_1.MODIFIER_TYPE.UNTYPED)];entry.statistic=new statistic_1.Statistic(this,{slug:(0,_util_1.sluggify)(entry.name),label:CONFIG.PF2E.magicTraditions[null!=tradition?tradition:"arcane"],domains:baseSelectors,rollOptions:entry.getRollOptions("spellcasting"),check:{type:"spell-attack-roll",modifiers:attackModifiers,domains:attackSelectors},dc:{modifiers:saveModifiers,domains:saveSelectors}})}this.prepareInitiative();for(const rule of this.rules)try{null===(_m=rule.afterPrepareData)||void 0===_m||_m.call(rule)}catch(error){console.error(`PF2e | Failed to execute onAfterPrepareData on rule element ${rule}.`,error)}}prepareSaves(){const systemData=this.system,{modifierAdjustments}=this.synthetics,saves={};for(const saveType of values_2.SAVE_TYPES){const save=systemData.saves[saveType],saveName=game.i18n.localize(CONFIG.PF2E.saves[saveType]),base=save.value,domains=[saveType,`${save.ability}-based`,"saving-throw","all"],stat=new statistic_1.Statistic(this,{slug:saveType,label:saveName,domains,modifiers:[new modifiers_1.ModifierPF2e({slug:"base",label:"PF2E.ModifierTitle",modifier:base,adjustments:(0,util_1.extractModifierAdjustments)(modifierAdjustments,domains,"base")})],check:{type:"saving-throw"}});saves[saveType]=stat,mergeObject(this.system.saves[saveType],stat.getTraceData()),systemData.saves[saveType].base=base}this.saves=saves}async getAttackEffects(attack){const notes=[];attack.description&&notes.push(new notes_1.RollNotePF2e({selector:"all",visibility:"gm",text:attack.description}));const formatItemName=item=>item.isOfType("consumable")?`${item.name} - ${localize_1.LocalizePF2e.translations.ITEM.TypeConsumable} (${item.quantity}) <button type="button" style="width: auto; line-height: 14px;" data-action="consume" data-item="${item.id}">${localize_1.LocalizePF2e.translations.PF2E.ConsumableUseLabel}</button>`:item.name,formatNoteText=item=>{const rollData=item.getRollData();return TextEditor.enrichHTML(item.description,{rollData,async:!0})};for(const attackEffect of attack.attackEffects){const item=this.items.find((i=>{var _a;return"melee"!==i.type&&(null!==(_a=i.slug)&&void 0!==_a?_a:(0,_util_1.sluggify)(i.name))===(0,_util_1.sluggify)(attackEffect)}));if(item){const note=new notes_1.RollNotePF2e({selector:"all",visibility:"gm",title:formatItemName(item),text:await formatNoteText(item)});notes.push(note)}else{const compendium=game.packs.get("pf2e.bestiary-ability-glossary-srd",{strict:!0}),packItem=(await compendium.getDocuments({"system.slug":{$in:[attackEffect]}}))[0];if(packItem instanceof _item_1.ItemPF2e){const note=new notes_1.RollNotePF2e({selector:"all",visibility:"gm",title:formatItemName(packItem),text:await formatNoteText(packItem)});notes.push(note)}}}return notes}getHpAdjustment(level,adjustment){if("elite"===adjustment){if(level>=20)return 30;if(level<=19&&level>=5)return 20;if(level<=4&&level>=2)return 15;if(level<=1)return 10}else if("weak"===adjustment){if(level>=21)return 30;if(level<=20&&level>=6)return 20;if(level<=5&&level>=3)return 15;if(1===level||2===level)return 10}return 0}async applyAdjustment(adjustment){const{isElite,isWeak}=this;if(isElite&&"elite"===adjustment||isWeak&&"weak"===adjustment||!isElite&&!isWeak&&!adjustment)return;const currentHPAdjustment=(()=>isElite?this.getHpAdjustment(this.getBaseLevel(),"elite"):isWeak?this.getHpAdjustment(this.getBaseLevel(),"weak"):0)(),newHPAdjustment=this.getHpAdjustment(this.getBaseLevel(),adjustment),currentHP=this.system.attributes.hp.value,maxHP=this.system.attributes.hp.max,newHP=(()=>{if(isElite){if("weak"===adjustment)return currentHP-currentHPAdjustment-newHPAdjustment;if(!adjustment)return currentHP-currentHPAdjustment}else if(isWeak){if("elite"===adjustment)return this.system.attributes.hp.max=maxHP+currentHPAdjustment+newHPAdjustment,currentHP+currentHPAdjustment+newHPAdjustment;if(!adjustment)return this.system.attributes.hp.max=maxHP+currentHPAdjustment,currentHP+currentHPAdjustment}else{if("elite"===adjustment)return this.system.attributes.hp.max=currentHP+newHPAdjustment,currentHP+newHPAdjustment;if("weak"===adjustment)return currentHP-newHPAdjustment}return currentHP})();await this.update({"system.attributes.hp.value":Math.max(0,newHP),"system.attributes.adjustment":adjustment})}getBaseLevel(){return this.isElite?this.level-1:this.isWeak?this.level+1:this.level}variantClone(params){var _a,_b,_c,_d,_e,_f;const source=this._source,changes={name:null!==(_a=params.name)&&void 0!==_a?_a:this.name,system:{details:{publicNotes:null!==(_b=params.description)&&void 0!==_b?_b:source.system.details.publicNotes}},img:null!==(_d=null===(_c=params.img)||void 0===_c?void 0:_c.actor)&&void 0!==_d?_d:source.img,prototypeToken:{texture:{src:null!==(_f=null===(_e=params.img)||void 0===_e?void 0:_e.token)&&void 0!==_f?_f:source.prototypeToken.texture.src}}};return this.clone(changes,{save:params.save,keepId:params.keepId})}}exports.NPCPF2e=NPCPF2e},89536:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.NPCSheetPF2e=void 0;const sheet_1=__webpack_require__(83936),values_1=__webpack_require__(49976),skills_editor_1=__webpack_require__(58998),values_2=__webpack_require__(8382),dice_1=__webpack_require__(18235),sheet_util_1=__webpack_require__(15806),_util_1=__webpack_require__(6945),recall_knowledge_popup_1=__webpack_require__(75242),config_1=__webpack_require__(43497);class NPCSheetPF2e extends sheet_1.CreatureSheetPF2e{constructor(){super(...arguments),this.actorConfigClass=config_1.NPCConfig}static get defaultOptions(){const options=super.defaultOptions;return mergeObject(options,{classes:options.classes.concat("npc"),width:650,height:680,tabs:[{navSelector:".sheet-tabs",contentSelector:".sheet-body",initial:"main"}],scrollY:[".tab.main",".tab.inventory",".tab.spells",".tab.effects",".tab.notes"]}),options}get template(){return this.isLootSheet?"systems/pf2e/templates/actors/npc/loot-sheet.html":this.actor.limited?"systems/pf2e/templates/actors/limited/npc-sheet.html":"systems/pf2e/templates/actors/npc/sheet.html"}get title(){var _a,_b;if(this.isLootSheet||this.actor.limited){const actorName=null!==(_b=null===(_a=this.token)||void 0===_a?void 0:_a.name)&&void 0!==_b?_b:this.actor.name;return this.actor.isDead?`${actorName} [${game.i18n.localize("PF2E.NPC.Dead")}]`:actorName}return super.title}get isLootSheet(){return this.actor.isLootable&&!this.actor.isOwner&&this.actor.isLootableBy(game.user)}async prepareItems(sheetData){this.prepareAbilities(sheetData.data.abilities),this.prepareSize(sheetData.data),this.prepareAlignment(sheetData.data),this.prepareSkills(sheetData.data),this.prepareSaves(sheetData.data),await this.prepareActions(sheetData),sheetData.attacks=await this.prepareAttacks(sheetData.data),sheetData.effectItems=sheetData.items.filter((data=>"effect"===data.type)),sheetData.spellcastingEntries=await this.prepareSpellcasting()}async getData(){var _a,_b,_c,_d;const sheetData=await super.getData();(this.actor.limited||this.isLootSheet)&&(sheetData.actor.name=null!==(_b=null===(_a=this.actor.token)||void 0===_a?void 0:_a.name)&&void 0!==_b?_b:sheetData.actor.name);const alignmentTraits=values_1.ALIGNMENT_TRAITS,actorTraits=sheetData.data.traits;actorTraits.value=actorTraits.value.filter((t=>!alignmentTraits.has(t)));const identifyCreatureData=sheetData.identifyCreatureData=sheetData.data.details.identification;sheetData.identifySkillDC=identifyCreatureData.skill.dc,sheetData.identifySkillAdjustment=CONFIG.PF2E.dcAdjustments[identifyCreatureData.skill.start],sheetData.identifySkillProgression=identifyCreatureData.skill.progression.join("/"),sheetData.identificationSkills=Array.from(sheetData.identifyCreatureData.skills).sort().map((skill=>CONFIG.PF2E.skillList[skill])),sheetData.specificLoreDC=identifyCreatureData.specificLoreDC.dc,sheetData.specificLoreAdjustment=CONFIG.PF2E.dcAdjustments[identifyCreatureData.specificLoreDC.start],sheetData.specificLoreProgression=identifyCreatureData.specificLoreDC.progression.join("/"),sheetData.unspecificLoreDC=identifyCreatureData.unspecificLoreDC.dc,sheetData.unspecificLoreAdjustment=CONFIG.PF2E.dcAdjustments[identifyCreatureData.unspecificLoreDC.start],sheetData.unspecificLoreProgression=identifyCreatureData.unspecificLoreDC.progression.join("/"),sheetData.isNotCommon="common"!==sheetData.data.traits.rarity,sheetData.actorSize=CONFIG.PF2E.actorSizes[sheetData.data.traits.size.value];const{heldShield}=this.actor,actorShieldData=sheetData.data.attributes.shield;sheetData.hasShield=!!heldShield||actorShieldData.hp.max>0;const isElite=this.actor.isElite,isWeak=this.actor.isWeak;sheetData.isElite=isElite,sheetData.isWeak=isWeak,sheetData.notAdjusted=!isElite&&!isWeak,isElite?(sheetData.eliteState="active",sheetData.weakState="inactive"):isWeak?(sheetData.eliteState="inactive",sheetData.weakState="active"):(sheetData.eliteState="inactive",sheetData.weakState="inactive"),this.isLootSheet&&(sheetData.actor.name=null!==(_d=null===(_c=this.token)||void 0===_c?void 0:_c.name)&&void 0!==_d?_d:this.actor.name);const{level}=sheetData.data.details;level.adjustedHigher=level.value>Number(level.base),level.adjustedLower=level.value<Number(level.base);const{ac,hp,perception,hardness}=sheetData.data.attributes;ac.adjustedHigher=ac.value>Number(ac.base),ac.adjustedLower=ac.value<Number(ac.base),hp.adjustedHigher=hp.max>Number(hp.base),hp.adjustedLower=hp.max<Number(hp.base),perception.adjustedHigher=perception.totalModifier>Number(perception.base),perception.adjustedLower=perception.totalModifier<Number(perception.base),sheetData.hasHardness=this.actor.traits.has("construct")||(Number(null==hardness?void 0:hardness.value)||0)>0,sheetData.configLootableNpc=game.settings.get("pf2e","automation.lootableNPCs");const rollData=this.actor.getRollData();return sheetData.enrichedContent.publicNotes=await TextEditor.enrichHTML(sheetData.data.details.publicNotes,{rollData,async:!0}),sheetData.enrichedContent.privateNotes=await TextEditor.enrichHTML(sheetData.data.details.privateNotes,{rollData,async:!0}),sheetData}activateListeners($html){super.activateListeners($html);const html=$html.get(0);this.isLootSheet&&$html.find(".tab.inventory").addClass("active");const traitsEl=html.querySelector('input[name="system.traits.value"]');traitsEl&&(0,_util_1.tagify)(traitsEl,{whitelist:CONFIG.PF2E.monsterTraits});const rollables=["a.rollable",".rollable a",".item-icon.rollable"].join(", ");$html.find(rollables).on("click",(event=>this.onClickRollable(event))),this.options.editable&&($html.find(".trait-edit").on("click",(event=>this.onTraitSelector(event))),$html.find(".skills-edit").on("click",(()=>{new skills_editor_1.NPCSkillsEditor(this.actor).render(!0)})),$html.find(".adjustment").on("click",(event=>{const adjustment=String(event.target.dataset.adjustment);if("elite"===adjustment||"weak"===adjustment){const alreadyHasAdjustment=adjustment===this.actor.system.attributes.adjustment;this.actor.applyAdjustment(alreadyHasAdjustment?null:adjustment)}})),$html.find(".spellcasting-entry").find(".attack-input, .dc-input, .ability-score select").on("change",(event=>this.onChangeSpellcastingEntry(event))),$html.find(".effects-list > .effect > .item-image").on("contextmenu",(event=>this.onClickDeleteItem(event))),$html.find(".recall-knowledge button.breakdown").on("click",(event=>{event.preventDefault();const identifyCreatureData=this.actor.system.details.identification;new recall_knowledge_popup_1.RecallKnowledgePopup({},identifyCreatureData).render(!0)})),$html.find(".item-control[data-action=generate-attack]").on("click",(async event=>{var _a,_b,_c,_d;const{actor}=this,itemId=null!==(_b=null===(_a=event.currentTarget.closest(".item"))||void 0===_a?void 0:_a.dataset.itemId)&&void 0!==_b?_b:"",item=actor.items.get(itemId,{strict:!0});if(!item.isOfType("weapon"))return;const existing=actor.itemTypes.melee.filter((m=>m.flags.pf2e.linkedWeapon===itemId)).map((m=>m.id));if(existing.length>0){if(!await Dialog.confirm({title:game.i18n.localize("PF2E.Actor.NPC.GenerateAttack.Confirm.Title"),content:game.i18n.localize("PF2E.Actor.NPC.GenerateAttack.Confirm.Content"),defaultYes:!1}))return;await actor.deleteEmbeddedDocuments("Item",existing,{render:!1})}const attacks=item.toNPCAttacks().map((a=>a.toObject()));await actor.createEmbeddedDocuments("Item",attacks),ui.notifications.info(game.i18n.format("PF2E.Actor.NPC.GenerateAttack.Notification",{attack:null!==(_d=null===(_c=attacks.at(0))||void 0===_c?void 0:_c.name)&&void 0!==_d?_d:""}))})))}prepareAbilities(abilities){for(const key of values_2.ABILITY_ABBREVIATIONS){const data=abilities[key],localizedCode=game.i18n.localize(`PF2E.AbilityId.${key}`),nameKey=this.getAbilityNameKey(key),localizedName=game.i18n.localize(nameKey);data.localizedCode=localizedCode,data.localizedName=localizedName}}prepareSize(sheetSystemData){const size=sheetSystemData.traits.size.value,localizationKey=this.getSizeLocalizedKey(size),localizedName=game.i18n.localize(localizationKey);sheetSystemData.traits.size.localizedName=localizedName}prepareAlignment(sheetSystemData){const alignmentCode=sheetSystemData.details.alignment.value,localizedName=game.i18n.localize(`PF2E.Alignment${alignmentCode}`);sheetSystemData.details.alignment.localizedName=localizedName}prepareSkills(sheetSystemData){var _a;const sortedSkillsIds=Object.keys(sheetSystemData.skills),skills=sheetSystemData.skills;for(const skillId of sortedSkillsIds){const skill=skills[skillId];skill.label=(0,_util_1.objectHasKey)(CONFIG.PF2E.skillList,skill.expanded)?game.i18n.localize(CONFIG.PF2E.skillList[skill.expanded]):null!==(_a=skill.label)&&void 0!==_a?_a:skill.slug,skill.adjustedHigher=skill.value>Number(skill.base),skill.adjustedLower=skill.value<Number(skill.base)}sortedSkillsIds.sort(((a,b)=>{const skillA=skills[a],skillB=skills[b];return skillA.label<skillB.label?-1:skillA.label>skillB.label?1:0}));const sortedSkills={};for(const skillId of sortedSkillsIds)sortedSkills[skillId]=skills[skillId];sheetSystemData.sortedSkills=sortedSkills}prepareSaves(systemData){for(const saveType of values_2.SAVE_TYPES){const save=systemData.saves[saveType];save.labelShort=game.i18n.localize(`PF2E.Saves${saveType.titleCase()}Short`),save.adjustedHigher=save.totalModifier>Number(save.base),save.adjustedLower=save.totalModifier<Number(save.base)}}async prepareSpellcasting(){const entries=await super.prepareSpellcasting();for(const entry of entries){const entryItem=this.actor.items.get(entry.id);(null==entryItem?void 0:entryItem.isOfType("spellcastingEntry"))&&(entry.adjustedHigher={dc:entry.statistic.dc.value>entryItem._source.system.spelldc.dc,mod:entry.statistic.check.mod>entryItem._source.system.spelldc.value},entry.adjustedLower={dc:entry.statistic.dc.value<entryItem._source.system.spelldc.dc,mod:entry.statistic.check.mod<entryItem._source.system.spelldc.value})}return entries}async prepareActions(sheetData){var _a,_b;const actions={passive:{label:game.i18n.localize("PF2E.ActionTypePassive"),actions:[]},free:{label:game.i18n.localize("PF2E.ActionTypeFree"),actions:[]},reaction:{label:game.i18n.localize("PF2E.ActionTypeReaction"),actions:[]},action:{label:game.i18n.localize("PF2E.ActionTypeAction"),actions:[]}};for(const item of this.actor.itemTypes.action){const itemData=item.toObject(!1),chatData=await item.getChatData(),traits=null!==(_a=chatData.traits)&&void 0!==_a?_a:[],systemData=itemData.system;if(systemData.actionType&&systemData.actionType.value){const configTraitDescriptions=CONFIG.PF2E.traitsDescriptions,configAttackTraits=CONFIG.PF2E.npcAttackTraits,actionTrait=systemData.actionType.value,trait={label:(0,_util_1.objectHasKey)(configAttackTraits,actionTrait)?configAttackTraits[actionTrait]:actionTrait.charAt(0).toUpperCase()+actionTrait.slice(1),description:(0,_util_1.objectHasKey)(configTraitDescriptions,actionTrait)?configTraitDescriptions[actionTrait]:"",value:""};traits.splice(0,0,trait)}const actionType=(null===(_b=item.actionCost)||void 0===_b?void 0:_b.type)||"passive";(0,_util_1.objectHasKey)(actions,actionType)&&actions[actionType].actions.push({...itemData,glyph:(0,_util_1.getActionGlyph)(item.actionCost),imageUrl:(0,_util_1.getActionIcon)(item.actionCost),chatData,traits})}sheetData.actions=actions}async prepareAttacks(sheetData){const attackTraits=CONFIG.PF2E.npcAttackTraits,traitDescriptions=CONFIG.PF2E.traitsDescriptions,actorRollData=this.actor.getRollData();return Promise.all(sheetData.actions.map((async attack=>{const itemRollData=attack.item.getRollData();attack.description=await TextEditor.enrichHTML(attack.description,{rollData:{...actorRollData,...itemRollData},async:!0});const traits=attack.traits.map((strikeTrait=>{var _a,_b;return{label:null!==(_a=attackTraits[strikeTrait.label])&&void 0!==_a?_a:strikeTrait.label,description:null!==(_b=traitDescriptions[strikeTrait.name])&&void 0!==_b?_b:""}})).sort(((a,b)=>a.label<b.label?-1:a.label>b.label?1:0));return{attack,traits}})))}getSizeLocalizedKey(size){const actorSizes=CONFIG.PF2E.actorSizes;return(0,_util_1.objectHasKey)(actorSizes,size)?actorSizes[size]:""}getAbilityNameKey(abilityCode){return CONFIG.PF2E.abilities[abilityCode]}async rollPerception(event){const options=this.actor.getRollOptions(["all","perception-check"]);await this.actor.attributes.perception.roll({event,options})}async rollAbility(event,abilityId){const bonus=this.actor.system.abilities[abilityId].mod,title=game.i18n.localize(`PF2E.AbilityCheck.${abilityId}`),data={bonus},speaker=ChatMessage.getSpeaker({token:this.token,actor:this.actor});await dice_1.DicePF2e.d20Roll({event,parts:["@bonus"],data,title,speaker})}async onClickRollable(event){var _a,_b,_c,_d;event.preventDefault();const label=event.currentTarget.closest(".rollable"),{attribute,save,skill}=null!==(_b=null===(_a=null==label?void 0:label.parentElement)||void 0===_a?void 0:_a.dataset)&&void 0!==_b?_b:{},rollParams=(0,sheet_util_1.eventToRollParams)(event);if(attribute)"perception"===attribute?await this.rollPerception(event):(0,_util_1.setHasElement)(values_2.ABILITY_ABBREVIATIONS,attribute)&&this.rollAbility(event,attribute);else if(skill){const extraRollOptions=null===(_c=event.currentTarget.dataset.options)||void 0===_c?void 0:_c.split(",").map((o=>o.trim())).filter((o=>!!o)),key=(0,_util_1.objectHasKey)(values_2.SKILL_DICTIONARY,skill)?values_2.SKILL_DICTIONARY[skill]:skill;await(null===(_d=this.actor.skills[key])||void 0===_d?void 0:_d.check.roll({...rollParams,extraRollOptions}))}else(0,_util_1.objectHasKey)(this.actor.saves,save)&&await this.actor.saves[save].check.roll(rollParams)}async onChangeSpellcastingEntry(event){var _a,_b,_c;event.preventDefault();const $input=$(event.currentTarget),itemId=null!==(_a=$input.closest(".spellcasting-entry").attr("data-container-id"))&&void 0!==_a?_a:"",key=null!==(_c=null===(_b=$input.attr("data-base-property"))||void 0===_b?void 0:_b.replace(/data\.items\.\d+\./,""))&&void 0!==_c?_c:"",value=$input.hasClass("focus-points")||$input.hasClass("focus-pool")?Math.min(Number($input.val()),3):$input.is("select")?String($input.val()):Number($input.val());await this.actor.updateEmbeddedDocuments("Item",[{_id:itemId,[key]:value}])}async _updateObject(event,formData){if(this.actor.isElite||this.actor.isWeak){const{max}=this.actor.system.attributes.hp;formData["system.attributes.hp.max"]===max&&delete formData["system.attributes.hp.max"]}const shield=this.actor.heldShield;return shield&&Number.isInteger(formData["system.attributes.shield.value"])&&await shield.update({"system.hp.value":formData["system.attributes.shield.value"]}),super._updateObject(event,formData)}}exports.NPCSheetPF2e=NPCSheetPF2e},58998:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.NPCSkillsEditor=void 0;const values_1=__webpack_require__(8382),_util_1=__webpack_require__(6945);class NPCSkillsEditor extends FormApplication{get npc(){return this.object}static get defaultOptions(){const options=super.defaultOptions;return options.id="npc-skills-selector",options.classes=["pf2e","npc"],options.title=game.i18n.localize("PF2E.NPC.SkillsEditor.TitleLabel"),options.template="systems/pf2e/templates/actors/npc/forms/npc-skills-editor.html",options.width="auto",options.height=700,options.scrollY=[".skills-list"],options}getData(){const trainedSkills={},untrainedSkills={},{skills}=this.npc.system;for(const[key,skill]of Object.entries(skills))this.isLoreSkill(key)?(skill.isLore=!0,trainedSkills[key]=skill):skill.visible?trainedSkills[key]=skill:untrainedSkills[key]=skill;return{...super.getData(),trainedSkills,untrainedSkills}}activateListeners($html){super.activateListeners($html),$html.find(".delete").on("click",(event=>this.onClickRemoveSkill(event))),$html.find(".add-lore-button").on("click",(event=>this.onClickAddLoreSkill(event))),$html.find(".item-edit").on("click",(event=>this.onClickEditSkill(event))),$html.find(".add-skill-button").on("click",(event=>this.onClickAddSkill(event)))}async onClickAddSkill(eventData){eventData.preventDefault();const skillId=$(eventData.currentTarget).parents("#skill-selector").find("select").val(),itemName=this.findSkillName(skillId).replace(/-/g," ").titleCase();await this.npc.createEmbeddedDocuments("Item",[{name:itemName,type:"lore"}]),this.render()}async onClickRemoveSkill(event){event.preventDefault();const skillContainer=$(event.currentTarget).parents(".skill"),skillId=skillContainer.attr("data-skill"),skillItem=this.findSkillItem(null!=skillId?skillId:"");skillItem?(skillContainer.remove(),await skillItem.delete(),this.render(!0)):console.error("Unable to delete skill, couldn't find skill item.")}async onClickAddLoreSkill(event){event.preventDefault();const loreNameField=$(event.currentTarget).parents("#lore-skill-creator").find("input"),data={name:String(loreNameField.val()),type:"lore",system:{mod:{value:0}}};await this.npc.createEmbeddedDocuments("Item",[data]),this.render()}onClickEditSkill(event){const skillId=$(event.currentTarget).parents(".skill").attr("data-skill"),item=this.findSkillItem(null!=skillId?skillId:"");if(!item)throw(0,_util_1.ErrorPF2e)(`Unable to find item for skill ${skillId}.`);item.sheet.render(!0)}async _updateObject(_event,formData){const updates=Object.entries(formData).flatMap((([key,modifier])=>{const value=Number(modifier)||0,skillItem=this.findSkillItem(key);return skillItem?{_id:skillItem.id,"system.mod.value":value}:[]}));await this.npc.updateEmbeddedDocuments("Item",updates)}isLoreSkill(skillId){return!this.isRegularSkill(skillId)}isRegularSkill(skillId){for(const longForm of values_1.SKILL_LONG_FORMS){if(longForm===skillId)return!0;if(values_1.SKILL_EXPANDED[longForm].shortform===skillId)return!0}return!1}findSkillName(skillId){for(const longForm of values_1.SKILL_LONG_FORMS){if(values_1.SKILL_EXPANDED[longForm].shortform===skillId)return longForm}return skillId}findSkillItem(skillId){var _a;const{skills}=this.npc.system,skillData=(0,_util_1.objectHasKey)(skills,skillId)?skills[skillId]:null;if(!skillData)return console.error(`No skill found with skill id ${skillId}`),null;const loreItem=this.npc.items.get(null!==(_a=skillData.itemID)&&void 0!==_a?_a:"");return(null==loreItem?void 0:loreItem.isOfType("lore"))?loreItem:(console.error("Lore item not found"),null)}}exports.NPCSkillsEditor=NPCSkillsEditor},27582:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.StrikeAttackTraits=void 0;const modifiers_1=__webpack_require__(92823),predication_1=__webpack_require__(538);exports.StrikeAttackTraits=class StrikeAttackTraits{static createAttackModifiers(strike){const traits=strike.system.traits.value,getLabel=traitOrTag=>{var _a,_b;const traits=CONFIG.PF2E.weaponTraits,tags=CONFIG.PF2E.otherWeaponTags;return null!==(_b=null!==(_a=traits[traitOrTag])&&void 0!==_a?_a:tags[traitOrTag])&&void 0!==_b?_b:traitOrTag};return traits.flatMap((trait=>{switch(trait.replace(/-d?\d{1,3}$/,"")){case"sweep":return new modifiers_1.ModifierPF2e({label:getLabel(trait),modifier:1,type:modifiers_1.MODIFIER_TYPE.CIRCUMSTANCE,predicate:new predication_1.PredicatePF2e("sweep-bonus")});case"backswing":return new modifiers_1.ModifierPF2e({label:getLabel(trait),modifier:1,type:modifiers_1.MODIFIER_TYPE.CIRCUMSTANCE,predicate:new predication_1.PredicatePF2e("backswing-bonus")});default:return[]}}))}}},11291:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.ActorSheetPF2e=void 0;const values_1=__webpack_require__(8382),_item_1=__webpack_require__(10843),helpers_1=__webpack_require__(44252),helpers_2=__webpack_require__(69554),sheet_util_1=__webpack_require__(15806),inline_roll_links_1=__webpack_require__(27542),localize_1=__webpack_require__(41332),tag_selector_1=__webpack_require__(26115),_util_1=__webpack_require__(6945),size_1=__webpack_require__(43270),item_summary_renderer_1=__webpack_require__(26910),move_loot_popup_1=__webpack_require__(46527),add_coins_popup_1=__webpack_require__(4048),identify_popup_1=__webpack_require__(67441),remove_coins_popup_1=__webpack_require__(34302),scroll_wand_popup_1=__webpack_require__(30837);class ActorSheetPF2e extends ActorSheet{constructor(){super(...arguments),this.itemRenderer=new item_summary_renderer_1.ItemSummaryRenderer(this)}static get defaultOptions(){const options=super.defaultOptions;return options.dragDrop.push({dragSelector:".drag-handle"},{dragSelector:".item[draggable=true]"}),mergeObject(options,{classes:options.classes.concat(["pf2e","actor"]),scrollY:[".sheet-sidebar",".tab.active",".inventory-list"]})}get isLootSheet(){return!1}async getData(options=this.options){options.id||(options.id=this.id);const actorData=this.actor.toObject(!1),coins=this.actor.inventory.coins,totalCoinage=ActorSheetPF2e.coinsToSheetData(coins),totalCoinageGold=(coins.copperValue/100).toFixed(2),totalWealth=this.actor.inventory.totalWealth,totalWealthGold=(totalWealth.copperValue/100).toFixed(2),immunities=(0,helpers_2.createSheetTags)(CONFIG.PF2E.immunityTypes,actorData.system.traits.di);for(const weakness of actorData.system.traits.dv)weakness.label=CONFIG.PF2E.weaknessTypes[weakness.type];for(const resistance of actorData.system.traits.dr)resistance.label=CONFIG.PF2E.resistanceTypes[resistance.type];const traitsMap=(()=>{switch(this.actor.type){case"hazard":return CONFIG.PF2E.hazardTraits;case"vehicle":return CONFIG.PF2E.vehicleTraits;default:return CONFIG.PF2E.creatureTraits}})(),sheetData={cssClass:this.actor.isOwner?"editable":"locked",editable:this.isEditable,document:this.actor,limited:this.actor.limited,options,owner:this.actor.isOwner,title:this.title,actor:actorData,data:actorData.system,effects:[],items:actorData.items,user:{isGM:game.user.isGM},traits:(0,helpers_2.createSheetTags)(traitsMap,{value:Array.from(this.actor.traits)}),immunities,hasImmunities:Object.keys(immunities).length>0,isTargetFlatFooted:!!this.actor.rollOptions.all["target:condition:flat-footed"],totalCoinage,totalCoinageGold,totalWealth,totalWealthGold,inventory:this.prepareInventory(),enrichedContent:{}};return await this.prepareItems(sheetData),sheetData}prepareInventory(){const sections={weapon:{label:game.i18n.localize("PF2E.InventoryWeaponsHeader"),type:"weapon",items:[]},armor:{label:game.i18n.localize("PF2E.InventoryArmorHeader"),type:"armor",items:[]},equipment:{label:game.i18n.localize("PF2E.InventoryEquipmentHeader"),type:"equipment",items:[]},consumable:{label:game.i18n.localize("PF2E.InventoryConsumablesHeader"),type:"consumable",items:[]},treasure:{label:game.i18n.localize("PF2E.InventoryTreasureHeader"),type:"treasure",items:[]},backpack:{label:game.i18n.localize("PF2E.InventoryBackpackHeader"),type:"backpack",items:[]}},actorSize=new size_1.ActorSizePF2e({value:this.actor.size}),createInventoryItem=item=>{const editable=game.user.isGM||item.isIdentified,heldItems=item.isOfType("backpack")?item.contents.map((i=>createInventoryItem(i))):void 0;null==heldItems||heldItems.sort(((a,b)=>(a.item.sort||0)-(b.item.sort||0)));const itemSize=new size_1.ActorSizePF2e({value:item.size}),sizeDifference=itemSize.difference(actorSize,{smallIsMedium:!0}),canBeEquipped=!item.isInContainer;return{item,itemSize:0!==sizeDifference?itemSize:null,editable,isContainer:item.isOfType("backpack"),canBeEquipped,isInvestable:this.actor.isOfType("character")&&canBeEquipped&&item.isIdentified&&null!==item.isInvested,isSellable:editable&&item.isOfType("treasure")&&!item.isCoinage,hasCharges:item.isOfType("consumable")&&item.uses.max>0,heldItems}};for(const item of this.actor.inventory.contents.sort(((a,b)=>(a.sort||0)-(b.sort||0)))){if(!(0,_util_1.objectHasKey)(sections,item.type)||item.isInContainer)continue;(item.isOfType("book")?sections.equipment:sections[item.type]).items.push(createInventoryItem(item))}const invested=this.actor.inventory.invested,showValueAlways=this.actor.isOfType("npc","loot"),showIndividualPricing=this.actor.isOfType("loot");return{sections,bulk:this.actor.inventory.bulk,showValueAlways,showIndividualPricing,invested}}static coinsToSheetData(coins){return _item_1.DENOMINATIONS.reduce(((accumulated,denomination)=>({...accumulated,[denomination]:{value:coins[denomination],label:CONFIG.PF2E.currencies[denomination]}})),{})}activateListeners($html){if(super.activateListeners($html),this.itemRenderer.activateListeners($html),!this.options.editable)return;["character","npc"].includes(this.actor.type)||inline_roll_links_1.InlineRollLinks.listen($html,this.actor),$html.find("[data-action=show-image]").on("click",(()=>{var _a,_b,_c,_d;const actor=this.actor,title=null!==(_d=null!==(_b=null===(_a=actor.token)||void 0===_a?void 0:_a.name)&&void 0!==_b?_b:null===(_c=actor.prototypeToken)||void 0===_c?void 0:_c.name)&&void 0!==_d?_d:actor.name;new ImagePopout(actor.img,{title,uuid:actor.uuid}).render(!0)})),$html.find(".save-name").on("click",(event=>{var _a,_b;event.preventDefault();const saveType=$(event.currentTarget).closest("[data-save]")[0].getAttribute("data-save");if(!(0,_util_1.tupleHasValue)(values_1.SAVE_TYPES,saveType))throw(0,_util_1.ErrorPF2e)(`"${saveType}" is not a recognized save type`);null===(_b=null===(_a=this.actor.saves)||void 0===_a?void 0:_a[saveType])||void 0===_b||_b.check.roll((0,sheet_util_1.eventToRollParams)(event))})),$html.find(".roll-init").on("click",(event=>{var _a,_b;const $target=$(event.currentTarget),{attributes}=this.actor.system;!$target.hasClass("disabled")&&"initiative"in attributes&&(null===(_b=(_a=attributes.initiative).roll)||void 0===_b||_b.call(_a,(0,sheet_util_1.eventToRollParams)(event)))}));$html.find("input[type=checkbox][data-action=toggle-roll-option]").on("change",(async event=>{const{domain,option,itemId}=event.target.dataset;if(domain&&option){const value=!!event.target.checked;this.actor.toggleRollOption(domain,option,null!=itemId?itemId:null,value)}})),$html.find(".attribute-name").on("click",(event=>{var _a;event.preventDefault();const key=(null===(_a=event.currentTarget.parentElement)||void 0===_a?void 0:_a.getAttribute("data-attribute"))||"",isSecret=event.currentTarget.getAttribute("data-secret"),attributes=this.actor.system.attributes,attribute=(0,_util_1.objectHasKey)(attributes,key)?attributes[key]:null;if((property=attribute)instanceof Object&&"roll"in property&&"function"==typeof property.roll){const options=this.actor.getRollOptions(["all",key]);isSecret&&options.push("secret"),attribute.roll({event,options})}else this.actor.rollAttribute(event,key);var property})),$html.find(".item-unprepare").on("click",(event=>{var _a,_b,_c;const slotLevel=Number(null!==(_a=$(event.currentTarget).parents(".item").attr("data-slot-level"))&&void 0!==_a?_a:0),slotId=Number(null!==(_b=$(event.currentTarget).parents(".item").attr("data-slot-id"))&&void 0!==_b?_b:0),entryId=null!==(_c=$(event.currentTarget).parents(".item").attr("data-entry-id"))&&void 0!==_c?_c:"",collection=this.actor.spellcasting.collections.get(entryId);null==collection||collection.unprepareSpell(slotLevel,slotId)})),$html.find(".item-toggle-prepare").on("click",(event=>{var _a,_b,_c;const slotLevel=Number(null!==(_a=$(event.currentTarget).parents(".item").attr("data-slot-level"))&&void 0!==_a?_a:0),slotId=Number(null!==(_b=$(event.currentTarget).parents(".item").attr("data-slot-id"))&&void 0!==_b?_b:0),entryId=null!==(_c=$(event.currentTarget).parents(".item").attr("data-entry-id"))&&void 0!==_c?_c:"",expendedState=(()=>{var _a;return"true"!==(null!==(_a=$(event.currentTarget).parents(".item").attr("data-expended-state"))&&void 0!==_a?_a:"")})(),collection=this.actor.spellcasting.collections.get(entryId);null==collection||collection.setSlotExpendedState(slotLevel,slotId,expendedState)})),$html.find(".carry-type-hover").tooltipster({animation:"fade",delay:200,animationDuration:10,trigger:"click",arrow:!1,contentAsHTML:!0,debug:!1,interactive:!0,side:["bottom"],theme:"crb-hover",minWidth:120}),$html.find(".tag-selector").on("click",(event=>this.onTraitSelector(event))),$html.find(".add-coins-popup button").on("click",(event=>this.onAddCoinsPopup(event))),$html.find(".remove-coins-popup button").on("click",(event=>this.onRemoveCoinsPopup(event))),$html.find(".sell-all-treasure button").on("click",(event=>this.onSellAllTreasure(event))),$html.find(".inventory-browse").on("click",(event=>this.onClickBrowseEquipmentCompendia(event)));$html.find(".tab.spellcasting, .tab.spells").find(".item-control").filter(".spell-create").on("click",(event=>this.onClickCreateItem(event))),$html.find(".item-create").on("click",(event=>this.onClickCreateItem(event))),$html.find(".item-repair").on("click",(event=>this.repairItem(event))),$html.find(".item-toggle-container").on("click",(event=>this.toggleContainer(event))),$html.find(".item-sell-treasure").on("click",(async event=>{var _a;const itemId=null!==(_a=$(event.currentTarget).parents(".item").attr("data-item-id"))&&void 0!==_a?_a:"",item=this.actor.inventory.get(itemId);(null==item?void 0:item.isOfType("treasure"))&&!item.isCoinage&&(await item.delete(),await this.actor.inventory.addCoins(item.assetValue))})),$html.find(".item-edit").on("click",(event=>{const itemId=$(event.currentTarget).closest("[data-item-id]").attr("data-item-id"),item=this.actor.items.get(null!=itemId?itemId:"");null==item||item.sheet.render(!0,{focus:!0})})),$html.find(".item-toggle-identified").on("click",(event=>{var _a;const f=$(event.currentTarget),itemId=null!==(_a=f.parents(".item").attr("data-item-id"))&&void 0!==_a?_a:"";if(f.hasClass("identified")){const item=this.actor.items.get(itemId);if(!(null==item?void 0:item.isOfType("physical")))throw(0,_util_1.ErrorPF2e)(`${itemId} is not a physical item.`);item.setIdentificationStatus("unidentified")}else{const item=this.actor.items.get(itemId);(null==item?void 0:item.isOfType("physical"))&&new identify_popup_1.IdentifyItemPopup(item).render(!0)}})),$html.find(".item-delete").on("click",(event=>this.onClickDeleteItem(event))),$html.find(".item-increase-quantity").on("click",(event=>{var _a;const itemId=null!==(_a=$(event.currentTarget).parents(".item").attr("data-item-id"))&&void 0!==_a?_a:"",item=this.actor.items.get(itemId);if(!(null==item?void 0:item.isOfType("physical")))throw new Error("PF2e System | Tried to update quantity on item that does not have quantity");this.actor.updateEmbeddedDocuments("Item",[{_id:itemId,"system.quantity":item.quantity+1}])})),$html.find(".item-decrease-quantity").on("click",(event=>{var _a;const itemId=null!==(_a=$(event.currentTarget).parents(".item").attr("data-item-id"))&&void 0!==_a?_a:"",item=this.actor.items.get(itemId);if(!(null==item?void 0:item.isOfType("physical")))throw(0,_util_1.ErrorPF2e)("Tried to update quantity on item that does not have quantity");item.quantity>0&&this.actor.updateEmbeddedDocuments("Item",[{_id:itemId,"system.quantity":item.quantity-1}])})),$html.find(".item[data-item-id] .item-image, .item[data-item-id] .item-chat").on("click",(event=>this.onClickItemToChat(event))),$html.find(".formula-delete").on("click",(event=>{var _a;event.preventDefault();const itemUuid=$(event.currentTarget).parents(".item").attr("data-item-id");if(itemUuid&&this.actor.isOfType("character")){const actorFormulas=null!==(_a=this.actor.toObject().system.crafting.formulas)&&void 0!==_a?_a:[];actorFormulas.findSplice((f=>f.uuid===itemUuid)),this.actor.update({"system.crafting.formulas":actorFormulas})}})),$html.find(".ability-select").on("change",(async event=>{var _a;event.preventDefault();const itemId=null!==(_a=$(event.currentTarget).parents(".item-container").attr("data-container-id"))&&void 0!==_a?_a:"";await this.actor.updateEmbeddedDocuments("Item",[{_id:itemId,"system.ability.value":event.target.value}])})),$html.find("input[type=text], input[type=number]").on("focus",(event=>{event.currentTarget.select()})),$html.find("input[data-allow-delta]").on("input",(event=>{const target=event.target,match=target.value.match(/[+-]?\d*/);target.value=match?match[0]:""}))}async onClickDeleteItem(event){var _a;const $li=$(event.currentTarget).closest("[data-item-id]"),itemId=null!==(_a=$li.attr("data-item-id"))&&void 0!==_a?_a:"",item=this.actor.items.get(itemId);if(null==item?void 0:item.isOfType("condition")){const references=$li.find(".condition-references"),deleteCondition=async()=>{this.actor.decreaseCondition(item,{forceRemove:!0})};if(event.ctrlKey)return void deleteCondition();const content=await renderTemplate("systems/pf2e/templates/actors/delete-condition-dialog.html",{question:game.i18n.format("PF2E.DeleteConditionQuestion",{condition:item.name}),ref:references.html()});new Dialog({title:game.i18n.localize("PF2E.DeleteConditionTitle"),content,buttons:{Yes:{icon:'<i class="fa fa-check"></i>',label:"Yes",callback:deleteCondition},cancel:{icon:'<i class="fas fa-times"></i>',label:"Cancel"}},default:"Yes"}).render(!0)}else{if(!item)throw(0,_util_1.ErrorPF2e)("Item not found");{const deleteItem=async()=>{await item.delete(),$li.slideUp(200,(()=>this.render(!1)))};if(event.ctrlKey)return void deleteItem();const content=await renderTemplate("systems/pf2e/templates/actors/delete-item-dialog.html",{name:item.name});new Dialog({title:"Delete Confirmation",content,buttons:{Yes:{icon:'<i class="fa fa-check"></i>',label:"Yes",callback:deleteItem},cancel:{icon:'<i class="fas fa-times"></i>',label:"Cancel"}},default:"Yes"}).render(!0)}}}async onClickBrowseEquipmentCompendia(event){var _a;const checkboxesFilterCodes=[$(event.currentTarget).attr("data-filter")].filter((element=>!!element)),filter={};for(const filterCode of checkboxesFilterCodes){const splitValues=filterCode.split("-");if(2!==splitValues.length)return void console.error(`Invalid filter value for opening the compendium browser:\n'${JSON.stringify(checkboxesFilterCodes)}'`);const[filterType,value]=splitValues;(null!==(_a=filter[filterType])&&void 0!==_a?_a:filter[filterType]=[]).push(value)}await game.pf2e.compendiumBrowser.openTab("equipment",filter)}_canDragStart(selector){return!!this.isLootSheet||super._canDragStart(selector)}_canDragDrop(selector){return!!this.isLootSheet||super._canDragDrop(selector)}_onDragStart(event){var _a,_b,_c,_d;if(event.target!==event.currentTarget&&event.target.classList.contains("content-link"))return;const $target=$(event.currentTarget),$itemRef=$target.closest(".item"),targetElement=$target.get(0),previewElement=$itemRef.get(0);if(previewElement&&targetElement&&targetElement!==previewElement){const{x,y}=previewElement.getBoundingClientRect();event.dataTransfer.setDragImage(previewElement,event.pageX-x,event.pageY-y)}const itemId=$itemRef.attr("data-item-id"),item=this.actor.items.get(null!=itemId?itemId:""),baseDragData={actorId:this.actor.id,sceneId:null!==(_b=null===(_a=canvas.scene)||void 0===_a?void 0:_a.id)&&void 0!==_b?_b:null,tokenId:null!==(_d=null===(_c=this.actor.token)||void 0===_c?void 0:_c.id)&&void 0!==_d?_d:null,...null==item?void 0:item.toDragData()},supplementalData=(()=>{var _a,_b;const actionIndex=$itemRef.attr("data-action-index"),rollOptionData={...null!==(_b=null===(_a=$itemRef.find("input[type=checkbox][data-action=toggle-roll-option]").get(0))||void 0===_a?void 0:_a.dataset)&&void 0!==_b?_b:{}},itemType=$itemRef.attr("data-item-type");if(actionIndex)return{type:"Action",index:Number(actionIndex)};if(item&&Object.keys(rollOptionData).length>0){const label=$itemRef.text().trim();return delete rollOptionData.action,{type:"RollOption",label,img:item.img,...rollOptionData}}return"formula"===itemType?{pf2e:{type:"CraftingFormula",itemUuid:itemId}}:null})();event.dataTransfer.setData("text/plain",JSON.stringify({...baseDragData,...supplementalData}))}async _onSortItem(event,itemSource){var _a,_b,_c;const item=this.actor.items.get(itemSource._id);if(!item)return[];if(item.isOfType("physical")){const targetId=null!==(_a=$(event.target).closest("[data-item-id]").attr("data-item-id"))&&void 0!==_a?_a:"",target=this.actor.inventory.get(targetId);if(target&&item.isStackableWith(target)){const stackQuantity=item.quantity+target.quantity;return await item.delete({render:!1})&&await target.update({"system.quantity":stackQuantity}),[]}const containerId=null!==(_b=$(event.target).closest('[data-item-is-container="true"]').attr("data-item-id"))&&void 0!==_b?_b:"",container=this.actor.inventory.get(containerId),pullingOutOfContainer=item.isInContainer&&!container,puttingIntoContainer=(null==container?void 0:container.isOfType("backpack"))&&(null===(_c=item.container)||void 0===_c?void 0:_c.id)!==container.id;if(pullingOutOfContainer||puttingIntoContainer)return await this.actor.stowOrUnstow(item,container),[item];if(target){const siblings=this.actor.items.filter((i=>i.isOfType("physical")));return await item.sortRelative({target,siblings}),[target]}}return super._onSortItem(event,itemSource)}async emulateItemDrop(data){return this._onDropItem({preventDefault(){}},data)}async _onDropItem(event,data){var _a,_b,_c,_d,_e,_f,_g,_h,_j;event.preventDefault();const item=await _item_1.ItemPF2e.fromDropData(data);if(!item)return[];const itemSource=item.toObject(),actor=this.actor,sourceActorId=null!==(_b=null===(_a=item.parent)||void 0===_a?void 0:_a.id)&&void 0!==_b?_b:"",sourceTokenId=null!==(_e=null===(_d=null===(_c=item.parent)||void 0===_c?void 0:_c.token)||void 0===_d?void 0:_d.id)&&void 0!==_e?_e:"";if(sourceActorId===actor.id||(null===(_f=item.parent)||void 0===_f?void 0:_f.isToken)&&sourceTokenId===(null===(_g=actor.token)||void 0===_g?void 0:_g.id))return this._onSortItem(event,itemSource);const sourceItemId=itemSource._id;return sourceActorId&&item.isOfType("physical")?(await this.moveItemBetweenActors(event,sourceActorId,sourceTokenId,actor.id,null!==(_j=null===(_h=actor.token)||void 0===_h?void 0:_h.id)&&void 0!==_j?_j:"",sourceItemId),[item]):this._handleDroppedItem(event,item,data)}async _handleDroppedItem(event,item,data){var _a,_b,_c,_d,_e,_f;const{actor}=this,itemSource=item.toObject();if(game.user.isGM&&"effect"===itemSource.type){const altHeld=event.altKey||game.keyboard.isModifierActive(KeyboardManager.MODIFIER_KEYS.ALT);(_f=itemSource.system).unidentified||(_f.unidentified=altHeld)}event.altKey&&item.isOfType("physical")&&(0,helpers_1.isPhysicalData)(itemSource)&&(itemSource.system.identification.unidentified=item.getMystifiedData("unidentified"),itemSource.system.identification.status="unidentified");const containerAttribute=$(event.target).closest(".item-container").attr("data-container-type"),dropContainerType="inventory"===(null===(_a=this._tabs[0])||void 0===_a?void 0:_a.active)&&!containerAttribute?"actorInventory":containerAttribute,craftingTab="crafting"===(null===(_b=this._tabs[0])||void 0===_b?void 0:_b.active);if(item.isOfType("spell")&&"spell"===itemSource.type){if("actorInventory"===dropContainerType&&itemSource.system.level.value>0){return new scroll_wand_popup_1.ScrollWandPopup(actor,{},(async(heightenedLevel,itemType,spell)=>{if("scroll"!==itemType&&"wand"!==itemType)return;const item=await(0,_item_1.createConsumableFromSpell)(itemType,spell,heightenedLevel);await this._onDropItemCreate(item)}),item).render(!0),[item]}return[]}if("spellcastingEntry"===itemSource.type)return[];if("condition"===itemSource.type){const value=data.value;if("number"==typeof value&&itemSource.system.value.isValued&&(itemSource.system.value.value=value),actor.canUserModify(game.user,"update")){const updated=await actor.increaseCondition(itemSource.system.slug,{min:itemSource.system.value.value});return[null!=updated?updated:[]].flat()}{const translations=localize_1.LocalizePF2e.translations.PF2E;return ui.notifications.error(translations.ErrorMessage.NoUpdatePermission),[]}}if("effect"===itemSource.type){const{level,value,context}=data;"number"==typeof level&&level>=0&&(itemSource.system.level.value=level),"number"==typeof value&&"counter"===(null===(_c=itemSource.system.badge)||void 0===_c?void 0:_c.type)&&(itemSource.system.badge.value=value),itemSource.system.context=null!=context?context:null}else if(item.isOfType("physical")&&actor.isOfType("character")&&craftingTab){const actorFormulas=deepClone(actor.system.crafting.formulas);return actorFormulas.some((f=>f.uuid===item.uuid))||(actorFormulas.push({uuid:item.uuid}),await actor.update({"system.crafting.formulas":actorFormulas})),[item]}if((0,helpers_1.isPhysicalData)(itemSource)){const containerId=(null===(_d=$(event.target).closest('[data-item-is-container="true"]').attr("data-item-id"))||void 0===_d?void 0:_d.trim())||null;this.actor.itemTypes.backpack.find((container=>container.id===containerId))?(itemSource.system.containerId=containerId,itemSource.system.equipped.carryType="stowed"):itemSource.system.equipped.carryType="worn";(null===(_e=null==data?void 0:data.uuid)||void 0===_e?void 0:_e.startsWith("Compendium"))&&"treasure"!==itemSource.type&&!["med","sm"].includes(actor.size)&&actor.isOfType("creature")&&(itemSource.system.size=actor.size)}return this._onDropItemCreate(itemSource)}async _onDropFolder(_event,data){if(!this.actor.isOwner||"Item"!==data.documentName)return[];const folder=await Folder.fromDropData(data);if(!folder)return[];const itemSources=[folder,...folder.getSubfolders()].flatMap((f=>f.contents)).map((i=>i.toObject()));return this._onDropItemCreate(itemSources)}async moveItemBetweenActors(event,sourceActorId,sourceTokenId,targetActorId,targetTokenId,itemId){var _a,_b,_c,_d,_e,_f,_g;const sourceActor=null!==(_c=null===(_b=null===(_a=canvas.scene)||void 0===_a?void 0:_a.tokens.get(null!=sourceTokenId?sourceTokenId:""))||void 0===_b?void 0:_b.actor)&&void 0!==_c?_c:game.actors.get(sourceActorId),targetActor=null!==(_f=null===(_e=null===(_d=canvas.scene)||void 0===_d?void 0:_d.tokens.get(null!=targetTokenId?targetTokenId:""))||void 0===_e?void 0:_e.actor)&&void 0!==_f?_f:game.actors.get(targetActorId),item=null==sourceActor?void 0:sourceActor.items.get(itemId);if(!sourceActor||!targetActor)throw(0,_util_1.ErrorPF2e)("Unexpected missing actor(s)");if(!(null==item?void 0:item.isOfType("physical")))throw(0,_util_1.ErrorPF2e)("Missing or invalid item");const container=$(event.target).parents('[data-item-is-container="true"]'),containerId=void 0!==container[0]?null===(_g=container[0].dataset.itemId)||void 0===_g?void 0:_g.trim():void 0,sourceItemQuantity=item.quantity,stackable=!!targetActor.findStackableItem(targetActor,item._source),isPurchase=sourceActor.isOfType("loot")&&sourceActor.isMerchant&&!sourceActor.isOwner;if(sourceItemQuantity>1){new move_loot_popup_1.MoveLootPopup(sourceActor,{maxQuantity:sourceItemQuantity,lockStack:!stackable,isPurchase},((quantity,newStack)=>{sourceActor.transferItemToActor(targetActor,item,quantity,containerId,newStack)})).render(!0)}else sourceActor.transferItemToActor(targetActor,item,1,containerId)}async onClickItemToChat(event){const itemId=$(event.currentTarget).closest("[data-item-id]").attr("data-item-id"),item=this.actor.items.get(null!=itemId?itemId:"",{strict:!0});item.isOfType("physical")&&!item.isIdentified||await item.toMessage(event,{create:!0})}async repairItem(event){const itemId=$(event.currentTarget).parents(".item").data("item-id"),item=this.actor.items.get(itemId);item&&await game.pf2e.actions.repair({event,item})}async toggleContainer(event){var _a;const itemId=$(event.currentTarget).parents(".item").data("item-id"),item=this.actor.items.get(itemId);if(!(null==item?void 0:item.isOfType("backpack")))return;const isCollapsed=null!==(_a=item.system.collapsed)&&void 0!==_a&&_a;await item.update({"system.collapsed":!isCollapsed})}onClickCreateItem(event){var _a;event.preventDefault();const header=event.currentTarget,data=duplicate(header.dataset);if(data.img=`systems/pf2e/icons/default-icons/${data.type}.svg`,"action"===data.type){const newLabel=game.i18n.localize("PF2E.NewLabel"),actionTypeLabel=game.i18n.localize(`PF2E.ActionType${data.actionType.capitalize()}`);data.name=`${newLabel} ${actionTypeLabel}`,mergeObject(data,{"system.actionType.value":data.actionType})}else if("melee"===data.type)data.name=game.i18n.localize(`PF2E.NewPlaceholders.${data.type.capitalize()}`),mergeObject(data,{"system.weaponType.value":data.actionType});else if("spell"===data.type){data.level=Number(null!==(_a=data.level)&&void 0!==_a?_a:1);const newLabel=game.i18n.localize("PF2E.NewLabel"),levelLabel=game.i18n.localize(`PF2E.SpellLevel${data.level}`),spellLabel=data.level>0?game.i18n.localize("PF2E.SpellLabel"):"";data.name=`${newLabel} ${levelLabel} ${spellLabel}`,mergeObject(data,{"system.level.value":data.level,"system.location.value":data.location})}else"lore"===data.type?data.name="npc"===this.actor.type?game.i18n.localize("PF2E.SkillLabel"):game.i18n.localize("PF2E.NewPlaceholders.Lore"):data.name=game.i18n.localize(`PF2E.NewPlaceholders.${data.type.capitalize()}`);this.actor.createEmbeddedDocuments("Item",[data])}onAddCoinsPopup(event){event.preventDefault(),new add_coins_popup_1.AddCoinsPopup(this.actor,{}).render(!0)}onRemoveCoinsPopup(event){event.preventDefault(),new remove_coins_popup_1.RemoveCoinsPopup(this.actor,{}).render(!0)}onSellAllTreasure(event){event.preventDefault(),renderTemplate("systems/pf2e/templates/actors/sell-all-treasure-dialog.html").then((html=>{new Dialog({title:game.i18n.localize("PF2E.SellAllTreasureTitle"),content:html,buttons:{Yes:{icon:'<i class="fa fa-check"></i>',label:"Yes",callback:async()=>this.actor.inventory.sellAllTreasure()},cancel:{icon:'<i class="fas fa-times"></i>',label:"Cancel"}},default:"Yes"}).render(!0)}))}onTraitSelector(event){var _a,_b,_c;event.preventDefault();const $anchor=$(event.currentTarget),selectorType=null!==(_a=$anchor.attr("data-tag-selector"))&&void 0!==_a?_a:"";if(!(0,_util_1.tupleHasValue)(tag_selector_1.TAG_SELECTOR_TYPES,selectorType))throw(0,_util_1.ErrorPF2e)(`Unrecognized trait selector type "${selectorType}"`);if("basic"===selectorType){const objectProperty=null!==(_b=$anchor.attr("data-property"))&&void 0!==_b?_b:"",title=$anchor.attr("data-title"),configTypes=(null!==(_c=$anchor.attr("data-config-types"))&&void 0!==_c?_c:"").split(",").map((type=>type.trim())).filter((tag=>(0,_util_1.tupleHasValue)(tag_selector_1.SELECTABLE_TAG_FIELDS,tag)));this.tagSelector("basic",{objectProperty,configTypes,title})}else this.tagSelector(selectorType)}tagSelector(selectorType,options){if("basic"===selectorType&&options&&"objectProperty"in options)new tag_selector_1.TagSelectorBasic(this.object,options).render(!0);else{if("basic"===selectorType)throw(0,_util_1.ErrorPF2e)("Insufficient options provided to render basic tag selector");new(0,{resistances:tag_selector_1.ResistanceSelector,senses:tag_selector_1.SenseSelector,"speed-types":tag_selector_1.SpeedSelector,weaknesses:tag_selector_1.WeaknessSelector}[selectorType])(this.object,options).render(!0)}}_getHeaderButtons(){const buttons=super._getHeaderButtons(),sheetButton=buttons.find((button=>"configure-sheet"===button.class));return!(Object.keys(CONFIG.Actor.sheetClasses[this.actor.type]).length>1)&&sheetButton&&buttons.splice(buttons.indexOf(sheetButton),1),buttons}async _renderInner(data,options){return this.itemRenderer.saveAndRestoreState((()=>super._renderInner(data,options)))}async _render(force,options){await(0,helpers_2.maintainTagifyFocusInRender)(this,(()=>super._render(force,options)))}async _onSubmit(event,{updateData=null,preventClose=!1,preventRender=!1}={}){return $(this.form).find("tags ~ input").each(((_i,input)=>{""===input.value&&(input.value="[]")})),super._onSubmit(event,{updateData,preventClose,preventRender})}_getSubmitData(updateData){const data=super._getSubmitData(updateData);(0,helpers_2.processTagifyInSubmitData)(this.form,data);for(const el of this.form.elements)if(el instanceof HTMLInputElement&&void 0!==el.dataset.allowDelta){const strValue=el.value.trim(),value=Number(strValue);!strValue.startsWith("+")&&!strValue.startsWith("-")||Number.isNaN(value)||(data[el.name]=Number(getProperty(this.actor,el.name))+value)}return data}}exports.ActorSheetPF2e=ActorSheetPF2e},26910:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.CreatureSheetItemRenderer=exports.ItemSummaryRenderer=void 0;const _actor_1=__webpack_require__(85530),_item_1=__webpack_require__(10843),helpers_1=__webpack_require__(44252),inline_roll_links_1=__webpack_require__(27542);class ItemSummaryRenderer{constructor(sheet){this.sheet=sheet}activateListeners($html){$html.find(".item .item-name h4, .item .melee-name h4, .item .action-name h4").on("click",(async event=>{const $element=$(event.currentTarget).closest("[data-item-id], .expandable");await this.toggleSummary($element)}))}async toggleSummary($element,options={}){const actor=this.sheet.actor,itemId=$element.attr("data-item-id"),itemType=$element.attr("data-item-type");if("spellSlot"===itemType)return;const item="formula"===itemType?await fromUuid(null!=itemId?itemId:""):actor.items.get(null!=itemId?itemId:""),isCondition=item instanceof _item_1.ItemPF2e&&(null==item?void 0:item.isOfType("condition"));if(itemId&&!isCondition||!$element.hasClass("expandable")){if(item instanceof _item_1.ItemPF2e&&!["condition","spellcastingEntry"].includes(item.type)){if($element.hasClass("expanded")){const $summary=$element.children(".item-summary");options.instant?$summary.hide().empty():$summary.slideUp(200,(()=>$summary.hide().empty()))}else{const $summary=(()=>{const $existing=$element.children(".item-summary");if($existing.length)return $existing;return $('<div class="item-summary">').insertAfter($element.children(".item-name, .item-controls, .action-header").last())})(),chatData=await item.getChatData({secrets:actor.isOwner},$element.data());this.renderItemSummary($summary,item,chatData),options.instant?inline_roll_links_1.InlineRollLinks.listen($summary,actor):$summary.hide().slideDown(200,(()=>{inline_roll_links_1.InlineRollLinks.listen($summary,actor)}))}$element.toggleClass("expanded")}}else{const $summary=$element.find(".item-summary");"none"===$summary.css("display")?$summary.slideDown():$summary.slideUp()}}async renderItemSummary($div,item,chatData){var _a,_b;const localize=game.i18n.localize.bind(game.i18n),itemIsIdentifiedOrUserIsGM=item.isOfType("physical")&&(item.isIdentified||game.user.isGM),$rarityTag=itemIsIdentifiedOrUserIsGM?(()=>{const mystifiedClass=item.isIdentified?"":" mystified",rarityLabel=CONFIG.PF2E.rarityTraits[item.rarity];return $(`<span class="tag tag_secondary${mystifiedClass}">${localize(rarityLabel)}</span>`)})():null,$levelPriceLabel=itemIsIdentifiedOrUserIsGM&&"coins"!==item.system.stackGroup?(()=>{const price=item.price.value.toString(),priceLabel=game.i18n.format("PF2E.Item.Physical.PriceLabel",{price}),levelLabel=game.i18n.format("PF2E.LevelN",{level:item.level});return $(`<p>${levelLabel}<br/>${priceLabel}</p>`)})():$(),properties=null!==(_b=null===(_a=chatData.properties)||void 0===_a?void 0:_a.filter((property=>"string"==typeof property)).flatMap((property=>{const mystifiedClass=item instanceof _item_1.PhysicalItemPF2e&&!item.isIdentified?" mystified":"";return game.user.isGM||!mystifiedClass?$(`<span class="tag tag_secondary${mystifiedClass}">${localize(property)}</span>`):[]})))&&void 0!==_b?_b:[],traitTags=Array.isArray(chatData.traits)?chatData.traits.filter((trait=>!trait.excluded)).map((trait=>{const label=game.i18n.localize(trait.label),classes=["tag",trait.mystified?"mystified":[]].flat().join(" "),$trait=$(`<span class="${classes}">${label}</span>`);if(trait.description){const description=game.i18n.localize(trait.description);$trait.attr({title:description}).tooltipster({maxWidth:400,theme:"crb-hover",contentAsHTML:!0})}return $trait})):[],allTags=[$rarityTag,...traitTags,...properties].filter((tag=>!!tag)),$properties=$('<div class="item-properties tags"></div>').append(...allTags),description=(0,helpers_1.isItemSystemData)(chatData)?chatData.description.value:await game.pf2e.TextEditor.enrichHTML(item.description,{rollData:item.getRollData(),async:!0});$div.append($properties,$levelPriceLabel,`<div class="item-description">${description}</div>`)}async saveAndRestoreState(callback){const $element=this.sheet.element,expandedSummaryElements=$element.find(".item.expanded[data-item-summary-id]"),expandedItemElements=$element.find(".item.expanded[data-item-id]:not([data-item-summary-id])"),expandedActionElements=$element.find(".item.expanded[data-action-index]"),openActionIdxs=new Set(expandedActionElements.map(((_i,el)=>el.dataset.actionIndex))),openItemsIds=expandedItemElements.map(((_,el)=>$(el).attr("data-item-id"))).get(),openSummaryIds=expandedSummaryElements.map(((_,el)=>$(el).attr("data-item-summary-id"))).get(),result=await callback.apply(null);for(const itemId of openItemsIds){const $item=result.find(`.item[data-item-id="${itemId}"]:not([data-item-summary-id])`);this.toggleSummary($item,{instant:!0})}for(const summaryId of openSummaryIds)this.toggleSummary(result.find(`.item[data-item-summary-id="${summaryId}"]`),{instant:!0});for(const elementIdx of openActionIdxs)result.find(`.item[data-action-index=${elementIdx}]`).toggleClass("expanded");return result}}exports.ItemSummaryRenderer=ItemSummaryRenderer;exports.CreatureSheetItemRenderer=class CreatureSheetItemRenderer extends ItemSummaryRenderer{async renderItemSummary($div,item,chatData){await super.renderItemSummary($div,item,chatData);const actor=item.actor,buttons=$('<div class="item-buttons"></div>');switch(item.type){case"spell":if(chatData.isSave){const save=chatData.save;buttons.append(`<span>${save.label}</span>`)}if(actor instanceof _actor_1.CharacterPF2e){if(Array.isArray(chatData.variants)&&chatData.variants.length){const label=game.i18n.localize("PF2E.Item.Spell.Variants.SelectVariantLabel");buttons.append(`<span><button class="spell_attack" data-action="selectVariant">${label}</button></span>`);break}if(chatData.isAttack){const label=game.i18n.localize("PF2E.AttackLabel");buttons.append(`<span><button class="spell_attack" data-action="spellAttack">${label}</button></span>`)}chatData.hasDamage&&buttons.append(`<span><button class="spell_damage" data-action="spellDamage">${chatData.damageLabel}: ${chatData.formula}</button></span>`)}break;case"consumable":if(item instanceof _item_1.ConsumablePF2e&&item.uses.max>0&&item.isIdentified){const label=game.i18n.localize("PF2E.ConsumableUseLabel");buttons.append(`<span><button class="consume" data-action="consume">${label} ${item.name}</button></span>`)}}$div.append(buttons),buttons.find("button").on("click",(event=>{event.preventDefault(),event.stopPropagation();const spell=item instanceof _item_1.SpellPF2e?item:item instanceof _item_1.ConsumablePF2e?item.embeddedSpell:null;switch(event.target.dataset.action){case"spellAttack":null==spell||spell.rollAttack(event);break;case"spellDamage":null==spell||spell.rollDamage(event);break;case"consume":item instanceof _item_1.ConsumablePF2e&&item.consume();break;case"selectVariant":null==spell||spell.toMessage()}}))}}},87e3:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.LootNPCsPopup=void 0;const _util_1=__webpack_require__(6945);class LootNPCsPopup extends FormApplication{static get defaultOptions(){const options=super.defaultOptions;return options.id="loot-NPCs",options.classes=[],options.title="Loot NPCs",options.template="systems/pf2e/templates/actors/loot/loot-npcs-popup.html",options.width="auto",options}async _updateObject(_event,formData){var _a;const itemData=[],selectionData=Array.isArray(formData.selection)?formData.selection:[formData.selection];for(let i=0;i<selectionData.length;i++){const token=canvas.tokens.placeables.find((token=>{var _a;return token.actor&&token.id===(null===(_a=this.form[i])||void 0===_a?void 0:_a.id)}));if(!token)throw(0,_util_1.ErrorPF2e)(`Token ${null===(_a=this.form[i])||void 0===_a?void 0:_a.id} not found`);const currentSource=token.actor;if(selectionData[i]&&currentSource){const currentSourceItemData=currentSource.inventory.map((item=>item.toObject()));itemData.push(...currentSourceItemData);const idsToDelete=currentSourceItemData.map((item=>item._id));currentSource.deleteEmbeddedDocuments("Item",idsToDelete)}}itemData.length>0&&await this.object.createEmbeddedDocuments("Item",itemData)}async getData(){const tokenInfo=canvas.tokens.controlled.filter((token=>token.actor&&token.actor.id!==this.object.id)).map((token=>({id:token.id,name:token.name,checked:token.actor.hasPlayerOwner})));return{...await super.getData(),tokenInfo}}}exports.LootNPCsPopup=LootNPCsPopup},46527:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.MoveLootPopup=void 0;class MoveLootPopup extends FormApplication{constructor(object,options,callback){super(object,options),this.onSubmitCallback=callback}async getData(){const[prompt,buttonLabel]=this.options.isPurchase?["PF2E.loot.PurchaseLootMessage","PF2E.loot.PurchaseLoot"]:["PF2E.loot.MoveLootMessage","PF2E.loot.MoveLoot"];return{...await super.getData(),maxQuantity:this.options.maxQuantity,newStack:this.options.newStack,lockStack:this.options.lockStack,prompt,buttonLabel}}static get defaultOptions(){return{...super.defaultOptions,id:"MoveLootPopup",classes:[],title:game.i18n.localize("PF2E.loot.MoveLootPopupTitle"),template:"systems/pf2e/templates/popups/loot/move-loot-popup.html",width:"auto",maxQuantity:1,newStack:!1,lockStack:!1,isPurchase:!1}}async _updateObject(_event,formData){this.onSubmitCallback(formData.quantity,formData.newStack)}}exports.MoveLootPopup=MoveLootPopup},42811:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.AbilityBuilderPopup=void 0;const values_1=__webpack_require__(8382),_util_1=__webpack_require__(6945);class AbilityBuilderPopup extends Application{constructor(actor){super(),this.actor=actor,actor.apps[this.appId]=this}static get defaultOptions(){return{...super.defaultOptions,classes:["ability-builder-popup"],title:game.i18n.localize("PF2E.AbilityScoresHeader"),template:"systems/pf2e/templates/actors/character/ability-builder.html",width:"auto"}}get id(){return`ability-builder-${this.actor.id}`}async getData(options={}){var _a;const{actor}=this,build=actor.system.build.abilities;return{...await super.getData(options),actor,abilities:CONFIG.PF2E.abilities,manual:build.manual,ancestry:actor.ancestry,background:actor.background,class:actor.class,abilityScores:actor.abilities,manualKeyAbility:actor.keyAbility,keyOptions:build.keyOptions,ancestryBoosts:this.calculateAncestryBoosts(),backgroundBoosts:this.calculateBackgroundBoosts(),voluntaryFlaw:!!(null===(_a=actor.ancestry)||void 0===_a?void 0:_a.system.voluntary),levelBoosts:this.calculatedLeveledBoosts()}}calculateAncestryBoosts(){const{actor}=this;if(!actor.ancestry)return null;const ancestryBoosts=Array.from(values_1.ABILITY_ABBREVIATIONS).reduce(((accumulated,abbrev)=>({...accumulated,[abbrev]:{lockedFlaw:!1,lockedBoost:!1,boosted:!1,available:!1,voluntaryFlaws:0,canVoluntaryFlaw:!1,canVoluntaryFlawAgain:!1,voluntaryBoost:!1,canVoluntaryBoost:!1}})),{});for(const flaw of Object.values(actor.ancestry.system.flaws))flaw.selected&&(ancestryBoosts[flaw.selected].lockedFlaw=!0);for(const lockedBoost of actor.ancestry.lockedBoosts)ancestryBoosts[lockedBoost].lockedBoost=!0;let shownBoost=!1,boostsRemaining=0;for(const boost of Object.values(actor.ancestry.system.boosts))if(boost.selected)ancestryBoosts[boost.selected].boosted=!0,ancestryBoosts[boost.selected].available=!0;else if(boost.value.length>0&&(boostsRemaining+=1,!shownBoost)){for(const ability of boost.value)ancestryBoosts[ability].available=!0;shownBoost=!0}const{voluntary}=actor.ancestry.system,voluntaryBoostsRemaining=voluntary&&!voluntary.boost?1:0;if(voluntary){for(const boost of Object.values(ancestryBoosts))boost.canVoluntaryFlaw=voluntary.flaws.length<2,boost.canVoluntaryBoost=!boost.canVoluntaryFlaw&&voluntaryBoostsRemaining>0;for(const flaw of voluntary.flaws)ancestryBoosts[flaw].voluntaryFlaws+=1,ancestryBoosts[flaw].canVoluntaryFlaw=!0,ancestryBoosts[flaw].canVoluntaryFlawAgain=ancestryBoosts[flaw].lockedBoost&&voluntary.flaws.length<2;voluntary.boost&&(ancestryBoosts[voluntary.boost].voluntaryBoost=!0,ancestryBoosts[voluntary.boost].canVoluntaryBoost=!0)}for(const ability of Array.from(values_1.ABILITY_ABBREVIATIONS)){const hasFlaw=ancestryBoosts[ability].lockedFlaw||ancestryBoosts[ability].voluntaryFlaws;ancestryBoosts[ability].lockedFlaw&&(ancestryBoosts[ability].canVoluntaryFlaw=!1),ancestryBoosts[ability].boosted&&!hasFlaw&&(ancestryBoosts[ability].canVoluntaryBoost=!1),!ancestryBoosts[ability].voluntaryBoost||hasFlaw||ancestryBoosts[ability].boosted||ancestryBoosts[ability].lockedBoost||ancestryBoosts[ability].lockedFlaw||(ancestryBoosts[ability].available=!1)}return{boosts:ancestryBoosts,remaining:boostsRemaining,voluntaryBoostsRemaining,labels:this.calculateBoostLabels(actor.ancestry.system.boosts),flawLabels:this.calculateBoostLabels(actor.ancestry.system.flaws)}}calculateBackgroundBoosts(){const{actor}=this;if(!actor.background)return null;const backgroundBoosts=Array.from(values_1.ABILITY_ABBREVIATIONS).reduce(((accumulated,abbrev)=>({...accumulated,[abbrev]:{lockedFlaw:!1,lockedBoost:!1,boosted:!1,available:!1,voluntaryFlaws:0,canVoluntaryFlaw:!1,canVoluntaryFlawAgain:!1,voluntaryBoost:!1,canVoluntaryBoost:!1}})),{});let boostsRemaining=0,shownBoost=!1;for(const boost of Object.values(actor.background.system.boosts))if(boost.selected)1===boost.value.length&&(backgroundBoosts[boost.selected].lockedBoost=!0),backgroundBoosts[boost.selected].available=!0,backgroundBoosts[boost.selected].boosted=!0;else if(boost.value.length>0&&(boostsRemaining+=1,!shownBoost)){for(const ability of boost.value)backgroundBoosts[ability].available=!0;shownBoost=!0}return{boosts:backgroundBoosts,remaining:boostsRemaining,labels:this.calculateBoostLabels(actor.background.system.boosts),tooltip:(()=>{var _a,_b;const boosts=null!==(_b=null===(_a=actor.background)||void 0===_a?void 0:_a.system.boosts)&&void 0!==_b?_b:{};if(2===Object.values(boosts).length&&2===Object.values(boosts)[0].value.length&&6===Object.values(boosts)[1].value.length){const choices=Object.values(boosts)[0].value.map((ability=>game.i18n.localize(CONFIG.PF2E.abilities[ability])));return game.i18n.format("PF2E.Actor.Character.AbilityBuilder.BackgroundBoostDescription",{a:choices[0],b:choices[1]})}return null})()}}calculatedLeveledBoosts(){const build=this.actor.system.build.abilities,isGradual=game.settings.get("pf2e","gradualBoostsVariant");return[1,5,10,15,20].reduce(((ret,level)=>({...ret,[level]:{boosts:[...values_1.ABILITY_ABBREVIATIONS].map((ability=>({ability,taken:build.boosts[level].includes(ability)}))),full:build.boosts[level].length>=build.allowedBoosts[level],eligible:build.allowedBoosts[level]>0,remaining:build.allowedBoosts[level]-build.boosts[level].length,minLevel:isGradual?Math.max(1,level-3):level,level}})),{})}calculateBoostLabels(boosts){return Object.values(boosts).map((b=>6===b.value.length?game.i18n.localize("PF2E.AbilityFree"):b.value.map((ability=>game.i18n.localize(CONFIG.PF2E.abilities[ability]))).join(" or ")))}async close(options={}){return delete this.actor.apps[this.appId],super.close(options)}activateListeners($html){super.activateListeners($html);const{actor}=this;$html.find("div[data-tooltip-content]").tooltipster({contentAsHTML:!0,arrow:!1,debug:!1,interactive:!0,side:["bottom"],theme:"crb-hover"}),$html.find("div.tooltip").tooltipster(),$html.find("input[type=text], input[type=number]").on("focus",(event=>{event.currentTarget.select()})),$html.find("input[name=toggle-manual-mode]").on("change",(async event=>{event.originalEvent&&await actor.toggleAbilityManagement()})),$html.find("input[name=toggle-voluntary-flaw]").on("change",(async event=>{var _a;event.originalEvent&&await(null===(_a=actor.ancestry)||void 0===_a?void 0:_a.toggleVoluntaryFlaw())})),$html.find("button[data-action=ancestry-boost]").on("click",(async event=>{var _a,_b,_c,_d,_e,_f;const ability=$(event.currentTarget).attr("data-ability"),boostToRemove=Object.entries(null!==(_b=null===(_a=actor.ancestry)||void 0===_a?void 0:_a.system.boosts)&&void 0!==_b?_b:{}).find((([,b])=>b.selected===ability));if(boostToRemove)return void await(null===(_c=actor.ancestry)||void 0===_c?void 0:_c.update({[`system.boosts.${boostToRemove[0]}.selected`]:null}));const freeBoost=Object.entries(null!==(_e=null===(_d=actor.ancestry)||void 0===_d?void 0:_d.system.boosts)&&void 0!==_e?_e:{}).find((([,b])=>!b.selected&&b.value.length>0));freeBoost&&await(null===(_f=actor.ancestry)||void 0===_f?void 0:_f.update({[`system.boosts.${freeBoost[0]}.selected`]:ability}))})),$html.find("button[data-action=voluntary-flaw]").on("click",(async event=>{var _a;const $button=$(event.currentTarget),ability=$button.attr("data-ability"),removing=$button.hasClass("selected"),{ancestry}=actor;if(!ancestry||!(0,_util_1.setHasElement)(values_1.ABILITY_ABBREVIATIONS,ability))return;const{flaws,boost}=null!==(_a=ancestry.system.voluntary)&&void 0!==_a?_a:{flaws:[],boost:null},alreadyHasFlaw=flaws.includes(ability);removing&&alreadyHasFlaw&&!boost&&(flaws.splice(flaws.indexOf(ability),1),await ancestry.update({system:{voluntary:{flaws}}}));const boostedByAncestry=ancestry.lockedBoosts.includes(ability);!removing&&flaws.length<2&&(!alreadyHasFlaw||boostedByAncestry)&&(flaws.push(ability),await ancestry.update({system:{voluntary:{flaws}}}))})),$html.find("button[data-action=voluntary-boost]").on("click",(async event=>{const $button=$(event.currentTarget),removing=$button.hasClass("selected"),ability=$button.attr("data-ability"),{ancestry}=actor;if(!ancestry||!(0,_util_1.setHasElement)(values_1.ABILITY_ABBREVIATIONS,ability))return;const boost=removing?null:ability;await ancestry.update({system:{voluntary:{boost}}})})),$html.find("button[data-action=background-boost]").on("click",(async event=>{var _a,_b,_c,_d,_e,_f;const ability=$(event.currentTarget).attr("data-ability"),boostToRemove=Object.entries(null!==(_b=null===(_a=actor.background)||void 0===_a?void 0:_a.system.boosts)&&void 0!==_b?_b:{}).find((([,b])=>b.selected===ability));if(boostToRemove)return void await(null===(_c=actor.background)||void 0===_c?void 0:_c.update({[`system.boosts.${boostToRemove[0]}.selected`]:null}));const freeBoost=Object.entries(null!==(_e=null===(_d=actor.background)||void 0===_d?void 0:_d.system.boosts)&&void 0!==_e?_e:{}).find((([,b])=>!b.selected&&b.value.length>0));freeBoost&&await(null===(_f=actor.background)||void 0===_f?void 0:_f.update({[`system.boosts.${freeBoost[0]}.selected`]:ability}))})),$html.find("button[data-action=class-key-ability]").on("click",(async event=>{var _a;const ability=$(event.currentTarget).attr("data-ability");actor.system.build.abilities.manual?await actor.update({"system.details.keyability.value":ability}):await(null===(_a=actor.class)||void 0===_a?void 0:_a.update({"system.keyAbility.selected":ability}))})),$html.find("button[data-action=level]").on("click",(async event=>{var _a,_b,_c;const ability=event.currentTarget.dataset.ability,level=event.currentTarget.dataset.level;if(!(0,_util_1.setHasElement)(values_1.ABILITY_ABBREVIATIONS,ability)||!(0,_util_1.setHasElement)(new Set(["1","5","10","15","20"]),level))throw(0,_util_1.ErrorPF2e)("Unexpected update requested to ability boosts and flaws");const buildSource=mergeObject(null!==(_a=actor.toObject().system.build)&&void 0!==_a?_a:{},{abilities:{boosts:{}}}),boosts=null!==(_b=(_c=buildSource.abilities.boosts)[level])&&void 0!==_b?_b:_c[level]=[];boosts.includes(ability)?boosts.splice(boosts.indexOf(ability),1):boosts.push(ability),await actor.update({"system.build":buildSource})})),$html.find("input[data-property]").on("blur",(async event=>{var _a;const $input=$(event.target),propertyPath=null!==(_a=$input.attr("data-property"))&&void 0!==_a?_a:"";await actor.update({[propertyPath]:$input.val()})})),$html.find("button[data-action=close]").on("click",(()=>{this.close()}))}}exports.AbilityBuilderPopup=AbilityBuilderPopup},4048:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.AddCoinsPopup=void 0;class AddCoinsPopup extends FormApplication{static get defaultOptions(){const options=super.defaultOptions;return options.id="add-coins",options.classes=[],options.title="Add Coins",options.template="systems/pf2e/templates/actors/add-coins.html",options.width="auto",options}async _updateObject(_event,formData){const combineStacks=formData.combineStacks,coins={pp:formData.pp,gp:formData.gp,sp:formData.sp,cp:formData.cp};this.object.inventory.addCoins(coins,{combineStacks})}}exports.AddCoinsPopup=AddCoinsPopup},25289:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.DistributeCoinsPopup=void 0;const base_1=__webpack_require__(65532),character_1=__webpack_require__(886),helpers_1=__webpack_require__(73715);class DistributeCoinsPopup extends FormApplication{static get defaultOptions(){const options=super.defaultOptions;return options.id="distribute-coins",options.classes=[],options.title="Distribute Coins",options.template="systems/pf2e/templates/actors/distribute-coins.html",options.width="auto",options}async _updateObject(_event,formData){const thisActor=this.object,selectedActors=formData.actorIds.flatMap((actorId=>{const maybeActor=game.actors.get(actorId);return maybeActor instanceof character_1.CharacterPF2e?maybeActor:[]})),playerCount=selectedActors.length;if(0!==playerCount&&thisActor instanceof base_1.ActorPF2e){const coinShare=new helpers_1.CoinsPF2e;if(formData.breakCoins){const thisActorCopperValue=thisActor.inventory.coins.copperValue,copperToDistribute=Math.trunc(thisActorCopperValue/playerCount);if(0===copperToDistribute)return void ui.notifications.warn("Nothing to distribute");thisActor.inventory.removeCoins({cp:copperToDistribute*playerCount}),coinShare.cp=copperToDistribute%10,coinShare.sp=Math.trunc(copperToDistribute/10)%10,coinShare.gp=Math.trunc(copperToDistribute/100)%10,coinShare.pp=Math.trunc(copperToDistribute/1e3)}else{const thisActorCurrency=thisActor.inventory.coins;if(coinShare.pp=Math.trunc(thisActorCurrency.pp/playerCount),coinShare.cp=Math.trunc(thisActorCurrency.cp/playerCount),coinShare.gp=Math.trunc(thisActorCurrency.gp/playerCount),coinShare.sp=Math.trunc(thisActorCurrency.sp/playerCount),0===coinShare.pp&&0===coinShare.gp&&0===coinShare.sp&&0===coinShare.cp)return void ui.notifications.warn("Nothing to distribute");const coinsToRemove=coinShare.scale(playerCount);thisActor.inventory.removeCoins(coinsToRemove,{byValue:!1})}let message="Distributed ";0!==coinShare.pp&&(message+=`${coinShare.pp} pp `),0!==coinShare.gp&&(message+=`${coinShare.gp} gp `),0!==coinShare.sp&&(message+=`${coinShare.sp} sp `),0!==coinShare.cp&&(message+=`${coinShare.cp} cp `);message+=`${playerCount>1?"each ":""}from ${thisActor.name} to `;for(const actor of selectedActors){await actor.inventory.addCoins(coinShare);const index=selectedActors.indexOf(actor);message+=0===index?`${actor.name}`:index<playerCount-1?`, ${actor.name}`:` and ${actor.name}.`}ChatMessage.create({user:game.user.id,type:CONST.CHAT_MESSAGE_TYPES.OTHER,content:message})}}async _onSubmit(event,options={}){var _a;const actorIds=Array.from(this.form.elements).flatMap((element=>element instanceof HTMLInputElement&&"actorIds"===element.name&&element.checked?element.value:[]));return options.updateData=mergeObject(null!==(_a=options.updateData)&&void 0!==_a?_a:{},{actorIds}),super._onSubmit(event,options)}async getData(){const sheetData=await super.getData(),playerActors=game.actors.filter((actor=>actor.hasPlayerOwner&&actor.isOfType("character")));return sheetData.actorInfo=playerActors.map((actor=>({id:actor.id,name:actor.name,checked:game.users.players.some((user=>{var _a;return user.active&&(null===(_a=user.character)||void 0===_a?void 0:_a.id)===actor.id}))}))),sheetData}}exports.DistributeCoinsPopup=DistributeCoinsPopup},67441:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.IdentifyItemPopup=void 0;const identification_1=__webpack_require__(79206),chat_message_1=__webpack_require__(40405),_util_1=__webpack_require__(6945);class IdentifyItemPopup extends FormApplication{static get defaultOptions(){return{...super.defaultOptions,id:"identify-item",title:game.i18n.localize("PF2E.identification.Identify"),template:"systems/pf2e/templates/actors/identify-item.html",width:"auto",classes:["identify-popup"]}}get item(){return this.object}async getData(){const item=this.object,notMatchingTraditionModifier=game.settings.get("pf2e","identifyMagicNotMatchingTraditionModifier"),proficiencyWithoutLevel="ProficiencyWithoutLevel"===game.settings.get("pf2e","proficiencyVariant"),dcs=(0,identification_1.identifyItem)(item,{proficiencyWithoutLevel,notMatchingTraditionModifier});return{...await super.getData(),isMagic:["arc","nat","rel","occ"].some((s=>s in dcs)),isAlchemical:"cra"in dcs,dcs}}activateListeners($form){$form.find("button.update-identification").on("click",(event=>{const $button=$(event.delegateTarget);this.submit({updateData:{status:$button.val()}})})),$form.find("button.post-skill-checks").on("click",(async()=>{const item=this.item,itemImg=item.system.identification.unidentified.img,itemName=item.system.identification.unidentified.name,identifiedName=item.system.identification.identified.name,skills=$("div#identify-item").find("tr").toArray().flatMap((row=>{const shortForm=row.dataset.skill,dc=Number(row.dataset.dc);if(!Number.isInteger(dc)||!(0,_util_1.objectHasKey)(CONFIG.PF2E.skills,shortForm))return[];return{shortForm,name:game.i18n.localize(CONFIG.PF2E.skills[shortForm]),dc}})),content=await renderTemplate("systems/pf2e/templates/actors/identify-item-chat-skill-checks.html",{itemImg,itemName,identifiedName,skills});await chat_message_1.ChatMessagePF2e.create({user:game.user.id,content})}))}async _updateObject(_event,formData){const status=formData.status;"identified"===status&&await this.item.setIdentificationStatus(status)}}exports.IdentifyItemPopup=IdentifyItemPopup},37113:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.ManageAttackProficiencies=void 0;const localize_1=__webpack_require__(41332),_util_1=__webpack_require__(6945);exports.ManageAttackProficiencies={add:async function(actor,event){const translations=localize_1.LocalizePF2e.translations.PF2E,weaponGroups=CONFIG.PF2E.weaponGroups,baseWeapons=translations.Weapon.Base,template=await renderTemplate("systems/pf2e/templates/actors/add-combat-proficiency-dialog.html",{message:translations.AddCombatProficiency.Message,weaponGroups,baseWeapons});new Dialog({title:localize_1.LocalizePF2e.translations.PF2E.AddCombatProficiency.Title,content:template,buttons:{add:{icon:(0,_util_1.fontAwesomeIcon)("check").outerHTML,label:localize_1.LocalizePF2e.translations.PF2E.AddShortLabel,callback:async $dialog=>{const selection=$dialog.find('select[name="proficiency"]').val();if("string"==typeof selection&&selection){const proficiencyKey=selection in weaponGroups?`weapon-group-${selection}`:`weapon-base-${selection}`;await actor.addAttackProficiency(proficiencyKey);const tab=(0,_util_1.htmlClosest)(event.currentTarget,".tab.skills");if(tab){const $tab=$(tab);$tab.animate({scrollTop:$tab.height()},"slow")}}}},cancel:{icon:(0,_util_1.fontAwesomeIcon)("times").outerHTML,label:game.i18n.localize("Cancel")}},default:"cancel"}).render(!0)},remove:function(actor,event){var _a,_b,_c;const weaponGroups=CONFIG.PF2E.weaponGroups,baseWeapons=localize_1.LocalizePF2e.translations.PF2E.Weapon.Base,key=null!==(_b=null===(_a=(0,_util_1.htmlClosest)(event.currentTarget,"li.skill.custom"))||void 0===_a?void 0:_a.dataset.skill)&&void 0!==_b?_b:"",translationKey=null!==(_c=null==key?void 0:key.replace(/^weapon-(?:base|group)-/,""))&&void 0!==_c?_c:"",name=(0,_util_1.objectHasKey)(weaponGroups,translationKey)?game.i18n.localize(weaponGroups[translationKey]):baseWeapons[translationKey],dialogText=localize_1.LocalizePF2e.translations.PF2E.RemoveCombatProficiency,message=game.i18n.format(dialogText.Message,{proficiency:name});Dialog.confirm({title:dialogText.Title,content:`<p>${message}</p>`,defaultYes:!1,yes:()=>{key in actor._source.system.martial&&actor.update({[`system.martial.-=${key}`]:null})}})}}},75242:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.RecallKnowledgePopup=void 0;const _util_1=__webpack_require__(6945);class RecallKnowledgePopup extends Application{constructor(options,data){super(options),this.data=data}static get defaultOptions(){const options=super.defaultOptions;return options.id="recall-knowledge-breakdown",options.classes=[],options.title=game.i18n.localize("PF2E.RecallKnowledge.BreakdownTitle"),options.template="systems/pf2e/templates/actors/recall-knowledge.html",options.width=630,options}async getData(){const data=this.data;return{specificLoreAttempts:this.padAttempts(data.specificLoreDC.progression),unspecificLoreAttempts:this.padAttempts(data.unspecificLoreDC.progression),skills:Array.from(data.skills).sort().map((skill=>({name:CONFIG.PF2E.skillList[skill],attempts:this.padAttempts(data.skill.progression)})))}}padAttempts(attempts){return(0,_util_1.padArray)(attempts.map((attempt=>attempt.toString())),6,"-")}}exports.RecallKnowledgePopup=RecallKnowledgePopup},34302:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.RemoveCoinsPopup=void 0;class RemoveCoinsPopup extends FormApplication{static get defaultOptions(){const options=super.defaultOptions;return options.id="remove-coins",options.classes=[],options.title="Remove Coins",options.template="systems/pf2e/templates/actors/remove-coins.html",options.width="auto",options}async _updateObject(_event,formData){const actor=this.object,coinsToRemove={pp:formData.pp,gp:formData.gp,sp:formData.sp,cp:formData.cp};await actor.inventory.removeCoins(coinsToRemove,{byValue:formData.removeByValue})||ui.notifications.warn("PF2E.ErrorMessage.NotEnoughCoins",{localize:!0})}}exports.RemoveCoinsPopup=RemoveCoinsPopup},30837:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.ScrollWandPopup=void 0;const _util_1=__webpack_require__(6945);class ScrollWandPopup extends FormApplication{constructor(object,options,callback,spell){super(object,options),this.spell=spell,this.onSubmitCallback=callback}static get defaultOptions(){const options=super.defaultOptions;return options.classes=[],options.title=game.i18n.localize("PF2E.ScrollWandPopup.title"),options.template="systems/pf2e/templates/popups/scroll-wand-popup.html",options.width="auto",options}async getData(){const sheetData=await super.getData();if(!this.spell)throw(0,_util_1.ErrorPF2e)("ScrollWandPopup | Could not read spelldata");const minimumLevel=this.spell.baseLevel,levels=Array.from(Array(11-minimumLevel).keys()).map((index=>minimumLevel+index));return sheetData.validLevels=levels,sheetData}async _updateObject(_event,formData){"wand"===formData.itemType&&10===formData.level?ui.notifications.warn(game.i18n.localize("PF2E.ScrollWandPopup.10thLevelWand")):this.onSubmitCallback&&this.spell&&this.onSubmitCallback(formData.level,formData.itemType,this.spell)}}exports.ScrollWandPopup=ScrollWandPopup},93198:function(__unused_webpack_module,exports,__webpack_require__){var _SpellcastingCreateAndEditDialog_instances,_SpellcastingCreateAndEditDialog_canSetAbility,__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.createSpellcastingDialog=void 0;const _actor_1=__webpack_require__(85530),_item_1=__webpack_require__(10843),_util_1=__webpack_require__(6945);class SpellcastingCreateAndEditDialog extends FormApplication{constructor(object,options){var actor;super(object instanceof _actor_1.ActorPF2e?(actor=object,new _item_1.SpellcastingEntryPF2e({name:"Untitled",type:"spellcastingEntry",system:{ability:{value:"cha"},spelldc:{value:0,dc:0},tradition:{value:"arcane"},prepared:{value:"innate"}}},{actor})):object.clone({},{keepId:!0}),options),_SpellcastingCreateAndEditDialog_instances.add(this),this.actor=object instanceof _actor_1.ActorPF2e?object:object.actor}static get defaultOptions(){const options=super.defaultOptions;return options.id="spellcasting-dialog",options.classes=[],options.title=game.i18n.localize("PF2E.SpellcastingSettings.Title"),options.template="systems/pf2e/templates/actors/spellcasting-dialog.html",options.width=350,options.submitOnChange=!0,options.closeOnSubmit=!1,options}async getData(){return{...await super.getData(),actor:this.actor,data:this.object.toObject().system,magicTraditions:CONFIG.PF2E.magicTraditions,spellcastingTypes:CONFIG.PF2E.preparationType,abilities:CONFIG.PF2E.abilities,hasAbility:__classPrivateFieldGet(this,_SpellcastingCreateAndEditDialog_instances,"m",_SpellcastingCreateAndEditDialog_canSetAbility).call(this)}}async _updateObject(event,formData){var _a,_b,_c;const wasInnate=this.object.isInnate,inputData=expandObject(formData),system=mergeObject(null!==(_a=inputData.system)&&void 0!==_a?_a:{},{prepared:{value:this.object.system.prepared.value},ability:{value:"cha"}},{overwrite:!1});if(inputData.system=system,"innate"!==system.prepared.value||wasInnate||(system.ability.value="cha"),(null===(_b=system.proficiency)||void 0===_b?void 0:_b.slug)&&(system.ability.value=""),(null==system?void 0:system.autoHeightenLevel)&&((_c=system.autoHeightenLevel).value||(_c.value=null)),this.object.updateSource(inputData),this.object.reset(),"submit"===event.type)return this.updateAndClose();await this.render()}async updateAndClose(){const updateData=this.object.toObject();if(this.object.isRitual&&(updateData.system.tradition.value="",updateData.system.ability.value=""),this.object.isPrepared||delete updateData.system.prepared.flexible,null===this.object.id)updateData.name=(()=>{var _a,_b;const preparationType=null!==(_a=game.i18n.localize(CONFIG.PF2E.preparationType[updateData.system.prepared.value]))&&void 0!==_a?_a:"",magicTraditions=CONFIG.PF2E.magicTraditions,traditionSpells=game.i18n.localize(magicTraditions[null!==(_b=this.object.tradition)&&void 0!==_b?_b:""]);return this.object.isRitual||!traditionSpells?preparationType:game.i18n.format("PF2E.SpellCastingFormat",{preparationType,traditionSpells})})(),await this.actor.createEmbeddedDocuments("Item",[updateData]);else{const actualEntry=this.actor.spellcasting.get(this.object.id),system=(0,_util_1.pick)(updateData.system,["prepared","tradition","ability","proficiency","autoHeightenLevel"]);await(null==actualEntry?void 0:actualEntry.update({system}))}this.close()}}_SpellcastingCreateAndEditDialog_instances=new WeakSet,_SpellcastingCreateAndEditDialog_canSetAbility=function(){const slug=this.object._source.system.proficiency.slug,baseStat=this.actor.isOfType("character")?this.actor.getProficiencyStatistic(slug):null;return!slug||!!baseStat&&!baseStat.ability},exports.createSpellcastingDialog=async function(event,object){return new SpellcastingCreateAndEditDialog(object,{top:event.clientY-80,left:window.innerWidth-710,height:"auto"}).render(!0)}},45357:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.TrickMagicItemPopup=void 0;const _actor_1=__webpack_require__(85530),_item_1=__webpack_require__(10843),trick_1=__webpack_require__(73041),localize_1=__webpack_require__(41332),_util_1=__webpack_require__(6945);exports.TrickMagicItemPopup=class TrickMagicItemPopup{constructor(item){if(this.translations=localize_1.LocalizePF2e.translations.PF2E.TrickMagicItemPopup,!item.isOfType("consumable"))throw(0,_util_1.ErrorPF2e)("Unexpected item used for Trick Magic Item");this.item=item,this.checkDC=(0,_item_1.calculateTrickMagicItemCheckDC)(item),item.actor instanceof _actor_1.CharacterPF2e?(this.actor=item.actor,this.initialize()):ui.notifications.warn(this.translations.InvalidActor)}async initialize(){const buttons=trick_1.TRICK_MAGIC_SKILLS.filter((skill=>skill in this.checkDC)).map((value=>({value,label:game.i18n.localize(`PF2E.Skill${value.capitalize()}`),modifier:this.actor.skills[value].check.mod}))).reduce(((accumulated,skill)=>{const button={icon:'<i class="fas fa-dice-d20"></i>',label:`${skill.label} (${skill.modifier<0?"":"+"}${skill.modifier})`,callback:()=>this.handleTrickItem(skill.value)};return{...accumulated,[skill.value]:button}}),{});new Dialog({title:this.translations.Title,content:`<p>${this.translations.Label}</p>`,buttons},{classes:["dialog","trick-magic-item"],width:"auto"}).render(!0)}handleTrickItem(skill){var _a;this.actor.skills[skill].check.roll({extraRollOptions:["action:trick-magic-item"],dc:{value:null!==(_a=this.checkDC[skill])&&void 0!==_a?_a:0},item:this.item});const trick=new trick_1.TrickMagicItemEntry(this.actor,skill);this.item.castEmbeddedSpell(trick)}}},95438:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.ActorSpellcasting=void 0;const _actor_1=__webpack_require__(85530),_item_1=__webpack_require__(10843),_util_1=__webpack_require__(6945);class ActorSpellcasting extends Collection{constructor(actor,entries){super(null==entries?void 0:entries.map((entry=>[entry.id,entry]))),this.actor=actor,this.collections=new Collection}get regular(){return this.filter((entry=>entry instanceof _item_1.SpellcastingEntryPF2e))}get spellcastingFeatures(){return this.regular.filter((entry=>entry.isPrepared||entry.isSpontaneous))}canCastConsumable(item){const spell=item.embeddedSpell;return!!spell&&this.some((entry=>entry.canCastSpell(spell,{origin:item})))}refocus(options={}){if(!options.all)throw(0,_util_1.ErrorPF2e)("Actors do not currently support regular refocusing");if(this.actor instanceof _actor_1.NPCPF2e||this.actor instanceof _actor_1.CharacterPF2e){const focus=this.actor.system.resources.focus,rechargeFocus=(null==focus?void 0:focus.max)&&focus.value<focus.max;if(focus&&rechargeFocus)return focus.value=focus.max,{"system.resources.focus.value":focus.value}}return null}recharge(){return{itemUpdates:this.contents.flatMap((entry=>{if(!(entry instanceof _item_1.SpellcastingEntryPF2e))return[];if(entry.isFocusPool||!entry.spells)return[];if(entry.isInnate)return entry.spells.map((spell=>{var _a,_b;const value=null!==(_b=null===(_a=spell.system.location.uses)||void 0===_a?void 0:_a.max)&&void 0!==_b?_b:1;return{_id:spell.id,"system.location.uses.value":value}}));const slots=entry.system.slots;let updated=!1;for(const slot of Object.values(slots))if(entry.isPrepared&&!entry.isFlexible)for(const preparedSpell of Object.values(slot.prepared))preparedSpell.expended&&(preparedSpell.expended=!1,updated=!0);else slot.value<slot.max&&(slot.value=slot.max,updated=!0);return updated?{_id:entry.id,"system.slots":slots}:[]})),actorUpdates:this.refocus({all:!0})}}}exports.ActorSpellcasting=ActorSpellcasting},21075:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.TokenEffect=void 0;exports.TokenEffect=class TokenEffect{constructor(icon,overlay=!1,tint){this.isTemporary=!0,this.flags={},this.icon=icon,this.disabled=!1,tint&&(this.tint=tint),this.flags.core={overlay}}getFlag(scope,flag){var _a;return null===(_a=this.flags[scope])||void 0===_a?void 0:_a[flag]}}},49685:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0})},8382:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.MOVEMENT_TYPES=exports.SKILL_EXPANDED=exports.DC_SLUGS=exports.SKILL_DICTIONARY_REVERSE=exports.SKILL_LONG_FORMS=exports.SKILL_DICTIONARY=exports.SKILL_ABBREVIATIONS=exports.RESISTANCE_TYPES=exports.WEAKNESS_TYPES=exports.IMMUNITY_TYPES=exports.CONDITION_SLUGS=exports.SAVE_TYPES=exports.CREATURE_ACTOR_TYPES=exports.ABILITY_ABBREVIATIONS=void 0;const values_1=__webpack_require__(12759),values_2=__webpack_require__(6089),calculation_1=__webpack_require__(20497);exports.ABILITY_ABBREVIATIONS=new Set(["str","dex","con","int","wis","cha"]),exports.CREATURE_ACTOR_TYPES=["character","npc","familiar"],exports.SAVE_TYPES=["fortitude","reflex","will"],exports.CONDITION_SLUGS=new Set(["blinded","broken","clumsy","concealed","confused","controlled","dazzled","deafened","doomed","drained","dying","encumbered","enfeebled","fascinated","fatigued","flat-footed","fleeing","friendly","frightened","grabbed","helpful","hidden","hostile","immobilized","indifferent","invisible","observed","paralyzed","persistent-damage","petrified","prone","quickened","restrained","sickened","slowed","stunned","stupefied","unconscious","undetected","unfriendly","unnoticed","wounded"]),exports.IMMUNITY_TYPES=new Set([...exports.CONDITION_SLUGS,...values_2.DAMAGE_CATEGORIES,...calculation_1.DAMAGE_TRAITS,...values_2.DAMAGE_TYPES,...values_1.MAGIC_SCHOOLS,"area-damage","auditory","confusion","critical-hits","curse","detection","death-effects","disease","emotion","fear-effects","healing","inhaled","magic","nonlethal-attacks","nonmagical-attacks","object-immunities","olfactory","polymorph","possession","precision","scrying","sleep","spellDeflection","swarm-attacks","swarm-mind","trip","visual"]),exports.WEAKNESS_TYPES=new Set([...calculation_1.ATTACK_TYPES,...values_2.DAMAGE_CATEGORIES,...calculation_1.DAMAGE_TRAITS,...values_2.DAMAGE_TYPES,"area-damage","axe","critical-hits","emotion","precision","splash-damage","vampire-weaknesses","vorpal","vorpal-fear","vulnerable-to-sunlight"]),exports.RESISTANCE_TYPES=new Set([...calculation_1.ATTACK_TYPES,...calculation_1.DAMAGE_TRAITS,...values_2.DAMAGE_TYPES,...values_2.DAMAGE_CATEGORIES,"all","area-damage","critical-hits","protean anatomy"]),exports.SKILL_ABBREVIATIONS=new Set(["acr","arc","ath","cra","dec","dip","itm","med","nat","occ","prf","rel","soc","ste","sur","thi"]),exports.SKILL_DICTIONARY={acr:"acrobatics",arc:"arcana",ath:"athletics",cra:"crafting",dec:"deception",dip:"diplomacy",itm:"intimidation",med:"medicine",nat:"nature",occ:"occultism",prf:"performance",rel:"religion",soc:"society",ste:"stealth",sur:"survival",thi:"thievery"},exports.SKILL_LONG_FORMS=new Set(Object.values(exports.SKILL_DICTIONARY)),exports.SKILL_DICTIONARY_REVERSE=Object.fromEntries(Object.entries(exports.SKILL_DICTIONARY).map((([abbrev,value])=>[value,abbrev]))),exports.DC_SLUGS=new Set(["ac","perception",...exports.SAVE_TYPES,...exports.SKILL_LONG_FORMS]),exports.SKILL_EXPANDED={acrobatics:{ability:"dex",shortform:"acr"},arcana:{ability:"int",shortform:"arc"},athletics:{ability:"str",shortform:"ath"},crafting:{ability:"int",shortform:"cra"},deception:{ability:"cha",shortform:"dec"},diplomacy:{ability:"cha",shortform:"dip"},intimidation:{ability:"cha",shortform:"itm"},medicine:{ability:"wis",shortform:"med"},nature:{ability:"wis",shortform:"nat"},occultism:{ability:"int",shortform:"occ"},performance:{ability:"cha",shortform:"prf"},religion:{ability:"wis",shortform:"rel"},society:{ability:"int",shortform:"soc"},stealth:{ability:"dex",shortform:"ste"},survival:{ability:"wis",shortform:"sur"},thievery:{ability:"dex",shortform:"thi"}},exports.MOVEMENT_TYPES=["land","burrow","climb","fly","swim"]},47341:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.VehiclePF2e=void 0;const modifiers_1=__webpack_require__(92823),util_1=__webpack_require__(58903),_scene_1=__webpack_require__(12789),statistic_1=__webpack_require__(77486),base_1=__webpack_require__(65532);class VehiclePF2e extends base_1.ActorPF2e{get allowedItemTypes(){return[...super.allowedItemTypes,"physical","action"]}get dimensions(){return{length:this.system.details.space.long,width:this.system.details.space.wide,height:this.system.details.space.high}}getTokenDimensions(dimensions=this.dimensions){return{width:Math.max(Math.round(dimensions.width/5),1),height:Math.max(Math.round(dimensions.length/5),1)}}prepareBaseData(){var _a,_b;super.prepareBaseData();const{attributes,details}=this.system;attributes.hp.negativeHealing=!1,attributes.hp.brokenThreshold=Math.floor(attributes.hp.max/2),details.alliance=null;const{size}=this.system.traits,{dimensions}=this;if(size.length=dimensions.length,size.width=dimensions.width,null===(_b=null===(_a=this.prototypeToken.flags)||void 0===_a?void 0:_a.pf2e)||void 0===_b?void 0:_b.linkToActorSize){const{width,height}=this.getTokenDimensions();this.prototypeToken.width=width,this.prototypeToken.height=height}}prepareDerivedData(){super.prepareDerivedData(),this.saves=this.prepareSaves(),this.system.saves.fortitude=mergeObject(this.system.saves.fortitude,this.saves.fortitude.getTraceData())}prepareSaves(){const{synthetics}=this,domains=["fortitude","saving-throw","all"],modifiers=[new modifiers_1.ModifierPF2e({label:"PF2E.ModifierTitle",slug:"fortitude",type:"untyped",modifier:this.system.saves.fortitude.value}),...(0,util_1.extractModifiers)(synthetics,domains)];return{fortitude:new statistic_1.Statistic(this,{slug:"fortitude",label:CONFIG.PF2E.saves.fortitude,modifiers,domains,check:{type:"saving-throw"}})}}async _preUpdate(changed,options,user){var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k;if(await super._preUpdate(changed,options,user),null===(_b=null===(_a=this.prototypeToken.flags)||void 0===_a?void 0:_a.pf2e)||void 0===_b?void 0:_b.linkToActorSize){const{space}=this.system.details,spaceUpdates={width:null!==(_f=null===(_e=null===(_d=null===(_c=changed.system)||void 0===_c?void 0:_c.details)||void 0===_d?void 0:_d.space)||void 0===_e?void 0:_e.wide)&&void 0!==_f?_f:space.wide,length:null!==(_k=null===(_j=null===(_h=null===(_g=changed.system)||void 0===_g?void 0:_g.details)||void 0===_h?void 0:_h.space)||void 0===_j?void 0:_j.long)&&void 0!==_k?_k:space.long},tokenDimensions=this.getTokenDimensions(spaceUpdates);if(mergeObject(changed,{token:tokenDimensions}),canvas.scene){const updates=this.getActiveTokens().filter((token=>token.document.linkToActorSize)).map((token=>({_id:token.id,...tokenDimensions})));await _scene_1.TokenDocumentPF2e.updateDocuments(updates,{parent:canvas.scene})}}}}exports.VehiclePF2e=VehiclePF2e},46014:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.VehicleSheetPF2e=void 0;const base_1=__webpack_require__(11291),vehicle_1=__webpack_require__(47341),_util_1=__webpack_require__(6945);class VehicleSheetPF2e extends base_1.ActorSheetPF2e{static get defaultOptions(){return{...super.defaultOptions,classes:["default","sheet","actor","vehicle"],width:670,height:480,tabs:[{navSelector:".sheet-navigation",contentSelector:".sheet-content",initial:"details"}]}}get template(){return"systems/pf2e/templates/actors/vehicle/vehicle-sheet.html"}async getData(){const sheetData=await super.getData();return sheetData.actorSizes=CONFIG.PF2E.actorSizes,sheetData.actorSize=sheetData.actorSizes[sheetData.data.traits.size.value],sheetData.actorRarities=CONFIG.PF2E.rarityTraits,sheetData.actorRarity=sheetData.actorRarities[sheetData.data.traits.rarity],await this.prepareItems(sheetData),sheetData}async prepareItems(sheetData){const actorData=sheetData.actor,actions={action:{label:game.i18n.localize("PF2E.ActionsActionsHeader"),actions:[]},reaction:{label:game.i18n.localize("PF2E.ActionsReactionsHeader"),actions:[]},free:{label:game.i18n.localize("PF2E.ActionsFreeActionsHeader"),actions:[]}};for(const itemData of actorData.items){const item=this.actor.items.get(itemData._id,{strict:!0});if(item.isOfType("physical")){const systemData=item.system;itemData.showEdit=sheetData.user.isGM||"identified"===systemData.identification.status,itemData.isInvestable=!1,itemData.isIdentified="identified"===systemData.identification.status,itemData.assetValue=item.assetValue,itemData.showEdit=!0}if("action"===itemData.type){const actionTypes=["free","reaction","passive"],fromItem=itemData.system.actionType.value,actionType=(0,_util_1.tupleHasValue)(actionTypes,fromItem)?fromItem:"action";itemData.img=vehicle_1.VehiclePF2e.getActionGraphics(actionType,parseInt((itemData.system.actions||{}).value,10)||1).imageUrl,"passive"===actionType?actions.free.actions.push(itemData):actions[actionType].actions.push(itemData)}}actorData.actions=actions}activateListeners($html){super.activateListeners($html);{const title=$(".sheet-navigation .active").attr("title");title&&$html.find(".navigation-title").text(title)}$html.find(".sheet-navigation").on("mouseover",".item",(event=>{const title=event.currentTarget.title;title&&$(event.currentTarget).parents(".sheet-navigation").find(".navigation-title").text(title)})),$html.find(".sheet-navigation").on("mouseout",".item",(event=>{const parent=$(event.currentTarget).parents(".sheet-navigation"),title=parent.find(".item.active").attr("title");title&&parent.find(".navigation-title").text(title)})),$html.find(".crb-tag-selector").on("click",(event=>this.onTraitSelector(event)))}}exports.VehicleSheetPF2e=VehicleSheetPF2e},79472:function(__unused_webpack_module,exports,__webpack_require__){var _CompendiumBrowser_instances,_CompendiumBrowser_isRange,__createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k);var desc=Object.getOwnPropertyDescriptor(m,k);desc&&!("get"in desc?!m.__esModule:desc.writable||desc.configurable)||(desc={enumerable:!0,get:function(){return m[k]}}),Object.defineProperty(o,k2,desc)}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.prototype.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result},__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)},__importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.CompendiumBrowser=void 0;const progress_1=__webpack_require__(21946),physical_1=__webpack_require__(6560),kit_1=__webpack_require__(32919),_util_1=__webpack_require__(6945),localize_1=__webpack_require__(41332),browserTabs=__importStar(__webpack_require__(36199)),token_actor_utils_1=__webpack_require__(35442),nouislider_1=__importDefault(__webpack_require__(25136)),tagify_1=__importDefault(__webpack_require__(88537)),helpers_1=__webpack_require__(73715);class PackLoader{constructor(){this.loadedPacks={Actor:{},Item:{}}}async*loadPacks(documentType,packs,indexFields){var _a,_b,_c,_d;null!==(_a=(_d=this.loadedPacks)[documentType])&&void 0!==_a||(_d[documentType]={});const translations=localize_1.LocalizePF2e.translations.PF2E.CompendiumBrowser.ProgressBar,progress=new progress_1.Progress({steps:packs.length});for(const packId of packs){let data=this.loadedPacks[documentType][packId];if(data){const{pack}=data;progress.advance(game.i18n.format(translations.LoadingPack,{pack:null!==(_b=null==pack?void 0:pack.metadata.label)&&void 0!==_b?_b:""}))}else{const pack=game.packs.get(packId);if(!pack){progress.advance("");continue}if(progress.advance(game.i18n.format(translations.LoadingPack,{pack:pack.metadata.label})),pack.documentName!==documentType)continue;{const index=await pack.getIndex({fields:indexFields});if(!(null!==(_c=index.contents.at(0))&&void 0!==_c?_c:{}).system){ui.notifications.warn(game.i18n.format("PF2E.BrowserWarnPackNotLoaded",{pack:pack.collection}));continue}this.setModuleArt(packId,index),data={pack,index},this.loadedPacks[documentType][packId]=data}}yield data}progress.close(translations.LoadingComplete)}setModuleArt(packName,index){var _a;if(packName.startsWith("pf2e."))for(const record of index){const actorArt=null===(_a=game.pf2e.system.moduleArt.map.get(`Compendium.${packName}.${record._id}`))||void 0===_a?void 0:_a.actor;record.img=null!=actorArt?actorArt:record.img}}}class CompendiumBrowser extends Application{constructor(options={}){super(options),_CompendiumBrowser_instances.add(this),this.dataTabsList=["action","bestiary","equipment","feat","hazard","spell"],this.packLoader=new PackLoader,this.initialFilter={},this.tabs={action:new browserTabs.Actions(this),bestiary:new browserTabs.Bestiary(this),equipment:new browserTabs.Equipment(this),feat:new browserTabs.Feats(this),hazard:new browserTabs.Hazards(this),spell:new browserTabs.Spells(this)},this.settings=game.settings.get("pf2e","compendiumBrowserPacks"),this.initCompendiumList(),this.injectActorDirectory(),this.hookTab()}get title(){return game.i18n.localize("PF2E.CompendiumBrowser.Title")}static get defaultOptions(){return mergeObject(super.defaultOptions,{id:"compendium-browser",classes:[],template:"systems/pf2e/templates/compendium-browser/compendium-browser.html",width:800,height:700,resizable:!0,dragDrop:[{dragSelector:"ul.item-list > li.item"}],tabs:[{navSelector:"nav",contentSelector:"section.content",initial:"landing-page"}],scrollY:[".control-area",".item-list"]})}async close(options){this.initialFilter={};for(const tab of Object.values(this.tabs))tab.filterData.search.text="";await super.close(options)}initCompendiumList(){var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l,_m,_o,_p,_q,_r,_s,_t;const settings={action:{},bestiary:{},hazard:{},equipment:{},feat:{},spell:{}},loadDefault={"pf2e.actionspf2e":!0,"pf2e.equipment-srd":!0,"pf2e.ancestryfeatures":!0,"pf2e.classfeatures":!0,"pf2e.feats-srd":!0,"pf2e.spells-srd":!0};for(const pack of game.packs){const types=new Set(pack.index.map((entry=>entry.type)));if(0!==types.size){if(types.has("npc")){const load=null===(_c=null===(_b=null===(_a=this.settings.bestiary)||void 0===_a?void 0:_a[pack.collection])||void 0===_b?void 0:_b.load)||void 0===_c||_c;settings.bestiary[pack.collection]={load,name:pack.metadata.label}}if(types.has("hazard")){const load=null===(_f=null===(_e=null===(_d=this.settings.hazard)||void 0===_d?void 0:_d[pack.collection])||void 0===_e?void 0:_e.load)||void 0===_f||_f;settings.hazard[pack.collection]={load,name:pack.metadata.label}}if(types.has("action")){const load=null!==(_j=null===(_h=null===(_g=this.settings.action)||void 0===_g?void 0:_g[pack.collection])||void 0===_h?void 0:_h.load)&&void 0!==_j?_j:!!loadDefault[pack.collection];settings.action[pack.collection]={load,name:pack.metadata.label}}else if(["weapon","armor","equipment","consumable","treasure","backpack","kit"].some((type=>types.has(type)))){const load=null!==(_m=null===(_l=null===(_k=this.settings.equipment)||void 0===_k?void 0:_k[pack.collection])||void 0===_l?void 0:_l.load)&&void 0!==_m?_m:!!loadDefault[pack.collection];settings.equipment[pack.collection]={load,name:pack.metadata.label}}else if(types.has("feat")){const load=null!==(_q=null===(_p=null===(_o=this.settings.feat)||void 0===_o?void 0:_o[pack.collection])||void 0===_p?void 0:_p.load)&&void 0!==_q?_q:!!loadDefault[pack.collection];settings.feat[pack.collection]={load,name:pack.metadata.label}}else if(types.has("spell")){const load=null!==(_t=null===(_s=null===(_r=this.settings.spell)||void 0===_r?void 0:_r[pack.collection])||void 0===_s?void 0:_s.load)&&void 0!==_t?_t:!!loadDefault[pack.collection];settings.spell[pack.collection]={load,name:pack.metadata.label}}}}for(const tab of this.dataTabsList)settings[tab]=Object.fromEntries(Object.entries(settings[tab]).sort((([_collectionA,dataA],[_collectionB,dataB])=>{var _a,_b;return(null!==(_a=null==dataA?void 0:dataA.name)&&void 0!==_a?_a:"")>(null!==(_b=null==dataB?void 0:dataB.name)&&void 0!==_b?_b:"")?1:-1})));this.settings=settings}hookTab(){this.navigationTab=this._tabs[0];const tabCallback=this.navigationTab.callback;this.navigationTab.callback=async(event,tabs,active)=>{null==tabCallback||tabCallback(event,tabs,active),await this.loadTab(active)}}async openTab(tab,filter={}){this.initialFilter=filter,await this._render(!0),this.initialFilter=filter,this.navigationTab.activate(tab,{triggerCallback:!0})}async openSpellTab(entry,level=10){const filter={category:[],level:[],traditions:[]};(entry.isRitual||entry.isFocusPool)&&filter.category.push(entry.system.prepared.value),level&&(filter.level.push(...Array.from(Array(level).keys()).map((l=>l+1))),(entry.isPrepared||entry.isSpontaneous||entry.isInnate)&&filter.category.push("spell")),!entry.tradition||entry.isFocusPool||entry.isRitual||filter.traditions.push(entry.tradition),this.openTab("spell",filter)}async loadTab(tab){if(this.activeTab=tab,"settings"===tab)return void await this.render(!0);if(!this.dataTabsList.includes(tab))throw(0,_util_1.ErrorPF2e)(`Unknown tab "${tab}"`);const currentTab=this.tabs[tab];(null==currentTab?void 0:currentTab.isInitialized)||await(null==currentTab?void 0:currentTab.init()),this.processInitialFilters(currentTab),this.render(!0)}processInitialFilters(currentTab){var _a,_b;this.initialFilter&&Object.keys(this.initialFilter).length>0&&currentTab.resetFilters(),this.initialFilter.searchText&&(currentTab.filterData.search.text=this.initialFilter.searchText),currentTab.filterData.order.by=null!==(_a=this.initialFilter.orderBy)&&void 0!==_a?_a:currentTab.filterData.order.by,currentTab.filterData.order.direction=null!==(_b=this.initialFilter.orderDirection)&&void 0!==_b?_b:currentTab.filterData.order.direction;for(const[filterType,filterValue]of Object.entries(this.initialFilter)){const mappedFilterType="levelRange"===filterType?"level":"priceRange"===filterType?"price":filterType;if(currentTab.filterData.checkboxes&&(0,_util_1.objectHasKey)(currentTab.filterData.checkboxes,mappedFilterType)&&Array.isArray(filterValue)){const checkbox=currentTab.filterData.checkboxes[mappedFilterType];for(const value of filterValue){const option=checkbox.options[value];option?(checkbox.isExpanded=!0,checkbox.selected.push(value),option.selected=!0):console.warn(`Tab '${currentTab.tabName}' checkboxes filter '${mappedFilterType}' has no option: '${value}'`)}}else if(currentTab.filterData.selects&&(0,_util_1.objectHasKey)(currentTab.filterData.selects,mappedFilterType)&&"string"==typeof filterValue){const select=currentTab.filterData.selects[mappedFilterType];select.options[filterValue]?select.selected=filterValue:console.warn(`Tab '${currentTab.tabName}' select filter '${mappedFilterType}' has no option: '${filterValue}'`)}else if(currentTab.filterData.multiselects&&(0,_util_1.objectHasKey)(currentTab.filterData.multiselects,mappedFilterType)&&Array.isArray(filterValue)){const multiselect=currentTab.filterData.multiselects[mappedFilterType];for(const value of filterValue){const option=multiselect.options.find((opt=>opt.value===value));option?multiselect.selected.push(option):console.warn(`Tab '${currentTab.tabName}' multiselect filter '${mappedFilterType}' has no option: '${value}'`)}}else if(currentTab.filterData.ranges&&(0,_util_1.objectHasKey)(currentTab.filterData.ranges,mappedFilterType)&&__classPrivateFieldGet(this,_CompendiumBrowser_instances,"m",_CompendiumBrowser_isRange).call(this,filterValue)){if(void 0!==filterValue.min&&null!==filterValue.min||void 0!==filterValue.max&&null!==filterValue.max){const range=currentTab.filterData.ranges[mappedFilterType];if("priceRange"!==filterType){console.error("Initital filtering for ranges other than price aren't implemented yet.");continue}null!==filterValue.min&&void 0!==filterValue.min&&("number"==typeof filterValue.min?(range.values.min=new helpers_1.CoinsPF2e({gp:filterValue.min}).copperValue,range.values.inputMin=filterValue.min+"gp"):"string"==typeof filterValue.min&&(range.values.min=helpers_1.CoinsPF2e.fromString(filterValue.min).copperValue,range.values.inputMin=filterValue.min)),null!==filterValue.max&&void 0!==filterValue.max&&("number"==typeof filterValue.max?(range.values.max=new helpers_1.CoinsPF2e({gp:filterValue.max}).copperValue,range.values.inputMax=filterValue.max+"gp"):"string"==typeof filterValue.max&&(range.values.max=helpers_1.CoinsPF2e.fromString(filterValue.max).copperValue,range.values.inputMax=filterValue.max)),range.values.min>range.values.max&&(range.values.max=range.values.min,range.values.inputMax=range.values.inputMin),range.isExpanded=!0}}else if(currentTab.filterData.sliders&&(0,_util_1.objectHasKey)(currentTab.filterData.sliders,mappedFilterType)&&__classPrivateFieldGet(this,_CompendiumBrowser_instances,"m",_CompendiumBrowser_isRange).call(this,filterValue)&&("number"==typeof filterValue.min||"number"==typeof filterValue.max)){const slider=currentTab.filterData.sliders[mappedFilterType],minValue="number"==typeof filterValue.min?Math.clamped(filterValue.min,slider.values.lowerLimit,slider.values.upperLimit)||0:slider.values.lowerLimit,maxValue=Math.max(minValue,"number"==typeof filterValue.max?Math.clamped(filterValue.max,slider.values.lowerLimit,slider.values.upperLimit)||0:slider.values.upperLimit);slider.values.min=minValue,slider.values.max=maxValue,slider.isExpanded=!0}else console.warn(`'${filterType}' is not a valid filter for tab '${currentTab.tabName}'.`)}this.initialFilter={}}loadedPacks(tab){var _a;return"settings"===tab?[]:Object.entries(null!==(_a=this.settings[tab])&&void 0!==_a?_a:[]).flatMap((([collection,info])=>(null==info?void 0:info.load)?[collection]:[]))}activateListeners($html){var _a,_b,_c;super.activateListeners($html);const html=$html[0],activeTabName=this.activeTab;if("settings"===activeTabName){const form=html.querySelector(".compendium-browser-settings form");return void(form&&(null===(_a=form.querySelector("button.save-settings"))||void 0===_a||_a.addEventListener("click",(async()=>{const formData=new FormData(form);for(const[t,packs]of Object.entries(this.settings))for(const[key,pack]of Object.entries(packs))pack.load=formData.has(`${t}-${key}`);await game.settings.set("pf2e","compendiumBrowserPacks",this.settings);for(const tab of Object.values(this.tabs))tab.isInitialized&&(await tab.init(),tab.scrollLimit=100);this.render(!0)}))))}const currentTab=this.tabs[activeTabName],controlArea=html.querySelector("div.control-area");if(!controlArea)return;const search=controlArea.querySelector("input[name=textFilter]");search&&search.addEventListener("input",(()=>{currentTab.filterData.search.text=search.value,this.clearScrollLimit(),this.renderResultList({replace:!0})}));const sortContainer=controlArea.querySelector("div.sortcontainer");if(sortContainer){const order=sortContainer.querySelector("select.order");order&&order.addEventListener("change",(()=>{var _a;const orderBy=null!==(_a=order.value)&&void 0!==_a?_a:"name";currentTab.filterData.order.by=orderBy,this.clearScrollLimit(!0)}));const directionAnchor=sortContainer.querySelector("a.direction");directionAnchor&&directionAnchor.addEventListener("click",(()=>{var _a;const direction=null!==(_a=directionAnchor.dataset.direction)&&void 0!==_a?_a:"asc";currentTab.filterData.order.direction="asc"===direction?"desc":"asc",this.clearScrollLimit(!0)}))}if("spell"===activeTabName){const timeFilter=controlArea.querySelector("select[name=timefilter]");timeFilter&&timeFilter.addEventListener("change",(()=>{var _a,_b;(null===(_b=null===(_a=currentTab.filterData)||void 0===_a?void 0:_a.selects)||void 0===_b?void 0:_b.timefilter)&&(currentTab.filterData.selects.timefilter.selected=timeFilter.value,this.clearScrollLimit(!0))}))}null===(_b=controlArea.querySelector("button.clear-filters"))||void 0===_b||_b.addEventListener("click",(()=>{this.resetFilters(),this.clearScrollLimit(!0)}));const filterContainers=controlArea.querySelectorAll("div.filtercontainer");for(const container of Array.from(filterContainers)){const{filterType,filterName}=container.dataset;null===(_c=container.querySelector("button[data-action=clear-filter]"))||void 0===_c||_c.addEventListener("click",(event=>{switch(event.stopImmediatePropagation(),filterType){case"checkboxes":{const checkboxes=currentTab.filterData.checkboxes;if((0,_util_1.objectHasKey)(checkboxes,filterName)){for(const option of Object.values(checkboxes[filterName].options))option.selected=!1;checkboxes[filterName].selected=[],this.render(!0)}break}case"ranges":{const ranges=currentTab.filterData.ranges;(0,_util_1.objectHasKey)(ranges,filterName)&&(ranges[filterName].values=currentTab.defaultFilterData.ranges[filterName].values,ranges[filterName].changed=!1,this.render(!0))}}}));const title=container.querySelector("div.title");if(null==title||title.addEventListener("click",(()=>{if("checkboxes"===filterType||"ranges"===filterType||"sliders"===filterType){const filters=currentTab.filterData[filterType];if(filters&&(0,_util_1.objectHasKey)(filters,filterName)){const filter=filters[filterName];filter.isExpanded=!filter.isExpanded;const contentElement=title.nextElementSibling;contentElement instanceof HTMLElement&&(filter.isExpanded?contentElement.style.display="":contentElement.style.display="none")}}})),"checkboxes"===filterType&&container.querySelectorAll("input[type=checkbox]").forEach((checkboxElement=>{checkboxElement.addEventListener("click",(()=>{if((0,_util_1.objectHasKey)(currentTab.filterData.checkboxes,filterName)){const optionName=checkboxElement.name,checkbox=currentTab.filterData.checkboxes[filterName],option=checkbox.options[optionName];option.selected=!option.selected,option.selected?checkbox.selected.push(optionName):checkbox.selected=checkbox.selected.filter((name=>name!==optionName)),this.clearScrollLimit(!0)}}))})),"ranges"===filterType&&container.querySelectorAll("input[name*=Bound]").forEach((range=>{range.addEventListener("keyup",(event=>{var _a,_b,_c,_d;if("Enter"!==event.key)return;const ranges=currentTab.filterData.ranges;if(ranges&&(0,_util_1.objectHasKey)(ranges,filterName)){const range=ranges[filterName],lowerBound=null!==(_b=null===(_a=container.querySelector("input[name*=lowerBound]"))||void 0===_a?void 0:_a.value)&&void 0!==_b?_b:"",upperBound=null!==(_d=null===(_c=container.querySelector("input[name*=upperBound]"))||void 0===_c?void 0:_c.value)&&void 0!==_d?_d:"",values=currentTab.parseRangeFilterInput(filterName,lowerBound,upperBound);range.values=values,range.changed=!0,this.clearScrollLimit(!0)}}))})),"multiselects"===filterType){const multiselects=currentTab.filterData.multiselects;if(!multiselects)continue;if((0,_util_1.objectHasKey)(multiselects,filterName)){const multiselect=container.querySelector(`input[name=${filterName}][data-tagify-select]`);if(!multiselect)continue;const data=multiselects[filterName];new tagify_1.default(multiselect,{enforceWhitelist:!0,keepInvalidTags:!1,editTags:!1,tagTextProp:"label",dropdown:{enabled:0,fuzzySearch:!1,mapValueTo:"label",maxItems:data.options.length,searchKeys:["label"]},whitelist:data.options}),multiselect.addEventListener("change",(()=>{const selections=JSON.parse(multiselect.value||"[]");Array.isArray(selections)&&selections.every((s=>(0,_util_1.isObject)(s)&&"string"==typeof s.value))&&(data.selected=selections,this.render())}))}}if("sliders"===filterType){const sliders=currentTab.filterData.sliders;if(!sliders)continue;if((0,_util_1.objectHasKey)(sliders,filterName)){const sliderElement=container.querySelector(`div.slider-${filterName}`);if(!sliderElement)continue;const data=sliders[filterName];nouislider_1.default.create(sliderElement,{range:{min:data.values.lowerLimit,max:data.values.upperLimit},start:[data.values.min,data.values.max],tooltips:{to:value=>Math.floor(value).toString()},connect:[!1,!0,!1],behaviour:"snap",step:data.values.step}).on("change",(values=>{const[min,max]=values.map((value=>Number(value)));data.values.min=min,data.values.max=max;const $minLabel=$html.find(`label.${name}-min-label`),$maxLabel=$html.find(`label.${name}-max-label`);$minLabel.text(min),$maxLabel.text(max),this.clearScrollLimit(!0)})),sliderElement.querySelectorAll(".noUi-handle").forEach((element=>{element.classList.add("handle")})),sliderElement.querySelectorAll(".noUi-connect").forEach((element=>{element.classList.add("range_selected")}))}}}const list=html.querySelector(".tab.active ul.item-list");list&&(list.addEventListener("scroll",(()=>{var _a;if(list.scrollTop+list.clientHeight>=list.scrollHeight-5){const currentValue=currentTab.scrollLimit,maxValue=null!==(_a=currentTab.totalItemCount)&&void 0!==_a?_a:0;currentValue<maxValue&&(currentTab.scrollLimit=Math.clamped(currentValue+100,100,maxValue),this.renderResultList({list,start:currentValue}))}})),this.renderResultList({list}))}async renderResultList({list,start=0,replace=!1}){const currentTab="settings"!==this.activeTab?this.tabs[this.activeTab]:null,html=this.element[0];if(!currentTab)return;if(!list){const listElement=html.querySelector(".tab.active ul.item-list");if(!listElement)return;list=listElement}const newResults=await currentTab.renderResults(start);this.activateResultListeners(newResults);const fragment=document.createDocumentFragment();fragment.append(...newResults),replace?list.replaceChildren(fragment):list.append(fragment);for(const dragDropHandler of this._dragDrop)dragDropHandler.bind(html)}activateResultListeners(liElements=[]){var _a,_b;for(const liElement of liElements){const{entryUuid}=liElement.dataset;if(!entryUuid)continue;const nameAnchor=liElement.querySelector("div.name > a");nameAnchor&&nameAnchor.addEventListener("click",(async()=>{const document=await fromUuid(entryUuid);(null==document?void 0:document.sheet)&&document.sheet.render(!0)})),"equipment"===this.activeTab&&(null===(_a=liElement.querySelector("a[data-action=take-item]"))||void 0===_a||_a.addEventListener("click",(()=>{this.takePhysicalItem(entryUuid)})),null===(_b=liElement.querySelector("a[data-action=buy-item]"))||void 0===_b||_b.addEventListener("click",(()=>{this.buyPhysicalItem(entryUuid)})))}}async takePhysicalItem(uuid){const actors=(0,token_actor_utils_1.getSelectedOrOwnActors)(["character","npc"]),item=await this.getPhysicalItem(uuid);if(0!==actors.length){for(const actor of actors)await actor.createEmbeddedDocuments("Item",[item.toObject()]);1===actors.length&&game.user.character&&actors[0]===game.user.character?ui.notifications.info(game.i18n.format("PF2E.CompendiumBrowser.AddedItemToCharacter",{item:item.name,character:game.user.character.name})):ui.notifications.info(game.i18n.format("PF2E.CompendiumBrowser.AddedItem",{item:item.name}))}else ui.notifications.error(game.i18n.format("PF2E.ErrorMessage.NoTokenSelected"))}async buyPhysicalItem(uuid){const actors=(0,token_actor_utils_1.getSelectedOrOwnActors)(["character","npc"]),item=await this.getPhysicalItem(uuid);if(0===actors.length)return void ui.notifications.error(game.i18n.format("PF2E.ErrorMessage.NoTokenSelected"));let purchasesSucceeded=0;for(const actor of actors)await actor.inventory.removeCoins(item.price.value)&&(purchasesSucceeded+=1,await actor.createEmbeddedDocuments("Item",[item.toObject()]));1===actors.length?1===purchasesSucceeded?ui.notifications.info(game.i18n.format("PF2E.CompendiumBrowser.BoughtItemWithCharacter",{item:item.name,character:actors[0].name})):ui.notifications.warn(game.i18n.format("PF2E.CompendiumBrowser.FailedToBuyItemWithCharacter",{item:item.name,character:actors[0].name})):purchasesSucceeded===actors.length?ui.notifications.info(game.i18n.format("PF2E.CompendiumBrowser.BoughtItemWithAllCharacters",{item:item.name})):ui.notifications.warn(game.i18n.format("PF2E.CompendiumBrowser.FailedToBuyItemWithSomeCharacters",{item:item.name}))}async getPhysicalItem(uuid){const item=await fromUuid(uuid);if(!(item instanceof physical_1.PhysicalItemPF2e||item instanceof kit_1.KitPF2e))throw(0,_util_1.ErrorPF2e)("Unexpected failure retrieving compendium item");return item}_canDragStart(){return!0}_canDragDrop(){return!0}_onDragStart(event){this.element.animate({opacity:.125},250);const item=$(event.currentTarget)[0];event.dataTransfer.setData("text/plain",JSON.stringify({type:item.dataset.type,uuid:item.dataset.entryUuid})),item.addEventListener("dragend",(()=>{window.setTimeout((()=>{this.element.animate({opacity:1},250,(()=>{this.element.css({pointerEvents:""})}))}),500)}),{once:!0})}_onDragOver(event){super._onDragOver(event),this.element.css({pointerEvents:"none"})}injectActorDirectory(){const $html=ui.actors.element;if($html.find(".bestiary-browser-btn").length>0)return;const bestiaryImportButton=$(`<button class="bestiary-browser-btn"><i class="fas fa-fire"></i> ${game.i18n.localize("PF2E.CompendiumBrowser.BestiaryBrowser")}</button>`);game.user.isGM&&$html.find("footer").append(bestiaryImportButton),bestiaryImportButton.on("click",(ev=>{ev.preventDefault(),this.openTab("bestiary")}))}getData(){const activeTab=this.activeTab;if("settings"===activeTab)return{user:game.user,settings:this.settings};const tab=this.tabs[activeTab];return tab?{user:game.user,[activeTab]:{filterData:tab.filterData},scrollLimit:tab.scrollLimit}:{user:game.user}}resetFilters(){const activeTab=this.activeTab;"settings"!==activeTab&&this.tabs[activeTab].resetFilters()}clearScrollLimit(render=!1){const tab=this.activeTab;if("settings"===tab)return;const list=this.element[0].querySelector(".tab.active ul.item-list");list&&(list.scrollTop=0,this.tabs[tab].scrollLimit=100,render&&this.render())}}exports.CompendiumBrowser=CompendiumBrowser,_CompendiumBrowser_instances=new WeakSet,_CompendiumBrowser_isRange=function(value){return(0,_util_1.isObject)(value)&&(["number","string"].includes(typeof value.min)||["number","string"].includes(typeof value.max))}},21946:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Progress=void 0;exports.Progress=class Progress{constructor({steps=1}={}){this.steps=steps,this.counter=-1,this.label=""}advance(label){this.counter+=1,this.label=label,this.updateUI()}close(label){label&&(this.label=label),this.counter=this.steps,this.updateUI()}updateUI(){const $loader=$("#loading");if(0===$loader.length)return;const pct=Math.clamped(100*this.counter/this.steps,0,100);$loader.find("#context").text(this.label),$loader.find("#loading-bar").css({width:`${pct}%`,whiteSpace:"nowrap"}),$loader.find("#progress").text(`${this.counter} / ${this.steps}`),$loader.css({display:"block"}),this.counter!==this.steps||$loader.is(":hidden")||$loader.fadeOut(2e3)}}},26960:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.CompendiumBrowserActionTab=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(66415);class CompendiumBrowserActionTab extends base_1.CompendiumBrowserTab{constructor(browser){super(browser,"action"),this.templatePath="systems/pf2e/templates/compendium-browser/partials/action.html",this.searchFields=["name"],this.storeFields=["type","name","img","uuid","traits","source"],this.index=["img","system.actionType.value","system.traits.value","system.source.value"],this.prepareFilterData()}async loadData(){console.debug("PF2e System | Compendium Browser | Started loading actions");const actions=[],indexFields=["img","system.actionType.value","system.traits.value","system.source.value"],sources=new Set;for await(const{pack,index}of this.browser.packLoader.loadPacks("Item",this.browser.loadedPacks("action"),indexFields)){console.debug(`PF2e System | Compendium Browser | ${pack.metadata.label} - Loading`);for(const actionData of index)if("action"===actionData.type){if(!this.hasAllIndexFields(actionData,indexFields)){console.warn(`Action '${actionData.name}' does not have all required data fields. Consider unselecting pack '${pack.metadata.label}' in the compendium browser settings.`);continue}"passive"===actionData.system.actionType.value&&(actionData.img=(0,_util_1.getActionIcon)("passive"));const source=actionData.system.source.value;source&&(sources.add(source),actionData.system.source.value=(0,_util_1.sluggify)(source)),actions.push({type:actionData.type,name:actionData.name,img:actionData.img,uuid:`Compendium.${pack.collection}.${actionData._id}`,traits:actionData.system.traits.value,source:actionData.system.source.value})}}this.indexData=actions,this.filterData.checkboxes.traits.options=this.generateCheckboxOptions(CONFIG.PF2E.actionTraits),this.filterData.checkboxes.source.options=this.generateSourceCheckboxOptions(sources),console.debug("PF2e System | Compendium Browser | Finished loading actions")}filterIndexData(entry){const{checkboxes}=this.filterData;return!(checkboxes.traits.selected.length&&!this.arrayIncludes(checkboxes.traits.selected,entry.traits))&&!(checkboxes.source.selected.length&&!checkboxes.source.selected.includes(entry.source))}prepareFilterData(){this.filterData={checkboxes:{traits:{isExpanded:!1,label:"PF2E.BrowserFilterTraits",options:{},selected:[]},source:{isExpanded:!1,label:"PF2E.BrowserFilterSource",options:{},selected:[]}},order:{by:"name",direction:"asc",options:{name:"PF2E.BrowserSortyByNameLabel"}},search:{text:""}}}}exports.CompendiumBrowserActionTab=CompendiumBrowserActionTab},66415:function(__unused_webpack_module,exports,__webpack_require__){var _CompendiumBrowserTab_domParser,__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)},__importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.CompendiumBrowserTab=void 0;const _util_1=__webpack_require__(6945),minisearch_1=__importDefault(__webpack_require__(72734));exports.CompendiumBrowserTab=class CompendiumBrowserTab{constructor(browser,tabName){this.indexData=[],this.isInitialized=!1,this.totalItemCount=0,this.scrollLimit=100,_CompendiumBrowserTab_domParser.set(this,new DOMParser),this.searchFields=[],this.storeFields=[],this.browser=browser,this.tabName=tabName}async init(){await this.loadData(),this.searchEngine=new minisearch_1.default({fields:this.searchFields,idField:"uuid",storeFields:this.storeFields,searchOptions:{combineWith:"AND",prefix:!0}}),this.searchEngine.addAll(this.indexData),this.defaultFilterData=deepClone(this.filterData),this.isInitialized=!0}getIndexData(start){if(!this.isInitialized)throw(0,_util_1.ErrorPF2e)(`Compendium Browser Tab "${this.tabName}" is not initialized!`);const currentIndex=(()=>{const searchText=this.filterData.search.text;if(searchText){const searchResult=this.searchEngine.search(searchText);return this.sortResult(searchResult.filter(this.filterIndexData.bind(this)))}return this.sortResult(this.indexData.filter(this.filterIndexData.bind(this)))})();return this.totalItemCount=currentIndex.length,currentIndex.slice(start,this.scrollLimit)}resetFilters(){this.filterData=deepClone(this.defaultFilterData)}async loadData(){}prepareFilterData(){}filterIndexData(_entry){return!0}async renderResults(start){if(!this.templatePath)throw(0,_util_1.ErrorPF2e)(`Tab "${this.tabName}" has no valid template path.`);const indexData=this.getIndexData(start),liElements=[];for(const entry of indexData){const htmlString=await renderTemplate(this.templatePath,{entry,filterData:this.filterData}),html=__classPrivateFieldGet(this,_CompendiumBrowserTab_domParser,"f").parseFromString(htmlString,"text/html");liElements.push(html.body.firstElementChild)}return liElements}sortResult(result){const{order}=this.filterData,lang=game.i18n.lang,sorted=result.sort(((entryA,entryB)=>{switch(order.by){case"name":return entryA.name.localeCompare(entryB.name,lang);case"level":return entryA.level-entryB.level||entryA.name.localeCompare(entryB.name,lang);case"price":return entryA.priceInCopper-entryB.priceInCopper||entryA.name.localeCompare(entryB.name,lang);default:return 0}}));return"asc"===order.direction?sorted:sorted.reverse()}parseRangeFilterInput(_name,lower,upper){return{min:Number(lower)||0,max:Number(upper)||0,inputMin:lower,inputMax:upper}}arrayIncludes(array,other){return other.some((value=>array.includes(value)))}generateCheckboxOptions(configData,sort=!0){const localized=Object.entries(configData).reduce(((result,[key,label])=>({...result,[key]:game.i18n.localize(label)})),{});return Object.entries(sort?this.sortedConfig(localized):localized).reduce(((result,[key,label])=>({...result,[key]:{label,selected:!1}})),{})}generateMultiselectOptions(optionsRecord,sort=!0){const options=Object.entries(optionsRecord).map((([value,label])=>({value,label:game.i18n.localize(label)})));return sort&&options.sort(((a,b)=>a.label.localeCompare(b.label,game.i18n.lang))),options}generateSourceCheckboxOptions(sources){return[...sources].sort().reduce(((result,source)=>({...result,[(0,_util_1.sluggify)(source)]:{label:source,selected:!1}})),{})}sortedConfig(obj){return Object.fromEntries([...Object.entries(obj)].sort(((entryA,entryB)=>entryA[1].localeCompare(entryB[1],game.i18n.lang))))}hasAllIndexFields(data,indexFields){for(const field of indexFields)if(void 0===getProperty(data,field))return!1;return!0}},_CompendiumBrowserTab_domParser=new WeakMap},58952:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.CompendiumBrowserBestiaryTab=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(66415);class CompendiumBrowserBestiaryTab extends base_1.CompendiumBrowserTab{constructor(browser){super(browser,"bestiary"),this.index=["img","system.details.level.value","system.details.alignment.value","system.details.source.value","system.traits"],this.templatePath="systems/pf2e/templates/compendium-browser/partials/bestiary.html",this.searchFields=["name"],this.storeFields=["type","name","img","uuid","level","alignment","actorSize","traits","rarity","source"],this.prepareFilterData()}async loadData(){console.debug("PF2e System | Compendium Browser | Started loading Bestiary actors");const bestiaryActors=[],sources=new Set,indexFields=[...this.index,"system.details.isComplex"];for await(const{pack,index}of this.browser.packLoader.loadPacks("Actor",this.browser.loadedPacks("bestiary"),indexFields)){console.debug(`PF2e System | Compendium Browser | ${pack.metadata.label} - ${index.size} entries found`);for(const actorData of index)if("npc"===actorData.type){if(!this.hasAllIndexFields(actorData,this.index)){console.warn(`Actor '${actorData.name}' does not have all required data fields. Consider unselecting pack '${pack.metadata.label}' in the compendium browser settings.`);continue}const source=actorData.system.details.source.value;source&&(sources.add(source),actorData.system.details.source.value=(0,_util_1.sluggify)(source)),bestiaryActors.push({type:actorData.type,name:actorData.name,img:actorData.img,uuid:`Compendium.${pack.collection}.${actorData._id}`,level:actorData.system.details.level.value,alignment:actorData.system.details.alignment.value,actorSize:actorData.system.traits.size.value,traits:actorData.system.traits.value,rarity:actorData.system.traits.rarity,source:actorData.system.details.source.value})}console.debug(`PF2e System | Compendium Browser | ${pack.metadata.label} - Loaded`)}this.indexData=bestiaryActors,this.filterData.checkboxes.sizes.options=this.generateCheckboxOptions(CONFIG.PF2E.actorSizes),this.filterData.checkboxes.alignments.options=this.generateCheckboxOptions(CONFIG.PF2E.alignments,!1),this.filterData.checkboxes.traits.options=this.generateCheckboxOptions(CONFIG.PF2E.monsterTraits),this.filterData.checkboxes.rarity.options=this.generateCheckboxOptions(CONFIG.PF2E.rarityTraits,!1),this.filterData.checkboxes.source.options=this.generateSourceCheckboxOptions(sources),console.debug("PF2e System | Compendium Browser | Finished loading Bestiary actors")}filterIndexData(entry){const{checkboxes,sliders}=this.filterData;return entry.level>=sliders.level.values.min&&entry.level<=sliders.level.values.max&&(!(checkboxes.sizes.selected.length&&!checkboxes.sizes.selected.includes(entry.actorSize))&&(!(checkboxes.alignments.selected.length&&!checkboxes.alignments.selected.includes(entry.alignment))&&(!(checkboxes.traits.selected.length&&!this.arrayIncludes(checkboxes.traits.selected,entry.traits))&&(!(checkboxes.source.selected.length&&!checkboxes.source.selected.includes(entry.source))&&!(checkboxes.rarity.selected.length&&!checkboxes.rarity.selected.includes(entry.rarity))))))}prepareFilterData(){this.filterData={checkboxes:{sizes:{isExpanded:!0,label:"PF2E.BrowserFilterSizes",options:{},selected:[]},alignments:{isExpanded:!1,label:"PF2E.BrowserFilterAlignments",options:{},selected:[]},traits:{isExpanded:!1,label:"PF2E.BrowserFilterTraits",options:{},selected:[]},rarity:{isExpanded:!1,label:"PF2E.BrowserFilterRarities",options:{},selected:[]},source:{isExpanded:!1,label:"PF2E.BrowserFilterSource",options:{},selected:[]}},order:{by:"level",direction:"asc",options:{name:"PF2E.BrowserSortyByNameLabel",level:"PF2E.BrowserSortyByLevelLabel"}},sliders:{level:{isExpanded:!1,label:"PF2E.BrowserFilterLevels",values:{lowerLimit:-1,upperLimit:25,min:-1,max:25,step:1}}},search:{text:""}}}}exports.CompendiumBrowserBestiaryTab=CompendiumBrowserBestiaryTab},59278:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.CompendiumBrowserEquipmentTab=void 0;const helpers_1=__webpack_require__(73715),localize_1=__webpack_require__(41332),_util_1=__webpack_require__(6945),base_1=__webpack_require__(66415);class CompendiumBrowserEquipmentTab extends base_1.CompendiumBrowserTab{constructor(browser){super(browser,"equipment"),this.templatePath="systems/pf2e/templates/compendium-browser/partials/equipment.html",this.searchFields=["name"],this.storeFields=["type","name","img","uuid","level","category","group","price","priceInCopper","traits","rarity","source"],this.prepareFilterData()}async loadData(){var _a,_b,_c,_d;console.debug("PF2e System | Compendium Browser | Started loading inventory items");const inventoryItems=[],itemTypes=["weapon","armor","equipment","consumable","treasure","backpack","kit"],kitFields=["img","system.price","system.traits"],baseFields=[...kitFields,"system.stackGroup","system.level.value","system.source.value"],armorAndWeaponFields=[...baseFields,"system.category","system.group"],consumableFields=[...baseFields,"system.consumableType.value"],indexFields=[...new Set([...armorAndWeaponFields,...consumableFields]),"system.denomination.value","system.value.value"],sources=new Set;for await(const{pack,index}of this.browser.packLoader.loadPacks("Item",this.browser.loadedPacks("equipment"),indexFields)){console.debug(`PF2e System | Compendium Browser | ${pack.metadata.label} - ${index.size} entries found`);for(const itemData of index)if(("treasure"!==itemData.type||"coins"!==itemData.system.stackGroup)&&itemTypes.includes(itemData.type)){let skip=!1;if("weapon"===itemData.type||"armor"===itemData.type?this.hasAllIndexFields(itemData,armorAndWeaponFields)||(skip=!0):"kit"===itemData.type?this.hasAllIndexFields(itemData,kitFields)||(skip=!0):"consumable"===itemData.type?this.hasAllIndexFields(itemData,consumableFields)||(skip=!0):this.hasAllIndexFields(itemData,baseFields)||(skip=!0),skip){console.warn(`Item '${itemData.name}' does not have all required data fields. Consider unselecting pack '${pack.metadata.label}' in the compendium browser settings.`);continue}const priceValue=itemData.system.price.value,priceCoins="string"==typeof priceValue?helpers_1.CoinsPF2e.fromString(priceValue):new helpers_1.CoinsPF2e(priceValue),coinValue=priceCoins.copperValue;itemData.system.itemTypes={value:itemData.type},itemData.system.rarity=itemData.system.traits.rarity,itemData.filters={};const source=itemData.system.source.value;source&&(sources.add(source),itemData.system.source.value=(0,_util_1.sluggify)(source)),inventoryItems.push({type:itemData.type,name:itemData.name,img:itemData.img,uuid:`Compendium.${pack.collection}.${itemData._id}`,level:null!==(_b=null===(_a=itemData.system.level)||void 0===_a?void 0:_a.value)&&void 0!==_b?_b:0,category:null!==(_c=itemData.system.category)&&void 0!==_c?_c:"",group:null!==(_d=itemData.system.group)&&void 0!==_d?_d:"",price:priceCoins,priceInCopper:coinValue,traits:itemData.system.traits.value,rarity:itemData.system.traits.rarity,source:itemData.system.source.value})}}this.indexData=inventoryItems,this.filterData.checkboxes.armorTypes.options=this.generateCheckboxOptions(CONFIG.PF2E.armorTypes),mergeObject(this.filterData.checkboxes.armorTypes.options,this.generateCheckboxOptions(CONFIG.PF2E.armorGroups)),this.filterData.checkboxes.weaponTypes.options=this.generateCheckboxOptions(CONFIG.PF2E.weaponCategories),mergeObject(this.filterData.checkboxes.weaponTypes.options,this.generateCheckboxOptions(CONFIG.PF2E.weaponGroups)),this.filterData.multiselects.traits.options=this.generateMultiselectOptions({...CONFIG.PF2E.armorTraits,...CONFIG.PF2E.consumableTraits,...CONFIG.PF2E.equipmentTraits,...CONFIG.PF2E.weaponTraits}),this.filterData.checkboxes.itemtypes.options=this.generateCheckboxOptions({weapon:"ITEM.TypeWeapon",armor:"ITEM.TypeArmor",equipment:"ITEM.TypeEquipment",consumable:"ITEM.TypeConsumable",treasure:"ITEM.TypeTreasure",backpack:"ITEM.TypeBackpack",kit:"ITEM.TypeKit"}),this.filterData.checkboxes.rarity.options=this.generateCheckboxOptions(CONFIG.PF2E.rarityTraits,!1),this.filterData.checkboxes.source.options=this.generateSourceCheckboxOptions(sources),console.debug("PF2e System | Compendium Browser | Finished loading inventory items")}filterIndexData(entry){const{checkboxes,multiselects,ranges,sliders}=this.filterData;if(!(entry.level>=sliders.level.values.min&&entry.level<=sliders.level.values.max))return!1;if(!(entry.priceInCopper>=ranges.price.values.min&&entry.priceInCopper<=ranges.price.values.max))return!1;if(checkboxes.itemtypes.selected.length>0&&!checkboxes.itemtypes.selected.includes(entry.type))return!1;if(checkboxes.armorTypes.selected.length>0&&!this.arrayIncludes(checkboxes.armorTypes.selected,[entry.category,entry.group]))return!1;if(checkboxes.weaponTypes.selected.length>0&&!this.arrayIncludes(checkboxes.weaponTypes.selected,[entry.category,entry.group]))return!1;const selectedTraits=multiselects.traits.selected.map((s=>s.value));return!(selectedTraits.length>0&&!selectedTraits.some((t=>entry.traits.includes(t))))&&(!(checkboxes.source.selected.length>0&&!checkboxes.source.selected.includes(entry.source))&&!(checkboxes.rarity.selected.length>0&&!checkboxes.rarity.selected.includes(entry.rarity)))}parseRangeFilterInput(name,lower,upper){if("price"===name){const coins=localize_1.LocalizePF2e.translations.PF2E.CurrencyAbbreviations;for(const[english,translated]of Object.entries(coins))lower=lower.replaceAll(translated,english),upper=upper.replaceAll(translated,english);return{min:helpers_1.CoinsPF2e.fromString(lower).copperValue,max:helpers_1.CoinsPF2e.fromString(upper).copperValue,inputMin:lower,inputMax:upper}}return super.parseRangeFilterInput(name,lower,upper)}prepareFilterData(){const coins=localize_1.LocalizePF2e.translations.PF2E.CurrencyAbbreviations;this.filterData={checkboxes:{itemtypes:{isExpanded:!0,label:"PF2E.BrowserFilterInventoryTypes",options:{},selected:[]},rarity:{isExpanded:!1,label:"PF2E.BrowserFilterRarities",options:{},selected:[]},armorTypes:{isExpanded:!1,label:"PF2E.BrowserFilterArmorFilters",options:{},selected:[]},weaponTypes:{isExpanded:!1,label:"PF2E.BrowserFilterWeaponFilters",options:{},selected:[]},source:{isExpanded:!1,label:"PF2E.BrowserFilterSource",options:{},selected:[]}},multiselects:{traits:{label:"PF2E.BrowserFilterTraits",options:[],selected:[]}},order:{by:"level",direction:"asc",options:{name:"PF2E.BrowserSortyByNameLabel",level:"PF2E.BrowserSortyByLevelLabel",price:"PF2E.BrowserSortyByPriceLabel"}},ranges:{price:{changed:!1,isExpanded:!1,label:"PF2E.PriceLabel",values:{min:0,max:2e7,inputMin:`0${coins.cp}`,inputMax:`200,000${coins.gp}`}}},sliders:{level:{isExpanded:!1,label:"PF2E.BrowserFilterLevels",values:{lowerLimit:0,upperLimit:30,min:0,max:30,step:1}}},search:{text:""}}}}exports.CompendiumBrowserEquipmentTab=CompendiumBrowserEquipmentTab},21829:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.CompendiumBrowserFeatTab=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(66415);class CompendiumBrowserFeatTab extends base_1.CompendiumBrowserTab{constructor(browser){super(browser,"feat"),this.templatePath="systems/pf2e/templates/compendium-browser/partials/feat.html",this.searchFields=["name"],this.storeFields=["type","name","img","uuid","level","featType","skills","traits","rarity","source"],this.prepareFilterData()}async loadData(){console.debug("PF2e System | Compendium Browser | Started loading feats");const feats=[],sources=new Set,indexFields=["img","system.prerequisites.value","system.actionType.value","system.actions.value","system.featType.value","system.level.value","system.traits","system.source.value"],translatedSkills=Object.entries(CONFIG.PF2E.skillList).reduce(((result,[key,value])=>({...result,[key]:game.i18n.localize(value).toLocaleLowerCase(game.i18n.lang)})),{}),skillList=Object.entries(translatedSkills);for await(const{pack,index}of this.browser.packLoader.loadPacks("Item",this.browser.loadedPacks("feat"),indexFields)){console.debug(`PF2e System | Compendium Browser | ${pack.metadata.label} - ${index.size} entries found`);for(const featData of index)if("feat"===featData.type){if(featData.filters={},!this.hasAllIndexFields(featData,indexFields)){console.warn(`Feat '${featData.name}' does not have all required data fields. Consider unselecting pack '${pack.metadata.label}' in the compendium browser settings.`);continue}const prerequisitesArr=featData.system.prerequisites.value.map((prerequisite=>(null==prerequisite?void 0:prerequisite.value)?prerequisite.value.toLowerCase():"")),skills=new Set;for(const prereq of prerequisitesArr)for(const[key,value]of skillList)(prereq.includes(key)||prereq.includes(value))&&skills.add(key);const source=featData.system.source.value;source&&(sources.add(source),featData.system.source.value=(0,_util_1.sluggify)(source)),feats.push({type:featData.type,name:featData.name,img:featData.img,uuid:`Compendium.${pack.collection}.${featData._id}`,level:featData.system.level.value,featType:featData.system.featType.value,skills:[...skills],traits:featData.system.traits.value,rarity:featData.system.traits.rarity,source:featData.system.source.value})}}this.indexData=feats,this.filterData.checkboxes.feattype.options=this.generateCheckboxOptions(CONFIG.PF2E.featTypes),this.filterData.checkboxes.skills.options=this.generateCheckboxOptions(CONFIG.PF2E.skillList),this.filterData.checkboxes.rarity.options=this.generateCheckboxOptions(CONFIG.PF2E.rarityTraits),this.filterData.checkboxes.source.options=this.generateSourceCheckboxOptions(sources),this.filterData.multiselects.traits.options=this.generateMultiselectOptions({...CONFIG.PF2E.featTraits}),console.debug("PF2e System | Compendium Browser | Finished loading feats")}filterIndexData(entry){const{checkboxes,multiselects,sliders}=this.filterData;if(!(entry.level>=sliders.level.values.min&&entry.level<=sliders.level.values.max))return!1;if(checkboxes.feattype.selected.length&&!checkboxes.feattype.selected.includes(entry.featType))return!1;if(checkboxes.skills.selected.length&&!this.arrayIncludes(checkboxes.skills.selected,entry.skills))return!1;const selectedTraits=multiselects.traits.selected.map((s=>s.value));return!(selectedTraits.length>0&&!selectedTraits.some((t=>entry.traits.includes(t))))&&(!(checkboxes.source.selected.length&&!checkboxes.source.selected.includes(entry.source))&&!(checkboxes.rarity.selected.length&&!checkboxes.rarity.selected.includes(entry.rarity)))}prepareFilterData(){this.filterData={checkboxes:{feattype:{isExpanded:!1,label:"PF2E.BrowserFilterCategory",options:{},selected:[]},skills:{isExpanded:!1,label:"PF2E.BrowserFilterSkills",options:{},selected:[]},rarity:{isExpanded:!1,label:"PF2E.BrowserFilterRarities",options:{},selected:[]},source:{isExpanded:!1,label:"PF2E.BrowserFilterSource",options:{},selected:[]}},multiselects:{traits:{label:"PF2E.BrowserFilterTraits",options:[],selected:[]}},order:{by:"level",direction:"asc",options:{name:"PF2E.BrowserSortyByNameLabel",level:"PF2E.BrowserSortyByLevelLabel"}},sliders:{level:{isExpanded:!1,label:"PF2E.BrowserFilterLevels",values:{lowerLimit:0,upperLimit:20,min:0,max:20,step:1}}},search:{text:""}}}}exports.CompendiumBrowserFeatTab=CompendiumBrowserFeatTab},56556:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.CompendiumBrowserHazardTab=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(66415);class CompendiumBrowserHazardTab extends base_1.CompendiumBrowserTab{constructor(browser){super(browser,"hazard"),this.templatePath="systems/pf2e/templates/compendium-browser/partials/hazard.html",this.searchFields=["name"],this.storeFields=["type","name","img","uuid","level","complexity","traits","rarity","source"],this.index=["img","system.details.level.value","system.details.isComplex","system.traits"],this.prepareFilterData()}async loadData(){var _a;console.debug("PF2e System | Compendium Browser | Started loading Hazard actors");const hazardActors=[],sources=new Set,indexFields=[...this.index,"system.details.alignment.value","system.details.source.value"];for await(const{pack,index}of this.browser.packLoader.loadPacks("Actor",this.browser.loadedPacks("hazard"),indexFields)){console.debug(`PF2e System | Compendium Browser | ${pack.metadata.label} - ${index.size} entries found`);for(const actorData of index)if("hazard"===actorData.type){if(!this.hasAllIndexFields(actorData,this.index)){console.warn(`Hazard '${actorData.name}' does not have all required data fields. Consider unselecting pack '${pack.metadata.label}' in the compendium browser settings.`);continue}const source=null===(_a=actorData.system.details.source)||void 0===_a?void 0:_a.value;source?(sources.add(source),actorData.system.details.source.value=(0,_util_1.sluggify)(source)):actorData.system.details.source={value:""},hazardActors.push({type:actorData.type,name:actorData.name,img:actorData.img,uuid:`Compendium.${pack.collection}.${actorData._id}`,level:actorData.system.details.level.value,complexity:actorData.system.details.isComplex?"complex":"simple",traits:actorData.system.traits.value,rarity:actorData.system.traits.rarity,source:actorData.system.details.source.value})}console.debug(`PF2e System | Compendium Browser | ${pack.metadata.label} - Loaded`)}this.indexData=hazardActors,this.filterData.checkboxes.complexity.options=this.generateCheckboxOptions({simple:"PF2E.TraitSimple",complex:"PF2E.TraitComplex"},!1),this.filterData.checkboxes.traits.options=this.generateCheckboxOptions(CONFIG.PF2E.hazardTraits),this.filterData.checkboxes.rarity.options=this.generateCheckboxOptions(CONFIG.PF2E.rarityTraits,!1),this.filterData.checkboxes.source.options=this.generateSourceCheckboxOptions(sources),console.debug("PF2e System | Compendium Browser | Finished loading Hazard actors")}filterIndexData(entry){const{checkboxes,sliders}=this.filterData;return entry.level>=sliders.level.values.min&&entry.level<=sliders.level.values.max&&(!(checkboxes.complexity.selected.length&&!checkboxes.complexity.selected.includes(entry.complexity))&&(!(checkboxes.traits.selected.length&&!this.arrayIncludes(checkboxes.traits.selected,entry.traits))&&(!(checkboxes.source.selected.length&&!checkboxes.source.selected.includes(entry.source))&&!(checkboxes.rarity.selected.length&&!checkboxes.rarity.selected.includes(entry.rarity)))))}prepareFilterData(){this.filterData={checkboxes:{complexity:{isExpanded:!0,label:"PF2E.BrowserFilterComplexity",options:{},selected:[]},traits:{isExpanded:!1,label:"PF2E.BrowserFilterTraits",options:{},selected:[]},rarity:{isExpanded:!1,label:"PF2E.BrowserFilterRarities",options:{},selected:[]},source:{isExpanded:!1,label:"PF2E.BrowserFilterSource",options:{},selected:[]}},order:{by:"level",direction:"asc",options:{name:"PF2E.BrowserSortyByNameLabel",level:"PF2E.BrowserSortyByLevelLabel"}},sliders:{level:{isExpanded:!1,label:"PF2E.BrowserFilterLevels",values:{lowerLimit:-1,upperLimit:25,min:-1,max:25,step:1}}},search:{text:""}}}}exports.CompendiumBrowserHazardTab=CompendiumBrowserHazardTab},36199:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Spells=exports.Hazards=exports.Feats=exports.Equipment=exports.Bestiary=exports.Actions=void 0;var action_1=__webpack_require__(26960);Object.defineProperty(exports,"Actions",{enumerable:!0,get:function(){return action_1.CompendiumBrowserActionTab}});var bestiary_1=__webpack_require__(58952);Object.defineProperty(exports,"Bestiary",{enumerable:!0,get:function(){return bestiary_1.CompendiumBrowserBestiaryTab}});var equipment_1=__webpack_require__(59278);Object.defineProperty(exports,"Equipment",{enumerable:!0,get:function(){return equipment_1.CompendiumBrowserEquipmentTab}});var feat_1=__webpack_require__(21829);Object.defineProperty(exports,"Feats",{enumerable:!0,get:function(){return feat_1.CompendiumBrowserFeatTab}});var hazard_1=__webpack_require__(56556);Object.defineProperty(exports,"Hazards",{enumerable:!0,get:function(){return hazard_1.CompendiumBrowserHazardTab}});var spell_1=__webpack_require__(80892);Object.defineProperty(exports,"Spells",{enumerable:!0,get:function(){return spell_1.CompendiumBrowserSpellTab}})},80892:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.CompendiumBrowserSpellTab=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(66415);class CompendiumBrowserSpellTab extends base_1.CompendiumBrowserTab{constructor(browser){super(browser,"spell"),this.templatePath="systems/pf2e/templates/compendium-browser/partials/spell.html",this.searchFields=["name"],this.storeFields=["type","name","img","uuid","level","time","category","school","traditions","traits","rarity","source"],this.prepareFilterData()}async loadData(){console.debug("PF2e System | Compendium Browser | Started loading spells");const spells=[],times=new Set,sources=new Set,indexFields=["img","system.level.value","system.category.value","system.traditions.value","system.time","system.school.value","system.traits","system.source.value"],data=this.browser.packLoader.loadPacks("Item",this.browser.loadedPacks("spell"),indexFields);for await(const{pack,index}of data){console.debug(`PF2e System | Compendium Browser | ${pack.metadata.label} - ${index.size} entries found`);for(const spellData of index)if(spellData.filters={},"spell"===spellData.type){if(!this.hasAllIndexFields(spellData,indexFields)){console.warn(`Item '${spellData.name}' does not have all required data fields. Consider unselecting pack '${pack.metadata.label}' in the compendium browser settings.`);continue}spellData.system.traits.value.includes("cantrip")&&(spellData.system.category.value="cantrip");let time=spellData.system.time.value;time&&(time.includes("reaction")&&(time="reaction"),times.add(time),spellData.system.time.value=(0,_util_1.sluggify)(time)),"reaction"===spellData.system.time.value?spellData.system.time.img=(0,_util_1.getActionIcon)("reaction"):"free"===spellData.system.time.value?spellData.system.time.img=(0,_util_1.getActionIcon)("free"):spellData.system.time.img=(0,_util_1.getActionIcon)(spellData.system.time.value),"systems/pf2e/icons/default-icons/mystery-man.svg"===spellData.system.time.img&&(spellData.system.time.img="systems/pf2e/icons/actions/OneAction.webp");const source=spellData.system.source.value;source&&(sources.add(source),spellData.system.source.value=(0,_util_1.sluggify)(source)),spells.push({type:spellData.type,name:spellData.name,img:spellData.img,uuid:`Compendium.${pack.collection}.${spellData._id}`,level:spellData.system.level.value,time:spellData.system.time,category:spellData.system.category.value,school:spellData.system.school.value,traditions:spellData.system.traditions.value,traits:spellData.system.traits.value,rarity:spellData.system.traits.rarity,source:spellData.system.source.value})}}this.indexData=spells,this.filterData.checkboxes.category.options=this.generateCheckboxOptions(CONFIG.PF2E.spellCategories),this.filterData.checkboxes.category.options.cantrip={label:"PF2E.SpellCantripLabel",selected:!1},this.filterData.checkboxes.traditions.options=this.generateCheckboxOptions(CONFIG.PF2E.magicTraditions);for(let i=1;i<=10;i++)this.filterData.checkboxes.level.options[`${i}`]={label:game.i18n.localize(`PF2E.SpellLevel${i}`),selected:!1};this.filterData.checkboxes.classes.options=this.generateCheckboxOptions(CONFIG.PF2E.classTraits),this.filterData.checkboxes.school.options=this.generateCheckboxOptions(CONFIG.PF2E.magicSchools),this.filterData.checkboxes.rarity.options=this.generateCheckboxOptions(CONFIG.PF2E.rarityTraits,!1),this.filterData.checkboxes.traits.options=this.generateCheckboxOptions(CONFIG.PF2E.spellTraits),this.filterData.checkboxes.source.options=this.generateSourceCheckboxOptions(sources),this.filterData.selects.timefilter.options=[...times].sort().reduce(((result,time)=>({...result,[(0,_util_1.sluggify)(time)]:time})),{}),console.debug("PF2e System | Compendium Browser | Finished loading spells")}filterIndexData(entry){const{checkboxes,selects}=this.filterData;if(checkboxes.level.selected.length){if(!checkboxes.level.selected.map((level=>Number(level))).includes(entry.level))return!1}if(selects.timefilter.selected&&selects.timefilter.selected!==entry.time.value)return!1;if(checkboxes.category.selected.length&&!checkboxes.category.selected.includes(entry.category))return!1;if(checkboxes.traditions.selected.length&&!this.arrayIncludes(checkboxes.traditions.selected,entry.traditions))return!1;if(checkboxes.classes.selected.length||checkboxes.traits.selected.length){const combined=[...checkboxes.classes.selected,...checkboxes.traits.selected];if(!this.arrayIncludes(combined,entry.traits))return!1}return!(checkboxes.school.selected.length&&!checkboxes.school.selected.includes(entry.school))&&(!(checkboxes.rarity.selected.length&&!checkboxes.rarity.selected.includes(entry.rarity))&&!(checkboxes.source.selected.length&&!checkboxes.source.selected.includes(entry.source)))}prepareFilterData(){this.filterData={checkboxes:{category:{isExpanded:!0,label:"PF2E.BrowserFilterSpellCategories",options:{},selected:[]},traditions:{isExpanded:!0,label:"PF2E.BrowserFilterTraditions",options:{},selected:[]},level:{isExpanded:!0,label:"PF2E.BrowserFilterLevels",options:{},selected:[]},classes:{isExpanded:!1,label:"PF2E.BrowserFilterClass",options:{},selected:[]},school:{isExpanded:!1,label:"PF2E.BrowserFilterSchools",options:{},selected:[]},rarity:{isExpanded:!1,label:"PF2E.BrowserFilterRarities",options:{},selected:[]},traits:{isExpanded:!1,label:"PF2E.BrowserFilterTraits",options:{},selected:[]},source:{isExpanded:!1,label:"PF2E.BrowserFilterSource",options:{},selected:[]}},selects:{timefilter:{label:"PF2E.BrowserFilterCastingTime",options:{},selected:""}},order:{by:"level",direction:"asc",options:{name:"PF2E.BrowserSortyByNameLabel",level:"PF2E.BrowserSortyByLevelLabel"}},search:{text:""}}}}exports.CompendiumBrowserSpellTab=CompendiumBrowserSpellTab},78614:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.EffectsPanel=void 0;const _item_1=__webpack_require__(10843);class EffectsPanel extends Application{constructor(){super(...arguments),this.refresh=foundry.utils.debounce(this.render,100)}get actor(){var _a,_b,_c,_d;return null!==(_d=null!==(_b=null===(_a=canvas.tokens.controlled[0])||void 0===_a?void 0:_a.actor)&&void 0!==_b?_b:null===(_c=game.user)||void 0===_c?void 0:_c.character)&&void 0!==_d?_d:null}static get defaultOptions(){return mergeObject(super.defaultOptions,{id:"pf2e-effects-panel",popOut:!1,template:"systems/pf2e/templates/system/effects-panel.html"})}async getData(options){var _a;const{actor}=this;if(!actor||!game.user.settings.showEffectPanel)return{conditions:[],effects:[],actor:null,user:{isGM:!1}};const effects=null!==(_a=actor.itemTypes.effect.map((effect=>{var _a;const duration=effect.totalDuration,{system}=effect;if(duration===1/0)"encounter"===system.duration.unit?system.remaining=system.expired?game.i18n.localize("PF2E.EffectPanel.Expired"):game.i18n.localize("PF2E.EffectPanel.UntilEncounterEnds"):system.remaining=game.i18n.localize("PF2E.EffectPanel.UnlimitedDuration");else{const duration=effect.remainingDuration;system.remaining=system.expired?game.i18n.localize("PF2E.EffectPanel.Expired"):EffectsPanel.getRemainingDurationLabel(duration.remaining,null!==(_a=system.start.initiative)&&void 0!==_a?_a:0,system.duration.expiry)}return effect})))&&void 0!==_a?_a:[],conditions=game.pf2e.ConditionManager.getFlattenedConditions(actor.itemTypes.condition);return{...await super.getData(options),actor,effects,conditions,user:{isGM:game.user.isGM}}}activateListeners($html){super.activateListeners($html);const $icons=$html.find("div[data-item-id]");$icons.on("contextmenu",(async event=>{var _a;const $target=$(event.currentTarget);if($target.attr("data-locked"))return;const actor=this.actor,effect=null==actor?void 0:actor.items.get(null!==(_a=$target.attr("data-item-id"))&&void 0!==_a?_a:"");effect instanceof _item_1.AbstractEffectPF2e?await effect.decrease():this.refresh()})),$icons.on("click",(async event=>{var _a;const $target=$(event.currentTarget);if($target.attr("data-locked"))return;const actor=this.actor,effect=null==actor?void 0:actor.items.get(null!==(_a=$target.attr("data-item-id"))&&void 0!==_a?_a:"");effect instanceof _item_1.AbstractEffectPF2e&&await effect.increase()}))}static getRemainingDurationLabel(remaining,initiative,expiry){if(remaining>=63072e3)return game.i18n.format("PF2E.EffectPanel.RemainingDuration.MultipleYears",{years:Math.floor(remaining/31536e3)});if(remaining>=31536e3)return game.i18n.localize("PF2E.EffectPanel.RemainingDuration.SingleYear");if(remaining>=1209600)return game.i18n.format("PF2E.EffectPanel.RemainingDuration.MultipleWeeks",{weeks:Math.floor(remaining/604800)});if(remaining>604800)return game.i18n.localize("PF2E.EffectPanel.RemainingDuration.SingleWeek");if(remaining>=172800)return game.i18n.format("PF2E.EffectPanel.RemainingDuration.MultipleDays",{days:Math.floor(remaining/86400)});if(remaining>7200)return game.i18n.format("PF2E.EffectPanel.RemainingDuration.MultipleHours",{hours:Math.floor(remaining/3600)});if(remaining>120)return game.i18n.format("PF2E.EffectPanel.RemainingDuration.MultipleMinutes",{minutes:Math.floor(remaining/60)});if(remaining>=12)return game.i18n.format("PF2E.EffectPanel.RemainingDuration.MultipleRounds",{rounds:Math.floor(remaining/6)});if(remaining>=6)return game.i18n.localize("PF2E.EffectPanel.RemainingDuration.SingleRound");if(remaining>=2)return game.i18n.format("PF2E.EffectPanel.RemainingDuration.MultipleSeconds",{seconds:remaining});if(1===remaining)return game.i18n.localize("PF2E.EffectPanel.RemainingDuration.SingleSecond");{const key="turn-end"===expiry?"PF2E.EffectPanel.RemainingDuration.ZeroRoundsExpireTurnEnd":"PF2E.EffectPanel.RemainingDuration.ZeroRoundsExpireTurnStart";return game.i18n.format(key,{initiative})}}}exports.EffectsPanel=EffectsPanel},86513:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.LicenseViewer=void 0;class LicenseViewer extends Application{static get defaultOptions(){return mergeObject(super.defaultOptions,{id:"license-viewer",title:game.i18n.localize("PF2E.LicenseViewer.Label"),template:"systems/pf2e/templates/packs/license-viewer.html",width:500,height:600,resizable:!0,tabs:[{navSelector:"nav",contentSelector:"section.content",initial:"landing-page"}]})}}exports.LicenseViewer=LicenseViewer},96735:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.MigrationSummary=void 0;const migration_1=__webpack_require__(63051),localize_1=__webpack_require__(41332);class MigrationSummary extends Application{constructor(options={}){var _a,_b;super(options),this.isRemigrating=!1,null!==(_a=(_b=this.options).troubleshoot)&&void 0!==_a||(_b.troubleshoot=!1),this.options.title=options.troubleshoot?game.i18n.localize("PF2E.Migrations.Summary.Troubleshoot.Title"):game.i18n.localize("PF2E.Migrations.Summary.Title");const existing=Object.values(ui.windows).find((app=>app instanceof MigrationSummary));if(existing)return existing.options=mergeObject(existing.options,options),existing}get template(){return"systems/pf2e/templates/system/migration-summary.html"}static get defaultOptions(){return{...super.defaultOptions,id:"migration-summary",width:400,height:"auto"}}async getData(){const latestSchemaVersion=migration_1.MigrationRunner.LATEST_SCHEMA_VERSION,actors={successful:game.actors.filter((actor=>actor.schemaVersion===latestSchemaVersion)).length,total:game.actors.size},items={successful:game.items.filter((item=>item.schemaVersion===latestSchemaVersion)).length,total:game.items.size},canRemigrate=this.options.troubleshoot||actors.successful<actors.total||items.successful<items.total,helpResourcesText=await TextEditor.enrichHTML(localize_1.LocalizePF2e.translations.PF2E.Migrations.Summary.HelpResources,{async:!0});return{options:this.options,systemVersion:game.system.version,latestSchemaVersion,actors,items,canRemigrate,helpResources:canRemigrate&&this.isRemigrating,helpResourcesText}}activateListeners($html){super.activateListeners($html),$html.find("button[data-action=remigrate]").on("click",(async event=>{const{LATEST_SCHEMA_VERSION,RECOMMENDED_SAFE_VERSION}=migration_1.MigrationRunner,lowestVersions={actor:game.actors.size>0?Math.min(...game.actors.map((a=>{var _a;return null!==(_a=a.schemaVersion)&&void 0!==_a?_a:0}))):LATEST_SCHEMA_VERSION,item:game.items.size>0?Math.min(...game.items.map((a=>{var _a;return null!==(_a=a.schemaVersion)&&void 0!==_a?_a:0}))):LATEST_SCHEMA_VERSION},lowestSchemaVersion=Math.max(Math.min(lowestVersions.actor,lowestVersions.item),RECOMMENDED_SAFE_VERSION);$html.find(".docs-successful").text("...");try{this.isRemigrating=!0,this.options.troubleshoot=!1,$(event.currentTarget).prop("disabled",!0),await game.pf2e.system.remigrate({from:lowestSchemaVersion}),this.options.troubleshoot=!1,this.render(!1)}catch(_a){return}})),$html.find("button[data-action=close]").on("click",(()=>this.close()))}}exports.MigrationSummary=MigrationSummary},54046:function(__unused_webpack_module,exports,__webpack_require__){var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.PickAThingPrompt=void 0;const predication_1=__webpack_require__(538),_util_1=__webpack_require__(6945),tagify_1=__importDefault(__webpack_require__(88537));class PickAThingPrompt extends Application{constructor(data){var _a,_b,_c;super(),this.selection=null,this.choices=[],this.item=data.item,this.predicate=null!==(_a=data.predicate)&&void 0!==_a?_a:new predication_1.PredicatePF2e,this.options.title=null!==(_b=data.title)&&void 0!==_b?_b:this.item.name,this.allowNoSelection=null!==(_c=data.allowNoSelection)&&void 0!==_c&&_c}get actor(){return this.item.actor}static get defaultOptions(){return{...super.defaultOptions,classes:["pick-a-thing-prompt"],resizable:!1,height:"auto",width:"auto"}}getChoices(){var _a;return null!==(_a=this.choices.filter((choice=>{var _a;return this.predicate.test(null!==(_a=choice.domain)&&void 0!==_a?_a:[])})))&&void 0!==_a?_a:[]}getSelection(event){var _a,_b,_c;if(!(event.currentTarget instanceof HTMLElement))throw(0,_util_1.ErrorPF2e)("Unexpected error retrieving form data");const selectedIndex=(null!==(_b=null===(_a=event.currentTarget.closest(".content"))||void 0===_a?void 0:_a.querySelector("tag"))&&void 0!==_b?_b:event.currentTarget).getAttribute("value");return""!==selectedIndex&&Number.isInteger(Number(selectedIndex))&&null!==(_c=this.choices.at(Number(selectedIndex)))&&void 0!==_c?_c:null}async resolveSelection(){return this.choices=this.getChoices(),this.render(!0),new Promise((resolve=>{this.resolve=resolve}))}async getData(options={}){var _a;const slug=null!==(_a=this.item.slug)&&void 0!==_a?_a:(0,_util_1.sluggify)(this.item.name);return options.id=`pick-a-${slug}`,{selectMenu:this.choices.length>9,choices:this.choices.map(((c,index)=>({...c,value:index})))}}activateListeners($html){const html=$html[0];html.querySelectorAll("a[data-choice], button[type=button]").forEach((element=>{element.addEventListener("click",(event=>{var _a;this.selection=null!==(_a=this.getSelection(event))&&void 0!==_a?_a:null,this.close()}))}));const select=html.querySelector("input[data-tagify-select]");select&&(this.selectMenu=new tagify_1.default(select,{enforceWhitelist:!0,keepInvalidTags:!1,mode:"select",tagTextProp:"label",dropdown:{closeOnSelect:!0,enabled:1,highlightFirst:!0,mapValueTo:"label",maxItems:this.choices.length,searchKeys:["label"]},whitelist:this.choices.map(((c,index)=>({value:index.toString(),label:c.label})))}),this.selectMenu.DOM.input.spellcheck=!1)}async close({force=!1}={}){var _a;this.element.find("button, select").css({pointerEvents:"none"}),this.selection||(force?ui.notifications.warn(game.i18n.format("PF2E.UI.RuleElements.Prompt.NoValidOptions",{actor:this.actor.name,item:this.item.name})):this.allowNoSelection||ui.notifications.warn(game.i18n.format("PF2E.UI.RuleElements.Prompt.NoSelectionMade",{item:this.item.name}))),null===(_a=this.resolve)||void 0===_a||_a.call(this,this.selection),await super.close({force})}}exports.PickAThingPrompt=PickAThingPrompt},39940:function(__unused_webpack_module,exports,__webpack_require__){var _a,_SceneDarknessAdjuster_slider,_SceneDarknessAdjuster_noRefreshHook,__createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k);var desc=Object.getOwnPropertyDescriptor(m,k);desc&&!("get"in desc?!m.__esModule:desc.writable||desc.configurable)||(desc={enumerable:!0,get:function(){return m[k]}}),Object.defineProperty(o,k2,desc)}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.prototype.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result},__classPrivateFieldSet=this&&this.__classPrivateFieldSet||function(receiver,state,value,kind,f){if("m"===kind)throw new TypeError("Private method is not writable");if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===kind?f.call(receiver,value):f?f.value=value:state.set(receiver,value),value},__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.SceneDarknessAdjuster=void 0;const _util_1=__webpack_require__(6945),nouislider_1=__importStar(__webpack_require__(25136));__webpack_require__(75926);const world_clock_1=__webpack_require__(53959);class SceneDarknessAdjuster extends Application{constructor(){super(...arguments),_SceneDarknessAdjuster_slider.set(this,void 0),_SceneDarknessAdjuster_noRefreshHook.set(this,!1)}static get defaultOptions(){return{...super.defaultOptions,id:"darkness-adjuster",title:"CONTROLS.AdjustSceneDarkness",template:"systems/pf2e/templates/system/scene-darkness-adjuster.html",width:400,height:45,minimizable:!1}}async getData(options={}){var _b;return{...await super.getData(options),darknessSyncedToTime:!!(null===(_b=game.scenes.viewed)||void 0===_b?void 0:_b.darknessSyncedToTime)}}async render(force=!1,options={}){var _b;if(!game.scenes.viewed)return this;const controls=ui.controls.element[0],bounds=null===(_b=null==controls?void 0:controls.querySelector("li[data-tool=darkness-adjuster]"))||void 0===_b?void 0:_b.getBoundingClientRect();if(!bounds)return this;if(options.left=bounds.right+6,options.top=bounds.top-3,this.rendered)return super.render(force,options);await super.render(force,options);const $element=$("#darkness-adjuster");return await $element.hide(0).fadeIn().promise(),this}async close(options){return this.rendered?(await $("#darkness-adjuster").fadeOut().promise(),super.close(options)):super.close(options)}activateListeners($html){var _b;if(!game.scenes.viewed)return;const slider=$html[0].querySelector(".slider");if(__classPrivateFieldSet(this,_SceneDarknessAdjuster_slider,nouislider_1.default.create(slider,{range:{min:0,max:1},start:[.25,game.scenes.viewed.darkness,.75],connect:[!0,!1,!1,!0],behaviour:"snap-unconstrained-snap",pips:{mode:nouislider_1.PipsMode.Range,density:5},step:.05}),"f"),null===(_b=game.scenes.viewed)||void 0===_b?void 0:_b.darknessSyncedToTime){const synchronized=document.createElement("div");synchronized.className="message";const message=world_clock_1.WorldClock.createSyncedMessage();synchronized.append(message),slider.append(synchronized)}slider.querySelectorAll(".noUi-origin").forEach(((thumb,index)=>{var _b;1!==index&&$(thumb).attr({disabled:"disabled"}),(null===(_b=game.scenes.viewed)||void 0===_b?void 0:_b.darknessSyncedToTime)&&thumb.setAttribute("disabled","true")})),__classPrivateFieldGet(this,_SceneDarknessAdjuster_slider,"f").on("slide",((values,thumbNumber)=>{1===thumbNumber&&canvas.scene&&(__classPrivateFieldSet(this,_SceneDarknessAdjuster_noRefreshHook,!0,"f"),canvas.colorManager.initialize({darknessLevel:Number(values[1])}),canvas.app.ticker.add((()=>{__classPrivateFieldSet(this,_SceneDarknessAdjuster_noRefreshHook,!1,"f")})))})),__classPrivateFieldGet(this,_SceneDarknessAdjuster_slider,"f").on("change",(async(values,thumbNumber)=>{if(canvas.scene&&1===thumbNumber){const newValue=Number(values[1]);await canvas.scene.update({darkness:newValue},{animateDarkness:Math.round(5e3*Math.abs(canvas.scene.darkness-newValue))})}})),slider.querySelectorAll(".noUi-handle").forEach(((handle,index)=>{const decoration={0:["threshold_bright-light",(0,_util_1.fontAwesomeIcon)("sun")],1:["darkness-level",null],2:["threshold_darkness",(0,_util_1.fontAwesomeIcon)("moon",{fixedWidth:!0})]},$handle=$(handle),[cssClass,icon]=decoration[index];icon&&$handle.append(icon),$handle.addClass(cssClass)})),slider.querySelectorAll(".noUi-connect").forEach(((connect,index)=>{connect.classList.add({0:"range_bright-light",1:"range_darkness"}[index])}))}onLightingRefresh(darkness){var _b;if(!this.rendered||__classPrivateFieldGet(this,_SceneDarknessAdjuster_noRefreshHook,"f"))return;const sliderValues=null===(_b=__classPrivateFieldGet(this,_SceneDarknessAdjuster_slider,"f"))||void 0===_b?void 0:_b.get();if(__classPrivateFieldGet(this,_SceneDarknessAdjuster_slider,"f")&&Array.isArray(sliderValues)){const currentValue=sliderValues[1],stepValue=Math.round(20*darkness)/20;stepValue!==currentValue&&(sliderValues[1]=stepValue,__classPrivateFieldGet(this,_SceneDarknessAdjuster_slider,"f").set(sliderValues))}}}exports.SceneDarknessAdjuster=SceneDarknessAdjuster,_a=SceneDarknessAdjuster,_SceneDarknessAdjuster_slider=new WeakMap,_SceneDarknessAdjuster_noRefreshHook=new WeakMap,SceneDarknessAdjuster.instance=new _a},85732:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.ActorDirectoryPF2e=void 0;const _util_1=__webpack_require__(6945);class ActorDirectoryPF2e extends ActorDirectory{static get defaultOptions(){const options=super.defaultOptions;return options.renderUpdateKeys.push("system.details.level.value","system.attributes.adjustment"),options}async getData(){return{...await super.getData(),documentPartial:"systems/pf2e/templates/sidebar/actor-document-partial.html"}}activateListeners($html){var _a,_b;super.activateListeners($html);const html=$html[0];for(const element of(0,_util_1.htmlQueryAll)(html,"li.directory-item")){const actor=game.actors.get(null!==(_a=element.dataset.documentId)&&void 0!==_a?_a:"");(null==actor?void 0:actor.testUserPermission(game.user,"OBSERVER"))||null===(_b=element.querySelector("span.actor-level"))||void 0===_b||_b.remove()}}async _render(force,context={}){return"update"===(context=deepClone(context)).action&&"Actor"===context.documentType&&context.data&&(context.data=context.data.map((d=>({...d,...flattenObject(d)})))),super._render(force,context)}}exports.ActorDirectoryPF2e=ActorDirectoryPF2e},92443:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.ChatLogPF2e=void 0;const check_1=__webpack_require__(11848),_util_1=__webpack_require__(6945);class ChatLogPF2e extends ChatLog{_getEntryContextOptions(){const canApplyDamage=$html=>{var _a;const messageId=null!==(_a=$html.attr("data-message-id"))&&void 0!==_a?_a:"",message=game.messages.get(messageId,{strict:!0});return canvas.tokens.controlled.length>0&&message.isRoll&&1===$html.find(".chat-damage-buttons").length},canReroll=li=>game.messages.get(li.data("messageId"),{strict:!0}).isRerollable,applyDamage=async($li,multiplier)=>{var _a,_b;const messageId=null!==(_a=$li.attr("data-message-id"))&&void 0!==_a?_a:"",roll=game.messages.get(messageId,{strict:!0}).rolls.at(0);if(roll)for(const token of canvas.tokens.controlled)await(null===(_b=token.actor)||void 0===_b?void 0:_b.applyDamage(roll.total*multiplier,token.document,CONFIG.PF2E.chatDamageButtonShieldToggle))},options=super._getEntryContextOptions();return options.push({name:"PF2E.ChatRollDetails.Select",icon:'<i class="fas fa-search"></i>',condition:$li=>{const message=game.messages.get($li.data("messageId"),{strict:!0}),rulesEnabled=game.settings.get("pf2e","enabledRulesUI");return game.user.isGM&&rulesEnabled&&!!message.flags.pf2e.context},callback:$li=>{var _a;game.messages.get(null!==(_a=$li.attr("data-message-id"))&&void 0!==_a?_a:"",{strict:!0}).showDetails()}},{name:"PF2E.DamageButton.FullContext",icon:'<i class="fas fa-heart-broken"></i>',condition:canApplyDamage,callback:li=>applyDamage(li,1)},{name:"PF2E.DamageButton.HalfContext",icon:'<i class="fas fa-heart-broken"></i>',condition:canApplyDamage,callback:li=>applyDamage(li,.5)},{name:"PF2E.DamageButton.DoubleContext",icon:'<i class="fas fa-heart-broken"></i>',condition:canApplyDamage,callback:li=>applyDamage(li,2)},{name:"PF2E.DamageButton.TripleContext",icon:'<i class="fas fa-heart-broken"></i>',condition:$li=>canApplyDamage($li)&&1===$li.find("button.triple-damage").length,callback:li=>applyDamage(li,3)},{name:"PF2E.DamageButton.HealingContext",icon:'<i class="fas fa-heart"></i>',condition:canApplyDamage,callback:li=>applyDamage(li,-1)},{name:"PF2E.ClickToSetInitiativeContext",icon:(0,_util_1.fontAwesomeIcon)("swords").outerHTML,condition:$li=>{var _a,_b,_c,_d,_e;const messageId=null!==(_a=$li.attr("data-message-id"))&&void 0!==_a?_a:"",message=game.messages.get(messageId,{strict:!0}),validActor="npc"===(null===(_c=null===(_b=message.token)||void 0===_b?void 0:_b.actor)||void 0===_c?void 0:_c.type)&&null===(null!==(_e=null===(_d=message.token.combatant)||void 0===_d?void 0:_d.initiative)&&void 0!==_e?_e:null),validRollType=message.isRoll&&message.isCheckRoll;return validActor&&validRollType},callback:$li=>{var _a,_b,_c,_d,_e;const message=game.messages.get(null!==(_a=$li.attr("data-message-id"))&&void 0!==_a?_a:"",{strict:!0}),roll=message.rolls.at(0);if(!roll||Number.isNaN(roll.total||"NaN"))throw(0,_util_1.ErrorPF2e)("No roll found");const token=message.token;token?token.setInitiative({initiative:roll.total}):ui.notifications.error(game.i18n.format("PF2E.Encounter.NoTokenInScene",{actor:null!==(_e=null!==(_c=null===(_b=message.actor)||void 0===_b?void 0:_b.name)&&void 0!==_c?_c:null===(_d=message.user)||void 0===_d?void 0:_d.name)&&void 0!==_e?_e:""}))}},{name:"PF2E.RerollMenu.HeroPoint",icon:'<i class="fas fa-hospital-symbol"></i>',condition:li=>{const message=game.messages.get(li.data("messageId"),{strict:!0}),actor=message.actor;return message.isRerollable&&!!(null==actor?void 0:actor.isOfType("character"))&&actor.heroPoints.value>0},callback:li=>check_1.CheckPF2e.rerollFromMessage(game.messages.get(li.data("messageId"),{strict:!0}),{heroPoint:!0})},{name:"PF2E.RerollMenu.KeepNew",icon:'<i class="fas fa-dice"></i>',condition:canReroll,callback:li=>check_1.CheckPF2e.rerollFromMessage(game.messages.get(li.data("messageId"),{strict:!0}))},{name:"PF2E.RerollMenu.KeepWorst",icon:'<i class="fas fa-dice-one"></i>',condition:canReroll,callback:li=>check_1.CheckPF2e.rerollFromMessage(game.messages.get(li.data("messageId"),{strict:!0}),{keep:"worst"})},{name:"PF2E.RerollMenu.KeepBest",icon:'<i class="fas fa-dice-six"></i>',condition:canReroll,callback:li=>check_1.CheckPF2e.rerollFromMessage(game.messages.get(li.data("messageId"),{strict:!0}),{keep:"best"})}),options}}exports.ChatLogPF2e=ChatLogPF2e},10447:function(__unused_webpack_module,exports,__webpack_require__){var _CompendiumDirectoryPF2e_instances,_CompendiumDirectoryPF2e_dragPreview_get,_CompendiumDirectoryPF2e_compileSearchIndex,__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)},__importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.CompendiumDirectoryPF2e=void 0;const _util_1=__webpack_require__(6945),minisearch_1=__importDefault(__webpack_require__(72734));class CompendiumDirectoryPF2e extends CompendiumDirectory{constructor(options){super(options),_CompendiumDirectoryPF2e_instances.add(this),this.searchEngine=new minisearch_1.default({fields:["name"],idField:"_id",processTerm:t=>t.length>1?t.toLocaleLowerCase(game.i18n.lang):null,searchOptions:{combineWith:"AND",prefix:!0},storeFields:["img","metadata","name","type"]}),__classPrivateFieldGet(this,_CompendiumDirectoryPF2e_instances,"m",_CompendiumDirectoryPF2e_compileSearchIndex).call(this)}static get defaultOptions(){const options=super.defaultOptions;return options.dragDrop.push({dragSelector:"ol.document-matches > li.match"}),{...options,filters:[{inputSelector:"input[type=search]",contentSelector:"ol.directory-list"}],template:"systems/pf2e/templates/sidebar/compendium-directory.html"}}async getData(options){return{...await super.getData(options),searchContents:game.user.settings.searchPackContents}}activateListeners($html){var _a;super.activateListeners($html),null===(_a=$html[0].querySelector("footer > button"))||void 0===_a||_a.addEventListener("click",(()=>{game.pf2e.compendiumBrowser.render(!0)}))}_contextMenu($html){super._contextMenu($html),ContextMenu.create(this,$html,"ol.document-matches > li",[{name:"COMPENDIUM.ImportEntry",icon:(0,_util_1.fontAwesomeIcon)("download").outerHTML,condition:$li=>{var _a,_b,_c,_d;const{uuid}=null!==(_b=null===(_a=$li.get(0))||void 0===_a?void 0:_a.dataset)&&void 0!==_b?_b:{};if(!uuid)throw(0,_util_1.ErrorPF2e)("Unexpected missing uuid");return game.packs.get(null!==(_d=null===(_c=fromUuidSync(uuid))||void 0===_c?void 0:_c.pack)&&void 0!==_d?_d:"",{strict:!0}).documentClass.canUserCreate(game.user)},callback:$li=>{var _a,_b,_c,_d,_e;const{uuid}=null!==(_b=null===(_a=$li.get(0))||void 0===_a?void 0:_a.dataset)&&void 0!==_b?_b:{};if(!uuid)throw(0,_util_1.ErrorPF2e)("Unexpected missing uuid");const packCollection=game.packs.get(null!==(_d=null===(_c=fromUuidSync(uuid))||void 0===_c?void 0:_c.pack)&&void 0!==_d?_d:"",{strict:!0}),worldCollection=game.collections.get(packCollection.documentName,{strict:!0}),indexData=null!==(_e=fromUuidSync(uuid))&&void 0!==_e?_e:{_id:""};if(!("_id"in indexData))throw(0,_util_1.ErrorPF2e)("Unexpected missing document _id");return worldCollection.importFromCompendium(packCollection,indexData._id,{},{renderSheet:!0})}}])}_onSearchFilter(_event,query){var _a,_b;const filteredPacks=query.length>0?game.packs.filter((pack=>pack.title.toLocaleLowerCase(game.i18n.lang).includes(query.toLocaleLowerCase(game.i18n.lang)))):game.packs.contents,packRows=Array.from(null!==(_b=null===(_a=this.element.get(0))||void 0===_a?void 0:_a.querySelectorAll("li.compendium-pack"))&&void 0!==_b?_b:[]);for(const pack of filteredPacks){const packRow=packRows.find((r=>r.dataset.collection===pack.collection));!packRow||pack.private&&!game.user.isGM||(packRow.style.display="list-item")}const rowsToHide=query.length>0?packRows.filter((r=>{var _a;return!filteredPacks.includes(game.packs.get(null!==(_a=r.dataset.collection)&&void 0!==_a?_a:""))})):[];for(const row of rowsToHide)row.style.display="none";const docMatches=query.length>0?this.searchEngine.search(query):[],matchTemplate=document.querySelector("#compendium-search-match");if(!matchTemplate)throw(0,_util_1.ErrorPF2e)("Match template not found");for(const compendiumTypeList of(0,_util_1.htmlQueryAll)(this.element[0],"li.compendium-type")){const listElements=docMatches.filter((m=>m.metadata.type===compendiumTypeList.dataset.type)).map((match=>{var _a,_b;const li=matchTemplate.content.firstElementChild.cloneNode(!0),matchUUID=`Compendium.${match.metadata.id}.${match.id}`;li.dataset.uuid=matchUUID,li.dataset.score=match.score.toString();const thumbnail=li.querySelector("img");"string"==typeof match.img?thumbnail.src=null!==(_b=null===(_a=game.pf2e.system.moduleArt.map.get(matchUUID))||void 0===_a?void 0:_a.actor)&&void 0!==_b?_b:match.img:"JournalEntry"===compendiumTypeList.dataset.type&&(thumbnail.src="icons/svg/book.svg"),li.addEventListener("click",(async event=>{var _a;event.stopPropagation();const doc=await fromUuid(matchUUID);await(null===(_a=null==doc?void 0:doc.sheet)||void 0===_a?void 0:_a.render(!0))}));li.querySelector("a").innerText=match.name;const details=li.querySelector("span"),systemType="Actor"===match.metadata.type?game.i18n.localize(`ACTOR.Type${match.type.titleCase()}`):"Item"===match.metadata.type?game.i18n.localize(`ITEM.Type${match.type.titleCase()}`):null;return details.innerText=systemType?`${systemType} (${match.metadata.label})`:`(${match.metadata.label})`,li})),matchesList=compendiumTypeList.querySelector("ol.document-matches");matchesList.replaceChildren(...listElements);for(const dragDrop of this._dragDrop)dragDrop.bind(matchesList)}}_canDragStart(){return!0}_onDragStart(event){var _a;const dragElement=event.currentTarget,{uuid}=dragElement.dataset;if(!uuid)return;const indexEntry=fromUuidSync(uuid);if(!indexEntry)throw(0,_util_1.ErrorPF2e)("Unexpected error retrieving index data");null===(_a=document.querySelector("#pack-search-drag-preview"))||void 0===_a||_a.remove();const dragPreview=__classPrivateFieldGet(this,_CompendiumDirectoryPF2e_instances,"a",_CompendiumDirectoryPF2e_dragPreview_get).cloneNode(!0),[img,title]=Array.from(dragPreview.childNodes);title.innerText=indexEntry.name,img.src="img"in indexEntry&&indexEntry.img?indexEntry.img:"icons/svg/book.svg",document.body.appendChild(dragPreview);const documentType=(()=>{var _a,_b;if(indexEntry instanceof foundry.abstract.Document)return indexEntry.documentName;const pack=game.packs.get(null!==(_a=indexEntry.pack)&&void 0!==_a?_a:"");return null!==(_b=null==pack?void 0:pack.documentName)&&void 0!==_b?_b:null})();documentType&&(event.dataTransfer.setDragImage(dragPreview,75,25),event.dataTransfer.setData("text/plain",JSON.stringify({type:documentType,uuid})))}}exports.CompendiumDirectoryPF2e=CompendiumDirectoryPF2e,_CompendiumDirectoryPF2e_instances=new WeakSet,_CompendiumDirectoryPF2e_dragPreview_get=function(){const preview=document.createElement("div");preview.id="pack-search-drag-preview";const thumbnail=document.createElement("img"),title=document.createElement("h4");return preview.append(thumbnail,title),preview},_CompendiumDirectoryPF2e_compileSearchIndex=function(){console.debug("PF2e System | compiling search index");const packs=game.packs.filter((p=>p.index.size>0&&(game.user.isGM||!p.private)));for(const pack of packs){const contents=pack.index.map((i=>({...i,metadata:pack.metadata})));this.searchEngine.addAll(contents)}console.debug("PF2e System | Finished compiling search index")}},64346:function(__unused_webpack_module,exports,__webpack_require__){var _EncounterTrackerPF2e_instances,_EncounterTrackerPF2e_onDropCombatant,__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)},__importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.EncounterTrackerPF2e=void 0;const _util_1=__webpack_require__(6945),sortablejs_1=__importDefault(__webpack_require__(2344)),sheet_util_1=__webpack_require__(15806);class EncounterTrackerPF2e extends CombatTracker{constructor(){super(...arguments),_EncounterTrackerPF2e_instances.add(this)}activateListeners($html){var _a,_b,_c,_d;const tracker=$html[0].querySelector("#combat-tracker");if(!tracker)throw(0,_util_1.ErrorPF2e)("No tracker found");const encounter=this.viewed;if(!encounter)return super.activateListeners($html);const tokenSetsNameVisibility=game.settings.get("pf2e","metagame_tokenSetsNameVisibility");for(const row of tracker.querySelectorAll("li.combatant").values()){const combatantId=null!==(_a=row.dataset.combatantId)&&void 0!==_a?_a:"",combatant=encounter.combatants.get(combatantId,{strict:!0});if(row.setAttribute("data-initiative",String(combatant.initiative)),tokenSetsNameVisibility){const nameElement=row.querySelector(".token-name h4");if(!nameElement||game.user.isGM||combatant.playersCanSeeName||(nameElement.innerText="",null===(_b=row.querySelector("img.token-image"))||void 0===_b||_b.removeAttribute("title")),game.user.isGM&&combatant.actor&&"party"!==combatant.actor.alliance){const toggleNameVisibility=document.createElement("a"),isActive=combatant.playersCanSeeName;toggleNameVisibility.classList.add(...["combatant-control",isActive?"active":[]].flat()),toggleNameVisibility.dataset.control="toggle-name-visibility",toggleNameVisibility.dataset.tooltip=game.i18n.localize(isActive?"PF2E.Encounter.HideName":"PF2E.Encounter.RevealName");const icon=(0,_util_1.fontAwesomeIcon)("signature");toggleNameVisibility.append(icon),null===(_c=row.querySelector('.combatant-controls a[data-control="toggleHidden"]'))||void 0===_c||_c.after(toggleNameVisibility),isActive||row.classList.add("hidden-name")}}}game.user.isGM&&!(null===(_d=game.modules.get("combat-enhancements"))||void 0===_d?void 0:_d.active)&&sortablejs_1.default.create(tracker,{animation:200,dataIdAttr:"data-combatant-id",direction:"vertical",dragoverBubble:!0,easing:"cubic-bezier(1, 0, 0, 1)",ghostClass:"drag-gap",onUpdate:event=>__classPrivateFieldGet(this,_EncounterTrackerPF2e_instances,"m",_EncounterTrackerPF2e_onDropCombatant).call(this,event),onEnd:event=>this.adjustFinalOrder(event)}),super.activateListeners($html)}async _onCombatControl(event){const control=event.currentTarget.dataset.control;"rollNPC"!==control&&"rollAll"!==control||!this.viewed?await super._onCombatControl(event):(event.stopPropagation(),await this.viewed[control]((0,sheet_util_1.eventToRollParams)(event)))}async _onCombatantControl(event){var _a;if(event.stopPropagation(),!this.viewed)return;const control=event.currentTarget.dataset.control,li=event.currentTarget.closest(".combatant"),combatant=this.viewed.combatants.get(null!==(_a=null==li?void 0:li.dataset.combatantId)&&void 0!==_a?_a:"",{strict:!0});"rollInitiative"===control?await this.viewed.rollInitiative([combatant.id],(0,sheet_util_1.eventToRollParams)(event)):"toggle-name-visibility"===control?await combatant.toggleNameVisibility():await super._onCombatantControl(event)}_onToggleDefeatedStatus(combatant){return combatant.toggleDefeated()}setInitiativeFromDrop(newOrder,dropped){var _a;const aboveDropped=newOrder.find((c=>newOrder.indexOf(c)===newOrder.indexOf(dropped)-1)),belowDropped=newOrder.find((c=>newOrder.indexOf(c)===newOrder.indexOf(dropped)+1)),hasAboveAndBelow=!!aboveDropped&&!!belowDropped,hasAboveAndNoBelow=!!aboveDropped&&!belowDropped,hasBelowAndNoAbove=!aboveDropped&&!!belowDropped,aboveIsHigherThanBelow=hasAboveAndBelow&&belowDropped.initiative<aboveDropped.initiative,belowIsHigherThanAbove=hasAboveAndBelow&&belowDropped.initiative<aboveDropped.initiative,wasDraggedUp=!!belowDropped&&(null===(_a=this.viewed)||void 0===_a?void 0:_a.getCombatantWithHigherInit(dropped,belowDropped))===belowDropped,wasDraggedDown=!!aboveDropped&&!wasDraggedUp;dropped.initiative=hasBelowAndNoAbove||aboveIsHigherThanBelow&&wasDraggedUp?belowDropped.initiative+1:hasAboveAndNoBelow||belowIsHigherThanAbove&&wasDraggedDown?aboveDropped.initiative-1:hasAboveAndBelow?belowDropped.initiative:dropped.initiative;const withSameInitiative=newOrder.filter((c=>c.initiative===dropped.initiative));if(withSameInitiative.length>1)for(let priority=0;priority<withSameInitiative.length;priority++)withSameInitiative[priority].flags.pf2e.overridePriority[dropped.initiative]=priority}async saveNewOrder(newOrder){var _a;await(null===(_a=this.viewed)||void 0===_a?void 0:_a.setMultipleInitiatives(newOrder.map((c=>({id:c.id,value:c.initiative,overridePriority:c.overridePriority(c.initiative)})))))}adjustFinalOrder(event){var _a,_b;const row=event.item,tracker=this.element[0].querySelector("#combat-tracker");if(!tracker)throw(0,_util_1.ErrorPF2e)("Unexpected failure to retriever tracker DOM element");const rows=Array.from(tracker.querySelectorAll("li.combatant")),[oldIndex,newIndex]=[null!==(_a=event.oldIndex)&&void 0!==_a?_a:0,null!==(_b=event.newIndex)&&void 0!==_b?_b:0],firstRowWithNoRoll=rows.find((row=>Number.isNaN(Number(row.dataset.initiative))));Number.isNaN(Number(row.dataset.initiative))?newIndex>oldIndex?tracker.insertBefore(row,rows[oldIndex]):tracker.insertBefore(row,rows[oldIndex+1]):firstRowWithNoRoll&&rows.indexOf(firstRowWithNoRoll)<newIndex&&tracker.insertBefore(row,firstRowWithNoRoll)}validateDrop(event){const{combat}=game;if(!combat)throw(0,_util_1.ErrorPF2e)("Unexpected error retrieving combat");const{oldIndex,newIndex}=event;if("number"!=typeof oldIndex||"number"!=typeof newIndex)throw(0,_util_1.ErrorPF2e)("Unexpected error retrieving new index")}getCombatantsFromDOM(){const{combat}=game;if(!combat)throw(0,_util_1.ErrorPF2e)("Unexpected error retrieving combat");const tracker=this.element[0].querySelector("#combat-tracker");if(!tracker)throw(0,_util_1.ErrorPF2e)("Unexpected failure to retriever tracker DOM element");return Array.from(tracker.querySelectorAll("li.combatant")).map((row=>{var _a;return null!==(_a=row.getAttribute("data-combatant-id"))&&void 0!==_a?_a:""})).map((id=>combat.combatants.get(id,{strict:!0}))).filter((c=>"number"==typeof c.initiative))}}exports.EncounterTrackerPF2e=EncounterTrackerPF2e,_EncounterTrackerPF2e_instances=new WeakSet,_EncounterTrackerPF2e_onDropCombatant=async function(event){var _a;this.validateDrop(event);const encounter=this.viewed;if(!encounter)return;const droppedId=null!==(_a=event.item.getAttribute("data-combatant-id"))&&void 0!==_a?_a:"",dropped=encounter.combatants.get(droppedId,{strict:!0});if("number"!=typeof dropped.initiative)return void ui.notifications.error(game.i18n.format("PF2E.Encounter.HasNoInitiativeScore",{actor:dropped.name}));const newOrder=this.getCombatantsFromDOM(),oldOrder=encounter.turns.filter((c=>null!==c.initiative));newOrder.every((c=>newOrder.indexOf(c)===oldOrder.indexOf(c)))||(this.setInitiativeFromDrop(newOrder,dropped),await this.saveNewOrder(newOrder))}},68049:function(__unused_webpack_module,exports,__webpack_require__){var _HotbarPF2e_instances,_HotbarPF2e_hasRollOptionData,_HotbarPF2e_createRollOptionToggleMacro,__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.HotbarPF2e=void 0;const values_1=__webpack_require__(8382),_item_1=__webpack_require__(10843),macro_1=__webpack_require__(49151),hotbar_1=__webpack_require__(22247),_util_1=__webpack_require__(6945);class HotbarPF2e extends Hotbar{constructor(){super(...arguments),_HotbarPF2e_instances.add(this)}async _onDrop(event){var _a,_b,_c;const li=event.target.closest(".macro"),slot=Number(null==li?void 0:li.dataset.slot)||null;if(!slot)return;const data=TextEditor.getDragEventData(event);if(!["Item","RollOption","Skill","Action"].includes(null!==(_a=data.type)&&void 0!==_a?_a:""))return super._onDrop(event);if(!1!==Hooks.call("hotbarDrop",this,data,slot))switch(data.type){case"Item":{const itemId=null!==(_b=data.id)&&void 0!==_b?_b:(0,_util_1.isObject)(data.data)?data.data._id:null,uuid=data.uuid,prefix="string"==typeof data.pack?`Compendium.${data.pack}`:"string"==typeof data.actorId?`Actor.${data.actorId}.Item`:"Item",item=await fromUuid(null!=uuid?uuid:`${prefix}.${itemId}`);return item instanceof _item_1.EffectPF2e?(0,hotbar_1.createToggleEffectMacro)(item,slot):item instanceof _item_1.ItemPF2e?(0,hotbar_1.createItemMacro)(item.toObject(),slot):void 0}case"RollOption":if(!__classPrivateFieldGet(this,_HotbarPF2e_instances,"m",_HotbarPF2e_hasRollOptionData).call(this,data))return;return __classPrivateFieldGet(this,_HotbarPF2e_instances,"m",_HotbarPF2e_createRollOptionToggleMacro).call(this,data,slot);case"Skill":{if(!data.actorId||!(0,_util_1.setHasElement)(values_1.SKILL_ABBREVIATIONS,data.skill))return;const skillName=null!==(_c=data.skillName)&&void 0!==_c?_c:game.i18n.localize(CONFIG.PF2E.skills[data.skill]);return(0,hotbar_1.createSkillMacro)(data.skill,skillName,data.actorId,slot)}case"Action":if(!data.actorId||"number"!=typeof data.index)return;return(0,hotbar_1.createActionMacro)(data.index,data.actorId,slot)}}}exports.HotbarPF2e=HotbarPF2e,_HotbarPF2e_instances=new WeakSet,_HotbarPF2e_hasRollOptionData=function(data){const{label,actorId,itemId,img,domain,option}=data;return"string"==typeof label&&label.length>0&&"string"==typeof actorId&&16===actorId.length&&"string"==typeof img&&img.length>0&&"string"==typeof domain&&domain.length>0&&"string"==typeof option&&option.length>0&&(!("itemId"in data)||"string"==typeof itemId&&16===itemId.length)},_HotbarPF2e_createRollOptionToggleMacro=async function(data,slot){var _a,_b,_c;const name=game.i18n.format("PF2E.ToggleWithName",{property:data.label}),img=null!==(_a=data.img)&&void 0!==_a?_a:"icons/svg/d20-grey.svg",itemId=data.itemId?`"${data.itemId}"`:null,command=`const actor = game.actors.get("${data.actorId}");\nawait actor?.toggleRollOption("${data.domain}", "${data.option}", ${itemId});\nif (!actor) {\n    ui.notifications.error(game.i18n.localize("PF2E.MacroActionNoActorError"));\n}`,toggleMacro=null!==(_c=null!==(_b=game.macros.find((m=>m.name===name&&m.data.command===command)))&&void 0!==_b?_b:await macro_1.MacroPF2e.create({type:"script",name,img,command},{renderSheet:!1}))&&void 0!==_c?_c:null;await game.user.assignHotbarMacro(toggleMacro,slot)}},8320:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.EncounterTrackerPF2e=exports.CompendiumDirectoryPF2e=exports.ChatLogPF2e=exports.ActorDirectoryPF2e=void 0;var actor_directory_1=__webpack_require__(85732);Object.defineProperty(exports,"ActorDirectoryPF2e",{enumerable:!0,get:function(){return actor_directory_1.ActorDirectoryPF2e}});var chat_log_1=__webpack_require__(92443);Object.defineProperty(exports,"ChatLogPF2e",{enumerable:!0,get:function(){return chat_log_1.ChatLogPF2e}});var compendium_directory_1=__webpack_require__(10447);Object.defineProperty(exports,"CompendiumDirectoryPF2e",{enumerable:!0,get:function(){return compendium_directory_1.CompendiumDirectoryPF2e}});var encounter_tracker_1=__webpack_require__(64346);Object.defineProperty(exports,"EncounterTrackerPF2e",{enumerable:!0,get:function(){return encounter_tracker_1.EncounterTrackerPF2e}})},49820:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.animateDarkness=void 0;const luxon_1=__webpack_require__(87883),dayInSeconds=luxon_1.Duration.fromObject({hours:24}).as("seconds");function darknessLevelAtTime(time){const secondsElapsed=time.diff(time.startOf("day")).as("seconds"),radians=2*Math.PI*(secondsElapsed/dayInSeconds),lightnessLevel=-1*Math.cos(radians),rad18degrees=Math.toRadians(18);return 1-(lightnessLevel>0?1:lightnessLevel<-rad18degrees?0:Math.sin((lightnessLevel+rad18degrees)/rad18degrees*Math.PI/2))}async function runAnimation(transition){if(!canvas.lighting||canvas.darknessLevel===transition.target)return;const duration=Math.min(Math.trunc(100*transition.duration)/100,6e3);await canvas.effects.animateDarkness(transition.target,{duration}),game.user.isGM&&await canvas.scene.update({darkness:transition.target})}exports.animateDarkness=async function(timeDiff){if(!this.syncDarkness)return;const newTime=this.worldTime,oldTime=newTime.minus({seconds:timeDiff}),fullInterval=luxon_1.Interval.fromDateTimes(oldTime,newTime);if(!fullInterval.isValid)return void await runAnimation({target:darknessLevelAtTime(newTime),duration:100,interval:fullInterval});const compactInterval=(()=>{if(fullInterval.length("hours")>24){const adjustedOldTime=newTime.minus({hours:24});return luxon_1.Interval.fromDateTimes(adjustedOldTime,newTime)}return fullInterval})(),transitionTimes=[4.75,18].map((hour=>compactInterval.start.set({hour,minute:0,second:0}))).concat([4.75,18].map((hour=>compactInterval.end.set({hour,minute:0,second:0})))).filter((dateTime=>compactInterval.contains(dateTime))).concat([compactInterval.start,compactInterval.end]).sort(((dtA,dtB)=>dtA<dtB?-1:dtA>dtB?1:0)),transitions=transitionTimes.reduce(((pairs,dateTime)=>{const index=transitionTimes.indexOf(dateTime);if(0===index)return[];return[...pairs,[transitionTimes[index-1],dateTime]]}),[]).map((pair=>luxon_1.Interval.fromDateTimes(pair[0],pair[1]))).filter((interval=>interval.length()>0)).map((interval=>function(interval,compactInterval){const currentDarkness=canvas.darknessLevel,targetDarkness=darknessLevelAtTime(interval.end);return{target:targetDarkness,duration:(.5*Math.abs((null!=currentDarkness?currentDarkness:targetDarkness)-targetDarkness)+compactInterval.length("seconds")/dayInSeconds)/2*6e3,interval}}(interval,compactInterval)));for(const transition of transitions)await runAnimation(transition)}},71044:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.WorldClock=void 0;const localize_1=__webpack_require__(41332),_util_1=__webpack_require__(6945),luxon_1=__webpack_require__(87883),animate_darkness_1=__webpack_require__(49820),time_of_day_1=__webpack_require__(90890);class WorldClock extends Application{constructor(){var _a;super(),this.translations=localize_1.LocalizePF2e.translations.PF2E.WorldClock,this.ctrlKeyDown=!1,this.animateDarkness=animate_darkness_1.animateDarkness;const settingValue=game.settings.get("pf2e","worldClock.worldCreatedOn"),defaultValue=null===(_a=game.settings.settings.get("pf2e.worldClock.worldCreatedOn"))||void 0===_a?void 0:_a.default;"string"==typeof settingValue&&settingValue===defaultValue?game.settings.set("pf2e","worldClock.worldCreatedOn",settingValue):luxon_1.DateTime.fromISO(settingValue).isValid||game.settings.set("pf2e","worldClock.worldCreatedOn",defaultValue)}get dateTheme(){return game.settings.get("pf2e","worldClock.dateTheme")}get timeConvention(){const setting=game.settings.get("pf2e","worldClock.timeConvention");if(24!==setting&&12!==setting)throw Error("PF2e System | Unrecognized time convention");return setting}get syncDarkness(){var _a,_b;const sceneSetting=null!==(_b=null===(_a=canvas.scene)||void 0===_a?void 0:_a.flags.pf2e.syncDarkness)&&void 0!==_b?_b:"default";return{enabled:!0,disabled:!1,default:game.settings.get("pf2e","worldClock.syncDarkness")}[sceneSetting]}get worldCreatedOn(){const value=game.settings.get("pf2e","worldClock.worldCreatedOn");return luxon_1.DateTime.fromISO(value).toUTC()}get worldTime(){return this.worldCreatedOn.plus({seconds:game.time.worldTime})}static get defaultOptions(){return mergeObject(super.defaultOptions,{id:"world-clock",width:400,template:"systems/pf2e/templates/system/world-clock.html",title:"PF2E.WorldClock.Title"})}get era(){switch(this.dateTheme){case"AR":return this.translations.AR.Era;case"AD":return this.worldTime.toFormat("G");default:return""}}get year(){const yearOffset=(()=>{switch(this.dateTheme){case"AR":return CONFIG.PF2E.worldClock.AR.yearOffset;case"AD":return CONFIG.PF2E.worldClock.AD.yearOffset;default:return 0}})();return this.worldTime.year+yearOffset}get month(){if("AR"===this.dateTheme){return this.translations.AR.Months[this.worldTime.setLocale("en-US").monthLong]}return this.worldTime.monthLong}get weekday(){if("AR"===this.dateTheme){return this.translations.AR.Weekdays[this.worldTime.setLocale("en-US").weekdayLong]}return this.worldTime.weekdayLong}getData(options){const date="CE"===this.dateTheme?this.worldTime.toLocaleString(luxon_1.DateTime.DATE_HUGE):game.i18n.format(this.translations.Date,{era:this.era,year:this.year,month:this.month,day:(0,_util_1.ordinal)(this.worldTime.day),weekday:this.weekday}),time=24===this.timeConvention?this.worldTime.toFormat("HH:mm:ss"):this.worldTime.toLocaleString(luxon_1.DateTime.TIME_WITH_SECONDS),sign=this.ctrlKeyDown?"-":"+";return{date,time,options,user:game.user,sign}}_getHeaderButtons(){return(game.user.isGM?[{label:"PF2E.SETTINGS.Settings",class:"configure-settings",icon:"fas fa-cog",onclick:()=>{const menu=game.settings.menus.get("pf2e.worldClock");if(!menu)throw(0,_util_1.ErrorPF2e)("PF2e System | World Clock Settings application not found");(new menu.type).render(!0)}}]:[]).concat(...super._getHeaderButtons())}static calculateIncrement(wordTime,interval,intervalMode){const mode="+"===intervalMode?time_of_day_1.TimeChangeMode.ADVANCE:time_of_day_1.TimeChangeMode.RETRACT;switch(interval){case"dawn":return time_of_day_1.TimeOfDay.DAWN.diffSeconds(wordTime,mode);case"noon":return time_of_day_1.TimeOfDay.NOON.diffSeconds(wordTime,mode);case"dusk":return time_of_day_1.TimeOfDay.DUSK.diffSeconds(wordTime,mode);case"midnight":return time_of_day_1.TimeOfDay.MIDNIGHT.diffSeconds(wordTime,mode);default:{const sign=mode===time_of_day_1.TimeChangeMode.ADVANCE?1:-1;return Number(interval)*sign}}}activateListeners($html){super.activateListeners($html),$html.find("button[data-advance-time]").on("click",(event=>{var _a,_b;const $button=$(event.currentTarget),advanceTime=null!==(_a=$button.data("advanceTime"))&&void 0!==_a?_a:"0",advanceMode=null!==(_b=$button.data("advanceMode"))&&void 0!==_b?_b:"+",increment=WorldClock.calculateIncrement(this.worldTime,advanceTime,advanceMode);0!==increment&&game.time.advance(increment)})),$html.find("button[name=advance], button[name=retract]").on("click",(event=>{const value=$html.find('input[type=number][name="diff-value"]').val(),unit=$html.find('select[name="diff-unit"]').val(),increment=("advance"===$(event.currentTarget).attr("name")?1:-1)*Number(value)*Number(unit);game.time.advance(increment)}));for(const eventName of["keydown.pf2e.world-clock","keyup.pf2e.world-clock"])$(document).off(eventName),$(document).on(eventName,(event=>{var _a,_b;const{originalEvent}=event;if(!(originalEvent instanceof KeyboardEvent))return;const ctrlKeys="⌘"===KeyboardManager.CONTROL_KEY_STRING?["Control","Meta"]:["Control"];if(originalEvent.repeat||!ctrlKeys.includes(originalEvent.key))return;if(!event.ctrlKey&&!this.ctrlKeyDown)return;const retractTime=this.ctrlKeyDown="keydown"===event.type,{Advance,Retract,TimeOfDay}=this.translations.Button,advanceButtons=Array.from(null!==(_b=null===(_a=$html.get(0))||void 0===_a?void 0:_a.querySelectorAll("button[data-advance-time]"))&&void 0!==_b?_b:[]);for(const button of advanceButtons){const{advanceMode,advanceTime}=button.dataset,nextMode="+"===advanceMode?"-":"+";button.dataset.advanceMode=nextMode;const sign=button.querySelector(".sign");if(sign&&(sign.innerHTML=nextMode),(0,_util_1.tupleHasValue)(["dawn","noon","dusk","midnight"],advanceTime)){const timeOfDayKeys="+"===nextMode?TimeOfDay.Advance:TimeOfDay.Retract;button.title=timeOfDayKeys[advanceTime.titleCase()]}}$html.find("button[name=advance], button[name=retract]").attr("name",retractTime?"retract":"advance").text(game.i18n.localize(retractTime?Retract:Advance))}))}async close(options){$(document).off("keydown.pf2e.world-clock").off("keyup.pf2e.world-clock"),await super.close(options)}static createSyncedMessage(){var _a;const managedBy=document.createElement("span");managedBy.classList.add("managed"),managedBy.innerHTML=" ".concat(game.i18n.localize("PF2E.SETTINGS.WorldClock.SyncDarknessScene.ManagedBy"));const anchor=document.createElement("a"),wtLink=managedBy.querySelector("wt");return anchor.innerText=null!==(_a=null==wtLink?void 0:wtLink.innerHTML)&&void 0!==_a?_a:"",anchor.setAttribute("href",""),anchor.addEventListener("click",(event=>{event.preventDefault(),event.stopPropagation();const menu=game.settings.menus.get("pf2e.worldClock");if(!menu)throw(0,_util_1.ErrorPF2e)("World Clock Settings application not found");(new menu.type).render(!0)})),null==wtLink||wtLink.replaceWith(anchor),managedBy}}exports.WorldClock=WorldClock},53959:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.WorldClock=void 0;var app_1=__webpack_require__(71044);Object.defineProperty(exports,"WorldClock",{enumerable:!0,get:function(){return app_1.WorldClock}})},90890:(__unused_webpack_module,exports)=>{var TimeChangeMode;Object.defineProperty(exports,"__esModule",{value:!0}),exports.TimeOfDay=exports.TimeChangeMode=void 0,function(TimeChangeMode){TimeChangeMode[TimeChangeMode.ADVANCE=0]="ADVANCE",TimeChangeMode[TimeChangeMode.RETRACT=1]="RETRACT"}(TimeChangeMode||(TimeChangeMode={})),exports.TimeChangeMode=TimeChangeMode;class TimeOfDay{constructor(hour,minute,second){this.hour=hour,this.minute=minute,this.second=second}diffSeconds(worldTime,mode){const targetTime=worldTime.set(this),targetDayDifference=TimeOfDay.diffDays(worldTime,targetTime,mode);return worldTime.plus({day:targetDayDifference}).set(this).diff(worldTime,"seconds").seconds}static diffDays(currentTime,targetTime,mode){return currentTime>=targetTime&&mode===TimeChangeMode.ADVANCE?1:currentTime<=targetTime&&mode===TimeChangeMode.RETRACT?-1:0}}exports.TimeOfDay=TimeOfDay,TimeOfDay.DAWN=new TimeOfDay(4,58,54),TimeOfDay.NOON=new TimeOfDay(12,0,0),TimeOfDay.DUSK=new TimeOfDay(18,34,6),TimeOfDay.MIDNIGHT=new TimeOfDay(0,0,0)},92159:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.AmbientLightPF2e=void 0;class AmbientLightPF2e extends AmbientLight{get isDarkness(){return this.source.isDarkness}}exports.AmbientLightPF2e=AmbientLightPF2e},87453:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.EffectAreaSquare=void 0;class EffectAreaSquare extends PIXI.Rectangle{constructor(x,y,width,height,active=!0){super(x,y,width,height),this.active=active}get center(){return{x:this.x+this.width/2,y:this.y+this.height/2}}highlight(layer,colors){this.x<0||this.y<0||(this.active?canvas.grid.grid.highlightGridPosition(layer,{x:this.x,y:this.y,border:colors.border,color:colors.fill}):(canvas.grid.grid.highlightGridPosition(layer,{x:this.x,y:this.y,border:1,color:0}),layer.beginFill(0,.5).moveTo(this.x,this.y).lineTo(this.x+this.width,this.y+this.height).endFill()))}}exports.EffectAreaSquare=EffectAreaSquare},70543:function(__unused_webpack_module,exports,__webpack_require__){var _GhostTemplate_wheelListenerOptions,__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.GhostTemplate=void 0;const measured_template_1=__webpack_require__(25119);class GhostTemplate extends measured_template_1.MeasuredTemplatePF2e{constructor(){super(...arguments),this.moveTime=0,_GhostTemplate_wheelListenerOptions.set(this,{passive:!1}),this._onMouseMove=event=>{event.stopPropagation();const now=Date.now();if(now-this.moveTime<=20)return;const center=event.data.getLocalPosition(this.layer),snapped=canvas.grid.getSnappedPosition(center.x,center.y,2),hexTypes=[CONST.GRID_TYPES.HEXODDR,CONST.GRID_TYPES.HEXEVENR],direction=0===this.moveTime&&hexTypes.includes(canvas.grid.type)?this.document.direction+30:this.document.direction;this.document.updateSource({...snapped,direction}),this.refresh(),this.moveTime=now},this._onLeftClick=()=>{canvas.scene&&canvas.scene.createEmbeddedDocuments("MeasuredTemplate",[this.document.toObject()]),this.destroy()},this._onMouseWheel=event=>{if(event.ctrlKey){event.preventDefault(),event.stopPropagation();const snap=event.shiftKey?15:5;this.document.updateSource({direction:this.document.direction+snap*Math.sign(event.deltaY)}),this.refresh()}else if(event.shiftKey){event.stopPropagation();const snap=canvas.grid.type>=CONST.GRID_TYPES.HEXODDR&&canvas.grid.type<=CONST.GRID_TYPES.HEXEVENQ?60:45;this.document.updateSource({direction:this.document.direction+snap*Math.sign(event.deltaY)}),this.refresh()}}}destroy(options){canvas.stage.off("mousemove",this._onMouseMove),canvas.stage.off("mousedown",this._onLeftClick),canvas.stage.off("rightdown",this.destroy),canvas.app.view.removeEventListener("wheel",this._onMouseWheel,__classPrivateFieldGet(this,_GhostTemplate_wheelListenerOptions,"f")),canvas.tokens.activate(),super.destroy(options)}async drawPreview(){this.layer.activate(),await this.draw(),this.layer.preview.addChild(this),this.activatePreviewListeners()}activatePreviewListeners(){canvas.stage.on("mousemove",this._onMouseMove),canvas.stage.on("mousedown",this._onLeftClick),canvas.stage.on("rightdown",this.destroy.bind(this)),canvas.app.view.addEventListener("wheel",this._onMouseWheel,__classPrivateFieldGet(this,_GhostTemplate_wheelListenerOptions,"f"))}}exports.GhostTemplate=GhostTemplate,_GhostTemplate_wheelListenerOptions=new WeakMap},83339:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.EffectsCanvasGroupPF2e=void 0;class EffectsCanvasGroupPF2e extends EffectsCanvasGroup{get rulesBasedVision(){var _a;return game.settings.get("pf2e","automation.rulesBasedVision")&&canvas.ready&&!!(null===(_a=canvas.scene)||void 0===_a?void 0:_a.tokenVision)}}exports.EffectsCanvasGroupPF2e=EffectsCanvasGroupPF2e},30243:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.measureDistanceRect=exports.highlightGrid=void 0;const token_1=__webpack_require__(17218);function measureDistanceOnGrid(segment,{reach=null}={}){if(!canvas.dimensions)return NaN;const gridSize=canvas.dimensions.size,gridDistance=canvas.dimensions.distance,nx=Math.ceil(Math.abs(segment.dx/gridSize)),ny=Math.ceil(Math.abs(segment.dy/gridSize)),squares_diagonal=Math.min(nx,ny),squares_straight=Math.abs(ny-nx),reduction=squares_diagonal>1&&10===reach?1:0;return(Math.floor(1.5*squares_diagonal+squares_straight)-reduction)*gridDistance}exports.measureDistanceRect=function(r0,r1,{reach=null}={}){if(!canvas.dimensions)return NaN;if(canvas.grid.type!==CONST.GRID_TYPES.SQUARE)return canvas.grid.measureDistance(r0,r1);const gridWidth=canvas.grid.grid.w;if([[r0,r1],[r1,r0]].some((([rA,rB])=>rB.right>rA.left&&rB.left<rA.right&&rB.bottom>rA.top&&rB.top<rA.bottom)))return 0;const snapBounds=(rectangle,{toward})=>{const roundLeft=rectangle.left<toward.left?Math.ceil:Math.floor,roundTop=rectangle.top<toward.top?Math.ceil:Math.floor,left=roundLeft(rectangle.left/gridWidth)*gridWidth,top=roundTop(rectangle.top/gridWidth)*gridWidth,width=Math.ceil(rectangle.width/gridWidth)*gridWidth,height=Math.ceil(rectangle.height/gridWidth)*gridWidth;return new PIXI.Rectangle(left,top,width,height)},r0Snapped=snapBounds(r0,{toward:r1}),r1Snapped=snapBounds(r1,{toward:r0});return measureDistanceOnGrid({dx:Math.max(r0Snapped.left-r1Snapped.right,r1Snapped.left-r0Snapped.right,0)+gridWidth,dy:Math.max(r0Snapped.top-r1Snapped.bottom,r1Snapped.top-r0Snapped.bottom,0)+gridWidth},{reach})},exports.highlightGrid=function({type,object,colors,document,collisionType="move"}){var _a,_b,_c;if(!object.id)return;const{grid,dimensions}=canvas;if(!grid||!dimensions)return;const angle=null!==(_a=document.angle)&&void 0!==_a?_a:0,direction=null!==(_b=document.direction)&&void 0!==_b?_b:45,highlightLayer=null===(_c=grid.getHighlightLayer(object.highlightId))||void 0===_c?void 0:_c.clear();if(!highlightLayer)return;const[cx,cy]=grid.getCenter(document.x,document.y),[col0,row0]=grid.grid.getGridPositionFromPixels(cx,cy),minAngle=(360+(direction-.5*angle)%360)%360,maxAngle=(360+(direction+.5*angle)%360)%360,coneOriginOffset=(()=>{if("cone"!==type)return{x:0,y:0};const dir=(direction>=0?360-direction:-direction)%360,xOffset=document.x%dimensions.size!=0?Math.sign(1*Math.round(100*Math.cos(Math.toRadians(dir)))/100)/2:0,yOffset=document.y%dimensions.size!=0?-Math.sign(1*Math.round(100*Math.sin(Math.toRadians(dir)))/100)/2:0;return{x:xOffset*dimensions.size,y:yOffset*dimensions.size}})(),padding=Math.clamped(document.width,1.5,2),padded=document.distance*padding/dimensions.distance,rowCount=Math.ceil(padded/(dimensions.size/grid.h)),columnCount=Math.ceil(padded/(dimensions.size/grid.w)),offsetEmanationOrigin=destination=>{if(!("emanation"===type&&object instanceof token_1.TokenPF2e))return{x:0,y:0};if(object.w<=dimensions.size)return{x:0,y:0};const offset=(object.w-dimensions.size)/2,getCoordinate=(centerCoord,destCoord)=>destCoord===centerCoord?0:destCoord>centerCoord?offset:-offset;return{x:getCoordinate(object.center.x,destination.x),y:getCoordinate(object.center.y,destination.y)}};for(let a=-columnCount;a<columnCount;a++)for(let b=-rowCount;b<rowCount;b++){const[gx,gy]=canvas.grid.grid.getPixelsFromGridPosition(col0+a,row0+b),destination={x:gx+.5*dimensions.size,y:gy+.5*dimensions.size};if(destination.x<0||destination.y<0)continue;const emanationOriginOffset=offsetEmanationOrigin(destination),origin={x:document.x+coneOriginOffset.x+emanationOriginOffset.x,y:document.y+coneOriginOffset.y+emanationOriginOffset.y},ray=new Ray(origin,destination);if("cone"===type){const rayAngle=(360+ray.angle/(Math.PI/180)%360)%360;if(ray.distance>0&&(value=(360+(value=rayAngle)%360)%360,!((min=(360+(min=minAngle)%360)%360)<(max=(360+(max=maxAngle)%360)%360)?value>=min&&value<=max:value>=min||value<=max)))continue}if((p0=destination,p1=origin,canvas.dimensions?canvas.grid.type!==CONST.GRID_TYPES.SQUARE?canvas.grid.measureDistance(p0,p1):measureDistanceOnGrid(new Ray(p0,p1)):NaN)>document.distance)continue;canvas.ready&&canvas.walls.checkCollision(ray,{type:collisionType,mode:"any"})?(grid.grid.highlightGridPosition(highlightLayer,{x:gx,y:gy,border:1,color:0}),highlightLayer.beginFill(0,.5).moveTo(gx,gy).lineTo(gx+dimensions.size,gy+dimensions.size).endFill()):grid.grid.highlightGridPosition(highlightLayer,{x:gx,y:gy,border:colors.border,color:colors.fill})}var p0,p1,min,max,value}},85336:function(__unused_webpack_module,exports,__webpack_require__){var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k);var desc=Object.getOwnPropertyDescriptor(m,k);desc&&!("get"in desc?!m.__esModule:desc.writable||desc.configurable)||(desc={enumerable:!0,get:function(){return m[k]}}),Object.defineProperty(o,k2,desc)}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)"default"===p||Object.prototype.hasOwnProperty.call(exports,p)||__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.EffectsCanvasGroupPF2e=exports.TokenLayerPF2e=exports.TemplateLayerPF2e=exports.LightingLayerPF2e=exports.TokenPF2e=exports.MeasuredTemplatePF2e=exports.AmbientLightPF2e=void 0;const ambient_light_1=__webpack_require__(92159);Object.defineProperty(exports,"AmbientLightPF2e",{enumerable:!0,get:function(){return ambient_light_1.AmbientLightPF2e}});const lighting_1=__webpack_require__(23357);Object.defineProperty(exports,"LightingLayerPF2e",{enumerable:!0,get:function(){return lighting_1.LightingLayerPF2e}});const measured_template_1=__webpack_require__(25119);Object.defineProperty(exports,"MeasuredTemplatePF2e",{enumerable:!0,get:function(){return measured_template_1.MeasuredTemplatePF2e}});const template_1=__webpack_require__(19141);Object.defineProperty(exports,"TemplateLayerPF2e",{enumerable:!0,get:function(){return template_1.TemplateLayerPF2e}});const token_1=__webpack_require__(17218);Object.defineProperty(exports,"TokenPF2e",{enumerable:!0,get:function(){return token_1.TokenPF2e}});const token_2=__webpack_require__(59957);Object.defineProperty(exports,"TokenLayerPF2e",{enumerable:!0,get:function(){return token_2.TokenLayerPF2e}});const effects_1=__webpack_require__(83339);Object.defineProperty(exports,"EffectsCanvasGroupPF2e",{enumerable:!0,get:function(){return effects_1.EffectsCanvasGroupPF2e}}),__exportStar(__webpack_require__(30243),exports)},23357:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.LightingLayerPF2e=void 0;class LightingLayerPF2e extends LightingLayer{get lightingLevel(){return 1-canvas.darknessLevel}}exports.LightingLayerPF2e=LightingLayerPF2e},19141:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.TemplateLayerPF2e=void 0;class TemplateLayerPF2e extends TemplateLayer{_onDragLeftMove(event){var _a;if(!canvas.scene||!canvas.dimensions)return;const preview=event.data.preview;if(!preview||preview.destroyed)return;null===preview.parent&&this.preview.addChild(preview);if((null!==(_a=event.data.createState)&&void 0!==_a?_a:0)>=1){const dest=event.data.destination,{x,y}=canvas.grid.getSnappedPosition(dest.x,dest.y,2);dest.x=x,dest.y=y;const template=event.data.preview;if(!template)return;const ray=new Ray(event.data.origin,event.data.destination),ratio=canvas.dimensions.size/canvas.dimensions.distance;if(["cone","circle"].includes(template.type)){const direction=ray.angle,snapAngle=Math.PI/(canvas.scene.hasHexGrid?6:4);template.document.direction=Math.toDegrees(Math.floor((direction+.125*Math.PI)/snapAngle)*snapAngle);const distance=Math.max(ray.distance/ratio,canvas.dimensions.distance);template.document.distance=Math.floor(distance/canvas.dimensions.distance)*canvas.dimensions.distance}else template.document.direction=Math.toDegrees(ray.angle),template.document.distance=ray.distance/ratio;template.refresh(),event.data.createState=2}}_onMouseWheel(event){const template=this.hover;if(!template||!canvas.scene)return;const snap=(event.shiftKey?15:5)*(Number("cone"===template.type)*(canvas.scene.hasHexGrid?2:3)),delta=snap*Math.sign(event.deltaY);return template.rotate(template.document.direction+delta,snap)}}exports.TemplateLayerPF2e=TemplateLayerPF2e},59957:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.TokenLayerPF2e=void 0;class TokenLayerPF2e extends TokenLayer{cycleStack(){const hovered=this.hover;if(!hovered)return!1;const stack=this.placeables.filter((t=>0===hovered.distanceTo(t)&&hovered.document.elevation===t.document.elevation)).sort(((a,b)=>a.document.sort-b.document.sort));if(stack.length<2)return!1;const first=stack.shift();stack.push(first);for(let i=stack.length;i>0;i--)stack[i-1].document.sort=i-1;return canvas.primary.sortChildren(),!0}}exports.TokenLayerPF2e=TokenLayerPF2e},25119:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.MeasuredTemplatePF2e=void 0;const helpers_1=__webpack_require__(30243);class MeasuredTemplatePF2e extends MeasuredTemplate{get type(){return this.document.t}highlightGrid(){var _a;if(!["circle","cone"].includes(this.type)||canvas.grid.type!==CONST.GRID_TYPES.SQUARE)return super.highlightGrid();this.isVisible?(0,helpers_1.highlightGrid)({type:"circle"===this.type?"burst":"cone",object:this,document:this.document,colors:{border:this.borderColor,fill:this.fillColor}}):null===(_a=canvas.grid.getHighlightLayer(this.highlightId))||void 0===_a||_a.clear()}}exports.MeasuredTemplatePF2e=MeasuredTemplatePF2e},38278:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.setPerceptionModes=void 0;const _util_1=__webpack_require__(6945),token_1=__webpack_require__(17218),darkvision=new VisionMode({id:"darkvision",label:"VISION.ModeDarkvision",canvas:{shader:ColorAdjustmentsSamplerShader,uniforms:{enable:!0,contrast:0,saturation:-1,brightness:0}},lighting:{levels:{},background:{visibility:VisionMode.LIGHTING_VISIBILITY.REQUIRED}},vision:{darkness:{adaptive:!0},defaults:{attenuation:0,contrast:0,saturation:-1,brightness:.75,range:1/0}}});class VisionDetectionMode extends DetectionModeBasicSight{constructor(){super({id:"basicSight",label:"DETECTION.BasicSight",type:DetectionMode.DETECTION_TYPES.SIGHT})}testVisibility(visionSource,mode,config){return!((null==config?void 0:config.object)instanceof PlaceableObject&&config.object.document.hidden)&&super.testVisibility(visionSource,mode,config)}_canDetect(visionSource,target){var _a;if(!super._canDetect(visionSource,target))return!1;return!(target instanceof token_1.TokenPF2e&&!!(null===(_a=target.actor)||void 0===_a?void 0:_a.hasCondition("undetected","unnoticed")))}}class HearingDetectionMode extends DetectionMode{constructor(){super({id:"hearing",label:"PF2E.Actor.Creature.Sense.Type.Hearing",type:DetectionMode.DETECTION_TYPES.SOUND})}static getDetectionFilter(){var _a;const filter=null!==(_a=this._detectionFilter)&&void 0!==_a?_a:this._detectionFilter=OutlineOverlayFilter.create({wave:!0,knockout:!1});return filter.thickness=1,filter}testVisibility(visionSource,mode,config){return(null==config?void 0:config.object)instanceof token_1.TokenPF2e&&!config.object.document.hidden&&super.testVisibility(visionSource,mode,config)}_canDetect(visionSource,target){var _a,_b,_c;return target instanceof token_1.TokenPF2e&&(!!(null===(_a=target.actor)||void 0===_a?void 0:_a.emitsSound)&&(!game.settings.get("pf2e","automation.rulesBasedVision")||!(null===(_b=target.actor)||void 0===_b?void 0:_b.hasCondition("undetected","unnoticed"))&&!(null===(_c=visionSource.object.actor)||void 0===_c?void 0:_c.hasCondition("deafened"))))}_testLOS(visionSource,_mode,_target,test){var _a,_b;if(test.los.get(visionSource))return!0;null!==(_a=test.loh)&&void 0!==_a||(test.loh=new Map);const hasLOH=null!==(_b=test.loh.get(visionSource))&&void 0!==_b?_b:!CONFIG.Canvas.losBackend.testCollision((0,_util_1.pick)(visionSource,["x","y"]),test.point,{type:"sound",mode:"any",source:visionSource});return test.loh.set(visionSource,hasLOH),hasLOH}}class DetectionModeTremorPF2e extends DetectionModeTremor{constructor(){super({id:"feelTremor",label:"DETECTION.FeelTremor",walls:!1,type:DetectionMode.DETECTION_TYPES.MOVE})}static getDetectionFilter(){const filter=super.getDetectionFilter();return filter.thickness=1,filter}_canDetect(visionSource,target){var _a,_b;return super._canDetect(visionSource,target)&&target instanceof token_1.TokenPF2e&&!(null===(_a=target.actor)||void 0===_a?void 0:_a.isOfType("loot"))&&!(null===(_b=target.actor)||void 0===_b?void 0:_b.hasCondition("undetected","unnoticed"))}}exports.setPerceptionModes=function(){CONFIG.Canvas.visionModes.darkvision=darkvision,CONFIG.Canvas.detectionModes.basicSight=new VisionDetectionMode,CONFIG.Canvas.detectionModes.hearing=new HearingDetectionMode,CONFIG.Canvas.detectionModes.feelTremor=new DetectionModeTremorPF2e}},49780:function(__unused_webpack_module,exports,__webpack_require__){var _a,_StatusEffects_lastCombatantToken,_StatusEffects_ICON_THEME_DIRS,_StatusEffects_activateListeners,_StatusEffects_updateStatusIcons,_StatusEffects_showStatusLabel,_StatusEffects_setStatusValue,_StatusEffects_toggleStatus,_StatusEffects_createChatMessage,__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)},__classPrivateFieldSet=this&&this.__classPrivateFieldSet||function(receiver,state,value,kind,f){if("m"===kind)throw new TypeError("Private method is not writable");if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===kind?f.call(receiver,value):f?f.value=value:state.set(receiver,value),value};Object.defineProperty(exports,"__esModule",{value:!0}),exports.StatusEffects=void 0;const localize_1=__webpack_require__(41332),_util_1=__webpack_require__(6945),chat_message_1=__webpack_require__(40405);class StatusEffects{static setIconTheme(){const iconTheme=game.settings.get("pf2e","statusEffectType");CONFIG.PF2E.statusEffects.lastIconTheme=iconTheme,CONFIG.PF2E.statusEffects.iconDir=__classPrivateFieldGet(this,_a,"f",_StatusEffects_ICON_THEME_DIRS)[iconTheme],__classPrivateFieldGet(this,_a,"m",_StatusEffects_updateStatusIcons).call(this)}static initialize(){console.debug("PF2e System | Initializing Status Effects handler");const iconTheme=game.settings.get("pf2e","statusEffectType");CONFIG.PF2E.statusEffects.lastIconTheme=iconTheme,CONFIG.PF2E.statusEffects.iconDir=__classPrivateFieldGet(this,_a,"f",_StatusEffects_ICON_THEME_DIRS)[iconTheme],__classPrivateFieldGet(this,_a,"m",_StatusEffects_updateStatusIcons).call(this)}static get conditions(){return localize_1.LocalizePF2e.translations.PF2E.condition}static async migrateStatusEffectUrls(chosenSetting){var _b,_c;console.debug("PF2e System | Changing status effect icon types");const iconDir=__classPrivateFieldGet(this,_a,"f",_StatusEffects_ICON_THEME_DIRS)[chosenSetting],lastIconDir=__classPrivateFieldGet(this,_a,"f",_StatusEffects_ICON_THEME_DIRS)[CONFIG.PF2E.statusEffects.lastIconTheme],promises=[];for(const scene of game.scenes){const tokenUpdates=[];for(const token of scene.tokens){const update=token.toObject(!1);for(const url of token.effects)if(url.includes(lastIconDir)){const slug=null!==(_c=null===(_b=/([-\w]+)\./.exec(url))||void 0===_b?void 0:_b[1])&&void 0!==_c?_c:"",newUrl=`${iconDir}${slug}.webp`;console.debug(`PF2e System | Migrating effect ${slug} of Token ${token.name} on scene ${scene.name} | "${url}" to "${newUrl}"`);const index=update.effects.indexOf(url);-1!==index&&update.effects.splice(index,1,newUrl)}tokenUpdates.push(update)}promises.push(scene.updateEmbeddedDocuments("Token",tokenUpdates))}await Promise.all(promises),CONFIG.PF2E.statusEffects.iconDir=iconDir,CONFIG.PF2E.statusEffects.lastIconTheme=chosenSetting,__classPrivateFieldGet(this,_a,"m",_StatusEffects_updateStatusIcons).call(this)}static async onRenderTokenHUD(html,tokenData){var _b,_c,_d;const token=canvas.tokens.get(tokenData._id);if(!token)return;const iconGrid=html.querySelector(".status-effects");if(!iconGrid)throw(0,_util_1.ErrorPF2e)("Unexpected error retrieving status effects grid");const affectingConditions=null!==(_c=null===(_b=token.actor)||void 0===_b?void 0:_b.itemTypes.condition.filter((condition=>condition.isInHUD)))&&void 0!==_c?_c:[],titleBar=document.createElement("div");titleBar.className="title-bar",iconGrid.append(titleBar);const statusIcons=iconGrid.querySelectorAll(".effect-control");for(const icon of statusIcons){const picture=document.createElement("picture");picture.classList.add("effect-control"),picture.dataset.statusId=icon.dataset.statusId,picture.title=icon.title;const iconSrc=icon.getAttribute("src");picture.setAttribute("src",iconSrc);const newIcon=document.createElement("img");newIcon.src=iconSrc,picture.append(newIcon),icon.replaceWith(picture);const slug=null!==(_d=picture.dataset.statusId)&&void 0!==_d?_d:"",affecting=affectingConditions.filter((c=>c.slug===slug));if((affecting.length>0||iconSrc===token.document.overlayEffect)&&picture.classList.add("active"),affecting.length>0){const isOverridden=affecting.every((c=>c.system.references.overriddenBy.length>0)),isLocked=affecting.every((c=>c.isLocked)),hasValue=affecting.some((c=>c.value));if(isOverridden){picture.classList.add("overridden");const badge=(0,_util_1.fontAwesomeIcon)("angle-double-down");badge.classList.add("badge"),picture.append(badge)}else if(isLocked){picture.classList.add("locked");const badge=(0,_util_1.fontAwesomeIcon)("lock");badge.classList.add("badge"),picture.append(badge)}else if(hasValue){picture.classList.add("valued");const badge=document.createElement("i");badge.classList.add("badge");const value=Math.max(...affecting.map((c=>{var _b;return null!==(_b=c.value)&&void 0!==_b?_b:1})));badge.innerText=value.toString(),picture.append(badge)}}}__classPrivateFieldGet(this,_a,"m",_StatusEffects_activateListeners).call(this,iconGrid,token)}static onUpdateEncounter(encounter){if(!game.user.isGM||!game.settings.get("pf2e","statusEffectShowCombatMessage"))return;if(!encounter.started)return void __classPrivateFieldSet(this,_a,null,"f",_StatusEffects_lastCombatantToken);const{combatant}=encounter,token=null==combatant?void 0:combatant.token;combatant&&token&&(token.id===__classPrivateFieldGet(this,_a,"f",_StatusEffects_lastCombatantToken)||"number"!=typeof combatant.initiative||combatant.defeated||(__classPrivateFieldSet(this,_a,token.id,"f",_StatusEffects_lastCombatantToken),__classPrivateFieldGet(this,_a,"m",_StatusEffects_createChatMessage).call(this,token.object,combatant.hidden)))}}exports.StatusEffects=StatusEffects,_a=StatusEffects,_StatusEffects_activateListeners=function(html,token){const effectControls=html.querySelectorAll(".effect-control");for(const control of effectControls)control.addEventListener("click",(event=>{__classPrivateFieldGet(this,_a,"m",_StatusEffects_setStatusValue).call(this,event,token)})),control.addEventListener("contextmenu",(event=>{__classPrivateFieldGet(this,_a,"m",_StatusEffects_setStatusValue).call(this,event,token)})),control.addEventListener("mouseover",(()=>{__classPrivateFieldGet(this,_a,"m",_StatusEffects_showStatusLabel).call(this,control)})),control.addEventListener("mouseout",(()=>{__classPrivateFieldGet(this,_a,"m",_StatusEffects_showStatusLabel).call(this,control)}))},_StatusEffects_updateStatusIcons=function(){const directory="default"===game.settings.get("pf2e","statusEffectType")?"conditions":"conditions-2";CONFIG.statusEffects=Object.entries(CONFIG.PF2E.statusEffects.conditions).map((([id,label])=>({id,label,icon:`systems/pf2e/icons/${directory}/${id}.webp`}))),CONFIG.statusEffects.push({id:"dead",label:"PF2E.Actor.Dead",icon:CONFIG.controlIcons.defeated})},_StatusEffects_showStatusLabel=function(icon){var _b;const titleBar=null===(_b=icon.closest(".status-effects"))||void 0===_b?void 0:_b.querySelector(".title-bar");titleBar&&icon.title&&(titleBar.innerText=icon.title,titleBar.classList.toggle("active"))},_StatusEffects_setStatusValue=async function(event,token){var _b,_c,_d;event.preventDefault(),event.stopPropagation();const icon=event.currentTarget;if(!(icon instanceof HTMLPictureElement))return;const slug=icon.dataset.statusId,{actor}=token;if(!actor||!slug)return;const condition=actor.itemTypes.condition.find((c=>c.slug===slug&&c.isInHUD&&!c.system.references.parent));if("click"===event.type)"number"==typeof(null==condition?void 0:condition.value)?await game.pf2e.ConditionManager.updateConditionValue(condition.id,token,condition.value+1):(0,_util_1.objectHasKey)(CONFIG.PF2E.conditionTypes,slug)?await(null===(_b=token.actor)||void 0===_b?void 0:_b.increaseCondition(slug)):__classPrivateFieldGet(this,_a,"m",_StatusEffects_toggleStatus).call(this,event,token);else if("contextmenu"===event.type)if(event.ctrlKey){const conditionIds=actor.itemTypes.condition.filter((c=>c.slug===slug)).map((c=>c.id));await(null===(_c=token.actor)||void 0===_c?void 0:_c.deleteEmbeddedDocuments("Item",conditionIds))}else(null==condition?void 0:condition.value)?await game.pf2e.ConditionManager.updateConditionValue(condition.id,token,condition.value-1):__classPrivateFieldGet(this,_a,"m",_StatusEffects_toggleStatus).call(this,event,token);token.document.isLinked&&await(null===(_d=canvas.hud)||void 0===_d?void 0:_d.token.render())},_StatusEffects_toggleStatus=async function(event,token){var _b,_c,_d;const icon=event.currentTarget,{actor}=token;if(!(actor&&icon instanceof HTMLElement))return;const slug=null!==(_b=icon.dataset.statusId)&&void 0!==_b?_b:"",imgElement=icon.querySelector("img"),iconSrc=null==imgElement?void 0:imgElement.getAttribute("src"),affecting=null==actor?void 0:actor.itemTypes.condition.find((c=>c.slug===slug&&!c.system.references.parent)),conditionIds=[];if("click"!==event.type||affecting)"contextmenu"===event.type&&(affecting&&conditionIds.push(affecting.id),conditionIds.length>0?await(null===(_d=token.actor)||void 0===_d?void 0:_d.deleteEmbeddedDocuments("Item",conditionIds)):token.document.overlayEffect===iconSrc&&(await token.toggleEffect(iconSrc,{overlay:!0,active:!1}),await canvas.tokens.hud.render()));else if((0,_util_1.objectHasKey)(CONFIG.PF2E.conditionTypes,slug)){const newCondition=game.pf2e.ConditionManager.getCondition(slug).toObject();newCondition.system.sources.hud=!0,await(null===(_c=token.actor)||void 0===_c?void 0:_c.createEmbeddedDocuments("Item",[newCondition]))}else iconSrc&&(event.shiftKey||"dead"===icon.dataset.statusId)&&(await token.toggleEffect(iconSrc,{overlay:!0,active:!0}),await canvas.tokens.hud.render())},_StatusEffects_createChatMessage=function(token,whisper=!1){var _b,_c,_d;const conditions=null!==(_c=null===(_b=token.actor)||void 0===_b?void 0:_b.itemTypes.condition.filter((c=>c.isActive)))&&void 0!==_c?_c:[],iconFolder=CONFIG.PF2E.statusEffects.iconDir,statusEffectList=conditions.map((condition=>{var _b,_c;const summary=null!==(_b=StatusEffects.conditions[condition.slug].summary)&&void 0!==_b?_b:"",conditionValue=null!==(_c=condition.value)&&void 0!==_c?_c:"";return`\n                <li><img src="${`${iconFolder}${condition.slug}.webp`}" title="${summary}">\n                    <span class="statuseffect-li">\n                        <span class="statuseffect-li-text">${condition.name} ${conditionValue}</span>\n                        <div class="statuseffect-rules"><h2>${condition.name}</h2>${condition.description}</div>\n                    </span>\n                </li>`}));if(0===statusEffectList.length)return;const content=`\n            <div class="dice-roll">\n                <div class="dice-result">\n                    <div class="dice-total statuseffect-message">\n                        <ul>${statusEffectList.join("")}</ul>\n                    </div>\n                </div>\n            </div>\n        `,messageSource={user:game.user.id,speaker:{alias:game.i18n.format("PF2E.StatusEffects",{name:token.name})},content,type:CONST.CHAT_MESSAGE_TYPES.OTHER};(!(null===(_d=token.actor)||void 0===_d?void 0:_d.hasPlayerOwner)&&game.settings.get("pf2e","metagame_secretCondition")||whisper)&&(messageSource.whisper=ChatMessage.getWhisperRecipients("GM").map((u=>u.id))),chat_message_1.ChatMessagePF2e.create(messageSource)},_StatusEffects_lastCombatantToken={value:null},_StatusEffects_ICON_THEME_DIRS={value:{default:"systems/pf2e/icons/conditions/",blackWhite:"systems/pf2e/icons/conditions-2/"}}},4719:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.TokenAuraColors=exports.AuraRenderer=exports.AuraRenderers=void 0;var map_1=__webpack_require__(91167);Object.defineProperty(exports,"AuraRenderers",{enumerable:!0,get:function(){return map_1.AuraRenderers}});var renderer_1=__webpack_require__(38086);Object.defineProperty(exports,"AuraRenderer",{enumerable:!0,get:function(){return renderer_1.AuraRenderer}}),Object.defineProperty(exports,"TokenAuraColors",{enumerable:!0,get:function(){return renderer_1.TokenAuraColors}})},91167:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.AuraRenderers=void 0;const renderer_1=__webpack_require__(38086);class AuraRenderers extends Map{constructor(token){super(),this.token=token}get highlightId(){return this.token.highlightId}draw(){if(this.clear(),canvas.ready&&this.token.actor){for(const[slug,aura]of this.token.document.auras.entries()){const renderer=new renderer_1.AuraRenderer({...aura,token:this.token});this.set(slug,this.token.addChild(renderer))}this.refresh()}}refresh(){var _a;if(0!==this.size&&(this.clearHighlights(),!this.token.isPreview&&!this.token.isAnimating&&this.token.hover)){const{highlightId}=this;(null!==(_a=canvas.grid.highlightLayers[highlightId])&&void 0!==_a?_a:canvas.grid.addHighlightLayer(highlightId)).clear();for(const aura of this.values())aura.highlight()}}delete(key){const aura=this.get(key);return!!aura&&(this.token.removeChild(aura),aura.destroyed||aura.destroy(),super.delete(key))}clear(){this.clearHighlights();for(const child of this.token.children)child instanceof renderer_1.AuraRenderer&&(this.token.removeChild(child),child.destroyed||child.destroy());return super.clear()}clearHighlights(){canvas.grid.destroyHighlightLayer(this.highlightId)}}exports.AuraRenderers=AuraRenderers},38086:function(__unused_webpack_module,exports,__webpack_require__){var _AuraRenderer_instances,_AuraRenderer_convertColors,_AuraRenderer_drawLabel,__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.AuraRenderer=void 0;const util_1=__webpack_require__(60162);class AuraRenderer extends PIXI.Graphics{constructor(params){var _a,_b;super(),_AuraRenderer_instances.add(this),this.token=params.token,this.colors=__classPrivateFieldGet(this,_AuraRenderer_instances,"m",_AuraRenderer_convertColors).call(this,params.colors),this.radius=params.radius,this.radiusPixels=.5*this.token.w+this.radius/(null!==(_b=null===(_a=canvas.dimensions)||void 0===_a?void 0:_a.distance)&&void 0!==_b?_b:0)*canvas.grid.size,this.traits=new Set(params.traits),this.draw()}get bounds(){const{token,radiusPixels}=this;return new PIXI.Rectangle(token.bounds.x-(radiusPixels-token.bounds.width/2),token.bounds.y-(radiusPixels-token.bounds.width/2),2*radiusPixels,2*radiusPixels)}get center(){return this.token.center}get highlightId(){return this.token.highlightId}get squares(){return(0,util_1.getAreaSquares)(this)}get shouldRender(){var _a,_b,_c,_d,_e,_f,_g;if((null===(_a=canvas.scene)||void 0===_a?void 0:_a.grid.type)!==CONST.GRID_TYPES.SQUARE||!canvas.scene.tokenVision)return!1;const soleUserIsGM=game.user.isGM&&1===game.users.filter((u=>u.active)).length,sceneOfFocus=null!==(_f=null!==(_e=null===(_d=null===(_c=null===(_b=game.combats.active)||void 0===_b?void 0:_b.combatant)||void 0===_c?void 0:_c.token)||void 0===_d?void 0:_d.scene)&&void 0!==_e?_e:game.scenes.active)&&void 0!==_f?_f:null;return(canvas.scene===sceneOfFocus||soleUserIsGM)&&("party"===(null===(_g=this.token.actor)||void 0===_g?void 0:_g.alliance)||this.traits.has("visual")||this.traits.has("auditory")||game.user.isGM)}draw(){this.visible=!1,this.shouldRender&&(this.beginFill(this.colors.fill,0).lineStyle(AuraRenderer.LINE_THICKNESS,this.colors.border,.75).drawCircle(this.token.w/2,this.token.h/2,this.radiusPixels).endFill(),this.visible=!0)}highlight(){var _a,_b;const{dimensions,grid}=canvas;if(!dimensions)return;const{shouldRender}=this;if(!(null===(_a=game.combats.active)||void 0===_a?void 0:_a.started)&&shouldRender)return __classPrivateFieldGet(this,_AuraRenderer_instances,"m",_AuraRenderer_drawLabel).call(this);const highlightLayer=null===(_b=grid.getHighlightLayer(this.highlightId))||void 0===_b?void 0:_b.clear();if(highlightLayer&&shouldRender){for(const square of this.squares)square.highlight(highlightLayer,this.colors);__classPrivateFieldGet(this,_AuraRenderer_instances,"m",_AuraRenderer_drawLabel).call(this)}}}exports.AuraRenderer=AuraRenderer,_AuraRenderer_instances=new WeakSet,_AuraRenderer_convertColors=function(colors){var _a,_b,_c;const user=null!==(_b=null!==(_a=game.users.find((u=>{var _a;return!!u.character&&u.character.id===(null===(_a=this.token.actor)||void 0===_a?void 0:_a.id)})))&&void 0!==_a?_a:game.users.find((u=>u.isGM&&u.active)))&&void 0!==_b?_b:game.user,userColor=Number(foundry.utils.Color.fromString(null!==(_c=user.color)&&void 0!==_c?_c:"#0000000"))||0;return colors?{border:Number(foundry.utils.Color.fromString(colors.border))||0,fill:Number(foundry.utils.Color.fromString(colors.fill))||userColor}:{border:0,fill:userColor}},_AuraRenderer_drawLabel=function(){var _a,_b,_c,_d;const style=CONFIG.canvasTextStyle.clone(),gridSize=null!==(_b=null===(_a=canvas.dimensions)||void 0===_a?void 0:_a.size)&&void 0!==_b?_b:100;style.fontSize=Math.max(Math.round(.36*gridSize*12)/12,36),style.align="center";const gridUnits=(null===(_c=canvas.scene)||void 0===_c?void 0:_c.grid.units.trim())||game.system.gridUnits,label=[this.radius,gridUnits].join(""),text=new PreciseText(label,style);text.position.set(this.center.x,this.center.y-this.radiusPixels),null===(_d=canvas.grid.getHighlightLayer(this.highlightId))||void 0===_d||_d.lineStyle(AuraRenderer.LINE_THICKNESS,0).beginFill(0,.5).drawCircle(text.position.x,text.position.y,6).addChild(text)},AuraRenderer.LINE_THICKNESS=3},60162:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.getAreaSquares=void 0;const effect_area_square_1=__webpack_require__(87453),helpers_1=__webpack_require__(30243);exports.getAreaSquares=function(aura){if(!canvas.dimensions)return[];const squareWidth=canvas.dimensions.size,rowCount=Math.ceil(aura.bounds.width/squareWidth),emptyVector=Array(rowCount-1).fill(null),genColumn=square=>emptyVector.reduce((colSquares=>{const squareAbove=colSquares.at(-1),squareBelow=new effect_area_square_1.EffectAreaSquare(square.x,squareAbove.y+squareWidth,squareWidth,squareWidth);return colSquares.push(squareBelow),colSquares}),[square]),topLeftSquare=new effect_area_square_1.EffectAreaSquare(aura.bounds.x,aura.bounds.y,squareWidth,squareWidth),collisionType=aura.traits.has("visual")&&!aura.traits.has("auditory")?"sight":aura.traits.has("auditory")&&!aura.traits.has("visual")?"sound":"move";return emptyVector.reduce((squares=>{const lastSquare=squares.at(-1).at(-1),column=genColumn(new effect_area_square_1.EffectAreaSquare(lastSquare.x+squareWidth,topLeftSquare.y,squareWidth,squareWidth));return squares.push(column),squares}),[genColumn(topLeftSquare)]).flat().filter((s=>(0,helpers_1.measureDistanceRect)(aura.token.bounds,s)<=aura.radius)).map((square=>{const ray=new Ray(aura.token.center,square.center);return square.active=!canvas.walls.checkCollision(ray,{type:collisionType,mode:"any"}),square}))}},17218:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.TokenPF2e=void 0;var object_1=__webpack_require__(63920);Object.defineProperty(exports,"TokenPF2e",{enumerable:!0,get:function(){return object_1.TokenPF2e}})},63920:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.TokenPF2e=void 0;const _item_1=__webpack_require__(10843),_util_1=__webpack_require__(6945),__1=__webpack_require__(85336),aura_1=__webpack_require__(4719);class TokenPF2e extends Token{constructor(document){super(document),this.auras=new aura_1.AuraRenderers(this),Object.defineProperty(this,"auras",{configurable:!1,writable:!1})}get isVisible(){var _a;return null!==(_a=super.isVisible)&&void 0!==_a&&_a}get isAnimating(){return!!this._animation}get emitsDarkness(){return this.document.emitsDarkness}get hasLowLightVision(){return this.document.hasLowLightVision}get hasDarkvision(){return this.document.hasDarkvision}get linkToActorSize(){return this.document.linkToActorSize}get highlightId(){return`Token.${this.id}`}isAdjacentTo(token){return 5===this.distanceTo(token)}canFlank(flankee,context={}){var _a,_b,_c;if(this===flankee||!game.settings.get("pf2e","automation.flankingDetection"))return!1;if(!(null===(_a=this.actor)||void 0===_a?void 0:_a.attributes.flanking.canFlank)||!(null===(_b=flankee.actor)||void 0===_b?void 0:_b.attributes.flanking.flankable))return!1;if(!this.actor.isOfType("character","npc"))return!1;if(!flankee.actor.isOfType("creature"))return!1;if(this.actor.isAllyOf(flankee.actor))return!1;const reach=null!==(_c=context.reach)&&void 0!==_c?_c:this.actor.getReach({action:"attack"});return this.actor.canAttack&&reach>=this.distanceTo(flankee,{reach})}isFlanking(flankee,{reach}={}){if(!this.actor||!this.canFlank(flankee,{reach}))return!1;const{lineSegmentIntersects}=foundry.utils,{flanking}=this.actor.attributes,flankingBuddies=canvas.tokens.placeables.filter((t=>t!==this&&t.canFlank(flankee)));if(0===flankingBuddies.length)return!1;if(flanking.canGangUp.some((g=>"number"==typeof g&&g<=flankingBuddies.length)))return!0;return!!(this.isAdjacentTo(flankee)&&flanking.canGangUp.includes("animal-companion")&&flankingBuddies.some((b=>{var _a,_b,_c;return(null===(_a=b.actor)||void 0===_a?void 0:_a.isOfType("character"))&&"Compendium.pf2e-animal-companions.AC-Ancestries-and-Class.h6Ybhv5URar01WPk"===(null===(_b=b.actor.class)||void 0===_b?void 0:_b.sourceId)&&(null===(_c=game.modules.get("pf2e-animal-companions"))||void 0===_c?void 0:_c.active)&&b.isAdjacentTo(flankee)})))||flankingBuddies.some((b=>((flankerA,flankerB,flankee)=>{const[centerA,centerB]=[flankerA.center,flankerB.center],{bounds}=flankee,left=new Ray({x:bounds.left,y:bounds.top},{x:bounds.left,y:bounds.bottom}),right=new Ray({x:bounds.right,y:bounds.top},{x:bounds.right,y:bounds.bottom}),top=new Ray({x:bounds.left,y:bounds.top},{x:bounds.right,y:bounds.top}),bottom=new Ray({x:bounds.left,y:bounds.bottom},{x:bounds.right,y:bounds.bottom}),intersectsSide=side=>lineSegmentIntersects(centerA,centerB,side.A,side.B);return intersectsSide(left)&&intersectsSide(right)||intersectsSide(top)&&intersectsSide(bottom)})(this,b,flankee)))}_drawBar(number,bar,data){if(!canvas.dimensions)return;const actor=this.document.actor;if(!("attributes.hp"===data.attribute&&(null==actor?void 0:actor.attributes.hp)))return super._drawBar(number,bar,data);const{value,max,temp}=actor.attributes.hp,healthPercent=Math.clamped(value,0,max)/max,color=number?PIXI.utils.rgb2hex([.5*healthPercent,.7*healthPercent,.5+healthPercent/2]):PIXI.utils.rgb2hex([1-healthPercent/2,healthPercent,0]);let h=Math.max(canvas.dimensions.size/12,8);const bs=Math.clamped(h/8,1,2);this.document.height>=2&&(h*=1.6);const numBars=temp>0?2:1,barHeight=h/numBars;if(bar.clear(),bar.lineStyle(0).beginFill(0,.5).drawRoundedRect(0,0,this.w,h,3),bar.lineStyle(bs/2,0,1),temp>0){const tempColor=6737151,tempWidth=Math.clamped(temp,0,max)/max*this.w-2*(bs-1);bar.beginFill(tempColor,1).drawRoundedRect(0,0,tempWidth,barHeight,2)}const healthBarY=(numBars-1)*barHeight;bar.beginFill(color,1).drawRoundedRect(0,healthBarY,healthPercent*this.w,barHeight,2),bar.beginFill(0,0).lineStyle(bs,0,1).drawRoundedRect(0,0,this.w,h,3),bar.position.set(0,0===number?this.h-h:0)}async drawEffects(){await super.drawEffects(),await this._animation,this.auras.draw()}emitHoverIn(){this.emit("mouseover",{data:{object:this}})}emitHoverOut(){this.emit("mouseout",{data:{object:this}})}_isVisionSource(){var _a;return!!(null===(_a=this.actor)||void 0===_a?void 0:_a.hasPlayerOwner)&&!game.user.isGM&&game.settings.get("pf2e","metagame_partyVision")||super._isVisionSource()}clone(){const clone=super.clone();return clone.isPreview&&(clone.document.height=this.document.height,clone.document.width=this.document.width,clone.document.texture.scaleX=this.document.texture.scaleX,clone.document.texture.scaleY=this.document.texture.scaleY,clone.document.texture.src=this.document.texture.src),clone}async showFloatyText(params){var _a;if(!this.isVisible)return;if(!game.user.isGM&&"number"!=typeof params){const[_,document]=Object.entries(params)[0];if(document instanceof _item_1.EffectPF2e&&document.system.unidentified)return}const scrollingTextArgs=(()=>{var _a,_b;if("number"==typeof params){const quantity=params,maxHP=null===(_b=null===(_a=this.actor)||void 0===_a?void 0:_a.hitPoints)||void 0===_b?void 0:_b.max;if(!quantity||"number"!=typeof maxHP)return null;const percent=Math.clamped(Math.abs(quantity)/maxHP,0,1),textColors={damage:16711680,healing:65280};return[this.center,params.signedString(),{anchor:CONST.TEXT_ANCHOR_POINTS.TOP,jitter:.25,fill:textColors[quantity<0?"damage":"healing"],fontSize:16+32*percent,stroke:0,strokeThickness:4}]}{const[change,details]=Object.entries(params)[0],isAdded="create"===change,sign=isAdded?"+ ":"- ",appendedNumber=details.value?` ${details.value}`:"",content=`${sign}${details.name}${appendedNumber}`,anchorDirection=isAdded?CONST.TEXT_ANCHOR_POINTS.TOP:CONST.TEXT_ANCHOR_POINTS.BOTTOM,textStyle=(0,_util_1.pick)(this._getTextStyle(),["fill","fontSize","stroke","strokeThickness"]);return[this.center,content,{...textStyle,anchor:anchorDirection,direction:anchorDirection,jitter:.25}]}})();scrollingTextArgs&&(await this._animation,await(null===(_a=canvas.interface)||void 0===_a?void 0:_a.createScrollingText(...scrollingTextArgs)))}distanceTo(target,{reach=null}={}){if(!canvas.dimensions)return NaN;if(this===target)return 0;if(canvas.grid.type!==CONST.GRID_TYPES.SQUARE)return canvas.grid.measureDistance(this.position,target.position);const distance={xy:(0,__1.measureDistanceRect)(this.bounds,target.bounds,{reach}),xz:0,yz:0},selfElevation=this.document.elevation,targetElevation=target.document.elevation;if(selfElevation===targetElevation||!this.actor||!target.actor)return distance.xy;const[selfDimensions,targetDimensions]=[this.actor.dimensions,target.actor.dimensions];if(!selfDimensions||!targetDimensions)return distance.xy;const gridSize=canvas.dimensions.size,gridDistance=canvas.dimensions.distance,xzPlane={self:new PIXI.Rectangle(this.bounds.x,Math.floor(selfElevation/gridDistance*gridSize),this.bounds.width,Math.floor(selfDimensions.height/gridDistance*gridSize)),target:new PIXI.Rectangle(target.bounds.x,Math.floor(targetElevation/gridDistance*gridSize),target.bounds.width,Math.floor(targetDimensions.height/gridDistance*gridSize))};distance.xz=(0,__1.measureDistanceRect)(xzPlane.self,xzPlane.target,{reach});const yzPlane={self:new PIXI.Rectangle(this.bounds.y,Math.floor(selfElevation/gridDistance*gridSize),this.bounds.height,Math.floor(selfDimensions.height/gridDistance*gridSize)),target:new PIXI.Rectangle(target.bounds.y,Math.floor(targetElevation/gridDistance*gridSize),target.bounds.height,Math.floor(targetDimensions.height/gridDistance*gridSize))};distance.yz=(0,__1.measureDistanceRect)(yzPlane.self,yzPlane.target,{reach});const hypotenuse=Math.sqrt(Math.pow(distance.xy,2)+Math.pow(Math.max(distance.xz,distance.yz),2));return Math.floor(hypotenuse/gridDistance)*gridDistance}async animate(updateData,options){await super.animate(updateData,options),this._animation||this.onFinishAnimation()}_onControl(options={}){game.ready&&game.pf2e.effectPanel.refresh(),super._onControl(options),this.auras.refresh()}_onRelease(options){game.pf2e.effectPanel.refresh(),super._onRelease(options),this.auras.refresh()}_onDragLeftStart(event){super._onDragLeftStart(event),this.auras.clearHighlights()}async _onDragLeftDrop(event){var _a;const clones=null!==(_a=event.data.clones)&&void 0!==_a?_a:[],dropped=await super._onDragLeftDrop(event);return 1===clones.length&&(this.emitHoverOut(),this.emitHoverIn()),this.auras.refresh(),dropped}_onHoverIn(event,options){return!1!==super._onHoverIn(event,options)&&(this.auras.refresh(),!0)}_onHoverOut(event){return!1!==super._onHoverOut(event)&&(this.auras.refresh(),!0)}_onDelete(options,userId){super._onDelete(options,userId),this.auras.clear()}async onFinishAnimation(){await this._animation,this.auras.refresh()}_onApplyStatusEffect(statusId,active){super._onApplyStatusEffect(statusId,active),["undetected","unnoticed"].includes(statusId)&&(canvas.perception.update({refreshVision:!0,refreshLighting:!0},!0),this.mesh.refresh())}}exports.TokenPF2e=TokenPF2e},36984:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.ChatRollDetails=void 0;class ChatRollDetails extends Application{constructor(message,options={}){super(options),this.message=message}static get defaultOptions(){const options=super.defaultOptions;return options.title="PF2E.ChatRollDetails.Title",options.template="systems/pf2e/templates/chat/chat-roll-details.html",options.classes=["chat-roll-details"],options.resizable=!0,options.width=600,options.height=420,options}getData(){var _a;const{context,modifiers}=this.message.flags.pf2e,allOptions=null!==(_a=null==context?void 0:context.options)&&void 0!==_a?_a:[],topLevelOptions=allOptions.filter((option=>!option.includes(":"))),remainingOptions=allOptions.filter((option=>option.includes(":"))),rollOptions=[...topLevelOptions.sort(),...remainingOptions.sort()],domains=null==context?void 0:context.domains.sort();return{context,domains,modifiers,rollOptions,hasModifiers:!!modifiers}}}exports.ChatRollDetails=ChatRollDetails},97532:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.CriticalHitAndFumbleCards=void 0;class CriticalHitAndFumbleCards{static handleDraw(message){var _a,_b,_c;if(message.isAuthor&&message.isContentVisible){const type=null!==(_b=null===(_a=message.flags.pf2e.context)||void 0===_a?void 0:_a.type)&&void 0!==_b?_b:"",firstDie=null===(_c=message.rolls.at(0))||void 0===_c?void 0:_c.dice[0];firstDie&&20===firstDie.faces&&this.rollTypes.includes(type)&&(20===firstDie.total?this.automaticDraw("critTable"):1===firstDie.total&&this.automaticDraw("fumbleTable"))}}static automaticDraw(table){var _a,_b;null!==(_a=this.diceSoNice)&&void 0!==_a||(this.diceSoNice=!!(null===(_b=game.modules.get("dice-so-nice"))||void 0===_b?void 0:_b.active)),this.diceSoNice?Hooks.once("diceSoNiceRollComplete",(()=>{this.drawFromTable(table,!0)})):this.drawFromTable(table,!0)}static drawFromTable(table,automatic=!1){const tableId="critTable"===table?"FTEpsIWWVrDj0jNG":"WzMGWMIrrPvSp75D";game.packs.get("pf2e.rollable-tables",{strict:!0}).getDocument(tableId).then((rollTable=>{rollTable.draw({displayChat:!1}).then((draw=>{const data={roll:draw.roll,messageData:{}};automatic&&!this.diceSoNice&&(data.messageData.sound=void 0),rollTable.toMessage(draw.results,data)}))}))}static appendButtons(message,$html){var _a,_b,_c;if(null!==(_a=this.appendButtonsOption)&&void 0!==_a||(this.appendButtonsOption=game.settings.get("pf2e","critFumbleButtons")),this.appendButtonsOption&&(message.isAuthor||game.user.isGM)&&message.isContentVisible){const type=null!==(_c=null===(_b=message.flags.pf2e.context)||void 0===_b?void 0:_b.type)&&void 0!==_c?_c:"";if(this.rollTypes.includes(type)){const critButton=$(`<button class="dice-total-fullDamage-btn" style="width: 22px; height:22px; font-size:10px;line-height:1px"><i class="fas fa-thumbs-up" title="${game.i18n.localize("PF2E.CriticalHitCardButtonTitle")}"></i></button>`),fumbleButton=$(`<button class="dice-total-fullDamage-btn" style="width: 22px; height:22px; font-size:10px;line-height:1px"><i class="fas fa-thumbs-down" title="${game.i18n.localize("PF2E.CriticalFumbleCardButtonTitle")}"></i></button>`),btnContainer1=$('<span class="dmgBtn-container" style="position:absolute; right:0; bottom:1px;"></span>');btnContainer1.append(critButton),btnContainer1.append(fumbleButton),critButton.on("click",(event=>{event.stopPropagation(),this.drawFromTable("critTable"),event.currentTarget.blur()})),fumbleButton.on("click",(event=>{event.stopPropagation(),this.drawFromTable("fumbleTable"),event.currentTarget.blur()})),$html.find(".dice-total").wrapInner('<span id="value"></span>').append(btnContainer1)}}}}exports.CriticalHitAndFumbleCards=CriticalHitAndFumbleCards,CriticalHitAndFumbleCards.rollTypes=["attack-roll","spell-attack-roll"]},53958:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0})},14418:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.ChatMessagePF2e=void 0;const crit_fumble_cards_1=__webpack_require__(97532),_item_1=__webpack_require__(10843),trick_1=__webpack_require__(73041),check_1=__webpack_require__(11848),chat_roll_details_1=__webpack_require__(36984),user_visibility_1=__webpack_require__(96498),_util_1=__webpack_require__(6945),damage_buttons_1=__webpack_require__(67545);class ChatMessagePF2e extends ChatMessage{constructor(data={},context={}){var _a,_b,_c;data.flags=mergeObject(expandObject(null!==(_a=data.flags)&&void 0!==_a?_a:{}),{core:{},pf2e:{}}),super(data,context);for(const roll of this.rolls)roll instanceof check_1.CheckRoll&&(null!==(_b=roll.roller)&&void 0!==_b||(roll.roller=null!==(_c=this.user)&&void 0!==_c?_c:null))}get isDamageRoll(){var _a,_b;const firstRoll=this.rolls.at(0);if(!firstRoll||firstRoll.terms.some((t=>t instanceof FateDie||t instanceof Coin)))return!1;if("damage-roll"===(null===(_a=this.flags.pf2e.context)||void 0===_a?void 0:_a.type))return!0;const isCheck=firstRoll instanceof check_1.CheckRoll||20===(null===(_b=firstRoll.dice[0])||void 0===_b?void 0:_b.faces),fromRollTable=!!this.flags.core.RollTable;return!(isCheck||fromRollTable)}get actor(){return ChatMessagePF2e.getSpeakerActor(this.speaker)}get target(){var _a,_b,_c,_d,_e;const targetUUID=null===(_b=null===(_a=this.flags.pf2e.context)||void 0===_a?void 0:_a.target)||void 0===_b?void 0:_b.token;if(!targetUUID)return null;const match=null!==(_c=/^Scene\.(\w+)\.Token\.(\w+)$/.exec(null!=targetUUID?targetUUID:""))&&void 0!==_c?_c:[],scene=game.scenes.get(null!==(_d=match[1])&&void 0!==_d?_d:""),token=null==scene?void 0:scene.tokens.get(null!==(_e=match[2])&&void 0!==_e?_e:""),actor=null==token?void 0:token.actor;return actor?{actor,token}:null}get journalEntry(){var _a,_b;const uuid=this.flags.pf2e.journalEntry;if(!uuid)return null;const entryId=null===(_a=/^JournalEntry.([A-Za-z0-9]{16})$/.exec(uuid))||void 0===_a?void 0:_a.at(1);return null!==(_b=game.journal.get(null!=entryId?entryId:""))&&void 0!==_b?_b:null}get isCheckRoll(){return this.rolls[0]instanceof check_1.CheckRoll}get isReroll(){const context=this.flags.pf2e.context;return!!context&&"damage-roll"!==context.type&&!!context.isReroll}get isRerollable(){var _a;const roll=this.rolls[0];return!!((null===(_a=this.actor)||void 0===_a?void 0:_a.isOwner)&&this.canUserModify(game.user,"update")&&roll instanceof check_1.CheckRoll&&roll.isRerollable)}get item(){var _a,_b,_c,_d;const strike=this._strike;if(null==strike?void 0:strike.item)return strike.item;const item=(()=>{var _a,_b,_c,_d,_e,_f,_g;const domItem=this.getItemFromDOM();if(domItem)return domItem;const origin=null!==(_b=null===(_a=this.flags.pf2e)||void 0===_a?void 0:_a.origin)&&void 0!==_b?_b:null,match=null!==(_d=/Item\.(\w+)/.exec(null!==(_c=null==origin?void 0:origin.uuid)&&void 0!==_c?_c:""))&&void 0!==_d?_d:[];return null!==(_g=null===(_e=this.actor)||void 0===_e?void 0:_e.items.get(null!==(_f=null==match?void 0:match[1])&&void 0!==_f?_f:""))&&void 0!==_g?_g:null})();if(!item)return null;const{tradition}=null!==(_b=null===(_a=this.flags.pf2e)||void 0===_a?void 0:_a.casting)&&void 0!==_b?_b:{},isCharacter=item.actor.isOfType("character");if(tradition&&item.isOfType("spell")&&!item.spellcasting&&isCharacter){const trick=new trick_1.TrickMagicItemEntry(item.actor,trick_1.traditionSkills[tradition]);item.trickMagicEntry=trick}if(null==item?void 0:item.isOfType("spell")){const spellVariant=this.flags.pf2e.spellVariant,castLevel=null!==(_d=null===(_c=this.flags.pf2e.casting)||void 0===_c?void 0:_c.level)&&void 0!==_d?_d:item.level,modifiedSpell=item.loadVariant({overlayIds:null==spellVariant?void 0:spellVariant.overlayIds,castLevel});return null!=modifiedSpell?modifiedSpell:item.clone({"system.location.heightenedLevel":castLevel},{keepId:!0})}return item}get _strike(){var _a,_b,_c;const actor=this.actor;if(!(null==actor?void 0:actor.isOfType("character","npc")))return null;const strikeData=(()=>{if(this.flags.pf2e.strike)return this.flags.pf2e.strike;const messageHTML=(0,_util_1.htmlQuery)(ui.chat.element[0],`li[data-message-id="${this.id}"]`),chatCard=(0,_util_1.htmlQuery)(messageHTML,".chat-card"),index=void 0===(null==chatCard?void 0:chatCard.dataset.strikeIndex)?null:Number(null==chatCard?void 0:chatCard.dataset.strikeIndex);return"number"==typeof index?{index}:null})();if(strikeData){const{index,altUsage}=strikeData,action=null!==(_a=actor.system.actions.at(index))&&void 0!==_a?_a:null;return altUsage?null!==(_c=null===(_b=null==action?void 0:action.altUsages)||void 0===_b?void 0:_b.find((w=>"thrown"===altUsage?w.item.isThrown:w.item.isMelee)))&&void 0!==_c?_c:null:action}return null}getItemFromDOM(){var _a,_b,_c;const sourceString=null!==(_a=$("ol#chat-log").children(`li[data-message-id="${this.id}"]`).find("div.pf2e.item-card").attr("data-embedded-item"))&&void 0!==_a?_a:"null";try{const itemSource=JSON.parse(sourceString);return itemSource?new _item_1.ItemPF2e(itemSource,{parent:this.actor,fromConsumable:null===(_c=null===(_b=this.flags)||void 0===_b?void 0:_b.pf2e)||void 0===_c?void 0:_c.isFromConsumable}):null}catch(_error){return null}}async showDetails(){this.flags.pf2e.context&&new chat_roll_details_1.ChatRollDetails(this).render(!0)}get token(){var _a,_b,_c,_d;if(!game.scenes)return null;const sceneId=null!==(_a=this.speaker.scene)&&void 0!==_a?_a:"",tokenId=null!==(_b=this.speaker.token)&&void 0!==_b?_b:"";return null!==(_d=null===(_c=game.scenes.get(sceneId))||void 0===_c?void 0:_c.tokens.get(tokenId))&&void 0!==_d?_d:null}getRollData(){const{actor,item}=this;return{...null==actor?void 0:actor.getRollData(),...null==item?void 0:item.getRollData()}}async getHTML(){const{actor}=this;if(this.isContentVisible){const rollData=this.getRollData();this.flavor=await TextEditor.enrichHTML(this.flavor,{async:!0,rollData})}const $html=await super.getHTML(),html=$html[0];!this.flags.pf2e.suppressDamageButtons&&this.isDamageRoll&&this.isContentVisible&&await damage_buttons_1.DamageButtons.append(this,$html),crit_fumble_cards_1.CriticalHitAndFumbleCards.appendButtons(this,$html),html.addEventListener("mouseenter",(()=>this.onHoverIn())),html.addEventListener("mouseleave",(()=>this.onHoverOut()));const sender=html.querySelector(".message-sender");return null==sender||sender.addEventListener("click",this.onClickSender.bind(this)),null==sender||sender.addEventListener("dblclick",this.onClickSender.bind(this)),user_visibility_1.UserVisibilityPF2e.processMessageSender(this,html),!actor&&this.content&&user_visibility_1.UserVisibilityPF2e.process(html,{document:this}),$html}onHoverIn(){var _a;if(!canvas.ready)return;const token=null===(_a=this.token)||void 0===_a?void 0:_a.object;(null==token?void 0:token.isVisible)&&!token.controlled&&token.emitHoverIn()}onHoverOut(){var _a,_b;canvas.ready&&(null===(_b=null===(_a=this.token)||void 0===_a?void 0:_a.object)||void 0===_b||_b.emitHoverOut())}onClickSender(event){var _a;if(!canvas)return;const token=null===(_a=this.token)||void 0===_a?void 0:_a.object;if((null==token?void 0:token.isVisible)&&token.isOwner&&(token.controlled?token.release():token.control({releaseOthers:!event.shiftKey}),"dblclick"===event.type)){const scale=Math.max(1,canvas.stage.scale.x);canvas.animatePan({...token.center,scale,duration:1e3})}}_onCreate(data,options,userId){super._onCreate(data,options,userId),this.isRoll&&game.settings.get("pf2e","drawCritFumble")&&crit_fumble_cards_1.CriticalHitAndFumbleCards.handleDraw(this)}}exports.ChatMessagePF2e=ChatMessagePF2e},40405:function(__unused_webpack_module,exports,__webpack_require__){var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k);var desc=Object.getOwnPropertyDescriptor(m,k);desc&&!("get"in desc?!m.__esModule:desc.writable||desc.configurable)||(desc={enumerable:!0,get:function(){return m[k]}}),Object.defineProperty(o,k2,desc)}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)"default"===p||Object.prototype.hasOwnProperty.call(exports,p)||__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.ChatMessagePF2e=void 0,__exportStar(__webpack_require__(53958),exports);var document_1=__webpack_require__(14418);Object.defineProperty(exports,"ChatMessagePF2e",{enumerable:!0,get:function(){return document_1.ChatMessagePF2e}})},60780:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.ChatCards=void 0;const helpers_1=__webpack_require__(79911),values_1=__webpack_require__(8382),_item_1=__webpack_require__(10843),spell_consumables_1=__webpack_require__(87458),helpers_2=__webpack_require__(73715),sheet_util_1=__webpack_require__(15806),repair_1=__webpack_require__(10428),localize_1=__webpack_require__(41332),_util_1=__webpack_require__(6945),__1=__webpack_require__(40405);exports.ChatCards={listen:$html=>{const selectors=[".card-buttons button",".message-buttons button","button[data-action=consume]"].join(",");$html.find(selectors).on("click",(async event=>{var _a,_b,_c,_d,_e,_f,_g;event.preventDefault();const $button=$(event.currentTarget),messageId=null!==(_a=$button.parents(".message").attr("data-message-id"))&&void 0!==_a?_a:"",message=game.messages.get(messageId,{strict:!0}),$card=$button.closest(".chat-card, .message-buttons"),action=$button.attr("data-action"),item=message.item,actor=null!==(_b=null==item?void 0:item.actor)&&void 0!==_b?_b:message.actor;if(!actor)return;if(!game.user.isGM&&!actor.isOwner&&"save"!==action)return;const strikeAction=message._strike;if(strikeAction&&(null==action?void 0:action.startsWith("strike-"))){const context=message.flags.pf2e.context,altUsage=context&&"damage-roll"!==context.type?null==context?void 0:context.altUsage:null,options=actor.getRollOptions(["all","attack-roll"]);switch((0,_util_1.sluggify)(null!=action?action:"")){case"strike-attack":return void strikeAction.variants[0].roll({event,altUsage,options});case"strike-attack2":return void strikeAction.variants[1].roll({event,altUsage,options});case"strike-attack3":return void strikeAction.variants[2].roll({event,altUsage,options});case"strike-damage":return void(null===(_c=strikeAction.damage)||void 0===_c||_c.call(strikeAction,{event,altUsage,options}));case"strike-critical":return void(null===(_d=strikeAction.critical)||void 0===_d||_d.call(strikeAction,{event,altUsage,options}))}}if(item){const spell=item.isOfType("spell")?item:item.isOfType("consumable")?item.embeddedSpell:null;if("spellAttack"===action)null==spell||spell.rollAttack(event);else if("spellAttack2"===action)null==spell||spell.rollAttack(event,2);else if("spellAttack3"===action)null==spell||spell.rollAttack(event,3);else if("spellDamage"===action)null==spell||spell.rollDamage(event);else if("spellCounteract"===action)null==spell||spell.rollCounteract(event);else if("spellTemplate"===action)null==spell||spell.placeTemplate();else if("selectVariant"===action){const castLevel=Number(null===(_e=$html[0].querySelector("div.chat-card"))||void 0===_e?void 0:_e.dataset.castLevel)||1,overlayIdString=$button.attr("data-overlay-ids"),originalId=null!==(_f=$button.attr("data-original-id"))&&void 0!==_f?_f:"";if(overlayIdString){const overlayIds=overlayIdString.split(",").map((id=>id.trim())),variantSpell=null==spell?void 0:spell.loadVariant({overlayIds,castLevel});if(variantSpell){const variantMessage=await variantSpell.toMessage(void 0,{create:!1,data:{castLevel}});if(variantMessage){const messageSource=variantMessage.toObject();await message.update(messageSource)}}}else if(originalId){const originalSpell=actor.items.get(originalId,{strict:!0}),originalMessage=await originalSpell.toMessage(void 0,{create:!1,data:{castLevel}});originalMessage&&await message.update(originalMessage.toObject())}}else if("consume"===action){if(item.isOfType("consumable"))item.consume();else if(item.isOfType("melee")){const consumable=actor.items.get(null!==(_g=$button.attr("data-item"))&&void 0!==_g?_g:"");if(null==consumable?void 0:consumable.isOfType("consumable")){const oldQuant=consumable.quantity,toReplace=`${consumable.name} - ${localize_1.LocalizePF2e.translations.ITEM.TypeConsumable} (${oldQuant})`;await consumable.consume();const currentQuant=1===oldQuant?0:consumable.quantity;let flavor=message.flavor.replace(toReplace,`${consumable.name} - ${localize_1.LocalizePF2e.translations.ITEM.TypeConsumable} (${currentQuant})`);if(0===currentQuant){const buttonStr=`>${localize_1.LocalizePF2e.translations.PF2E.ConsumableUseLabel}</button>`;flavor=null==flavor?void 0:flavor.replace(buttonStr," disabled"+buttonStr)}await message.update({flavor}),message.render(!0)}}}else"save"===action&&exports.ChatCards.rollActorSaves({event,actor,item})}else if(actor.isOfType("character","npc"))if("repair-item"===action)await(0,repair_1.onRepairChatCardEvent)(event,message,$card);else if("pay-crafting-costs"===action){const itemUuid=$card.attr("data-item-uuid")||"",item=await fromUuid(itemUuid);if(!(item instanceof _item_1.PhysicalItemPF2e))return;const quantity=Number($card.attr("data-crafting-quantity"))||1,craftingCost=helpers_2.CoinsPF2e.fromPrice(item.price,quantity),coinsToRemove=$button.hasClass("full")?craftingCost:craftingCost.scale(.5);if(!await actor.inventory.removeCoins(coinsToRemove))return void ui.notifications.warn(game.i18n.localize("PF2E.Actions.Craft.Warning.InsufficientCoins"));if((0,spell_consumables_1.isSpellConsumable)(item.id)&&item.isOfType("consumable"))return(0,helpers_1.craftSpellConsumable)(item,quantity,actor),void __1.ChatMessagePF2e.create({user:game.user.id,content:game.i18n.format("PF2E.Actions.Craft.Information.PayAndReceive",{actorName:actor.name,cost:coinsToRemove.toString(),quantity,itemName:item.name}),speaker:{alias:actor.name}});const itemObject=item.toObject();itemObject.system.quantity=quantity;if(!await actor.addToInventory(itemObject,void 0))return void ui.notifications.warn(game.i18n.localize("PF2E.Actions.Craft.Warning.CantAddItem"));__1.ChatMessagePF2e.create({user:game.user.id,content:game.i18n.format("PF2E.Actions.Craft.Information.LoseMaterials",{actorName:actor.name,cost:coinsToRemove.toString(),quantity,itemName:item.name}),speaker:{alias:actor.name}})}else if("lose-materials"===action){const itemUuid=$card.attr("data-item-uuid")||"",item=await fromUuid(itemUuid);if(!(item instanceof _item_1.PhysicalItemPF2e))return;const quantity=Number($card.attr("data-crafting-quantity"))||1,coinsToRemove=helpers_2.CoinsPF2e.fromPrice(item.price,quantity).scale(.5).scale(.1);await actor.inventory.removeCoins(coinsToRemove)?__1.ChatMessagePF2e.create({user:game.user.id,content:game.i18n.format("PF2E.Actions.Craft.Information.PayAndReceive",{actorName:actor.name,cost:coinsToRemove.toString()}),speaker:{alias:actor.name}}):ui.notifications.warn(game.i18n.localize("PF2E.Actions.Craft.Warning.InsufficientCoins"))}else if("receieve-crafting-item"===action){const itemUuid=$card.attr("data-item-uuid")||"",item=await fromUuid(itemUuid);if(!(item instanceof _item_1.PhysicalItemPF2e))return;const quantity=Number($card.attr("data-crafting-quantity"))||1;return void((0,spell_consumables_1.isSpellConsumable)(item.id)&&item.isOfType("consumable")?await(0,helpers_1.craftSpellConsumable)(item,quantity,actor):await(0,helpers_1.craftItem)(item,quantity,actor))}}))},rollActorSaves:async({event,actor,item})=>{var _a,_b,_c,_d,_e;if(canvas.tokens.controlled.length>0){const saveType=event.currentTarget.dataset.save;if(!(0,_util_1.tupleHasValue)(values_1.SAVE_TYPES,saveType))throw(0,_util_1.ErrorPF2e)(`"${saveType}" is not a recognized save type`);const dc=Number(null!==(_a=event.currentTarget.dataset.dc)&&void 0!==_a?_a:"NaN"),itemTraits=null!==(_c=null===(_b=item.system.traits)||void 0===_b?void 0:_b.value)&&void 0!==_c?_c:[];for(const t of canvas.tokens.controlled){const save=null===(_e=null===(_d=t.actor)||void 0===_d?void 0:_d.saves)||void 0===_e?void 0:_e[saveType];if(!save)return;const rollOptions=[];item.isOfType("spell")&&(rollOptions.push("magical","spell"),Object.keys(item.system.damage.value).length>0&&rollOptions.push("damaging-effect")),rollOptions.push(...itemTraits),save.check.roll({...(0,sheet_util_1.eventToRollParams)(event),dc:Number.isInteger(dc)?{value:Number(dc)}:null,item,origin:actor,extraRollOptions:rollOptions})}}else ui.notifications.error(game.i18n.localize("PF2E.UI.errorTargetToken"))}}},67545:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.DamageButtons=void 0;const localize_1=__webpack_require__(41332);async function applyDamage(message,multiplier,adjustment=0,promptModifier=!1){var _a;if(promptModifier)return function(message,multiplier){new Dialog({title:game.i18n.localize("PF2E.UI.shiftModifyDamageTitle"),content:`<form>\n                <div class="form-group">\n                    <label>${game.i18n.localize("PF2E.UI.shiftModifyDamageLabel")}</label>\n                    <input type="number" name="modifier" value="" placeholder="0">\n                </div>\n                </form>\n                <script type="text/javascript">\n                $(function () {\n                    $(".form-group input").focus();\n                });\n                <\/script>`,buttons:{ok:{label:"Ok",callback:async $dialog=>{const adjustment=(Number($dialog.find('[name="modifier"]').val())||0)*Math.sign(multiplier);applyDamage(message,multiplier,adjustment)}}},default:"ok",close:()=>{toggleOffShieldBlock(message.id)}}).render(!0)}(message,multiplier);const tokens=canvas.tokens.controlled.filter((token=>!!token.actor));if(0===tokens.length){const errorMsg=localize_1.LocalizePF2e.translations.PF2E.UI.errorTargetToken;return void ui.notifications.error(errorMsg)}const shieldBlockRequest=CONFIG.PF2E.chatDamageButtonShieldToggle,damage=message.rolls[0].total*multiplier+adjustment;for(const token of tokens)await(null===(_a=token.actor)||void 0===_a?void 0:_a.applyDamage(damage,token.document,shieldBlockRequest));toggleOffShieldBlock(message.id)}function toggleOffShieldBlock(messageId){$(`#chat-log > li.chat-message[data-message-id="${messageId}"]`).find("button.shield-block").removeClass("shield-activated"),CONFIG.PF2E.chatDamageButtonShieldToggle=!1}exports.DamageButtons={append:async(message,html)=>{const $buttons=$(await renderTemplate("systems/pf2e/templates/chat/damage/buttons.html",{showTripleDamage:game.settings.get("pf2e","critFumbleButtons")}));html.find(".message-content").append($buttons);const full=html.find("button.full-damage"),half=html.find("button.half-damage"),double=html.find("button.double-damage"),triple=html.find("button.triple-damage"),heal=html.find("button.heal-damage"),contentSelector=`li.chat-message[data-message-id="${message.id}"] div.hover-content`,$shield=html.find("button.shield-block").attr({"data-tooltip-content":contentSelector}).tooltipster({animation:"fade",trigger:"click",arrow:!1,contentAsHTML:!0,debug:!1,interactive:!0,side:["top"],theme:"crb-hover"});$shield.tooltipster("disable"),html.find("button.shield-block").attr({title:localize_1.LocalizePF2e.translations.PF2E.DamageButton.ShieldBlock}),full.on("click",(event=>{applyDamage(message,1,0,event.shiftKey)})),half.on("click",(event=>{applyDamage(message,.5,0,event.shiftKey)})),double.on("click",(event=>{applyDamage(message,2,0,event.shiftKey)})),null==triple||triple.on("click",(event=>{applyDamage(message,3,0,event.shiftKey)})),$shield.on("click",(async event=>{const tokens=canvas.tokens.controlled.filter((token=>token.actor));if(0===tokens.length){const errorMsg=localize_1.LocalizePF2e.translations.PF2E.UI.errorTargetToken;return ui.notifications.error(errorMsg),void event.stopPropagation()}const nonBrokenShields=tokens[0].actor.itemTypes.armor.filter((armor=>armor.isEquipped&&armor.isShield)).filter((shield=>!shield.isBroken)),multipleShields=1===tokens.length&&nonBrokenShields.length>1,shieldActivated=$shield.hasClass("shield-activated");if(multipleShields&&!shieldActivated){$shield.tooltipster("enable");const $list=$buttons.find("ul.shield-options");$list.children("li").remove();const $template=$list.children("template");for(const shield of nonBrokenShields){const $listItem=$($template.html());$listItem.children("input.data").val(shield.id),$listItem.children("span.label").text(shield.name);const hardnessLabel=localize_1.LocalizePF2e.translations.PF2E.ShieldHardnessLabel;$listItem.children("span.tag").text(`${hardnessLabel}: ${shield.hardness}`),$list.append($listItem)}return $list.find("li input").on("change",(event=>{const $input=$(event.currentTarget);$shield.attr({"data-shield-id":$input.val()}),$shield.tooltipster("close").tooltipster("disable"),$shield.addClass("shield-activated"),CONFIG.PF2E.chatDamageButtonShieldToggle=!0})),void $shield.tooltipster("open")}$shield.tooltipster("disable"),$shield.removeAttr("data-shield-id"),event.stopPropagation(),$shield.toggleClass("shield-activated"),CONFIG.PF2E.chatDamageButtonShieldToggle=!CONFIG.PF2E.chatDamageButtonShieldToggle})),heal.on("click",(event=>{applyDamage(message,-1,0,event.shiftKey)}))}}},7066:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.DegreeOfSuccessHighlights=void 0,exports.DegreeOfSuccessHighlights={listen:(message,$html)=>{var _a;if($html.find(".pf2e-reroll-indicator").length>0)return;const firstRoll=message.rolls.at(0);if(!firstRoll||message.isDamageRoll)return;const dice=null!==(_a=firstRoll.dice[0])&&void 0!==_a?_a:{};if(20!==dice.faces||!message.isContentVisible)return;const $diceTotal=$html.find(".dice-total");20===dice.total?$diceTotal.addClass("success"):1===dice.total&&$diceTotal.addClass("failure")}}},938:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.SetAsInitiative=void 0,exports.SetAsInitiative={listen:$li=>{var _a;const message=game.messages.get(null!==(_a=$li.attr("data-message-id"))&&void 0!==_a?_a:"",{strict:!0}),{context}=message.flags.pf2e;if(message.token&&(message.isAuthor||game.user.isGM)&&("skill-check"===(null==context?void 0:context.type)||"perception-check"===(null==context?void 0:context.type))){const btnStyling="width: 22px; height:22px; font-size:10px;line-height:1px",initiativeButtonTitle=game.i18n.localize("PF2E.ClickToSetInitiative"),setInitiativeButton=$(`<button class="dice-total-setInitiative-btn" style="${btnStyling}"><i class="fa-solid fa-swords" title="${initiativeButtonTitle}"></i></button>`),btnContainer=$('<span class="dmgBtn-container" style="position:absolute; right:0; bottom:1px;"></span>');btnContainer.append(setInitiativeButton);$li.find(".dice-total").append(btnContainer),setInitiativeButton.on("click",(()=>{var _a,_b,_c;null===(_a=message.token)||void 0===_a||_a.setInitiative({initiative:null!==(_c=null===(_b=message.rolls.at(0))||void 0===_b?void 0:_b.total)&&void 0!==_c?_c:0})}))}}}},44642:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.ActorsPF2e=void 0;const _actor_1=__webpack_require__(85530);class ActorsPF2e extends Actors{fromCompendium(actor,options){const defaultToken=game.settings.get("core","defaultToken");return delete defaultToken.disposition,actor instanceof _actor_1.ActorPF2e?super.fromCompendium(actor.clone({prototypeToken:defaultToken},{keepId:!0}),options):super.fromCompendium(mergeObject(actor,{token:defaultToken},{inplace:!1}),options)}async importFromCompendium(pack,actorId,updateData,options){const actor=await super.importFromCompendium(pack,actorId,updateData,options);if(!actor)return actor;const defaultToken=game.settings.get("core","defaultToken");return delete defaultToken.disposition,actor.clone({prototypeToken:defaultToken},{keepId:!0})}}exports.ActorsPF2e=ActorsPF2e},52769:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.goesToEleven=exports.SIZE_SLUGS=exports.SIZES=exports.RARITIES=exports.MATH_FUNCTION_NAMES=exports.PROFICIENCY_RANKS=void 0;exports.SIZES=["tiny","sm","med","lg","huge","grg"];exports.SIZE_SLUGS=["tiny","small","medium","large","huge","gargantuan"];exports.RARITIES=["common","uncommon","rare","unique"],exports.goesToEleven=function(value){return value>=0&&value<=11},exports.PROFICIENCY_RANKS=["untrained","trained","expert","master","legendary"],exports.MATH_FUNCTION_NAMES=new Set(["abs","acos","acosh","asin","asinh","atan","atan2","atanh","cbrt","ceil","clamped","clz32","cos","cosh","exp","expm1","floor","fround","hypot","imul","log","log10","log1p","log2","max","min","normalizeDegrees","normalizeRadians","pow","random","round","roundDecimals","safeEval","sign","sin","sinh","sqrt","tan","tanh","toDegrees","toRadians","trunc"])},84372:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.createDifficultyScale=exports.combineDCAdjustments=exports.calculateSpellDC=exports.calculateSimpleDC=exports.calculateDC=exports.adjustDCByRarity=exports.adjustDC=exports.rarityToDCAdjustment=void 0;const adjustmentScale=["incredibly easy","very easy","easy","normal","hard","very hard","incredibly hard"],dcAdjustments=new Map;dcAdjustments.set("incredibly easy",-10),dcAdjustments.set("very easy",-5),dcAdjustments.set("easy",-2),dcAdjustments.set("normal",0),dcAdjustments.set("hard",2),dcAdjustments.set("very hard",5),dcAdjustments.set("incredibly hard",10);const dcByLevel=new Map;dcByLevel.set(-1,13),dcByLevel.set(0,14),dcByLevel.set(1,15),dcByLevel.set(2,16),dcByLevel.set(3,18),dcByLevel.set(4,19),dcByLevel.set(5,20),dcByLevel.set(6,22),dcByLevel.set(7,23),dcByLevel.set(8,24),dcByLevel.set(9,26),dcByLevel.set(10,27),dcByLevel.set(11,28),dcByLevel.set(12,30),dcByLevel.set(13,31),dcByLevel.set(14,32),dcByLevel.set(15,34),dcByLevel.set(16,35),dcByLevel.set(17,36),dcByLevel.set(18,38),dcByLevel.set(19,39),dcByLevel.set(20,40),dcByLevel.set(21,42),dcByLevel.set(22,44),dcByLevel.set(23,46),dcByLevel.set(24,48),dcByLevel.set(25,50);const simpleDCs=new Map;simpleDCs.set("untrained",10),simpleDCs.set("trained",15),simpleDCs.set("expert",20),simpleDCs.set("master",30),simpleDCs.set("legendary",40);const simpleDCsWithoutLevel=new Map;function rarityToDCAdjustment(rarity="common"){return"uncommon"===rarity?"hard":"rare"===rarity?"very hard":"unique"===rarity?"incredibly hard":"normal"}function adjustDC(dc,adjustment="normal"){var _a;return dc+(null!==(_a=dcAdjustments.get(adjustment))&&void 0!==_a?_a:0)}function adjustDCByRarity(dc,rarity="common"){return adjustDC(dc,rarityToDCAdjustment(rarity))}function calculateDC(level,{proficiencyWithoutLevel=!1,rarity="common"}={}){var _a;const dc=null!==(_a=dcByLevel.get(level))&&void 0!==_a?_a:14;return adjustDCByRarity(proficiencyWithoutLevel?dc-Math.max(level,0):dc,rarity)}simpleDCsWithoutLevel.set("untrained",10),simpleDCsWithoutLevel.set("trained",15),simpleDCsWithoutLevel.set("expert",20),simpleDCsWithoutLevel.set("master",25),simpleDCsWithoutLevel.set("legendary",30),exports.rarityToDCAdjustment=rarityToDCAdjustment,exports.adjustDC=adjustDC,exports.adjustDCByRarity=adjustDCByRarity,exports.calculateDC=calculateDC,exports.calculateSimpleDC=function(rank,{proficiencyWithoutLevel=!1}={}){var _a,_b;return proficiencyWithoutLevel?null!==(_a=simpleDCsWithoutLevel.get(rank))&&void 0!==_a?_a:10:null!==(_b=simpleDCs.get(rank))&&void 0!==_b?_b:10},exports.calculateSpellDC=function(spellLevel,{proficiencyWithoutLevel=!1}={}){return calculateDC(2*spellLevel-1,{proficiencyWithoutLevel})},exports.combineDCAdjustments=function(first,second){const startingIndex=adjustmentScale.indexOf(first),lowerByIndex=adjustmentScale.indexOf(second),resultIndex=Math.min(Math.max(startingIndex+lowerByIndex-3,0),6);return adjustmentScale[resultIndex]},exports.createDifficultyScale=function(dc,startAt){const beginAtIndex=adjustmentScale.indexOf(startAt);return adjustmentScale.filter(((_value,index)=>index>=beginAtIndex)).map((value=>adjustDC(dc,value)))}},77613:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.preImportJSON=void 0;const _actor_1=__webpack_require__(85530),_item_1=__webpack_require__(10843),_util_1=__webpack_require__(6945),migration_1=__webpack_require__(63051),base_1=__webpack_require__(27981);exports.preImportJSON=async function(document,json){var _a,_b;const source=JSON.parse(json);if(!(0,_util_1.isObject)(source))return null;if("data"in source&&("items"in source?_actor_1.ActorPF2e.migrateData(source):_item_1.ItemPF2e.migrateData(source)),!(0,_util_1.isObject)(source.system))return null;const sourceSchemaVersion=Number(null===(_b=null===(_a=source.system)||void 0===_a?void 0:_a.schema)||void 0===_b?void 0:_b.version)||0,worldSchemaVersion=base_1.MigrationRunnerBase.LATEST_SCHEMA_VERSION;if(foundry.utils.isNewerVersion(sourceSchemaVersion,worldSchemaVersion))return ui.notifications.error(game.i18n.format("PF2E.ErrorMessage.CantImportTooHighVersion",{sourceName:game.i18n.localize("DOCUMENT.Actor"),sourceSchemaVersion,worldSchemaVersion})),null;const newDoc=new document.constructor(source,{parent:document.parent}),migrations=migration_1.MigrationList.constructFromVersion(newDoc.schemaVersion);return await migration_1.MigrationRunner.ensureSchemaVersion(newDoc,migrations),JSON.stringify(newDoc.toObject())}},87571:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.CombatantPF2e=void 0;const _util_1=__webpack_require__(6945);class CombatantPF2e extends Combatant{get encounter(){return this.parent}get roundOfLastTurn(){return this.flags.pf2e.roundOfLastTurn}get playersCanSeeName(){var _a;return!!(null===(_a=this.token)||void 0===_a?void 0:_a.playersCanSeeName)}overridePriority(initiative){var _a;return null!==(_a=this.flags.pf2e.overridePriority[initiative])&&void 0!==_a?_a:null}hasHigherInitiative({than}){if(this.parent.id!==than.parent.id)throw(0,_util_1.ErrorPF2e)("The initiative of Combatants from different combats cannot be compared");return this.parent.getCombatantWithHigherInit(this,than)===this}prepareBaseData(){var _a,_b,_c;super.prepareBaseData(),this.flags.pf2e=mergeObject(null!==(_a=this.flags.pf2e)&&void 0!==_a?_a:{},{overridePriority:{}}),null!==(_b=(_c=this.flags.pf2e).roundOfLastTurn)&&void 0!==_b||(_c.roundOfLastTurn=null)}async toggleDefeated(){var _a,_b,_c;await this.update({defeated:!this.defeated}),await(null===(_a=this.token)||void 0===_a?void 0:_a.object.toggleEffect(game.settings.get("pf2e","deathIcon"),{overlay:!0})),this.isDefeated&&(null===(_c=null===(_b=this.token)||void 0===_b?void 0:_b.object)||void 0===_c?void 0:_c.isTargeted)&&this.token.object.setTarget(!1,{releaseOthers:!1})}updateResource(){return this.isNPC&&!game.user.isGM?this.resource=null:super.updateResource()}_getInitiativeFormula(){var _a;const{actor}=this;if(!actor)return"1d20";let bonus=0;actor.isOfType("hazard")?bonus=null!==(_a=actor.attributes.stealth.value)&&void 0!==_a?_a:0:"initiative"in actor.attributes&&"totalModifier"in actor.attributes.initiative?bonus=actor.attributes.initiative.totalModifier:"perception"in actor.attributes&&(bonus=actor.attributes.perception.value);return["1d20",bonus||0].join("+")}async toggleNameVisibility(){if(!this.token)return;const currentVisibility=this.token.displayName,visibilityToggles={[CONST.TOKEN_DISPLAY_MODES.ALWAYS]:CONST.TOKEN_DISPLAY_MODES.OWNER,[CONST.TOKEN_DISPLAY_MODES.CONTROL]:CONST.TOKEN_DISPLAY_MODES.HOVER,[CONST.TOKEN_DISPLAY_MODES.HOVER]:CONST.TOKEN_DISPLAY_MODES.OWNER_HOVER,[CONST.TOKEN_DISPLAY_MODES.NONE]:CONST.TOKEN_DISPLAY_MODES.HOVER,[CONST.TOKEN_DISPLAY_MODES.OWNER]:CONST.TOKEN_DISPLAY_MODES.ALWAYS,[CONST.TOKEN_DISPLAY_MODES.OWNER_HOVER]:CONST.TOKEN_DISPLAY_MODES.HOVER};await this.token.update({displayName:visibilityToggles[currentVisibility]})}_onUpdate(changed,options,userId){var _a,_b,_c;if(super._onUpdate(changed,options,userId),changed.defeated&&game.user.id===userId)for(const action of null!==(_b=null===(_a=this.actor)||void 0===_a?void 0:_a.itemTypes.action)&&void 0!==_b?_b:[])action.system.deathNote&&action.toMessage(void 0,{rollMode:(null===(_c=this.actor)||void 0===_c?void 0:_c.hasPlayerOwner)?"publicroll":"gmroll"})}}exports.CombatantPF2e=CombatantPF2e},48037:function(__unused_webpack_module,exports,__webpack_require__){var _EncounterPF2e_instances,_EncounterPF2e_resetActorAndSceneData,__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.EncounterPF2e=void 0;const sheet_1=__webpack_require__(39481),helpers_1=__webpack_require__(89503),values_1=__webpack_require__(8382),localize_1=__webpack_require__(41332);class EncounterPF2e extends Combat{constructor(){super(...arguments),_EncounterPF2e_instances.add(this)}_sortCombatants(a,b){return"number"==typeof a.initiative&&"number"==typeof b.initiative&&a.initiative===b.initiative?(()=>{const[priorityA,priorityB]=[a,b].map((combatant=>{var _a,_b;return null!==(_b=combatant.overridePriority(null!==(_a=combatant.initiative)&&void 0!==_a?_a:0))&&void 0!==_b?_b:combatant.actor&&"initiative"in combatant.actor.system.attributes?combatant.actor.system.attributes.initiative.tiebreakPriority:3}));return priorityA===priorityB?a.id.localeCompare(b.id):priorityA-priorityB})():super._sortCombatants(a,b)}getCombatantWithHigherInit(a,b){const sortResult=this._sortCombatants(a,b);return sortResult>0?b:sortResult<0?a:null}async createEmbeddedDocuments(embeddedName,data,context={}){const createData=data.filter((datum=>{const token=canvas.tokens.placeables.find((canvasToken=>canvasToken.id===datum.tokenId));if(!token)return!1;const{actor}=token;if(!actor)return ui.notifications.warn(`${token.name} has no associated actor.`),!1;const actorTraits=actor.traits;if("loot"===actor.type||["minion","eidolon"].some((t=>actorTraits.has(t)))){const translation=localize_1.LocalizePF2e.translations.PF2E.Encounter.ExcludingFromInitiative,actorTypes=CONFIG.PF2E.actorTypes,type=game.i18n.localize(actorTraits.has("minion")?CONFIG.PF2E.creatureTraits.minion:actorTraits.has("eidolon")?CONFIG.PF2E.creatureTraits.eidolon:actorTypes[actor.type]);return ui.notifications.info(game.i18n.format(translation,{type,actor:actor.name})),!1}return!0}));return super.createEmbeddedDocuments(embeddedName,createData,context)}async nextTurn(){var _a,_b;return Hooks.call("pf2e.endTurn",null!==(_a=this.combatant)&&void 0!==_a?_a:null,this,game.user.id),await super.nextTurn(),Hooks.call("pf2e.startTurn",null!==(_b=this.combatant)&&void 0!==_b?_b:null,this,game.user.id),this}async rollInitiative(ids,options={}){const fightyCombatants=ids.flatMap((id=>{var _a;return null!==(_a=this.combatants.get(id))&&void 0!==_a?_a:[]})).filter((c=>{var _a;return!!(null===(_a=c.actor)||void 0===_a?void 0:_a.isOfType("character","npc"))})),initiatives=(await Promise.all(fightyCombatants.map((combatant=>{var _a;const checkType=combatant.actor.system.attributes.initiative.ability,skills=values_1.SKILL_DICTIONARY,rollOptions=combatant.actor.getRollOptions(["all","initiative",null!==(_a=skills[checkType])&&void 0!==_a?_a:checkType]);return options.secret&&rollOptions.push("secret"),combatant.actor.system.attributes.initiative.roll({options:rollOptions,updateTracker:!1,skipDialog:!!options.skipDialog})})))).flatMap((result=>result?{id:result.combatant.id,value:result.roll.total}:[]));this.setMultipleInitiatives(initiatives);const remainingIds=ids.filter((id=>!fightyCombatants.some((c=>c.id===id))));return super.rollInitiative(remainingIds,options)}async setMultipleInitiatives(initiatives){var _a;const currentId=null===(_a=this.combatant)||void 0===_a?void 0:_a.id,updates=initiatives.map((i=>({_id:i.id,initiative:i.value,flags:{pf2e:{overridePriority:{[i.value]:i.overridePriority}}}})));await this.updateEmbeddedDocuments("Combatant",updates),await this.update({turn:this.turns.findIndex((c=>c.id===currentId))})}_onCreate(data,options,userId){super._onCreate(data,options,userId);const pcSheets=Object.values(ui.windows).filter((sheet=>sheet instanceof sheet_1.CharacterSheetPF2e));for(const sheet of pcSheets)sheet.enableInitiativeButton()}_onUpdate(changed,options,userId){super._onUpdate(changed,options,userId),game.pf2e.StatusEffects.onUpdateEncounter(this);const combatant=this.combatant,actor=null==combatant?void 0:combatant.actor,noActor=!combatant||!actor||!this.started,alreadyWent=(null==combatant?void 0:combatant.roundOfLastTurn)===this.round,{previous}=this,isNextRound="number"==typeof changed.round&&(null===previous.round||changed.round>previous.round),isNextTurn="number"==typeof changed.turn&&(null===previous.turn||changed.turn>previous.turn);game.user===(null==actor?void 0:actor.primaryUpdater)&&Promise.resolve().then((async()=>{var _a;if(isNextRound||isNextTurn){if(!noActor&&!alreadyWent){const actorUpdates={};for(const rule of actor.rules)await(null===(_a=rule.onTurnStart)||void 0===_a?void 0:_a.call(rule,actorUpdates));await combatant.update({"flags.pf2e.roundOfLastTurn":this.round}),Object.keys(actorUpdates).length>0&&await actor.update(actorUpdates,{render:!1})}__classPrivateFieldGet(this,_EncounterPF2e_instances,"m",_EncounterPF2e_resetActorAndSceneData).call(this),await game.pf2e.effectTracker.refresh(),game.pf2e.effectPanel.refresh()}}))}_onDelete(options,userId){var _a;if(super._onDelete(options,userId),this.started&&(Hooks.call("pf2e.endTurn",null!==(_a=this.combatant)&&void 0!==_a?_a:null,this,userId),game.pf2e.effectTracker.onEncounterEnd(this)),!game.combat){const pcSheets=Object.values(ui.windows).filter((sheet=>sheet instanceof sheet_1.CharacterSheetPF2e));for(const sheet of pcSheets)sheet.disableInitiativeButton()}game.user.clearTargets(),__classPrivateFieldGet(this,_EncounterPF2e_instances,"m",_EncounterPF2e_resetActorAndSceneData).call(this)}}exports.EncounterPF2e=EncounterPF2e,_EncounterPF2e_instances=new WeakSet,_EncounterPF2e_resetActorAndSceneData=function(){const actors=this.combatants.contents.flatMap((c=>{var _a;return null!==(_a=c.actor)&&void 0!==_a?_a:[]}));(0,helpers_1.resetAndRerenderActors)(actors)}},49938:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.RolledCombatant=exports.CombatantPF2e=exports.EncounterPF2e=void 0;var document_1=__webpack_require__(48037);Object.defineProperty(exports,"EncounterPF2e",{enumerable:!0,get:function(){return document_1.EncounterPF2e}});var combatant_1=__webpack_require__(87571);Object.defineProperty(exports,"CombatantPF2e",{enumerable:!0,get:function(){return combatant_1.CombatantPF2e}}),Object.defineProperty(exports,"RolledCombatant",{enumerable:!0,get:function(){return combatant_1.RolledCombatant}})},76328:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.ABCItemPF2e=void 0;const _item_1=__webpack_require__(10843),migration_1=__webpack_require__(63051),_util_1=__webpack_require__(6945),from_uuids_1=__webpack_require__(16539);class ABCItemPF2e extends _item_1.ItemPF2e{getLinkedFeatures(){if(!this.actor||!(0,_util_1.tupleHasValue)(["ancestry","background","class"],this.type))return[];const existingABCIds=this.actor.itemTypes[this.type].map((i=>i.id));return this.actor.itemTypes.feat.filter((f=>{var _a;return existingABCIds.includes(null!==(_a=f.system.location)&&void 0!==_a?_a:"")}))}logAutoChange(path,value){0!==value&&(this.actor.system.autoChanges[path]=[{mode:"upgrade",level:1,value,source:this.name}])}async getFeatures(options={}){const entries=Object.values(this.system.items);if(!entries.filter((entry=>!!entry.uuid)).length)return[];const items=(await(0,from_uuids_1.fromUUIDs)(entries.map((e=>e.uuid)))).map((i=>i.clone()));for(const item of items)item instanceof _item_1.ItemPF2e&&await migration_1.MigrationRunner.ensureSchemaVersion(item,migration_1.MigrationList.constructFromVersion(item.schemaVersion));return items.flatMap((item=>{var _a,_b;if(item instanceof _item_1.FeatPF2e){if("classfeature"===item.featType){const level=null!==(_b=null===(_a=entries.find((e=>item.sourceId===e.uuid)))||void 0===_a?void 0:_a.level)&&void 0!==_b?_b:item.level;item.updateSource({"system.level.value":level})}if(void 0!==options.level&&options.level<item.level)return[];const featSource=item.toObject();return featSource._id=randomID(16),featSource.system.location=this.id,featSource}return console.error("PF2e System | Missing or invalid ABC item"),[]}))}}exports.ABCItemPF2e=ABCItemPF2e},30301:function(__unused_webpack_module,exports,__webpack_require__){var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k);var desc=Object.getOwnPropertyDescriptor(m,k);desc&&!("get"in desc?!m.__esModule:desc.writable||desc.configurable)||(desc={enumerable:!0,get:function(){return m[k]}}),Object.defineProperty(o,k2,desc)}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)"default"===p||Object.prototype.hasOwnProperty.call(exports,p)||__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.ABCItemPF2e=void 0;var document_1=__webpack_require__(76328);Object.defineProperty(exports,"ABCItemPF2e",{enumerable:!0,get:function(){return document_1.ABCItemPF2e}}),__exportStar(__webpack_require__(88297),exports),__exportStar(__webpack_require__(44996),exports)},88297:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.AncestryBackgroundClassManager=void 0;const _util_1=__webpack_require__(6945),migration_1=__webpack_require__(63051);exports.AncestryBackgroundClassManager=class AncestryBackgroundClassManager{static async addABCItem(item,actor){var _a,_b,_c,_d,_e,_f;await migration_1.MigrationRunner.ensureSchemaVersion(item,migration_1.MigrationList.constructFromVersion(item.schemaVersion));const source=item.toObject();switch(source.type){case"ancestry":await(null===(_a=actor.ancestry)||void 0===_a?void 0:_a.delete({render:!1}));break;case"background":await(null===(_b=actor.background)||void 0===_b?void 0:_b.delete({render:!1}));break;case"class":{await(null===(_c=actor.class)||void 0===_c?void 0:_c.delete({render:!1}));const slug=null!==(_d=source.system.slug)&&void 0!==_d?_d:(0,_util_1.sluggify)(source.name);actor.rollOptions.all[`class:${slug}`]=!0,null!==(_e=(_f=source.flags).pf2e)&&void 0!==_e||(_f.pf2e={}),source.flags.pf2e.insertedClassFeaturesLevel=actor.level;break}}source._id=randomID(16);const itemsToCreate=[source,...await item.getFeatures({level:actor.level})];return actor.createEmbeddedDocuments("Item",itemsToCreate,{keepId:!0})}}},44996:function(__unused_webpack_module,exports,__webpack_require__){var _ABCSheetPF2e_instances,_ABCSheetPF2e_isValidDrop,__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.ABCSheetPF2e=void 0;const _item_1=__webpack_require__(10843),localize_1=__webpack_require__(41332),base_1=__webpack_require__(22222);class ABCSheetPF2e extends base_1.ItemSheetPF2e{constructor(){super(...arguments),_ABCSheetPF2e_instances.add(this)}static get defaultOptions(){return{...super.defaultOptions,scrollY:[".item-details"],dragDrop:[{dropSelector:".item-details"}]}}async getData(options){const itemType=this.item.type,sheetData=await super.getData(options),features=Object.entries(this.item.toObject().system.items).map((([key,ref])=>({key,item:{...ref,fromWorld:ref.uuid.startsWith("Item.")}}))).sort(((a,b)=>a.item.level-b.item.level));return{...sheetData,hasSidebar:"ancestry"===itemType,sidebarTemplate:()=>`systems/pf2e/templates/items/${itemType}-sidebar.html`,hasDetails:!0,detailsTemplate:()=>`systems/pf2e/templates/items/${itemType}-details.html`,features}}getLocalizedAbilities(traits){return void 0!==traits&&traits.value?6===traits.value.length?{free:game.i18n.localize("PF2E.AbilityFree")}:Object.fromEntries(traits.value.map((x=>[x,CONFIG.PF2E.abilities[x]]))):{}}async _onDrop(event){var _a;event.preventDefault();const dataString=null===(_a=event.dataTransfer)||void 0===_a?void 0:_a.getData("text/plain"),dropData=JSON.parse(null!=dataString?dataString:""),item=await _item_1.ItemPF2e.fromDropData(dropData);if(!(null==item?void 0:item.isOfType("feat"))||!__classPrivateFieldGet(this,_ABCSheetPF2e_instances,"m",_ABCSheetPF2e_isValidDrop).call(this,event,item))return;const entry={uuid:item.uuid,img:item.img,name:item.name,level:item.level},items=this.item.system.items;let id;do{id=randomID(5)}while(items[id]);await this.item.update({[`system.items.${id}`]:entry})}removeItem(event){event.preventDefault();const target=$(event.target).parents("li"),containerId=target.parents("[data-container-id]").data("containerId");let path=`-=${target.data("index")}`;containerId&&(path=`${containerId}.items.${path}`),this.item.update({[`system.items.${path}`]:null})}activateListeners($html){super.activateListeners($html),$html.on("click","[data-action=remove]",(ev=>this.removeItem(ev)))}}exports.ABCSheetPF2e=ABCSheetPF2e,_ABCSheetPF2e_instances=new WeakSet,_ABCSheetPF2e_isValidDrop=function(event,feat){var _a,_b;const validFeatTypes=null!==(_b=null===(_a=$(event.target).closest(".abc-list").data("valid-drops"))||void 0===_a?void 0:_a.split(" "))&&void 0!==_b?_b:[];if(validFeatTypes.includes(feat.featType))return!0;const goodTypes=validFeatTypes.map((featType=>game.i18n.localize(CONFIG.PF2E.featTypes[featType])));if(1===goodTypes.length){const badType=game.i18n.localize(CONFIG.PF2E.featTypes[feat.featType]),warning=game.i18n.format(localize_1.LocalizePF2e.translations.PF2E.Item.ABC.InvalidDrop,{badType,goodType:goodTypes[0]});return ui.notifications.warn(warning),!1}return!0}},97345:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0})},50544:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.AbstractEffectPF2e=void 0;const _item_1=__webpack_require__(10843),_util_1=__webpack_require__(6945);class AbstractEffectPF2e extends _item_1.ItemPF2e{get unidentified(){return!1}prepareBaseData(){var _a;super.prepareBaseData();const slug=null!==(_a=this.slug)&&void 0!==_a?_a:(0,_util_1.sluggify)(this.name);this.rollOptionSlug=slug.replace(/^(?:[a-z]+-)?(?:effect|stance)-/,"")}prepareActorData(){const actor=this.actor;if(!actor)throw(0,_util_1.ErrorPF2e)("prepareActorData called from unembedded item");actor.rollOptions.all[`self:${this.type}:${this.rollOptionSlug}`]=!0;const badge=this.badge;if("number"==typeof(null==badge?void 0:badge.value)){const values=actor.items.filter((i=>i instanceof AbstractEffectPF2e&&i.rollOptionSlug===this.rollOptionSlug)).map((effect=>{var _a;return null===(_a=effect.badge)||void 0===_a?void 0:_a.value})).filter((value=>"number"==typeof value));badge.value>=Math.max(...values)&&(actor.rollOptions.all[`self:${this.type}:${this.rollOptionSlug}:${badge.value}`]=!0)}}}exports.AbstractEffectPF2e=AbstractEffectPF2e},654:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.EffectBadge=exports.AbstractEffectPF2e=void 0;var document_1=__webpack_require__(50544);Object.defineProperty(exports,"AbstractEffectPF2e",{enumerable:!0,get:function(){return document_1.AbstractEffectPF2e}});var data_1=__webpack_require__(97345);Object.defineProperty(exports,"EffectBadge",{enumerable:!0,get:function(){return data_1.EffectBadge}})},49249:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.ActionItemPF2e=void 0;const base_1=__webpack_require__(24227);class ActionItemPF2e extends base_1.ItemPF2e{get actionCost(){const actionType=this.system.actionType.value||"passive";return"passive"===actionType?null:{type:actionType,value:this.system.actions.value}}get frequency(){var _a;return null!==(_a=this.system.frequency)&&void 0!==_a?_a:null}prepareBaseData(){var _a,_b;super.prepareBaseData(),this.actor&&this.system.frequency&&(null!==(_a=(_b=this.system.frequency).value)&&void 0!==_a||(_b.value=this.system.frequency.max))}async getChatData(htmlOptions={}){const systemData=this.system,properties=[CONFIG.PF2E.actionTypes[systemData.actionType.value]].filter((property=>property)),traits=this.traitChatData(CONFIG.PF2E.featTraits);return this.processChatData(htmlOptions,{...systemData,properties,traits})}async _preCreate(data,options,user){return this.parent||this._source.system.frequency&&this.updateSource({"system.frequency.-=value":null}),super._preCreate(data,options,user)}async _preUpdate(changed,options,user){var _a;const actionCount=null===(_a=changed.system)||void 0===_a?void 0:_a.actions;actionCount&&(actionCount.value=Math.clamped(Number(actionCount.value),0,3)||null),await super._preUpdate(changed,options,user)}}exports.ActionItemPF2e=ActionItemPF2e},93390:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.ActionSheetPF2e=exports.ActionItemPF2e=void 0;var document_1=__webpack_require__(49249);Object.defineProperty(exports,"ActionItemPF2e",{enumerable:!0,get:function(){return document_1.ActionItemPF2e}});var sheet_1=__webpack_require__(71366);Object.defineProperty(exports,"ActionSheetPF2e",{enumerable:!0,get:function(){return sheet_1.ActionSheetPF2e}})},71366:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.ActionSheetPF2e=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(22222);class ActionSheetPF2e extends base_1.ItemSheetPF2e{async getData(options){const data=await super.getData(options);return data.item.img=(0,_util_1.getActionIcon)(this.item.actionCost),{...data,categories:CONFIG.PF2E.actionCategories,actionTypes:CONFIG.PF2E.actionTypes,actionsNumber:CONFIG.PF2E.actionsNumber,actionTraits:CONFIG.PF2E.actionTraits,frequencies:CONFIG.PF2E.frequencies,skills:CONFIG.PF2E.skillList,proficiencies:CONFIG.PF2E.proficiencyLevels}}activateListeners($html){super.activateListeners($html),$html.find("[data-action=frequency-add]").on("click",(()=>{const per=CONFIG.PF2E.frequencies.day;this.item.update({system:{frequency:{max:1,per}}})})),$html.find("[data-action=frequency-delete]").on("click",(()=>{this.item.update({"system.-=frequency":null})}))}}exports.ActionSheetPF2e=ActionSheetPF2e},32339:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.AncestryPF2e=void 0;const _actor_1=__webpack_require__(85530),_item_1=__webpack_require__(10843),_util_1=__webpack_require__(6945),sense_1=__webpack_require__(82280),values_1=__webpack_require__(49976);class AncestryPF2e extends _item_1.ABCItemPF2e{get traits(){return new Set(this.system.traits.value)}get hitPoints(){return this.system.hp}get speed(){return this.system.speed}get size(){return this.system.size}get lockedBoosts(){return Object.values(this.system.boosts).filter((boost=>1===boost.value.length)).map((boost=>boost.selected)).filter((boost=>!!boost))}getLinkedFeatures(){return this.actor?Array.from(new Set([...super.getLinkedFeatures(),...this.actor.itemTypes.feat.filter((f=>"ancestryfeature"===f.featType))])):[]}async toggleVoluntaryFlaw(){this._source.system.voluntary?await this.update({"system.-=voluntary":null}):await this.update({"system.voluntary":{boost:null,flaws:[]}})}prepareBaseData(){super.prepareBaseData();for(const boost of Object.values(this.system.boosts))1===boost.value.length&&(boost.selected=boost.value[0]);for(const flaw of Object.values(this.system.flaws))1===flaw.value.length&&(flaw.selected=flaw.value[0])}prepareActorData(){var _a,_b,_c;const{actor}=this;if(!(actor instanceof _actor_1.CharacterPF2e))return void console.error("PF2e System | Only a character can have an ancestry");actor.ancestry=this,actor.system.attributes.ancestryhp=this.hitPoints,this.logAutoChange("system.attributes.ancestryhp",this.hitPoints),actor.system.traits.size.value=this.size,this.logAutoChange("system.traits.size.value",this.size);const reach=values_1.SIZE_TO_REACH[this.size];actor.system.attributes.reach={general:reach,manipulate:reach},actor.system.attributes.speed.value=this.speed;const{build}=actor.system;for(const target of["boosts","flaws"])for(const ability of Object.values(this.system[target]))ability.selected&&build.abilities[target].ancestry.push(ability.selected);if(this.system.voluntary){const{boost,flaws}=this.system.voluntary;boost&&build.abilities.boosts.ancestry.push(boost),build.abilities.flaws.ancestry.push(...flaws)}const innateLanguages=this.system.languages.value;for(const language of innateLanguages)actor.system.traits.languages.value.includes(language)||actor.system.traits.languages.value.push(language);const{senses}=actor.system.traits,{vision}=this.system;if("normal"!==vision&&!senses.some((sense=>sense.type===vision))){senses.push(new sense_1.CreatureSensePF2e({type:vision,value:"",source:this.name}));(null!==(_a=(_c=actor.rollOptions).sense)&&void 0!==_a?_a:_c.sense={})[`self:${(0,_util_1.sluggify)(vision)}:from-ancestry`]=!0}actor.system.traits.value.push(...this.traits);const slug=null!==(_b=this.slug)&&void 0!==_b?_b:(0,_util_1.sluggify)(this.name);actor.system.details.ancestry={name:this.name,trait:slug},actor.rollOptions.all[`self:ancestry:${slug}`]=!0;for(const trait of this.traits)actor.rollOptions.all[`self:trait:${trait}`]=!0}}exports.AncestryPF2e=AncestryPF2e},98713:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.AncestrySheetPF2e=exports.AncestryPF2e=void 0;var document_1=__webpack_require__(32339);Object.defineProperty(exports,"AncestryPF2e",{enumerable:!0,get:function(){return document_1.AncestryPF2e}});var sheet_1=__webpack_require__(71950);Object.defineProperty(exports,"AncestrySheetPF2e",{enumerable:!0,get:function(){return sheet_1.AncestrySheetPF2e}})},71950:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.AncestrySheetPF2e=void 0;const sheet_1=__webpack_require__(44996),helpers_1=__webpack_require__(69554);class AncestrySheetPF2e extends sheet_1.ABCSheetPF2e{async getData(options){const data=await super.getData(options),itemData=data.item;return{...data,selectedBoosts:Object.fromEntries(Object.entries(itemData.system.boosts).map((([k,b])=>[k,this.getLocalizedAbilities(b)]))),selectedFlaws:Object.fromEntries(Object.entries(itemData.system.flaws).map((([k,b])=>[k,this.getLocalizedAbilities(b)]))),sizes:(0,helpers_1.createSheetOptions)(CONFIG.PF2E.actorSizes,{value:[itemData.system.size]}),languages:(0,helpers_1.createSheetOptions)(CONFIG.PF2E.languages,itemData.system.languages),additionalLanguages:(0,helpers_1.createSheetOptions)(CONFIG.PF2E.languages,itemData.system.additionalLanguages)}}}exports.AncestrySheetPF2e=AncestrySheetPF2e},55749:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0})},37040:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.ArmorPF2e=void 0;const automatic_bonus_progression_1=__webpack_require__(7908),physical_1=__webpack_require__(6560),values_1=__webpack_require__(12759),localize_1=__webpack_require__(41332),_util_1=__webpack_require__(6945);class ArmorPF2e extends physical_1.PhysicalItemPF2e{isStackableWith(item){return!this.isEquipped&&!item.isEquipped&&super.isStackableWith(item)}get isShield(){return"shield"===this.system.category}get isArmor(){return!this.isShield}get baseType(){var _a;return null!==(_a=this.system.baseItem)&&void 0!==_a?_a:null}get group(){return this.system.group||null}get category(){return this.system.category}get dexCap(){return this.isShield?null:this.system.dex.value}get strength(){return this.isShield?null:this.system.strength.value}get checkPenalty(){return this.isShield?null:this.system.check.value||null}get speedPenalty(){return this.system.speed.value}get acBonus(){const potencyRune=this.isArmor&&this.isInvested?this.system.runes.potency:0,baseArmor=Number(this.system.armor.value)||0;return this.isShield&&(this.isBroken||this.isDestroyed)?0:baseArmor+potencyRune}get hitPoints(){return deepClone(this.system.hp)}get hardness(){return this.system.hardness}get isBroken(){const{hitPoints}=this;return hitPoints.max>0&&!this.isDestroyed&&hitPoints.value<=hitPoints.brokenThreshold}get isDestroyed(){const{hitPoints}=this;return hitPoints.max>0&&0===hitPoints.value}get isRaised(){var _a;return!(!this.isShield||!(null===(_a=this.actor)||void 0===_a?void 0:_a.isOfType("character","npc")))&&(this.actor.heldShield===this&&this.actor.attributes.shield.raised)}getRollOptions(prefix="armor"){return super.getRollOptions(prefix).concat(Object.entries({[`category:${this.category}`]:!0,[`group:${this.group}`]:!!this.group,[`base:${this.baseType}`]:!!this.baseType}).filter((([_key,isTrue])=>isTrue)).map((([key])=>`${prefix?`${prefix}:`:""}${key}`)))}prepareBaseData(){var _a,_b;super.prepareBaseData(),(_a=this.system.potencyRune).value||(_a.value=null),(_b=this.system.resiliencyRune).value||(_b.value=null),automatic_bonus_progression_1.AutomaticBonusProgression.cleanupRunes(this);const baseTraits=this.system.traits.value,fromRunes=this.system.potencyRune.value||this.system.resiliencyRune.value?["invested","abjuration"]:[],hasTraditionTraits=baseTraits.some((t=>(0,_util_1.setHasElement)(values_1.MAGIC_TRADITIONS,t))),magicTraits=fromRunes.length>0&&!hasTraditionTraits?["magical"]:[],{traits}=this.system;traits.value=Array.from(new Set([...baseTraits,...fromRunes,...magicTraits]))}prepareDerivedData(){var _a;super.prepareDerivedData();const systemData=this.system,{potencyRune,resiliencyRune,propertyRune1,propertyRune2,propertyRune3,propertyRune4}=systemData;this.system.runes={potency:null!==(_a=potencyRune.value)&&void 0!==_a?_a:0,resilient:(0,physical_1.getResiliencyBonus)({resiliencyRune}),property:[propertyRune1.value,propertyRune2.value,propertyRune3.value,propertyRune4.value].filter((rune=>!!rune))},this.isShoddy&&this._source.system.check.value&&(this.system.check.value=this._source.system.check.value-2)}prepareActorData(){var _a,_b;const{actor}=this;if(!actor)throw(0,_util_1.ErrorPF2e)("This method may only be called from embedded items");const ownerIsPCOrNPC=actor.isOfType("character","npc"),shieldIsAssigned=ownerIsPCOrNPC&&null!==actor.attributes.shield.itemId;if(this.isArmor&&this.isEquipped){actor.rollOptions.all[`armor:id:${this.id}`]=!0;const traits=this.traits;for(const[trait,domain]of[["bulwark","reflex"],["flexible","skill-check"],["noisy","skill-check"]])if(traits.has(trait)){(null!==(_a=(_b=actor.rollOptions)[domain])&&void 0!==_a?_a:_b[domain]={})[`self:armor:trait:${trait}`]=!0}}else if(ownerIsPCOrNPC&&!shieldIsAssigned&&this.isEquipped&&actor.heldShield===this){const{hitPoints}=this;actor.system.attributes.shield={itemId:this.id,name:this.name,ac:this.acBonus,hp:hitPoints,hardness:this.hardness,brokenThreshold:hitPoints.brokenThreshold,raised:!1,broken:this.isBroken,destroyed:this.isDestroyed,icon:this.img},actor.rollOptions.all["self:shield:equipped"]=!0,this.isBroken?actor.rollOptions.all["self:shield:broken"]=!0:this.isDestroyed&&(actor.rollOptions.all["self:shield:destroyed"]=!0)}}async getChatData(htmlOptions={}){const systemData=this.system,translations=localize_1.LocalizePF2e.translations.PF2E,properties=[this.isArmor?CONFIG.PF2E.armorTypes[this.category]:CONFIG.PF2E.weaponCategories.martial,`${(0,_util_1.addSign)(this.acBonus)} ${translations.ArmorArmorLabel}`,this.isArmor?`${systemData.dex.value||0} ${translations.ArmorDexLabel}`:null,this.isArmor?`${systemData.check.value||0} ${translations.ArmorCheckLabel}`:null,this.speedPenalty?`${systemData.speed.value||0} ${translations.ArmorSpeedLabel}`:null];return this.processChatData(htmlOptions,{...super.getChatData(),traits:this.traitChatData(CONFIG.PF2E.armorTraits),properties})}generateUnidentifiedName({typeOnly=!1}={typeOnly:!1}){var _a;const translations=localize_1.LocalizePF2e.translations.PF2E,base=this.baseType?translations.Item.Armor.Base[this.baseType]:null,group=this.group?CONFIG.PF2E.armorGroups[this.group]:null,fallback=this.isShield?"PF2E.ArmorTypeShield":"ITEM.TypeArmor",itemType=game.i18n.localize(null!==(_a=null!=base?base:group)&&void 0!==_a?_a:fallback);if(typeOnly)return itemType;const formatString=localize_1.LocalizePF2e.translations.PF2E.identification.UnidentifiedItem;return game.i18n.format(formatString,{item:itemType})}}exports.ArmorPF2e=ArmorPF2e},83200:function(__unused_webpack_module,exports,__webpack_require__){var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k);var desc=Object.getOwnPropertyDescriptor(m,k);desc&&!("get"in desc?!m.__esModule:desc.writable||desc.configurable)||(desc={enumerable:!0,get:function(){return m[k]}}),Object.defineProperty(o,k2,desc)}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)"default"===p||Object.prototype.hasOwnProperty.call(exports,p)||__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.ArmorPF2e=void 0,__exportStar(__webpack_require__(55749),exports);var document_1=__webpack_require__(37040);Object.defineProperty(exports,"ArmorPF2e",{enumerable:!0,get:function(){return document_1.ArmorPF2e}}),__exportStar(__webpack_require__(93942),exports),__exportStar(__webpack_require__(2367),exports),__exportStar(__webpack_require__(87773),exports)},93942:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.ArmorSheetPF2e=void 0;const physical_1=__webpack_require__(6560),helpers_1=__webpack_require__(69554),localize_1=__webpack_require__(41332);class ArmorSheetPF2e extends physical_1.PhysicalItemSheetPF2e{async getData(options){const sheetData=await super.getData(options),totalSlots=(0,physical_1.getPropertySlots)(this.item),propertyRuneSlots={};for(const slot of[1,2,3,4])totalSlots>=slot&&(propertyRuneSlots[`propertyRuneSlots${slot}`]=!0);return{...sheetData,hasDetails:!0,hasSidebar:!0,armorPotencyRunes:CONFIG.PF2E.armorPotencyRunes,armorResiliencyRunes:CONFIG.PF2E.armorResiliencyRunes,armorPropertyRunes:CONFIG.PF2E.armorPropertyRunes,categories:CONFIG.PF2E.armorTypes,groups:CONFIG.PF2E.armorGroups,baseTypes:localize_1.LocalizePF2e.translations.PF2E.Item.Armor.Base,bulkTypes:CONFIG.PF2E.bulkTypes,preciousMaterials:this.prepareMaterials(physical_1.ARMOR_MATERIAL_VALUATION_DATA),...propertyRuneSlots,otherTags:(0,helpers_1.createSheetTags)(CONFIG.PF2E.otherArmorTags,sheetData.data.traits.otherTags),basePrice:new physical_1.CoinsPF2e(this.item._source.system.price.value)}}async _updateObject(event,formData){var _a;formData["system.potencyRune.value"]||(formData["system.potencyRune.value"]=null),formData["system.resiliencyRune.value"]||(formData["system.resiliencyRune.value"]=null);for(const slotNumber of[1,2,3,4])formData[_a=`system.propertyRune${slotNumber}.value`]||(formData[_a]=null);return super._updateObject(event,formData)}}exports.ArmorSheetPF2e=ArmorSheetPF2e},2367:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0})},87773:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.ARMOR_CATEGORIES=void 0;exports.ARMOR_CATEGORIES=["unarmored","light","medium","heavy"]},14114:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.BackgroundPF2e=void 0;const _item_1=__webpack_require__(10843);class BackgroundPF2e extends _item_1.ABCItemPF2e{prepareSiblingData(){var _a;if(Object.keys(this.system.items).length>0)return;const grantedSkillFeat=Object.values(this.flags.pf2e.itemGrants).flatMap((g=>{var _a;return null!==(_a=this.actor.items.get(g.id))&&void 0!==_a?_a:[]})).find((i=>"skill"===i.featType));grantedSkillFeat&&(this.system.items.GRANT={uuid:null!==(_a=grantedSkillFeat.sourceId)&&void 0!==_a?_a:grantedSkillFeat.uuid,img:grantedSkillFeat.img,name:grantedSkillFeat.name,level:1},grantedSkillFeat.system.location=this.id)}prepareActorData(){if(!this.actor.isOfType("character"))return void console.error("Only a character can have a background");this.actor.background=this;const{build}=this.actor.system,boosts=Object.values(this.system.boosts);for(const boost of boosts)boost.selected&&build.abilities.boosts.background.push(boost.selected);const{trainedSkills}=this.system;if(1===trainedSkills.value.length){const key=trainedSkills.value[0],skill=this.actor.system.skills[key];skill.rank=Math.max(skill.rank,1)}}}exports.BackgroundPF2e=BackgroundPF2e},70432:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.BackgroundSheetPF2e=exports.BackgroundPF2e=void 0;var document_1=__webpack_require__(14114);Object.defineProperty(exports,"BackgroundPF2e",{enumerable:!0,get:function(){return document_1.BackgroundPF2e}});var sheet_1=__webpack_require__(69401);Object.defineProperty(exports,"BackgroundSheetPF2e",{enumerable:!0,get:function(){return sheet_1.BackgroundSheetPF2e}})},69401:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.BackgroundSheetPF2e=void 0;const sheet_1=__webpack_require__(44996),helpers_1=__webpack_require__(69554);class BackgroundSheetPF2e extends sheet_1.ABCSheetPF2e{async getData(options){const data=await super.getData(options),itemData=data.item;return{...data,trainedSkills:(0,helpers_1.createSheetOptions)(CONFIG.PF2E.skills,itemData.system.trainedSkills),selectedBoosts:Object.fromEntries(Object.entries(itemData.system.boosts).map((([k,b])=>[k,this.getLocalizedAbilities(b)])))}}}exports.BackgroundSheetPF2e=BackgroundSheetPF2e},24227:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.ItemPF2e=void 0;const chat_message_1=__webpack_require__(40405),doc_helpers_1=__webpack_require__(77613),migration_1=__webpack_require__(63051),base_1=__webpack_require__(27981),_util_1=__webpack_require__(6945),rules_1=__webpack_require__(37434),helpers_1=__webpack_require__(69543),helpers_2=__webpack_require__(44252),values_1=__webpack_require__(66870);class ItemPF2e extends Item{constructor(data,context={}){var _a,_b;if(!(null===(_a=context.pf2e)||void 0===_a?void 0:_a.ready)){context.pf2e=mergeObject(null!==(_b=context.pf2e)&&void 0!==_b?_b:{},{ready:!0});const ItemConstructor=CONFIG.PF2E.Item.documentClasses[data.type];return ItemConstructor?new ItemConstructor(data,context):new ItemPF2e(data,context)}super(data,context)}get slug(){return this.system.slug}get sourceId(){var _a,_b;return null!==(_b=null===(_a=this.flags.core)||void 0===_a?void 0:_a.sourceId)&&void 0!==_b?_b:null}get schemaVersion(){var _a;return Number(null===(_a=this.system.schema)||void 0===_a?void 0:_a.version)||null}get description(){return this.system.description.value.trim()}isOfType(...types){return types.some((t=>"physical"===t?(0,_util_1.setHasElement)(values_1.PHYSICAL_ITEM_TYPES,this.type):this.type===t))}async delete(context={}){return this.actor?(await this.actor.deleteEmbeddedDocuments("Item",[this.id],context),this):super.delete(context)}getRollOptions(prefix=this.type){var _a,_b,_c;const slug=null!==(_a=this.slug)&&void 0!==_a?_a:(0,_util_1.sluggify)(this.name),traitOptions=(null!==(_c=null===(_b=this.system.traits)||void 0===_b?void 0:_b.value)&&void 0!==_c?_c:[]).map((t=>`trait:${t}`)),delimitedPrefix=prefix?`${prefix}:`:"",options=[`${delimitedPrefix}id:${this.id}`,`${delimitedPrefix}${slug}`,`${delimitedPrefix}slug:${slug}`,...traitOptions.map((t=>`${delimitedPrefix}${t}`))];if("level"in this.system&&options.push(`${delimitedPrefix}level:${this.system.level.value}`),["item",""].includes(prefix)){const itemType=this.isOfType("feat")&&this.isFeature?"feature":this.type;options.unshift(`${delimitedPrefix}type:${itemType}`)}return options}getRollData(){return{actor:this.actor,item:this}}async toMessage(event,{rollMode,create=!0,data={}}={}){var _a,_b;if(!this.actor)throw(0,_util_1.ErrorPF2e)(`Cannot create message for unowned item ${this.name}`);const template=`systems/pf2e/templates/chat/${this.type}-card.html`,token=this.actor.token,nearestItem=event?event.currentTarget.closest(".item"):{},contextualData=Object.keys(data).length>0?data:nearestItem.dataset||{},templateData={actor:this.actor,tokenId:token?`${null===(_a=token.parent)||void 0===_a?void 0:_a.id}.${token.id}`:null,item:this,data:await this.getChatData(void 0,contextualData)},chatData={speaker:chat_message_1.ChatMessagePF2e.getSpeaker({actor:this.actor,token:null!==(_b=this.actor.getActiveTokens(!1,!0)[0])&&void 0!==_b?_b:null}),flags:{core:{canPopout:!0},pf2e:{origin:{uuid:this.uuid,type:this.type}}},type:CONST.CHAT_MESSAGE_TYPES.OTHER};return null!=rollMode||(rollMode=(null==event?void 0:event.ctrlKey)||(null==event?void 0:event.metaKey)?"blindroll":game.settings.get("core","rollMode")),["gmroll","blindroll"].includes(rollMode)&&(chatData.whisper=chat_message_1.ChatMessagePF2e.getWhisperRecipients("GM").map((u=>u.id))),"blindroll"===rollMode&&(chatData.blind=!0),chatData.content=await renderTemplate(template,templateData),create?chat_message_1.ChatMessagePF2e.create(chatData,{renderSheet:!1}):new chat_message_1.ChatMessagePF2e(chatData)}async toChat(event){return this.toMessage(event,{create:!0})}_initialize(){this.rules=[],super._initialize(),this.initialized=!0}prepareData(){super.prepareData(),!this.isOwned&&ui.items&&this.initialized&&ui.items.render()}prepareBaseData(){var _a,_b,_c,_d,_e,_f;super.prepareBaseData();const{flags}=this;flags.pf2e=mergeObject(null!==(_a=flags.pf2e)&&void 0!==_a?_a:{},{rulesSelections:{}}),(0,_util_1.isObject)(flags.pf2e.grantedBy)&&(null!==(_b=(_e=flags.pf2e.grantedBy).onDelete)&&void 0!==_b||(_e.onDelete=this.isOfType("physical")?"detach":"cascade"));const grants=null!==(_c=(_f=flags.pf2e).itemGrants)&&void 0!==_c?_c:_f.itemGrants={};for(const grant of Object.values(grants))(0,_util_1.isObject)(grant)&&(null!==(_d=grant.onDelete)&&void 0!==_d||(grant.onDelete="detach"))}prepareRuleElements(options){if(!this.actor)throw(0,_util_1.ErrorPF2e)("Rule elements may only be prepared from embedded items");return this.rules=this.actor.canHostRuleElements?rules_1.RuleElements.fromOwnedItem(this,options):[]}async refreshFromCompendium(){var _a,_b;if(!this.isOwned)return ui.notifications.error("This utility may only be used on owned items");if(!(null===(_a=this.sourceId)||void 0===_a?void 0:_a.startsWith("Compendium.")))return void ui.notifications.warn(`Item "${this.name}" has no compendium source.`);const currentSource=this.toObject(),latestSource=null===(_b=await fromUuid(this.sourceId))||void 0===_b?void 0:_b.toObject();if(!latestSource)return void ui.notifications.warn(`The compendium source for "${this.name}" (source ID: ${this.sourceId}) was not found.`);if(latestSource.type!==this.type)return void ui.notifications.error(`The compendium source for "${this.name}" is of a different type than what is present on this actor.`);const updates={img:currentSource.img.endsWith(".svg")?latestSource.img:currentSource.img,system:latestSource.system};if((0,helpers_2.isPhysicalData)(currentSource)){const{containerId,quantity}=currentSource.system;mergeObject(updates,expandObject({"system.containerId":containerId,"system.quantity":quantity}))}else"spell"===currentSource.type?mergeObject(updates,expandObject({"system.location.value":currentSource.system.location.value})):"feat"===currentSource.type&&mergeObject(updates,expandObject({"system.location":currentSource.system.location}));if("weapon"===currentSource.type||"armor"===currentSource.type){const materialAndRunes={"system.preciousMaterial":currentSource.system.preciousMaterial,"system.preciousMaterialGrade":currentSource.system.preciousMaterialGrade,"system.potencyRune":currentSource.system.potencyRune,"system.propertyRune1":currentSource.system.propertyRune1,"system.propertyRune2":currentSource.system.propertyRune2,"system.propertyRune3":currentSource.system.propertyRune3,"system.propertyRune4":currentSource.system.propertyRune4};"weapon"===currentSource.type?materialAndRunes["system.strikingRune"]=currentSource.system.strikingRune:materialAndRunes["system.resiliencyRune"]=currentSource.system.resiliencyRune,mergeObject(updates,expandObject(materialAndRunes))}await this.update(updates,{diff:!1,recursive:!1}),ui.notifications.info(`Item "${this.name}" has been refreshed.`)}async processChatData(htmlOptions={},data){var _a,_b,_c;if(data.properties=null!==(_b=null===(_a=data.properties)||void 0===_a?void 0:_a.filter((property=>null!==property)))&&void 0!==_b?_b:[],(0,helpers_2.isItemSystemData)(data)){const chatData=duplicate(data);return htmlOptions.rollData=mergeObject(this.getRollData(),null!==(_c=htmlOptions.rollData)&&void 0!==_c?_c:{}),chatData.description.value=await game.pf2e.TextEditor.enrichHTML(chatData.description.value,{...htmlOptions,async:!0}),chatData}return data}async getChatData(htmlOptions={},_rollOptions={}){if(!this.actor)throw(0,_util_1.ErrorPF2e)(`Cannot retrieve chat data for unowned item ${this.name}`);const systemData={...this.system,traits:this.traitChatData()};return this.processChatData(htmlOptions,deepClone(systemData))}traitChatData(dictionary={}){var _a,_b,_c,_d;const traits=[...null!==(_b=null===(_a=this.system.traits)||void 0===_a?void 0:_a.value)&&void 0!==_b?_b:[]].sort(),customTraits=null!==(_d=null===(_c=this.system.traits)||void 0===_c?void 0:_c.custom.trim().split(/\s*[,;|]\s*/).filter((trait=>trait)))&&void 0!==_d?_d:[];traits.push(...customTraits);const traitChatLabels=traits.map((trait=>{var _a;return{value:trait,label:null!==(_a=dictionary[trait])&&void 0!==_a?_a:trait,description:CONFIG.PF2E.traitsDescriptions[trait]}}));return traitChatLabels}static async createDialog(data={},options={}){var _a;const original=game.system.documentTypes.Item;game.system.documentTypes.Item=original.filter((itemType=>!(["condition","spellcastingEntry","lore"].includes(itemType)||"book"===itemType))),options={...options,classes:[...null!==(_a=options.classes)&&void 0!==_a?_a:[],"dialog-item-create"]};const newItem=super.createDialog(data,options);return game.system.documentTypes.Item=original,newItem}async importFromJSON(json){const processed=await(0,doc_helpers_1.preImportJSON)(this,json);return processed?super.importFromJSON(processed):this}static async createDocuments(data=[],context={}){var _a,_b,_c,_d,_e;for(const source of[...data]){if(2===Object.keys(source).length&&"name"in source&&"type"in source){source.system={schema:{version:base_1.MigrationRunnerBase.LATEST_SCHEMA_VERSION}};continue}const item=new ItemPF2e(source);await migration_1.MigrationRunner.ensureSchemaVersion(item,migration_1.MigrationList.constructFromVersion(item.schemaVersion)),data.splice(data.indexOf(source),1,item.toObject())}if(context.parent){const validTypes=context.parent.allowedItemTypes;validTypes.includes("physical")&&validTypes.push(...values_1.PHYSICAL_ITEM_TYPES,"kit");for(const datum of data)if(datum.type&&!validTypes.includes(datum.type))return ui.notifications.error(game.i18n.format("PF2E.Item.CannotAddType",{type:game.i18n.localize(null!==(_a=CONFIG.Item.typeLabels[datum.type])&&void 0!==_a?_a:datum.type.titleCase())})),[];const kits=data.filter((d=>"kit"===d.type)),nonKits=data.filter((d=>!kits.includes(d)));context.parent.isOfType("character")&&await context.parent.preCreateDelete(nonKits);for(const source of[...nonKits]){if(!(null===(_c=null===(_b=source.system)||void 0===_b?void 0:_b.rules)||void 0===_c?void 0:_c.length))continue;context.keepId||context.keepEmbeddedIds||delete source._id;const item=new ItemPF2e(source,{parent:context.parent});null===(_d=item.prepareActorData)||void 0===_d||_d.call(item);const rules=item.prepareRuleElements({suppressWarnings:!0});for(const rule of rules){const ruleSource=source.system.rules[rules.indexOf(rule)];await(null===(_e=rule.preCreate)||void 0===_e?void 0:_e.call(rule,{itemSource:source,ruleSource,pendingItems:nonKits,context}))}}for(const kitSource of kits){const item=new ItemPF2e(kitSource);item.isOfType("kit")&&await item.dumpContents({actor:context.parent})}if(nonKits.length>1&&nonKits.some((i=>"class"===i.type))){const classFeatures=nonKits.filter((i=>{var _a,_b,_c,_d,_e;return"feat"===i.type&&"number"==typeof(null===(_b=null===(_a=i.system)||void 0===_a?void 0:_a.level)||void 0===_b?void 0:_b.value)&&"classfeature"===(null===(_c=i.system.featType)||void 0===_c?void 0:_c.value)&&!(null===(_e=null===(_d=i.flags)||void 0===_d?void 0:_d.pf2e)||void 0===_e?void 0:_e.grantedBy)}));for(const feature of classFeatures)feature.sort=100*classFeatures.indexOf(feature)*feature.system.level.value}return super.createDocuments(nonKits,context)}return super.createDocuments(data,context)}static async deleteDocuments(ids=[],context={}){var _a;ids=Array.from(new Set(ids));const actor=context.parent;if(actor){const items=ids.flatMap((id=>{var _a;return null!==(_a=actor.items.get(id))&&void 0!==_a?_a:[]})),containers=items.filter((i=>i.isOfType("backpack")));for(const container of containers)await container.ejectContents();for(const item of[...items]){for(const rule of item.rules)await(null===(_a=rule.preDelete)||void 0===_a?void 0:_a.call(rule,{pendingItems:items,context}));await(0,helpers_1.processGrantDeletions)(item,items)}ids=Array.from(new Set(items.map((i=>i.id)))).filter((id=>actor.items.has(id)))}return super.deleteDocuments(ids,context)}async _preCreate(data,options,user){var _a;if(this._source.img===ItemPF2e.DEFAULT_ICON&&(this._source.img=data.img=`systems/pf2e/icons/default-icons/${data.type}.svg`),(null===(_a=this.actor)||void 0===_a?void 0:_a.isOfType("character"))&&this.isOfType("ancestry","background","class","feat","heritage")){const hpMaxDifference=this.actor.clone({items:[...this.actor.items.toObject(),data]}).hitPoints.max-this.actor.hitPoints.max;if(0!==hpMaxDifference){const newHitPoints=this.actor.hitPoints.value+hpMaxDifference;await this.actor.update({"system.attributes.hp.value":newHitPoints},{render:!1,allowHPOverage:!0})}}await super._preCreate(data,options,user),this._source.system.rules=this._source.system.rules.filter((r=>!r.removeUponCreate))}async _preUpdate(changed,options,user){var _a,_b,_c,_d;if(null===(null===(_b=null===(_a=changed.system)||void 0===_a?void 0:_a.description)||void 0===_b?void 0:_b.value)&&(changed.system.description.value=""),(null===(_c=this.actor)||void 0===_c?void 0:_c.isOfType("character"))&&this.isOfType("ancestry","background","class","feat","heritage")){const actorClone=this.actor.clone();actorClone.items.get(this.id,{strict:!0}).updateSource(changed,options),actorClone.reset();const hpMaxDifference=actorClone.hitPoints.max-this.actor.hitPoints.max;if(0!==hpMaxDifference){const newHitPoints=this.actor.hitPoints.value+hpMaxDifference;await this.actor.update({"system.attributes.hp.value":newHitPoints},{render:!1,allowHPOverage:!0})}}for(const rule of this.rules)await(null===(_d=rule.preUpdate)||void 0===_d?void 0:_d.call(rule,changed));await super._preUpdate(changed,options,user)}_onCreate(data,options,userId){var _a;if(super._onCreate(data,options,userId),this.actor&&game.user.id===userId){this.actor.reset();const actorUpdates={};for(const rule of this.rules)null===(_a=rule.onCreate)||void 0===_a||_a.call(rule,actorUpdates);this.actor.update(actorUpdates)}}_onDelete(options,userId){var _a,_b;if(super._onDelete(options,userId),!this.actor||game.user.id!==userId)return;if(!this.actor.isOfType("creature")||!this.canUserModify(game.user,"update"))return;const actorUpdates={};for(const rule of this.rules)null===(_a=rule.onDelete)||void 0===_a||_a.call(rule,actorUpdates);if(this.actor.isOfType("npc")&&["action","consumable"].includes(this.type)){const slug=null!==(_b=this.slug)&&void 0!==_b?_b:(0,_util_1.sluggify)(this.name);if(this.actor.isToken){const promises=[];for(const item of this.actor.itemTypes.melee){const attackEffects=item.system.attackEffects.value;if(attackEffects.includes(slug)){const updatedEffects=attackEffects.filter((effect=>effect!==slug));promises.push(item.update({"system.attackEffects.value":updatedEffects}))}}promises.length>0&&Promise.allSettled(promises)}else{const itemUpdates=[];for(const attack of this.actor.itemTypes.melee){const attackEffects=attack.system.attackEffects.value;if(attackEffects.includes(slug)){const updatedEffects=attackEffects.filter((effect=>effect!==slug));itemUpdates.push({_id:attack.id,system:{attackEffects:{value:updatedEffects}}})}}itemUpdates.length>0&&mergeObject(actorUpdates,{items:itemUpdates})}}this.actor.update(actorUpdates)}}exports.ItemPF2e=ItemPF2e},86703:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0})},92364:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.BookPF2e=void 0;const _item_1=__webpack_require__(10843);class BookPF2e extends _item_1.PhysicalItemPF2e{}exports.BookPF2e=BookPF2e},87614:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.BookSheetPF2e=exports.BookPF2e=exports.BookSource=exports.BookData=void 0;var data_1=__webpack_require__(86703);Object.defineProperty(exports,"BookData",{enumerable:!0,get:function(){return data_1.BookData}}),Object.defineProperty(exports,"BookSource",{enumerable:!0,get:function(){return data_1.BookSource}});var document_1=__webpack_require__(92364);Object.defineProperty(exports,"BookPF2e",{enumerable:!0,get:function(){return document_1.BookPF2e}});var sheet_1=__webpack_require__(59401);Object.defineProperty(exports,"BookSheetPF2e",{enumerable:!0,get:function(){return sheet_1.BookSheetPF2e}})},59401:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.BookSheetPF2e=void 0;const sheet_1=__webpack_require__(38719);class BookSheetPF2e extends sheet_1.PhysicalItemSheetPF2e{async getData(options){const data=await super.getData(options);return data.hasDetails=!0,data}activateListeners($html){super.activateListeners($html)}}exports.BookSheetPF2e=BookSheetPF2e},94799:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.ClassPF2e=void 0;const values_1=__webpack_require__(8382),_item_1=__webpack_require__(10843),values_2=__webpack_require__(87773),values_3=__webpack_require__(16585),_util_1=__webpack_require__(6945);class ClassPF2e extends _item_1.ABCItemPF2e{get attacks(){return this.system.attacks}get defenses(){return this.system.defenses}get classDC(){return this.system.classDC}get hpPerLevel(){return this.system.hp}get perception(){return this.system.perception}get savingThrows(){return this.system.savingThrows}get grantedFeatSlots(){var _a,_b;const actorLevel=null!==(_b=null===(_a=this.actor)||void 0===_a?void 0:_a.level)&&void 0!==_b?_b:0,system=this.system,ancestryLevels=system.ancestryFeatLevels.value;if(game.settings.get("pf2e","ancestryParagonVariant")){ancestryLevels.unshift({id:"ancestry-bonus",label:"1"});for(let level=3;level<=actorLevel;level+=4){const index=(level+1)/2;ancestryLevels.splice(index,0,level)}}return{ancestry:ancestryLevels,class:system.classFeatLevels.value,skill:system.skillFeatLevels.value,general:system.generalFeatLevels.value}}getLinkedFeatures(){return this.actor?Array.from(new Set([...super.getLinkedFeatures(),...this.actor.itemTypes.feat.filter((f=>"classfeature"===f.featType))])):[]}async getFeatures(options={}){const hasChoiceSet=f=>f.system.rules.some((re=>"ChoiceSet"===re.key));return(await super.getFeatures(options)).sort(((a,b)=>{const[aLevel,bLevel]=[a.system.level.value,b.system.level.value];if(aLevel!==bLevel)return aLevel-bLevel;const[aHasSet,bHasSet]=[hasChoiceSet(a),hasChoiceSet(b)];return aHasSet!==bHasSet?aHasSet?-1:1:a.name.localeCompare(b.name,game.i18n.lang)}))}prepareBaseData(){var _a;super.prepareBaseData();const{keyAbility}=this.system;null!==(_a=keyAbility.selected)&&void 0!==_a||(keyAbility.selected=1===keyAbility.value.length?keyAbility.value[0]:null)}prepareActorData(){var _a,_b;if(!this.actor.isOfType("character"))return void console.error("Only a character can have a class");this.actor.class=this;const{attributes,build,details,martial,proficiencies,saves,skills}=this.actor.system,slug=null!==(_a=this.slug)&&void 0!==_a?_a:(0,_util_1.sluggify)(this.name),{keyAbility}=this.system;if(build.abilities.keyOptions=[...keyAbility.value],build.abilities.boosts.class=keyAbility.selected,attributes.classhp=this.hpPerLevel,attributes.perception.rank=Math.max(attributes.perception.rank,this.perception),this.logAutoChange("system.attributes.perception.rank",this.perception),this.classDC>0){proficiencies.classDCs[slug]={label:this.name,rank:this.classDC,ability:null!==(_b=this.system.keyAbility.selected)&&void 0!==_b?_b:"str",primary:!0},this.logAutoChange(`system.proficiencies.classDCs.${slug}.rank`,this.classDC)}for(const category of values_2.ARMOR_CATEGORIES)martial[category].rank=Math.max(martial[category].rank,this.defenses[category]),this.logAutoChange(`system.martial.${category}.rank`,this.defenses[category]);for(const category of values_3.WEAPON_CATEGORIES)martial[category].rank=Math.max(martial[category].rank,this.attacks[category]),this.logAutoChange(`system.martial.${category}.rank`,this.attacks[category]);for(const saveType of values_1.SAVE_TYPES)saves[saveType].rank=Math.max(saves[saveType].rank,this.savingThrows[saveType]),this.logAutoChange(`system.saves.${saveType}.rank`,this.savingThrows[saveType]);for(const trainedSkill of this.system.trainedSkills.value)(0,_util_1.setHasElement)(values_1.SKILL_ABBREVIATIONS,trainedSkill)&&(skills[trainedSkill].rank=Math.max(skills[trainedSkill].rank,1));details.class={name:this.name,trait:slug},this.actor.rollOptions.all[`class:${slug}`]=!0}}exports.ClassPF2e=ClassPF2e},43565:function(__unused_webpack_module,exports,__webpack_require__){var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k);var desc=Object.getOwnPropertyDescriptor(m,k);desc&&!("get"in desc?!m.__esModule:desc.writable||desc.configurable)||(desc={enumerable:!0,get:function(){return m[k]}}),Object.defineProperty(o,k2,desc)}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)"default"===p||Object.prototype.hasOwnProperty.call(exports,p)||__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.ClassSheetPF2e=exports.ClassPF2e=void 0;var document_1=__webpack_require__(94799);Object.defineProperty(exports,"ClassPF2e",{enumerable:!0,get:function(){return document_1.ClassPF2e}});var sheet_1=__webpack_require__(46840);Object.defineProperty(exports,"ClassSheetPF2e",{enumerable:!0,get:function(){return sheet_1.ClassSheetPF2e}}),__exportStar(__webpack_require__(16496),exports)},46840:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.ClassSheetPF2e=void 0;const helpers_1=__webpack_require__(69554),sheet_1=__webpack_require__(44996);class ClassSheetPF2e extends sheet_1.ABCSheetPF2e{async getData(options){const sheetData=await super.getData(options),itemData=sheetData.item;return{...sheetData,skills:CONFIG.PF2E.skills,proficiencyChoices:CONFIG.PF2E.proficiencyLevels,selectedKeyAbility:this.getLocalizedAbilities(itemData.system.keyAbility),ancestryTraits:(0,helpers_1.createSheetTags)(CONFIG.PF2E.ancestryItemTraits,itemData.system.traits),trainedSkills:(0,helpers_1.createSheetTags)(CONFIG.PF2E.skills,itemData.system.trainedSkills),ancestryFeatLevels:(0,helpers_1.createSheetTags)(CONFIG.PF2E.levels,itemData.system.ancestryFeatLevels),classFeatLevels:(0,helpers_1.createSheetTags)(CONFIG.PF2E.levels,itemData.system.classFeatLevels),generalFeatLevels:(0,helpers_1.createSheetTags)(CONFIG.PF2E.levels,itemData.system.generalFeatLevels),skillFeatLevels:(0,helpers_1.createSheetTags)(CONFIG.PF2E.levels,itemData.system.skillFeatLevels),skillIncreaseLevels:(0,helpers_1.createSheetTags)(CONFIG.PF2E.levels,itemData.system.skillIncreaseLevels)}}}exports.ClassSheetPF2e=ClassSheetPF2e},16496:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.CLASS_TRAITS=void 0,exports.CLASS_TRAITS=new Set(["alchemist","barbarian","bard","champion","cleric","druid","fighter","gunslinger","inventor","investigator","magus","monk","oracle","psychic","ranger","rogue","sorcerer","summoner","swashbuckler","thaumaturge","witch","wizard"])},39103:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0})},43239:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.ConditionPF2e=void 0;const abstract_effect_1=__webpack_require__(654),_util_1=__webpack_require__(6945);class ConditionPF2e extends abstract_effect_1.AbstractEffectPF2e{get badge(){return this.system.value.value?{type:"counter",value:this.system.value.value}:null}get appliedBy(){var _a,_b,_c,_d,_e,_f;return null!==(_f=null===(_a=this.actor)||void 0===_a?void 0:_a.items.get(null!==(_e=null!==(_c=null===(_b=this.system.references.parent)||void 0===_b?void 0:_b.id)&&void 0!==_c?_c:null===(_d=this.flags.pf2e.grantedBy)||void 0===_d?void 0:_d.id)&&void 0!==_e?_e:""))&&void 0!==_f?_f:null}get value(){return this.system.value.value}get duration(){return this.system.duration.perpetual?null:this.system.duration.value}get isActive(){return this.system.active}get isLocked(){var _a,_b,_c,_d,_e,_f;if(null===(_a=this.system.references.parent)||void 0===_a?void 0:_a.id)return!0;const granter=null===(_b=this.actor)||void 0===_b?void 0:_b.items.get(null!==(_d=null===(_c=this.flags.pf2e.grantedBy)||void 0===_c?void 0:_c.id)&&void 0!==_d?_d:"");return"restrict"===(null===(_f=Object.values(null!==(_e=null==granter?void 0:granter.flags.pf2e.itemGrants)&&void 0!==_e?_e:{}).find((g=>g.id===this.id)))||void 0===_f?void 0:_f.onDelete)}get isInHUD(){return this.system.sources.hud}async increase(){this.actor&&this.system.removable&&await this.actor.increaseCondition(this)}async decrease(){var _a;this.actor&&this.system.removable&&await(null===(_a=this.actor)||void 0===_a?void 0:_a.decreaseCondition(this))}prepareBaseData(){super.prepareBaseData();const systemData=this.system;systemData.value.value=systemData.value.isValued?Number(systemData.value.value)||1:null}prepareSiblingData(){if(!this.actor)throw(0,_util_1.ErrorPF2e)("prepareSiblingData may only be called from an embedded item");if(!this.isActive)return;const deactivate=condition=>{condition.system.active=!1,condition.system.references.overriddenBy.push({id:this.id,type:"condition"})},conditions=this.actor.itemTypes.condition;if(this.system.overrides.length>0){const overridden=conditions.filter((c=>this.system.overrides.includes(c.slug)));for(const condition of overridden)deactivate(condition)}const ofSameType=conditions.filter((c=>c!==this&&c.slug===this.slug));for(const condition of ofSameType)this.value&&condition.value&&this.value>=condition.value?deactivate(condition):this.isLocked?this.isLocked&&ofSameType.every((c=>c.isLocked))&&deactivate(condition):deactivate(condition)}prepareActorData(){var _a;super.prepareActorData(),this.isActive&&(null===(_a=this.actor)||void 0===_a||_a.conditions.set(this.slug,this))}prepareRuleElements(options){return this.isActive?super.prepareRuleElements(options):[]}async _preUpdate(changed,options,user){return options.conditionValue=this.value,super._preUpdate(changed,options,user)}_onCreate(data,options,userId){var _a,_b,_c,_d,_e,_f;if(super._onCreate(data,options,userId),game.user.isGM||(null===(_a=this.actor)||void 0===_a?void 0:_a.hasPlayerOwner)||!game.settings.get("pf2e","metagame_secretCondition")){"condition"!==(null===(_b=this.system.references.parent)||void 0===_b?void 0:_b.type)&&(null===(_d=null===(_c=this.actor)||void 0===_c?void 0:_c.getActiveTokens().shift())||void 0===_d||_d.showFloatyText({create:this}));for(const token of null!==(_f=null===(_e=this.actor)||void 0===_e?void 0:_e.getActiveTokens())&&void 0!==_f?_f:[])token._onApplyStatusEffect(this.rollOptionSlug,!0)}}_onUpdate(changed,options,userId){var _a,_b,_c,_d;if(super._onUpdate(changed,options,userId),!game.user.isGM&&!(null===(_a=this.actor)||void 0===_a?void 0:_a.hasPlayerOwner)&&game.settings.get("pf2e","metagame_secretCondition"))return;const[priorValue,newValue]=[options.conditionValue,this.value];if(!!priorValue&&!!newValue&&priorValue!==newValue&&"condition"!==(null===(_b=this.system.references.parent)||void 0===_b?void 0:_b.type)){const change=newValue>priorValue?{create:this}:{delete:this};null===(_d=null===(_c=this.actor)||void 0===_c?void 0:_c.getActiveTokens().shift())||void 0===_d||_d.showFloatyText(change)}}_onDelete(options,userId){var _a,_b,_c,_d,_e,_f;if(super._onDelete(options,userId),game.user.isGM||(null===(_a=this.actor)||void 0===_a?void 0:_a.hasPlayerOwner)||!game.settings.get("pf2e","metagame_secretCondition")){if("condition"!==(null===(_b=this.system.references.parent)||void 0===_b?void 0:_b.type)){const change={delete:{name:this.system.base}};null===(_d=null===(_c=this.actor)||void 0===_c?void 0:_c.getActiveTokens().shift())||void 0===_d||_d.showFloatyText(change)}for(const token of null!==(_f=null===(_e=this.actor)||void 0===_e?void 0:_e.getActiveTokens())&&void 0!==_f?_f:[])token._onApplyStatusEffect(this.rollOptionSlug,!1)}}}exports.ConditionPF2e=ConditionPF2e},16730:function(__unused_webpack_module,exports,__webpack_require__){var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k);var desc=Object.getOwnPropertyDescriptor(m,k);desc&&!("get"in desc?!m.__esModule:desc.writable||desc.configurable)||(desc={enumerable:!0,get:function(){return m[k]}}),Object.defineProperty(o,k2,desc)}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)"default"===p||Object.prototype.hasOwnProperty.call(exports,p)||__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:!0}),__exportStar(__webpack_require__(43239),exports),__exportStar(__webpack_require__(39103),exports)},73870:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.ConsumablePF2e=void 0;const trick_magic_item_popup_1=__webpack_require__(45357),_item_1=__webpack_require__(10843),localize_1=__webpack_require__(41332),_util_1=__webpack_require__(6945);class ConsumablePF2e extends _item_1.PhysicalItemPF2e{get otherTags(){return new Set(this.system.traits.otherTags)}get consumableType(){return this.system.consumableType.value}get isAmmunition(){return"ammo"===this.consumableType}get uses(){return{value:this.system.charges.value,max:this.system.charges.max}}get autoDestroy(){return this.system.autoDestroy.value}get embeddedSpell(){if(!this.actor)throw(0,_util_1.ErrorPF2e)(`No owning actor found for "${this.name}" (${this.id})`);return this.system.spell?new _item_1.SpellPF2e(deepClone(this.system.spell),{parent:this.actor,fromConsumable:!0}):null}async getChatData(htmlOptions={}){const systemData=this.system,translations=localize_1.LocalizePF2e.translations.PF2E,traits=this.traitChatData(CONFIG.PF2E.consumableTraits),[consumableType,isUsable]=this.isIdentified?[game.i18n.localize(this.consumableType),!0]:[this.generateUnidentifiedName({typeOnly:!0}),!["other","scroll","talisman","tool","wand"].includes(this.consumableType)];return this.processChatData(htmlOptions,{...systemData,traits,properties:this.isIdentified&&this.uses.max>0?[`${systemData.charges.value}/${systemData.charges.max} ${translations.ConsumableChargesLabel}`]:[],usesCharges:this.uses.max>0,hasCharges:this.uses.max>0&&this.uses.value>0,consumableType,isUsable})}generateUnidentifiedName({typeOnly=!1}={typeOnly:!1}){const translations=localize_1.LocalizePF2e.translations.PF2E.identification,itemType=["drug","elixir","mutagen","oil","poison","potion"].includes(this.consumableType)?(()=>this.traits.has("inhaled")||this.traits.has("contact")?translations.UnidentifiedType.Substance:translations.UnidentifiedType.Liquid)():["scroll","snare","ammo"].includes(this.consumableType)?game.i18n.localize(CONFIG.PF2E.consumableTypes[this.consumableType]):translations.UnidentifiedType.Object;if(typeOnly)return itemType;const formatString=localize_1.LocalizePF2e.translations.PF2E.identification.UnidentifiedItem;return game.i18n.format(formatString,{item:itemType})}isAmmoFor(weapon){if(!(weapon instanceof _item_1.WeaponPF2e))return console.warn("Cannot load a consumable into a non-weapon"),!1;const{max}=this.uses;return weapon.traits.has("repeating")?max>1:max<=1}async consume(){var _a;const{value,max}=this.uses;if(["scroll","wand"].includes(this.system.consumableType.value)&&this.system.spell)if(this.actor.spellcasting.canCastConsumable(this))this.castEmbeddedSpell();else{if(!this.actor.itemTypes.feat.some((feat=>"trick-magic-item"===feat.slug))){const formatParams={actor:this.actor.name,spell:this.name},message=game.i18n.format("PF2E.LackCastConsumableCapability",formatParams);return void ui.notifications.warn(message)}new trick_magic_item_popup_1.TrickMagicItemPopup(this)}else{const key=max>1&&1===value?"UseExhausted":max>1?"UseMulti":"UseSingle",content=game.i18n.format(`PF2E.ConsumableMessage.${key}`,{name:this.name,current:value-1}),formula=this.system.consume.value,flags={pf2e:{origin:{sourceId:null===(_a=this.flags.core)||void 0===_a?void 0:_a.sourceId,uuid:this.uuid,type:this.type}}};formula?new Roll(formula).toMessage({speaker:ChatMessage.getSpeaker({actor:this.actor}),flavor:content,flags}):"ammo"!==this.consumableType&&ChatMessage.create({user:game.user.id,speaker:ChatMessage.getSpeaker({actor:this.actor}),content,flags})}const quantity=this.quantity;this.autoDestroy&&value<=1?quantity<=1?await this.delete():await this.update({"system.quantity":Math.max(quantity-1,0),"system.charges.value":max}):await this.update({"system.charges.value":Math.max(value-1,0)})}async castEmbeddedSpell(trickMagicItemData){const spell=this.embeddedSpell;if(!spell)return;const actor=this.actor,entry=(()=>trickMagicItemData||actor.spellcasting.filter((entry=>entry.canCastSpell(spell,{origin:this}))).reduce(((previous,current)=>{const previousDC=previous.statistic.dc.value;return current.statistic.dc.value>previousDC?current:previous})))();if(entry){const systemData=spell.system;entry instanceof _item_1.SpellcastingEntryPF2e&&(systemData.location.value=entry.id),entry.cast(spell,{consume:!1})}}}exports.ConsumablePF2e=ConsumablePF2e},74145:function(__unused_webpack_module,exports,__webpack_require__){var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k);var desc=Object.getOwnPropertyDescriptor(m,k);desc&&!("get"in desc?!m.__esModule:desc.writable||desc.configurable)||(desc={enumerable:!0,get:function(){return m[k]}}),Object.defineProperty(o,k2,desc)}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)"default"===p||Object.prototype.hasOwnProperty.call(exports,p)||__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.ConsumableSheetPF2e=exports.ConsumablePF2e=void 0;var document_1=__webpack_require__(73870);Object.defineProperty(exports,"ConsumablePF2e",{enumerable:!0,get:function(){return document_1.ConsumablePF2e}});var sheet_1=__webpack_require__(61949);Object.defineProperty(exports,"ConsumableSheetPF2e",{enumerable:!0,get:function(){return sheet_1.ConsumableSheetPF2e}}),__exportStar(__webpack_require__(87458),exports)},61949:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.ConsumableSheetPF2e=void 0;const physical_1=__webpack_require__(6560),helpers_1=__webpack_require__(69554);class ConsumableSheetPF2e extends physical_1.PhysicalItemSheetPF2e{async getData(options){const item=this.item;return{...await super.getData(options),hasDetails:!0,hasSidebar:!0,consumableTypes:CONFIG.PF2E.consumableTypes,otherTags:(0,helpers_1.createSheetTags)(CONFIG.PF2E.otherConsumableTags,item.system.traits.otherTags)}}}exports.ConsumableSheetPF2e=ConsumableSheetPF2e},87458:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.isSpellConsumable=exports.createConsumableFromSpell=exports.calculateTrickMagicItemCheckDC=void 0;const _item_1=__webpack_require__(10843),values_1=__webpack_require__(12759),trick_1=__webpack_require__(73041),dc_1=__webpack_require__(84372),_util_1=__webpack_require__(6945),scrollCompendiumIds={1:"RjuupS9xyXDLgyIr",2:"Y7UD64foDbDMV9sx",3:"ZmefGBXGJF3CFDbn",4:"QSQZJ5BC3DeHv153",5:"tjLvRWklAylFhBHQ",6:"4sGIy77COooxhQuC",7:"fomEZZ4MxVVK3uVu",8:"iPki3yuoucnj7bIt",9:"cFHomF3tty8Wi1e5",10:"o1XIHJ4MJyroAHfF"},wandCompendiumIds={1:"UJWiN0K3jqVjxvKk",2:"vJZ49cgi8szuQXAD",3:"wrDmWkGxmwzYtfiA",4:"Sn7v9SsbEDMUIwrO",5:"5BF7zMnrPYzyigCs",6:"kiXh4SUWKr166ZeM",7:"nmXPj9zuMRQBNT60",8:"Qs8RgNH6thRPv2jt",9:"Fgv722039TVM5JTc"};exports.isSpellConsumable=function(itemId){return Object.values(scrollCompendiumIds).includes(itemId)||Object.values(wandCompendiumIds).includes(itemId)},exports.createConsumableFromSpell=async function(type,spell,heightenedLevel=spell.baseLevel){const pack=game.packs.find((p=>"pf2e.equipment-srd"===p.collection)),itemId=function(type,heightenedLevel){var _a,_b;return"scroll"===type?null!==(_a=scrollCompendiumIds[heightenedLevel])&&void 0!==_a?_a:null:null!==(_b=wandCompendiumIds[heightenedLevel])&&void 0!==_b?_b:null}(type,heightenedLevel),consumable=await(null==pack?void 0:pack.getDocument(null!=itemId?itemId:""));if(!(consumable instanceof _item_1.ConsumablePF2e))throw(0,_util_1.ErrorPF2e)("Failed to retrieve consumable item");const consumableSource=consumable.toObject();consumableSource.system.traits.value.push(...spell.traditions),consumableSource.name=function(type,spellName,heightenedLevel){return"scroll"===type?game.i18n.format("PF2E.ScrollFromSpell",{name:spellName,level:heightenedLevel}):game.i18n.format("PF2E.WandFromSpell",{name:spellName,level:heightenedLevel})}(type,spell.name,heightenedLevel);const description=consumableSource.system.description.value;return consumableSource.system.description.value=(spell.sourceId?"@"+spell.sourceId.replace(".","[")+"]":spell.description)+`\n<hr />${description}`,consumableSource.system.spell=spell.clone({"system.location.heightenedLevel":heightenedLevel}).toObject(),consumableSource},exports.calculateTrickMagicItemCheckDC=function(item,options={proficiencyWithoutLevel:!1}){const level=Number(item.level),saveDC=(0,dc_1.calculateDC)(level,options),skills=item.system.traits.value.filter((t=>(0,_util_1.setHasElement)(values_1.MAGIC_TRADITIONS,t))).map((tradition=>[trick_1.traditionSkills[tradition],saveDC]));return Object.fromEntries(skills)}},77607:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.ContainerPF2e=void 0;const inventory_1=__webpack_require__(33835),physical_1=__webpack_require__(6560),bulk_1=__webpack_require__(47297),helpers_1=__webpack_require__(23247);class ContainerPF2e extends physical_1.PhysicalItemPF2e{constructor(){super(...arguments),this.contents=new Collection}get stowsItems(){return this.system.stowing}get isCollapsed(){return this.system.collapsed}get capacity(){var _a,_b;return{value:inventory_1.InventoryBulk.computeTotalBulk(this.contents.contents,null!==(_b=null===(_a=this.actor)||void 0===_a?void 0:_a.size)&&void 0!==_b?_b:"med"),max:(0,bulk_1.weightToBulk)(this.system.bulkCapacity.value)||new bulk_1.Bulk}}get capacityPercentage(){const{value,max}=this.capacity;return Math.min(100,Math.floor(value.toLightBulk()/max.toLightBulk()*100))}get bulk(){const reduction=!this.traits.has("extradimensional")||!(0,helpers_1.hasExtraDimensionalParent)(this)?(0,bulk_1.weightToBulk)(this.system.negateBulk.value):new bulk_1.Bulk;return super.bulk.plus(this.capacity.value.minus(null!=reduction?reduction:new bulk_1.Bulk))}prepareSiblingData(){this.contents=new Collection(this.actor.inventory.filter((item=>{var _a;return(null===(_a=item.container)||void 0===_a?void 0:_a.id)===this.id})).map((item=>[item.id,item])))}async ejectContents(){if(!this.actor)return;const updates=this.contents.map((i=>{var _a,_b;return{_id:i.id,"system.containerId":null!==(_b=null===(_a=this.container)||void 0===_a?void 0:_a.id)&&void 0!==_b?_b:null}}));await this.actor.updateEmbeddedDocuments("Item",updates,{render:!1})}async getChatData(htmlOptions={}){const systemData=this.system,traits=this.traitChatData(CONFIG.PF2E.equipmentTraits);return this.processChatData(htmlOptions,{...systemData,traits})}}exports.ContainerPF2e=ContainerPF2e},23247:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.hasExtraDimensionalParent=exports.isCycle=void 0,exports.isCycle=function isCycle(item,container){return item===container||!!container.container&&isCycle(item,container.container)},exports.hasExtraDimensionalParent=function hasExtraDimensionalParent(item,encountered=new Set){if(encountered.has(item.id))return!1;encountered.add(item.id);const parent=item.container;return!!parent&&(!!parent.traits.has("extradimensional")||(encountered.add(parent.id),hasExtraDimensionalParent(parent)))}},55323:function(__unused_webpack_module,exports,__webpack_require__){var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k);var desc=Object.getOwnPropertyDescriptor(m,k);desc&&!("get"in desc?!m.__esModule:desc.writable||desc.configurable)||(desc={enumerable:!0,get:function(){return m[k]}}),Object.defineProperty(o,k2,desc)}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)"default"===p||Object.prototype.hasOwnProperty.call(exports,p)||__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.ContainerSheetPF2e=exports.ContainerPF2e=void 0;var document_1=__webpack_require__(77607);Object.defineProperty(exports,"ContainerPF2e",{enumerable:!0,get:function(){return document_1.ContainerPF2e}}),__exportStar(__webpack_require__(23247),exports);var sheet_1=__webpack_require__(26166);Object.defineProperty(exports,"ContainerSheetPF2e",{enumerable:!0,get:function(){return sheet_1.ContainerSheetPF2e}})},26166:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.ContainerSheetPF2e=void 0;const physical_1=__webpack_require__(6560);class ContainerSheetPF2e extends physical_1.PhysicalItemSheetPF2e{async getData(options){return{...await super.getData(options),hasSidebar:!0,hasDetails:!0}}}exports.ContainerSheetPF2e=ContainerSheetPF2e},44252:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.isPhysicalData=exports.isItemSystemData=exports.isInventoryItem=exports.hasInvestedProperty=void 0;const _util_1=__webpack_require__(6945),values_1=__webpack_require__(66870);function isPhysicalData(source){return(0,_util_1.setHasElement)(values_1.PHYSICAL_ITEM_TYPES,source.type)}exports.isItemSystemData=function(data){return(0,_util_1.isObject)(data)&&(0,_util_1.isObject)(data.description)&&"string"==typeof data.description.value&&Array.isArray(data.rules)&&(null===data.slug||"string"==typeof data.slug)},exports.isPhysicalData=isPhysicalData,exports.hasInvestedProperty=function(source){return isPhysicalData(source)&&"invested"in source.system.equipped},exports.isInventoryItem=function(type){switch(type){case"armor":case"backpack":case"consumable":case"equipment":case"treasure":case"weapon":return!0}return!1}},67189:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.RANGE_TRAITS=exports.MystifiedTraits=exports.ITEM_CARRY_TYPES=void 0;class MystifiedTraits{static compile(){this.mystifiedTraits=new Set(["artifact","extradimensional","invested","shadow",...Object.keys(CONFIG.PF2E.consumableTraits).filter((t=>!["consumable","nonlethal"].includes(t)))].sort())}static has(trait){return this.mystifiedTraits.has(trait)}}exports.MystifiedTraits=MystifiedTraits,MystifiedTraits.mystifiedTraits=new Set;const ITEM_CARRY_TYPES=new Set(["held","worn","stowed","dropped"]);exports.ITEM_CARRY_TYPES=ITEM_CARRY_TYPES;exports.RANGE_TRAITS=["range-5","range-10","range-15","range-20","range-25","range-30","range-40","range-50","range-60","range-70","range-80","range-90","range-100","range-120","range-150","range-180","range-200","range-240","range-300","range-500","range-increment-5","range-increment-10","range-increment-15","range-increment-20","range-increment-30","range-increment-40","range-increment-50","range-increment-60","range-increment-70","range-increment-75","range-increment-80","range-increment-90","range-increment-100","range-increment-110","range-increment-120","range-increment-130","range-increment-140","range-increment-150","range-increment-160","range-increment-170","range-increment-180","range-increment-190","range-increment-200","range-increment-210","range-increment-220","range-increment-230","range-increment-240","range-increment-250","range-increment-260","range-increment-270","range-increment-280","range-increment-290","range-increment-300","range-increment-310","range-increment-320"]},26940:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0})},91603:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.DeityPF2e=void 0;const values_1=__webpack_require__(49976),_item_1=__webpack_require__(10843),_util_1=__webpack_require__(6945);class DeityPF2e extends _item_1.ItemPF2e{get category(){return this.system.category}get alignment(){return this.system.alignment.own}get favoredWeapons(){return[...this.system.weapons]}prepareBaseData(){if(super.prepareBaseData(),"philosophy"===this.category){const systemData=this.system;systemData.domains={primary:[],alternate:[]},systemData.font=[],systemData.spells={},systemData.weapons=[]}}prepareActorData(){var _a,_b;if(!this.actor.isOfType("character"))return void this.delete({render:!1});this.actor.deity=this;const{deities}=this.actor.system.details,systemData=this.system;deities.primary={alignment:deepClone(systemData.alignment),skill:deepClone(systemData.skill),weapons:deepClone(systemData.weapons)};for(const domain of this.system.domains.primary){const label=null===(_a=CONFIG.PF2E.deityDomains[domain])||void 0===_a?void 0:_a.label;deities.domains[domain]=null!=label?label:domain}const slug=null!==(_b=this.slug)&&void 0!==_b?_b:(0,_util_1.sluggify)(this.name),prefix="deity:primary",actorRollOptions=this.actor.rollOptions;actorRollOptions.all.deity=!0,actorRollOptions.all[`${prefix}:${slug}`]=!0;for(const baseType of this.favoredWeapons)actorRollOptions.all[`${prefix}:favored-weapon:${baseType}`]=!0;this.alignment&&(actorRollOptions.all[`${prefix}:alignment:${this.alignment.toLowerCase()}`]=!0);const followerAlignments=(this.system.alignment.follower.length>0?this.system.alignment.follower:Array.from(values_1.ALIGNMENTS)).map((a=>a.toLowerCase()));for(const alignment of followerAlignments)actorRollOptions.all[`${prefix}:alignment:follower:${alignment}`]=!0;actorRollOptions.all[`self:deity:${slug}`]=!0}setFavoredWeaponRank(){var _a;if(!this.actor.isOfType("character"))return;const favoredWeaponRank=this.actor.flags.pf2e.favoredWeaponRank;if(favoredWeaponRank>0){const proficiencies=this.actor.system.martial;for(const baseType of this.favoredWeapons)mergeObject(proficiencies,{[`weapon-base-${baseType}`]:{label:CONFIG.PF2E.baseWeaponTypes[baseType],rank:Math.max(Number(null===(_a=proficiencies[`weapon-base-${baseType}`])||void 0===_a?void 0:_a.rank)||0,favoredWeaponRank)}})}}getRollOptions(prefix=this.type){return[...super.getRollOptions(prefix),`${prefix?`${prefix}:`:""}category:${this.category}`].sort()}}exports.DeityPF2e=DeityPF2e},52970:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.DeitySource=exports.DeityData=exports.DeitySheetPF2e=exports.DeityPF2e=void 0;var document_1=__webpack_require__(91603);Object.defineProperty(exports,"DeityPF2e",{enumerable:!0,get:function(){return document_1.DeityPF2e}});var sheet_1=__webpack_require__(11880);Object.defineProperty(exports,"DeitySheetPF2e",{enumerable:!0,get:function(){return sheet_1.DeitySheetPF2e}});var data_1=__webpack_require__(26940);Object.defineProperty(exports,"DeityData",{enumerable:!0,get:function(){return data_1.DeityData}}),Object.defineProperty(exports,"DeitySource",{enumerable:!0,get:function(){return data_1.DeitySource}})},11880:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.DeitySheetPF2e=void 0;const _item_1=__webpack_require__(10843),base_1=__webpack_require__(22222),helpers_1=__webpack_require__(69554),_util_1=__webpack_require__(6945),from_uuids_1=__webpack_require__(16539);class DeitySheetPF2e extends base_1.ItemSheetPF2e{static get defaultOptions(){return{...super.defaultOptions,scrollY:[".item-details"],dragDrop:[{dropSelector:".sheet-header, .sheet-content"}]}}async getData(options){const sheetData=await super.getData(options),spellEntries=Object.entries(sheetData.data.spells),spells=(await(0,from_uuids_1.fromUUIDs)(Object.values(sheetData.data.spells))).filter((i=>i instanceof _item_1.SpellPF2e)).map((spell=>{var _a;const level=Number(null===(_a=spellEntries.find((([,uuid])=>uuid===spell.uuid)))||void 0===_a?void 0:_a.at(0));return{uuid:spell.uuid,level,name:spell.name,img:spell.img}})).sort(((spellA,spellB)=>spellA.level-spellB.level));return{...sheetData,hasDetails:!0,detailsTemplate:()=>"systems/pf2e/templates/items/deity-details.html",alignments:CONFIG.PF2E.alignments,atheistic:"philosophy"===this.item.category,skills:CONFIG.PF2E.skills,divineFonts:(0,helpers_1.createSheetOptions)({harm:"PF2E.Item.Deity.DivineFont.Harm",heal:"PF2E.Item.Deity.DivineFont.Heal"},sheetData.data.font),spells}}activateListeners($html){super.activateListeners($html);const html=$html.get(0),getInput=name=>html.querySelector(`input[name="${name}"]`);if((0,_util_1.tagify)(getInput("system.ability"),{whitelist:CONFIG.PF2E.abilities,maxTags:2}),(0,_util_1.tagify)(getInput("system.alignment.follower"),{whitelist:CONFIG.PF2E.alignments,maxTags:9}),"philosophy"===this.item.category)return;(0,_util_1.tagify)(getInput("system.weapons"),{whitelist:CONFIG.PF2E.baseWeaponTypes,maxTags:2}),(0,_util_1.tagify)(getInput("system.domains.primary"),{whitelist:CONFIG.PF2E.deityDomains,maxTags:4}),(0,_util_1.tagify)(getInput("system.domains.alternate"),{whitelist:CONFIG.PF2E.deityDomains,maxTags:4});const $clericSpells=$html.find(".cleric-spells");$clericSpells.find("a[data-action=view-spell]").on("click",(async event=>{var _a;const uuid=null!==(_a=$(event.currentTarget).closest("li").attr("data-uuid"))&&void 0!==_a?_a:"",spell=await fromUuid(uuid);if(!(spell instanceof _item_1.SpellPF2e))return this.render(!1),ui.notifications.error(`A spell with the UUID "${uuid}" no longer exists`);spell.sheet.render(!0)})),$clericSpells.find("a[data-action=remove-spell]").on("click",(async event=>{var _a,_b;const uuidToRemove=null!==(_a=$(event.currentTarget).closest("li").attr("data-uuid"))&&void 0!==_a?_a:"",[levelToRemove]=null!==(_b=Object.entries(this.item.system.spells).find((([_level,uuid])=>uuid===uuidToRemove)))&&void 0!==_b?_b:[];levelToRemove?await this.item.update({[`system.spells.-=${levelToRemove}`]:null}):this.render(!1)})),$clericSpells.find("input[data-action=update-spell-level]").on("change",(async event=>{const oldLevel=Number(event.target.dataset.level),uuid=this.item.system.spells[oldLevel];if(!uuid)return void this.render(!1);const newLevel=Math.clamped(Number(event.target.value)||1,1,10);oldLevel!==newLevel&&await this.item.update({[`system.spells.-=${oldLevel}`]:null,[`system.spells.${newLevel}`]:uuid})}))}async _onDrop(event){if(!this.isEditable)return;const item=await(async()=>{var _a,_b;try{const dataString=null===(_a=event.dataTransfer)||void 0===_a?void 0:_a.getData("text/plain"),dropData=JSON.parse(null!=dataString?dataString:"");return null!==(_b=await _item_1.ItemPF2e.fromDropData(dropData))&&void 0!==_b?_b:null}catch(_c){return null}})();if(!(item instanceof _item_1.SpellPF2e))throw(0,_util_1.ErrorPF2e)("Invalid item drop on deity sheet");item.isCantrip||item.isFocusSpell||item.isRitual?ui.notifications.error("PF2E.Item.Deity.ClericSpells.DropError",{localize:!0}):await this.item.update({[`system.spells.${item.level}`]:item.uuid})}async _updateObject(event,formData){Array.isArray(formData["system.font"])&&(formData["system.font"]=formData["system.font"].filter((f=>!!f)));for(const property of["system.alignment.own","system.skill"])"string"==typeof formData[property]&&(formData[property]||(formData[property]=null));return super._updateObject(event,formData)}}exports.DeitySheetPF2e=DeitySheetPF2e},84240:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0})},13930:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.EffectPF2e=void 0;const abstract_effect_1=__webpack_require__(654),_util_1=__webpack_require__(6945);class EffectPF2e extends abstract_effect_1.AbstractEffectPF2e{get badge(){return this.system.badge}get level(){return this.system.level.value}get isExpired(){return this.system.expired}get totalDuration(){var _a;const{duration}=this.system;return["unlimited","encounter"].includes(duration.unit)?1/0:duration.value*(null!==(_a=EffectPF2e.DURATION_UNITS[duration.unit])&&void 0!==_a?_a:0)}get remainingDuration(){var _a,_b,_c,_d,_e;const duration=this.totalDuration;if("encounter"===this.system.duration.unit){const isExpired=this.system.expired;return{expired:isExpired,remaining:isExpired?0:1/0}}if(duration===1/0)return{expired:!1,remaining:1/0};{const remaining=(null!==(_b=null===(_a=this.system.start)||void 0===_a?void 0:_a.value)&&void 0!==_b?_b:0)+duration-game.time.worldTime,result={remaining,expired:remaining<=0};if(0===result.remaining&&void 0!==ui.combat&&(null===(_c=game.combat)||void 0===_c?void 0:_c.active)&&game.combat.combatant&&game.combat.turns.length>game.combat.turn){const initiative=null!==(_d=game.combat.combatant.initiative)&&void 0!==_d?_d:0;initiative===this.system.start.initiative?result.expired="turn-end"!==this.system.duration.expiry:result.expired=initiative<(null!==(_e=this.system.start.initiative)&&void 0!==_e?_e:0)}return result}}get unidentified(){var _a;return null!==(_a=this.system.unidentified)&&void 0!==_a&&_a}get fromAura(){return!!this.flags.pf2e.aura}prepareBaseData(){var _a;super.prepareBaseData();const{system}=this;["unlimited","encounter"].includes(system.duration.unit)?system.duration.expiry=null:(_a=system.duration).expiry||(_a.expiry="turn-start"),system.expired=this.remainingDuration.expired}prepareRuleElements(options){var _a;if(game.settings.get("pf2e","automation.effectExpiration")&&this.isExpired&&(null===(_a=this.actor)||void 0===_a?void 0:_a.items.has(this.id)))for(const rule of this.system.rules)rule.ignored=!0;return super.prepareRuleElements(options)}async increase(){var _a;if("counter"===(null===(_a=this.system.badge)||void 0===_a?void 0:_a.type)&&!this.isExpired){const value=this.system.badge.value+1;await this.update({system:{badge:{value}}})}}async decrease(){var _a;if("counter"!==(null===(_a=this.system.badge)||void 0===_a?void 0:_a.type)||1===this.system.badge.value||this.isExpired)return void await this.delete();const value=this.system.badge.value-1;await this.update({system:{badge:{value}}})}getRollOptions(prefix=this.type){var _a;const slug=null!==(_a=this.slug)&&void 0!==_a?_a:(0,_util_1.sluggify)(this.name),delimitedPrefix=prefix?`${prefix}:`:"",trimmedSlug=slug.replace(/^(?:spell-)?(?:effect|stance)-/,""),options=super.getRollOptions(prefix);return options.findSplice((o=>o===`${delimitedPrefix}${slug}`),`${delimitedPrefix}${trimmedSlug}`),options}async _preCreate(data,options,user){var _a,_b,_c;if(this.isOwned){const initiative=game.combat&&game.combat.turns.length>game.combat.turn&&null!==(_c=null===(_b=null===(_a=game.combat)||void 0===_a?void 0:_a.turns[game.combat.turn])||void 0===_b?void 0:_b.initiative)&&void 0!==_c?_c:null;this.updateSource({"system.start":{value:game.time.worldTime,initiative}})}return super._preCreate(data,options,user)}async _preUpdate(changed,options,user){var _a,_b;const duration=null===(_a=changed.system)||void 0===_a?void 0:_a.duration;"unlimited"===(null==duration?void 0:duration.unit)?duration.expiry=null:"string"!=typeof(null==duration?void 0:duration.unit)||["unlimited","encounter"].includes(duration.unit)||(duration.expiry||(duration.expiry="turn-start"),-1===duration.value&&(duration.value=1));const badge=null===(_b=changed.system)||void 0===_b?void 0:_b.badge;return(0,_util_1.isObject)(badge)&&(null==badge?void 0:badge.type)&&!(0,_util_1.objectHasKey)(badge,"value")&&(badge.value=1),super._preUpdate(changed,options,user)}_onCreate(data,options,userId){var _a,_b,_c;super._onCreate(data,options,userId),this.flags.pf2e.aura&&!(null===(_a=game.combat)||void 0===_a?void 0:_a.started)||null===(_c=null===(_b=this.actor)||void 0===_b?void 0:_b.getActiveTokens().shift())||void 0===_c||_c.showFloatyText({create:this})}_onDelete(options,userId){var _a,_b,_c;this.actor&&game.pf2e.effectTracker.unregister(this),super._onDelete(options,userId),this.flags.pf2e.aura&&!(null===(_a=game.combat)||void 0===_a?void 0:_a.started)||null===(_c=null===(_b=this.actor)||void 0===_b?void 0:_b.getActiveTokens().shift())||void 0===_c||_c.showFloatyText({delete:this})}}exports.EffectPF2e=EffectPF2e,EffectPF2e.DURATION_UNITS={rounds:6,minutes:60,hours:3600,days:86400}},57785:function(__unused_webpack_module,exports,__webpack_require__){var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k);var desc=Object.getOwnPropertyDescriptor(m,k);desc&&!("get"in desc?!m.__esModule:desc.writable||desc.configurable)||(desc={enumerable:!0,get:function(){return m[k]}}),Object.defineProperty(o,k2,desc)}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)"default"===p||Object.prototype.hasOwnProperty.call(exports,p)||__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.EffectSheetPF2e=exports.EffectPF2e=void 0;var document_1=__webpack_require__(13930);Object.defineProperty(exports,"EffectPF2e",{enumerable:!0,get:function(){return document_1.EffectPF2e}});var sheet_1=__webpack_require__(25531);Object.defineProperty(exports,"EffectSheetPF2e",{enumerable:!0,get:function(){return sheet_1.EffectSheetPF2e}}),__exportStar(__webpack_require__(84240),exports)},25531:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.EffectSheetPF2e=void 0;const base_1=__webpack_require__(22222);class EffectSheetPF2e extends base_1.ItemSheetPF2e{async getData(options){return{...await super.getData(options),hasSidebar:!0,hasDetails:!1,itemType:game.i18n.localize("PF2E.LevelLabel")}}activateListeners($html){super.activateListeners($html),$html.find("[data-action=badge-add]").on("click",(()=>{this.item.update({system:{badge:{type:"counter",value:1}}})})),$html.find("[data-action=badge-delete]").on("click",(()=>{this.item.update({"system.-=badge":null})}))}}exports.EffectSheetPF2e=EffectSheetPF2e},42087:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.EquipmentPF2e=void 0;const physical_1=__webpack_require__(6560),localize_1=__webpack_require__(41332),_util_1=__webpack_require__(6945);class EquipmentPF2e extends physical_1.PhysicalItemPF2e{get otherTags(){return new Set(this.system.traits.otherTags)}prepareBaseData(){var _a,_b;super.prepareBaseData(),null!==(_a=(_b=this.system.traits).otherTags)&&void 0!==_a||(_b.otherTags=[])}prepareActorData(){var _a,_b;if((null===(_a=this.actor)||void 0===_a?void 0:_a.isOfType("character"))&&this.isEquipped&&this.isHeld&&this.otherTags.has("implement")){const slug=null!==(_b=this.slug)&&void 0!==_b?_b:(0,_util_1.sluggify)(this.name);this.actor.rollOptions.all[`implement:${slug}`]=!0}}async getChatData(htmlOptions={}){const data=this.system,traits=this.traitChatData(CONFIG.PF2E.equipmentTraits),properties=[this.isEquipped?game.i18n.localize("PF2E.EquipmentEquippedLabel"):null].filter((p=>p));return this.processChatData(htmlOptions,{...data,properties,traits})}generateUnidentifiedName({typeOnly=!1}={typeOnly:!1}){var _a,_b,_c,_d;const translations=localize_1.LocalizePF2e.translations.PF2E.identification,slotType=/book\b/.test(null!==(_a=this.slug)&&void 0!==_a?_a:"")?"Book":/\bring\b/.test(null!==(_b=this.slug)&&void 0!==_b?_b:"")?"Ring":null!==(_d=null===(_c=this.system.usage.value)||void 0===_c?void 0:_c.replace(/^worn/,"").capitalize())&&void 0!==_d?_d:"",itemType=(0,_util_1.objectHasKey)(translations.UnidentifiedType,slotType)?translations.UnidentifiedType[slotType]:translations.UnidentifiedType.Object;if(typeOnly)return itemType;const formatString=translations.UnidentifiedItem;return game.i18n.format(formatString,{item:itemType})}}exports.EquipmentPF2e=EquipmentPF2e},87533:function(__unused_webpack_module,exports,__webpack_require__){var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k);var desc=Object.getOwnPropertyDescriptor(m,k);desc&&!("get"in desc?!m.__esModule:desc.writable||desc.configurable)||(desc={enumerable:!0,get:function(){return m[k]}}),Object.defineProperty(o,k2,desc)}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)"default"===p||Object.prototype.hasOwnProperty.call(exports,p)||__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.EquipmentSheetPF2e=exports.EquipmentPF2e=void 0;var document_1=__webpack_require__(42087);Object.defineProperty(exports,"EquipmentPF2e",{enumerable:!0,get:function(){return document_1.EquipmentPF2e}});var sheet_1=__webpack_require__(77165);Object.defineProperty(exports,"EquipmentSheetPF2e",{enumerable:!0,get:function(){return sheet_1.EquipmentSheetPF2e}}),__exportStar(__webpack_require__(82190),exports)},77165:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.EquipmentSheetPF2e=void 0;const physical_1=__webpack_require__(6560),helpers_1=__webpack_require__(69554);class EquipmentSheetPF2e extends physical_1.PhysicalItemSheetPF2e{async getData(options){const item=this.item;return{...await super.getData(options),hasDetails:!0,hasSidebar:!0,otherTags:(0,helpers_1.createSheetTags)(CONFIG.PF2E.otherArmorTags,item.system.traits.otherTags)}}}exports.EquipmentSheetPF2e=EquipmentSheetPF2e},82190:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0})},80500:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.FeatPF2e=void 0;const __1=__webpack_require__(10843),_util_1=__webpack_require__(6945);class FeatPF2e extends __1.ItemPF2e{get featType(){return this.system.featType.value}get level(){return this.system.level.value}get traits(){return new Set(this.system.traits.value)}get actionCost(){const actionType=this.system.actionType.value||"passive";return"passive"===actionType?null:{type:actionType,value:this.system.actions.value}}get frequency(){var _a;return null!==(_a=this.system.frequency)&&void 0!==_a?_a:null}get isFeature(){return["classfeature","ancestryfeature"].includes(this.featType)}get isFeat(){return!this.isFeature}get onlyLevel1(){return this.system.onlyLevel1}get maxTakeable(){return this.system.maxTakable}prepareBaseData(){var _a,_b,_c,_d,_e;super.prepareBaseData(),this.category=null,(_c=this.system).location||(_c.location=null);const traits=this.system.traits.value;"general"!==this.featType||traits.includes("general")||traits.push("general"),"skill"===this.featType&&(traits.includes("skill")||traits.push("skill"),traits.includes("general")||traits.includes("archetype")||traits.push("general")),traits.includes("dedication")&&(this.featType,traits.includes("archetype")||traits.push("archetype")),this.system.traits.value.includes("lineage")&&(this.system.onlyLevel1=!0),null!==(_a=(_d=this.system).maxTakable)&&void 0!==_a||(_d.maxTakable=1/0),this.system.onlyLevel1&&(this.system.maxTakable=1),this.actor&&this.system.frequency&&(null!==(_b=(_e=this.system.frequency).value)&&void 0!==_b||(_e.value=this.system.frequency.max))}prepareActorData(){var _a;const prefix=this.isFeature?"feature":"feat",slug=null!==(_a=this.slug)&&void 0!==_a?_a:(0,_util_1.sluggify)(this.name);this.actor.rollOptions.all[`${prefix}:${slug}`]=!0}async getChatData(htmlOptions={}){const systemData=this.system,properties=[`Level ${systemData.level.value||0}`,systemData.actionType.value?CONFIG.PF2E.actionTypes[systemData.actionType.value]:null].filter((p=>p)),traits=this.traitChatData(CONFIG.PF2E.featTraits);return this.processChatData(htmlOptions,{...systemData,properties,traits})}getRollOptions(prefix="feat"){const delimitedPrefix=(prefix="feat"===prefix&&this.isFeature?"feature":prefix)?`${prefix}:`:"";return[...super.getRollOptions(prefix).filter((o=>!o.endsWith("level:0"))),`${delimitedPrefix}${this.isFeature?"feature-type":"feat-type"}:${this.featType.replace("feature","")}`]}async _preCreate(data,options,user){return this.parent||(this.updateSource({"system.location":null}),this._source.system.frequency&&this.updateSource({"system.frequency.-=value":null})),super._preCreate(data,options,user)}async _preUpdate(changed,options,user){var _a,_b,_c,_d,_e,_f;"string"==typeof(null===(_a=changed.system)||void 0===_a?void 0:_a.location)&&((_f=changed.system).location||(_f.location=null));const actionCount=null===(_b=changed.system)||void 0===_b?void 0:_b.actions;actionCount&&(actionCount.value=Math.clamped(Number(actionCount.value),0,3)||null);const traits=null===(_d=null===(_c=changed.system)||void 0===_c?void 0:_c.traits)||void 0===_d?void 0:_d.value;this.isFeature&&changed.system?(changed.system.onlyLevel1=!1,changed.system.maxTakable=1,"ancestry"!==this.featType&&Array.isArray(traits)&&traits.findSplice((t=>"lineage"===t))):(Array.isArray(traits)&&traits.includes("lineage")||(null===(_e=changed.system)||void 0===_e?void 0:_e.onlyLevel1))&&mergeObject(changed,{system:{maxTakable:1}}),await super._preUpdate(changed,options,user)}_onCreate(data,options,userId){var _a,_b;if(super._onCreate(data,options,userId),!(this.isOwner&&(null===(_a=this.actor)||void 0===_a?void 0:_a.isOfType("character"))&&this.isFeat))return;const actorItemNames={actor:this.actor.name,item:this.name};if(this.onlyLevel1&&this.actor.level>1){const formatParams={...actorItemNames,actorLevel:this.actor.level},warning=game.i18n.format("PF2E.Item.Feat.Warning.TakenAfterLevel1",formatParams);ui.notifications.warn(warning)}if(this.flags.pf2e.grantedBy)return;const slug=null!==(_b=this.slug)&&void 0!==_b?_b:(0,_util_1.sluggify)(this.name),timesTaken=this.actor.itemTypes.feat.filter((f=>f.slug===slug)).length,{maxTakeable}=this;if(1===maxTakeable&&timesTaken>1)ui.notifications.warn(game.i18n.format("PF2E.Item.Feat.Warning.TakenMoreThanOnce",actorItemNames));else if(timesTaken>maxTakeable){const formatParams={...actorItemNames,maxTakeable,timesTaken};ui.notifications.warn(game.i18n.format("PF2E.Item.Feat.Warning.TakenMoreThanMax",formatParams))}}}exports.FeatPF2e=FeatPF2e},28960:function(__unused_webpack_module,exports,__webpack_require__){var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k);var desc=Object.getOwnPropertyDescriptor(m,k);desc&&!("get"in desc?!m.__esModule:desc.writable||desc.configurable)||(desc={enumerable:!0,get:function(){return m[k]}}),Object.defineProperty(o,k2,desc)}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)"default"===p||Object.prototype.hasOwnProperty.call(exports,p)||__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.FeatSheetPF2e=exports.FeatPF2e=void 0;var document_1=__webpack_require__(80500);Object.defineProperty(exports,"FeatPF2e",{enumerable:!0,get:function(){return document_1.FeatPF2e}});var sheet_1=__webpack_require__(44225);Object.defineProperty(exports,"FeatSheetPF2e",{enumerable:!0,get:function(){return sheet_1.FeatSheetPF2e}}),__exportStar(__webpack_require__(82477),exports)},44225:function(__unused_webpack_module,exports,__webpack_require__){var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.FeatSheetPF2e=void 0;const base_1=__webpack_require__(22222),tagify_1=__importDefault(__webpack_require__(88537));class FeatSheetPF2e extends base_1.ItemSheetPF2e{get validTraits(){return CONFIG.PF2E.featTraits}async getData(options){var _a,_b;const sheetData=await super.getData(options),hasLineageTrait=this.item.traits.has("lineage");return{...sheetData,hasSidebar:!0,itemType:game.i18n.localize(this.item.isFeature?"PF2E.LevelLabel":"PF2E.Item.Feat.LevelLabel"),featTypes:CONFIG.PF2E.featTypes,actionTypes:CONFIG.PF2E.actionTypes,actionsNumber:CONFIG.PF2E.actionsNumber,frequencies:CONFIG.PF2E.frequencies,categories:CONFIG.PF2E.actionCategories,damageTypes:{...CONFIG.PF2E.damageTypes,...CONFIG.PF2E.healingTypes},prerequisites:JSON.stringify(null!==(_b=null===(_a=this.item.system.prerequisites)||void 0===_a?void 0:_a.value)&&void 0!==_b?_b:[]),isFeat:this.item.isFeat,mandatoryTakeOnce:hasLineageTrait||sheetData.data.onlyLevel1,hasLineageTrait}}activateListeners($html){var _a,_b;super.activateListeners($html);const html=$html[0],prerequisites=html.querySelector('input[name="system.prerequisites.value"]');prerequisites&&new tagify_1.default(prerequisites,{editTags:1}),null===(_a=html.querySelector("a[data-action=frequency-add]"))||void 0===_a||_a.addEventListener("click",(()=>{const per=CONFIG.PF2E.frequencies.day;this.item.update({system:{frequency:{max:1,per}}})})),null===(_b=html.querySelector("a[data-action=frequency-delete]"))||void 0===_b||_b.addEventListener("click",(()=>{this.item.update({"system.-=frequency":null})}))}_updateObject(event,formData){return Array.isArray(formData["system.prerequisites.value"])&&(formData["system.prerequisites.value"]=formData["system.prerequisites.value"].map((value=>({value})))),super._updateObject(event,formData)}}exports.FeatSheetPF2e=FeatSheetPF2e},82477:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.FEAT_TYPES=void 0;const FEAT_TYPES=new Set(["ancestry","ancestryfeature","class","classfeature","skill","general","archetype","bonus","pfsboon","deityboon","curse"]);exports.FEAT_TYPES=FEAT_TYPES},97815:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0})},67256:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.HeritagePF2e=void 0;const _item_1=__webpack_require__(10843),_util_1=__webpack_require__(6945);class HeritagePF2e extends _item_1.ItemPF2e{get traits(){return new Set(this.system.traits.value)}get rarity(){return this.system.traits.rarity}prepareActorData(){var _a;this.actor.heritage=this,this.actor.system.traits.value.push(...this.traits);const slug=null!==(_a=this.slug)&&void 0!==_a?_a:(0,_util_1.sluggify)(this.name);this.actor.system.details.heritage={name:this.name,trait:slug in CONFIG.PF2E.ancestryTraits?slug:null},this.actor.rollOptions.all[`self:heritage:${slug}`]=!0}}exports.HeritagePF2e=HeritagePF2e},93090:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.HeritageSheetPF2e=exports.HeritageData=exports.HeritagePF2e=void 0;var document_1=__webpack_require__(67256);Object.defineProperty(exports,"HeritagePF2e",{enumerable:!0,get:function(){return document_1.HeritagePF2e}});var data_1=__webpack_require__(97815);Object.defineProperty(exports,"HeritageData",{enumerable:!0,get:function(){return data_1.HeritageData}});var sheet_1=__webpack_require__(60484);Object.defineProperty(exports,"HeritageSheetPF2e",{enumerable:!0,get:function(){return sheet_1.HeritageSheetPF2e}})},60484:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.HeritageSheetPF2e=void 0;const _item_1=__webpack_require__(10843),base_1=__webpack_require__(22222),_util_1=__webpack_require__(6945);class HeritageSheetPF2e extends base_1.ItemSheetPF2e{static get defaultOptions(){return{...super.defaultOptions,dragDrop:[{dropSelector:".sheet-sidebar"}]}}async getData(options){const sheetData=await super.getData(options),ancestry=await(async()=>{const item=this.item.system.ancestry?await fromUuid(this.item.system.ancestry.uuid):null;return item instanceof _item_1.AncestryPF2e?item:null})();return{...sheetData,ancestry,ancestryRefBroken:!!sheetData.data.ancestry&&null===ancestry,hasSidebar:!0,hasDetails:!1,sidebarTemplate:()=>"systems/pf2e/templates/items/heritage-sidebar.html"}}activateListeners($html){super.activateListeners($html),$html.find('a[data-action="remove-ancestry"]').on("click",(()=>{this.item.update({"system.ancestry":null})}))}async _onDrop(event){const item=await(async()=>{var _a,_b;try{const dataString=null===(_a=event.dataTransfer)||void 0===_a?void 0:_a.getData("text/plain"),dropData=JSON.parse(null!=dataString?dataString:"");return null!==(_b=await _item_1.ItemPF2e.fromDropData(dropData))&&void 0!==_b?_b:null}catch(_c){return null}})();if(!(item instanceof _item_1.AncestryPF2e))throw(0,_util_1.ErrorPF2e)("Invalid item drop on heritage sheet");const ancestryReference={name:item.name,uuid:item.uuid};await this.item.update({"system.ancestry":ancestryReference})}}exports.HeritageSheetPF2e=HeritageSheetPF2e},79206:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.getUnidentifiedPlaceholderImage=exports.identifyItem=exports.isMagical=void 0;const dc_1=__webpack_require__(84372),values_1=__webpack_require__(12759),_util_1=__webpack_require__(6945);function identifyMagic(item,baseDc,notMatchingTraditionModifier){const result={occult:baseDc,primal:baseDc,divine:baseDc,arcane:baseDc},traditions=function(item){const traits=item.system.traits.value;return new Set(traits.filter((t=>(0,_util_1.setHasElement)(values_1.MAGIC_TRADITIONS,t))))}(item);for(const key of values_1.MAGIC_TRADITIONS)traditions.size>0&&!traditions.has(key)&&(result[key]=baseDc+notMatchingTraditionModifier);return{arc:result.arcane,nat:result.primal,rel:result.divine,occ:result.occult}}exports.isMagical=function(item){const{traits}=item;return["magical",...Array.from(values_1.MAGIC_TRADITIONS)].some((t=>traits.has(t)))},exports.identifyItem=function(item,{proficiencyWithoutLevel=!1,notMatchingTraditionModifier}){const baseDC=(0,dc_1.calculateDC)(item.level,{proficiencyWithoutLevel}),rarity=function(item){return item.traits.has("cursed")?"unique":item.rarity}(item),dc=(0,dc_1.adjustDCByRarity)(baseDC,rarity);return item.isMagical?identifyMagic(item,dc,notMatchingTraditionModifier):item.isAlchemical?{cra:dc}:{dc}},exports.getUnidentifiedPlaceholderImage=function(item){return`systems/pf2e/icons/unidentified_item_icons/${(()=>{if(item.isOfType("weapon")){const{traits}=item;return traits.has("bomb")?"alchemical_bomb":traits.has("staff")?"staves":traits.has("artifact")?"artifact":"weapon"}if(item.isOfType("armor"))return"shield"===item.category?"shields":"armor";if(item.isOfType("consumable"))switch(item.consumableType){case"ammo":return"ammunition";case"oil":return"oils";case"scroll":return"infernal-contracts";case"talisman":return"talisman";case"elixir":case"mutagen":return"alchemical_elixir";case"poison":return"alchemical_poison";case"tool":return"alchemical_tool";case"wand":return"wands";case"potion":return"potions";default:return item.traits.has("drug")?"drugs":"other-consumables"}else if(item.isOfType("equipment")&&item.traits.has("precious"))return"material-chunk";return"adventuring_gear"})()}.webp`}},10843:function(__unused_webpack_module,exports,__webpack_require__){var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k);var desc=Object.getOwnPropertyDescriptor(m,k);desc&&!("get"in desc?!m.__esModule:desc.writable||desc.configurable)||(desc={enumerable:!0,get:function(){return m[k]}}),Object.defineProperty(o,k2,desc)}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)"default"===p||Object.prototype.hasOwnProperty.call(exports,p)||__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:!0}),__exportStar(__webpack_require__(24227),exports),__exportStar(__webpack_require__(6560),exports),__exportStar(__webpack_require__(30301),exports),__exportStar(__webpack_require__(654),exports),__exportStar(__webpack_require__(93390),exports),__exportStar(__webpack_require__(98713),exports),__exportStar(__webpack_require__(83200),exports),__exportStar(__webpack_require__(70432),exports),__exportStar(__webpack_require__(87614),exports),__exportStar(__webpack_require__(43565),exports),__exportStar(__webpack_require__(16730),exports),__exportStar(__webpack_require__(74145),exports),__exportStar(__webpack_require__(55323),exports),__exportStar(__webpack_require__(52970),exports),__exportStar(__webpack_require__(57785),exports),__exportStar(__webpack_require__(87533),exports),__exportStar(__webpack_require__(28960),exports),__exportStar(__webpack_require__(93090),exports),__exportStar(__webpack_require__(32919),exports),__exportStar(__webpack_require__(97343),exports),__exportStar(__webpack_require__(17923),exports),__exportStar(__webpack_require__(12114),exports),__exportStar(__webpack_require__(70267),exports),__exportStar(__webpack_require__(14580),exports),__exportStar(__webpack_require__(14299),exports),__exportStar(__webpack_require__(49238),exports)},15746:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.KitPF2e=void 0;const index_1=__webpack_require__(10843),helpers_1=__webpack_require__(73715),values_1=__webpack_require__(66870),_util_1=__webpack_require__(6945),from_uuids_1=__webpack_require__(16539);class KitPF2e extends index_1.ItemPF2e{get entries(){return Object.values(this.system.items)}get price(){var _a;return{value:new helpers_1.CoinsPF2e(this.system.price.value),per:null!==(_a=this.system.price.per)&&void 0!==_a?_a:1}}async inflate({entries=this.entries,containerId=null}={}){const itemUUIDs=entries.map((e=>e.uuid)),items=await(0,from_uuids_1.fromUUIDs)(itemUUIDs);if(entries.length!==items.length)throw(0,_util_1.ErrorPF2e)(`Some items from ${this.name} were not found`);return items.every((i=>i instanceof index_1.ItemPF2e))?items.reduce((async(promise,item,index)=>{const prepared=await promise,clone=item.clone({_id:randomID()},{keepId:!0}),entry=entries[index];if(clone instanceof index_1.PhysicalItemPF2e&&clone.updateSource({"system.quantity":entry.quantity,"system.containerId":containerId}),clone instanceof index_1.ContainerPF2e&&entry.items){const contents=await this.inflate({entries:Object.values(entry.items),containerId:clone.id});prepared.push(clone,...contents)}else if(clone instanceof KitPF2e){const inflatedKit=await clone.inflate({containerId});prepared.push(...inflatedKit)}else clone instanceof index_1.PhysicalItemPF2e&&prepared.push(clone);return prepared}),[]):[]}async _preUpdate(changed,options,user){var _a;if(!changed.system)return await super._preUpdate(changed,options,user);if((0,_util_1.isObject)(null===(_a=changed.system)||void 0===_a?void 0:_a.price)){const price=changed.system.price;for(const denomination of values_1.DENOMINATIONS)0===price[denomination]&&(price["-=denomination"]=null)}await super._preUpdate(changed,options,user)}async dumpContents({actor,containerId=null}){const sources=(await this.inflate({containerId})).map((i=>i.toObject()));await actor.createEmbeddedDocuments("Item",sources,{keepId:!0})}}exports.KitPF2e=KitPF2e},32919:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.KitSheetPF2e=exports.KitPF2e=void 0;var document_1=__webpack_require__(15746);Object.defineProperty(exports,"KitPF2e",{enumerable:!0,get:function(){return document_1.KitPF2e}});var sheet_1=__webpack_require__(81714);Object.defineProperty(exports,"KitSheetPF2e",{enumerable:!0,get:function(){return sheet_1.KitSheetPF2e}})},81714:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.KitSheetPF2e=void 0;const physical_1=__webpack_require__(6560),_util_1=__webpack_require__(6945),base_1=__webpack_require__(22222),index_1=__webpack_require__(32919);class KitSheetPF2e extends base_1.ItemSheetPF2e{static get defaultOptions(){return{...super.defaultOptions,scrollY:[".item-details"],dragDrop:[{dropSelector:".item-details"}]}}async getData(options){const items=Object.fromEntries(Object.entries(this.item.system.items).map((([key,ref])=>[key,{...ref,fromWorld:ref.uuid.startsWith("Item.")}])));return{...await super.getData(options),priceString:this.item.price.value,items,hasSidebar:!0,hasDetails:!0}}async _onDrop(event){var _a,_b,_c,_d,_e,_f;event.preventDefault();const dragData=null===(_a=event.dataTransfer)||void 0===_a?void 0:_a.getData("text/plain"),dragItem=JSON.parse(null!=dragData?dragData:""),containerId=null!==(_b=event.target.dataset.containerId)&&void 0!==_b?_b:null===(_c=event.target.closest("[data-container-id]"))||void 0===_c?void 0:_c.dataset.containerId;if("Item"!==dragItem.type)return;const item=await fromUuid(null!==(_d=dragItem.uuid)&&void 0!==_d?_d:"");if(!(item instanceof physical_1.PhysicalItemPF2e||item instanceof index_1.KitPF2e))return;const entry={uuid:item.uuid,img:item.img,quantity:1,name:item.name,isContainer:"backpack"===item.type&&!containerId,items:{}};let id,{items}=this.item.system,pathPrefix="system.items";void 0!==containerId&&(pathPrefix=`${pathPrefix}.${containerId}.items`,items=null!==(_f=null===(_e=items[containerId])||void 0===_e?void 0:_e.items)&&void 0!==_f?_f:{});do{id=randomID(5)}while(items[id]);await this.item.update({[`${pathPrefix}.${id}`]:entry})}async removeItem(event){var _a,_b;const target=(0,_util_1.htmlClosest)(null!==(_a=event.currentTarget)&&void 0!==_a?_a:null,"li"),index=null==target?void 0:target.dataset.index;if(!index)return this.item;const containerId=null===(_b=target.closest("[data-container-id]"))||void 0===_b?void 0:_b.dataset.containerId,path=containerId?`${containerId}.items.-=${index}`:`-=${target.dataset.index}`;return this.item.update({[`system.items.${path}`]:null})}activateListeners($html){super.activateListeners($html);const html=$html[0];for(const link of(0,_util_1.htmlQueryAll)(html,"[data-action=remove]"))link.addEventListener("click",(event=>{this.removeItem(event)}))}async _updateObject(event,formData){return formData["system.price.value"]&&(formData["system.price.value"]=physical_1.CoinsPF2e.fromString(String(formData["system.price.value"]))),super._updateObject(event,formData)}}exports.KitSheetPF2e=KitSheetPF2e},97343:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.LorePF2e=void 0;const base_1=__webpack_require__(24227);class LorePF2e extends base_1.ItemPF2e{}exports.LorePF2e=LorePF2e},34847:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.MeleePF2e=void 0;const values_1=__webpack_require__(49976),base_1=__webpack_require__(24227),dice_1=__webpack_require__(18235),damage_1=__webpack_require__(12227);class MeleePF2e extends base_1.ItemPF2e{get traits(){return new Set(this.system.traits.value)}get isMelee(){return"melee"===this.system.weaponType.value}get isRanged(){return"ranged"===this.system.weaponType.value}get isThrown(){return this.isRanged&&this.system.traits.value.some((t=>t.startsWith("thrown")))}get ability(){const{traits}=this;return this.isMelee?traits.has("finesse")?"dex":"str":traits.has("brutal")?"str":"dex"}get attackModifier(){return Number(this.system.bonus.value)||0}get reach(){var _a,_b;if(this.isRanged)return null;const reachTrait=this.system.traits.value.find((t=>/^reach-\d+$/.test(t)));return reachTrait?Number(reachTrait.replace("reach-","")):values_1.SIZE_TO_REACH[null!==(_b=null===(_a=this.actor)||void 0===_a?void 0:_a.size)&&void 0!==_b?_b:"med"]}get rangeIncrement(){if(this.isMelee)return null;const incrementTrait=this.system.traits.value.find((t=>/^(?:range(?:-increment)?|thrown)-\d+$/.test(t))),increment=Number(null==incrementTrait?void 0:incrementTrait.replace(/\D/g,""))||10;return Number.isInteger(increment)?increment:null}get maxRange(){if(this.isMelee)return null;const rangeTrait=this.system.traits.value.find((t=>/^range-\d+$/.test(t))),range=Number(null==rangeTrait?void 0:rangeTrait.replace(/\D/g,""));if(Number.isInteger(range))return range;const rangeIncrement=this.rangeIncrement;return"number"==typeof rangeIncrement?6*rangeIncrement:null}get baseDamage(){const instance=Object.values(this.system.damageRolls).shift();return instance?damage_1.WeaponDamagePF2e.npcDamageToWeaponDamage(instance):{dice:0,die:null,modifier:0,damageType:"untyped"}}get dealsDamage(){const{baseDamage}=this;return baseDamage.dice>0||baseDamage.modifier>0}get attackEffects(){return this.system.attackEffects.value}prepareBaseData(){super.prepareBaseData(),this.system.material={precious:null}}prepareActorData(){var _a,_b;if(!(null===(_a=this.actor)||void 0===_a?void 0:_a.isOfType("npc")))return;const damageInstances=Object.values(this.system.damageRolls);for(const instance of Object.values(this.system.damageRolls)){try{instance.damage=new Roll(instance.damage).formula}catch(_c){const message=`Unable to parse damage formula on NPC attack ${this.name}`;console.warn(`PF2e System | ${message}`),instance.damage="1d4"}const roll=new Roll(instance.damage),{terms}=roll,{isElite,isWeak}=this.actor;if((isElite||isWeak)&&0===damageInstances.indexOf(instance)){const modifier=null!==(_b=[...terms].reverse().find((t=>t instanceof NumericTerm)))&&void 0!==_b?_b:new NumericTerm({number:0}),previousTerm=terms[terms.indexOf(modifier)-1],signFlip=previousTerm instanceof OperatorTerm&&"-"===previousTerm.operator?-1:1,baseValue=modifier.number*signFlip,adjustedBase=baseValue+(isElite?2:-2);if(modifier.number=Math.abs(adjustedBase),previousTerm instanceof OperatorTerm&&(baseValue<0&&adjustedBase>=0&&"-"===previousTerm.operator&&(previousTerm.operator="+"),baseValue>=0&&adjustedBase<0&&"+"===previousTerm.operator&&(previousTerm.operator="-")),!terms.includes(modifier)){const operator=new OperatorTerm({operator:adjustedBase>=0?"+":"-"});terms.push(operator,modifier)}instance.damage=(0,dice_1.combineTerms)(Roll.fromTerms(terms).formula).formula}else instance.damage=roll.formula}}getRollOptions(prefix=this.type){const baseOptions=super.getRollOptions(prefix),delimitedPrefix=prefix?`${prefix}:`:"";return[baseOptions,Object.entries({equipped:!0,melee:this.isMelee,ranged:this.isRanged,thrown:this.isThrown,[`range-increment:${this.rangeIncrement}`]:!!this.rangeIncrement}).filter((([_key,isTrue])=>isTrue)).map((([key])=>`${delimitedPrefix}${key}`))].flat().sort()}async getChatData(htmlOptions={}){const systemData=this.system,traits=this.traitChatData(CONFIG.PF2E.weaponTraits),isAgile=this.traits.has("agile"),map2=isAgile?"-4":"-5",map3=isAgile?"-8":"-10";return this.processChatData(htmlOptions,{...systemData,traits,map2,map3})}}exports.MeleePF2e=MeleePF2e},17923:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.MeleeSheetPF2e=exports.MeleePF2e=void 0;var document_1=__webpack_require__(34847);Object.defineProperty(exports,"MeleePF2e",{enumerable:!0,get:function(){return document_1.MeleePF2e}});var sheet_1=__webpack_require__(61405);Object.defineProperty(exports,"MeleeSheetPF2e",{enumerable:!0,get:function(){return sheet_1.MeleeSheetPF2e}})},61405:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.MeleeSheetPF2e=void 0;const base_1=__webpack_require__(22222),helpers_1=__webpack_require__(69554);class MeleeSheetPF2e extends base_1.ItemSheetPF2e{async getData(){const item=this.item;return{...await super.getData(),damageTypes:CONFIG.PF2E.damageTypes,attackEffects:(0,helpers_1.createSheetOptions)(this.getAttackEffectOptions(),item.system.attackEffects)}}activateListeners($html){super.activateListeners($html),$html.find(".add-damage").on("click",(event=>{event.preventDefault();const newKey=randomID();this.item.update({[`system.damageRolls.${newKey}`]:{damage:"",damageType:""}})})),$html.find(".delete-damage").on("click",(event=>{var _a;event.preventDefault();const targetKey=null===(_a=event.target.closest("[data-damage-part]"))||void 0===_a?void 0:_a.dataset.damagePart;targetKey&&this.item.update({[`system.damageRolls.-=${targetKey}`]:null})}))}}exports.MeleeSheetPF2e=MeleeSheetPF2e},47297:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.normalizeWeight=exports.weightToBulk=exports.BulkItem=exports.Bulk=exports.stackDefinitions=void 0;const data_1=__webpack_require__(52769),_util_1=__webpack_require__(6945);exports.stackDefinitions={bolts:{size:10,lightBulk:1},arrows:{size:10,lightBulk:1},slingBullets:{size:10,lightBulk:1},blowgunDarts:{size:10,lightBulk:1},woodenTaws:{size:10,lightBulk:1},rounds5:{size:5,lightBulk:1},rounds10:{size:10,lightBulk:1},rations:{size:7,lightBulk:1},sacks:{size:5,lightBulk:1},coins:{size:1e3,lightBulk:10},gems:{size:2e3,lightBulk:10}};class Bulk{constructor({normal=0,light=0}={}){this.normal=normal+Math.floor(light/10),this.light=light%10}get isNegligible(){return 0===this.normal&&0===this.light}get isLight(){return this.toLightBulk()<10&&!this.isNegligible}toLightBulk(){return 10*this.normal+this.light}plus(bulk){return new Bulk({normal:this.normal+bulk.normal,light:this.light+bulk.light})}minus(bulk){const[thisBulk,otherBulk]=this._toSingleNumber(bulk),result=thisBulk-otherBulk;return result<0?new Bulk:new Bulk({normal:Math.floor(result/10),light:result%10})}_toSingleNumber(bulk){return[10*this.normal+this.light,10*bulk.normal+bulk.light]}times(factor){const normal=this.normal*factor,lightCarryOver=normal<1&&normal>0?1:0,light=Math.floor(this.light*factor)+lightCarryOver;return new Bulk({normal:Math.floor(normal),light})}isSmallerThan(bulk){const[thisBulk,otherBulk]=this._toSingleNumber(bulk);return thisBulk<otherBulk}isBiggerThan(bulk){const[thisBulk,otherBulk]=this._toSingleNumber(bulk);return thisBulk>otherBulk}isEqualTo(bulk){return this.normal===bulk.normal&&this.light===bulk.light}isPositive(){return this.normal>0||this.light>0}toString(){const{light,normal}=this;return 0===normal&&0===light?"-":normal>0&&0===light?`${normal}`:1===light&&0===normal?"L":light>0&&0===normal?`${light}L`:`${normal}; ${light}L`}double(){return this.isNegligible?new Bulk({light:1}):this.isLight?this.times(10):this.times(2)}halve(){return this.isNegligible||this.isLight?new Bulk:1===this.normal?new Bulk({light:1}):this.times(.5)}convertToSize(itemSize,actorSize){const sizes=Array.from(data_1.SIZES).filter((size=>"sm"!==size)),itemSizeIndex=sizes.indexOf("sm"===itemSize?"med":itemSize),actorSizeIndex=sizes.indexOf("sm"===actorSize?"med":actorSize);return itemSizeIndex===actorSizeIndex?this:itemSizeIndex>actorSizeIndex?(0,_util_1.applyNTimes)((bulk=>bulk.double()),itemSizeIndex-actorSizeIndex,this):(0,_util_1.applyNTimes)((bulk=>bulk.halve()),actorSizeIndex-itemSizeIndex,this)}}exports.Bulk=Bulk;exports.BulkItem=class BulkItem{constructor({id="",bulk=new Bulk,quantity=1,stackGroup=null,isEquipped=!1,unequippedBulk,equippedBulk,holdsItems=[],negateBulk=new Bulk,extraDimensionalContainer=!1,size="med"}={}){this.id=id,this.bulk=bulk,this.quantity=quantity,this.stackGroup=stackGroup,this.holdsItems=holdsItems,this.negateBulk=negateBulk,this.unequippedBulk=unequippedBulk,this.equippedBulk=equippedBulk,this.isEquipped=isEquipped,this.extraDimensionalContainer=extraDimensionalContainer,this.size=size}get reducesBulk(){return!this.negateBulk.isNegligible}};const lightBulkRegex=/^(\d*)l$/i,complexBulkRegex=/^(\d+);\s*(\d*)l$/i;exports.weightToBulk=function(weight){if("string"!=typeof weight&&"number"!=typeof weight)return null;const trimmed=String(weight).trim();if(/^\d+$/.test(trimmed))return new Bulk({normal:parseInt(trimmed,10)});const lightMatch=trimmed.match(lightBulkRegex);if(lightMatch)return new Bulk({light:parseInt(lightMatch[1]||"1",10)});const complexMatch=trimmed.match(complexBulkRegex);if(complexMatch){const[,normal,light]=complexMatch;return new Bulk({normal:Number(normal)||0,light:Number(light||1)||0})}return null},exports.normalizeWeight=function(weight){if(null==weight)return;return`${weight}`.toLowerCase().trim()}},10530:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0})},81022:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.PhysicalItemPF2e=void 0;const _item_1=__webpack_require__(10843),values_1=__webpack_require__(67189),helpers_1=__webpack_require__(73715),localize_1=__webpack_require__(41332),_util_1=__webpack_require__(6945),identification_1=__webpack_require__(79206),bulk_1=__webpack_require__(47297),usage_1=__webpack_require__(65441),values_2=__webpack_require__(66870);class PhysicalItemPF2e extends _item_1.ItemPF2e{constructor(){super(...arguments),this._container=null}get level(){return this.system.level.value}get rarity(){return this.system.traits.rarity}get traits(){return new Set(this.system.traits.value)}get quantity(){var _a;return Number(null!==(_a=this.system.quantity)&&void 0!==_a?_a:1)}get size(){return this.system.size}get isEquipped(){return(0,usage_1.isEquipped)(this.system.usage,this.system.equipped)}get carryType(){var _a;return null!==(_a=this.system.equipped.carryType)&&void 0!==_a?_a:this.system.containerId?"worn":"stowed"}get handsHeld(){var _a;return"held"===this.system.equipped.carryType?null!==(_a=this.system.equipped.handsHeld)&&void 0!==_a?_a:1:0}get isHeld(){return this.handsHeld>0}get price(){return this.system.price}get assetValue(){return helpers_1.CoinsPF2e.fromPrice(this.price,this.quantity)}get identificationStatus(){return this.system.identification.status}get isIdentified(){return"identified"===this.system.identification.status}get isAlchemical(){return this.traits.has("alchemical")}get isMagical(){const traits=this.traits;return["magical","arcane","primal","divine","occult"].some((trait=>traits.has(trait)))}get isInvested(){return this.traits.has("invested")?this.isEquipped&&this.isIdentified&&!0===this.system.equipped.invested:null}get isCursed(){return this.traits.has("cursed")}get isTemporary(){return this.system.temporary}get isShoddy(){return this.system.traits.otherTags.includes("shoddy")}get isDamaged(){return this.system.hp.value>0&&this.system.hp.value<this.system.hp.max}get material(){const systemData=this.system;return systemData.preciousMaterial.value&&systemData.preciousMaterialGrade.value?{precious:{type:systemData.preciousMaterial.value,grade:systemData.preciousMaterialGrade.value}}:{precious:null}}get isInContainer(){return!!this.container}get isStowed(){var _a;return!!(null===(_a=this.container)||void 0===_a?void 0:_a.system.stowing)}get container(){var _a,_b,_c;if(null===this.system.containerId)return this._container=null;const container=null!==(_a=this._container)&&void 0!==_a?_a:null===(_b=this.actor)||void 0===_b?void 0:_b.items.get(null!==(_c=this.system.containerId)&&void 0!==_c?_c:"");return(null==container?void 0:container.isOfType("backpack"))&&(this._container=container),this._container}get bulk(){var _a,_b;const{value,per}=this.system.bulk,bulkRelevantQuantity=Math.floor(this.quantity/per);return new bulk_1.Bulk({light:value}).convertToSize(this.size,null!==(_b=null===(_a=this.actor)||void 0===_a?void 0:_a.size)&&void 0!==_b?_b:this.size).times(bulkRelevantQuantity)}get activations(){var _a;return Object.values(null!==(_a=this.system.activations)&&void 0!==_a?_a:{}).map((action=>{const components=[];return action.components.cast&&components.push(game.i18n.localize("PF2E.Item.Activation.Cast")),action.components.command&&components.push(game.i18n.localize("PF2E.Item.Activation.Command")),action.components.envision&&components.push(game.i18n.localize("PF2E.Item.Activation.Envision")),action.components.interact&&components.push(game.i18n.localize("PF2E.Item.Activation.Interact")),{componentsLabel:components.join(", "),...action}}))}getRollOptions(prefix=this.type){var _a;const baseOptions=super.getRollOptions(prefix),delimitedPrefix=prefix?`${prefix}:`:"";return[baseOptions,Object.entries({equipped:this.isEquipped,magical:this.isMagical,uninvested:!1===this.isInvested,[`material:${null===(_a=this.material.precious)||void 0===_a?void 0:_a.type}`]:!!this.material.precious}).filter((([_key,isTrue])=>isTrue)).map((([key])=>`${delimitedPrefix}${key}`)).concat(this.system.traits.otherTags.map((t=>`${delimitedPrefix}tag:${t}`)))].flat()}prepareBaseData(){var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l;super.prepareBaseData();const systemData=this.system;(_j=systemData.preciousMaterial).value||(_j.value=null),(_k=systemData.preciousMaterialGrade).value||(_k.value=null),systemData.containerId||(systemData.containerId=null),systemData.stackGroup||(systemData.stackGroup=null),(_l=systemData.equippedBulk).value||(_l.value=null),null!==(_a=systemData.baseItem)&&void 0!==_a||(systemData.baseItem=(0,_util_1.sluggify)(null!==(_b=systemData.stackGroup)&&void 0!==_b?_b:"")||null),"string"==typeof systemData.price.value&&(systemData.price.value=helpers_1.CoinsPF2e.fromString(systemData.price.value));systemData.traits.value.includes("infused")&&(systemData.temporary=!0),systemData.price.value=new helpers_1.CoinsPF2e(systemData.temporary?{}:systemData.price.value),systemData.price.per=Math.max(1,null!==(_c=systemData.price.per)&&void 0!==_c?_c:1),this.system.usage=(0,usage_1.getUsageDetails)(systemData.usage.value);const{equipped,usage}=this.system;null!==(_d=equipped.handsHeld)&&void 0!==_d||(equipped.handsHeld=0),null!==(_e=equipped.carryType)&&void 0!==_e||(equipped.carryType="worn"),"worn"===usage.type&&usage.where&&(null!==(_f=equipped.inSlot)&&void 0!==_f||(equipped.inSlot=!1)),(null===(_g=this.actor)||void 0===_g?void 0:_g.isOfType("loot"))&&(equipped.carryType="worn",equipped.inSlot=!1),systemData.bulk=(()=>{var _a,_b,_c,_d,_e,_f,_g,_h;const stackData=null!==(_b=bulk_1.stackDefinitions[null!==(_a=systemData.stackGroup)&&void 0!==_a?_a:""])&&void 0!==_b?_b:null,per=null!==(_c=null==stackData?void 0:stackData.size)&&void 0!==_c?_c:1,heldOrStowed=null!==(_f=null!==(_d=null==stackData?void 0:stackData.lightBulk)&&void 0!==_d?_d:null===(_e=(0,bulk_1.weightToBulk)(systemData.weight.value))||void 0===_e?void 0:_e.toLightBulk())&&void 0!==_f?_f:0,worn=systemData.equippedBulk.value?null!==(_h=null===(_g=(0,bulk_1.weightToBulk)(systemData.equippedBulk.value))||void 0===_g?void 0:_g.toLightBulk())&&void 0!==_h?_h:0:null,{carryType}=systemData.equipped;return{heldOrStowed,worn,value:this.isEquipped&&"worn"===carryType&&null!=worn?worn:heldOrStowed,per}})(),(null===(_h=this._container)||void 0===_h?void 0:_h.id)!==this.system.containerId&&(this._container=null)}prepareDerivedData(){var _a,_b,_c;super.prepareDerivedData();const systemData=this.system;null!==(_a=(_c=systemData.identification).identified)&&void 0!==_a||(_c.identified={name:this.name,img:this.img,data:{description:{value:this.description}}});const adjustedPrice=null===(_b=this.computeAdjustedPrice)||void 0===_b?void 0:_b.call(this);if(adjustedPrice){const basePrice=this.price.value,highestPrice=adjustedPrice.copperValue>basePrice.copperValue?adjustedPrice:basePrice;systemData.price.value=highestPrice}this.isShoddy&&(systemData.price.value=systemData.price.value.scale(.5),systemData.hp.max=Math.floor(systemData.hp.max/2),systemData.hp.brokenThreshold=Math.floor(systemData.hp.brokenThreshold/2));const mystifiedData=this.getMystifiedData(this.identificationStatus);this.name=mystifiedData.name,this.img=mystifiedData.img,this.system.description.value=mystifiedData.data.description.value,systemData.identification.unidentified=this.getMystifiedData("unidentified")}prepareSiblingData(){this.isStowed&&(this.system.equipped.carryType="stowed",delete this.system.equipped.inSlot),this._container&&!this.actor.items.has(this._container.id)&&(this._container=this.system.containerId=null)}isStackableWith(item){if(!(this!==item&&this.type===item.type&&this.name===item.name&&this.isIdentified===item.isIdentified&&![this,item].some((i=>i.isHeld||i.isOfType("backpack")))))return!1;const thisData=this.toObject().system,otherData=item.toObject().system;return thisData.quantity=otherData.quantity,thisData.equipped=otherData.equipped,thisData.containerId=otherData.containerId,thisData.schema=otherData.schema,thisData.identification=otherData.identification,JSON.stringify(thisData)===JSON.stringify(otherData)}getMystifiedData(status,_options){const mystifiedData=this.system.identification[status];return{name:mystifiedData.name||this.generateUnidentifiedName(),img:mystifiedData.img||(0,identification_1.getUnidentifiedPlaceholderImage)(this),data:{description:{value:mystifiedData.data.description.value||(()=>{if("identified"===status)return this.description;const formatString=localize_1.LocalizePF2e.translations.PF2E.identification.UnidentifiedDescription,itemType=this.generateUnidentifiedName({typeOnly:!0});return game.i18n.format(formatString,{item:(noun=itemType,"de"===game.i18n.lang.toLowerCase()?noun:noun.toLowerCase())});var noun})()}}}}async getChatData(){const{precious}=this.material,material=precious?game.i18n.format("PF2E.Item.Weapon.MaterialAndRunes.MaterialOption",{type:game.i18n.localize(CONFIG.PF2E.preciousMaterials[precious.type]),grade:game.i18n.localize(CONFIG.PF2E.preciousMaterialGrades[precious.grade])}):null;return{rarity:{name:this.rarity,label:CONFIG.PF2E.rarityTraits[this.rarity],description:CONFIG.PF2E.traitsDescriptions[this.rarity]},description:{value:this.description},material}}async setIdentificationStatus(status){this.identificationStatus!==status&&await this.update({"system.identification.status":status,"system.identification.unidentified":this.getMystifiedData("unidentified")})}generateUnidentifiedName({typeOnly=!1}={typeOnly:!1}){const itemType=game.i18n.localize(`ITEM.Type${this.type.capitalize()}`);if(typeOnly)return itemType;const formatString=localize_1.LocalizePF2e.translations.PF2E.identification.UnidentifiedItem;return game.i18n.format(formatString,{item:itemType})}traitChatData(dictionary){const traitData=super.traitChatData(dictionary);for(const trait of traitData)if(trait.mystified=!this.isIdentified&&values_1.MystifiedTraits.has(trait.value),trait.excluded=trait.mystified&&!game.user.isGM,trait.excluded)delete trait.description;else if(trait.mystified){const gmNote=localize_1.LocalizePF2e.translations.PF2E.identification.TraitGMNote;trait.description=trait.description?`${gmNote}\n\n${game.i18n.localize(trait.description)}`:gmNote}return traitData}async _preCreate(data,options,user){if(await super._preCreate(data,options,user),this.updateSource({"system.equipped.carryType":"worn","system.equipped.-=handsHeld":null,"system.equipped.-=inSlot":null}),this.actor){const isSlottedItem="worn"===this.system.usage.type&&!!this.system.usage.where;this.actor.isOfType("character","npc")&&isSlottedItem&&this.updateSource({"system.equipped.inSlot":!1})}}async _preUpdate(changed,options,user){var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k;if("number"==typeof(null===(_b=null===(_a=changed.system)||void 0===_a?void 0:_a.hp)||void 0===_b?void 0:_b.value)&&(changed.system.hp.value=Math.clamped(changed.system.hp.value,0,this.system.hp.max)),!changed.system)return super._preUpdate(changed,options,user);"string"==typeof(null===(_c=changed.system)||void 0===_c?void 0:_c.stackGroup)&&((_k=changed.system).stackGroup||(_k.stackGroup=null));const equipped=mergeObject(changed,{system:{equipped:{}}}).system.equipped;if(String(null!==(_d=equipped.carryType)&&void 0!==_d?_d:this.system.equipped.carryType).startsWith("held")||(equipped.handsHeld=0),(0,_util_1.isObject)(null===(_e=changed.system)||void 0===_e?void 0:_e.price)){const price=changed.system.price;if((0,_util_1.isObject)(price.value)){const coins=price.value;for(const denomination of values_2.DENOMINATIONS)0===coins[denomination]&&(coins[`-=${denomination}`]=null)}"per"in price&&(!price.per||Number(price.per)<=1)&&(price["-=per"]=null)}const newUsage=(0,usage_1.getUsageDetails)(String(null!==(_h=null===(_g=null===(_f=changed.system)||void 0===_f?void 0:_f.usage)||void 0===_g?void 0:_g.value)&&void 0!==_h?_h:this.system.usage.value)),hasSlot="worn"===newUsage.type&&newUsage.where,isSlotted=Boolean(null!==(_j=equipped.inSlot)&&void 0!==_j?_j:this.system.equipped.inSlot);hasSlot?equipped.inSlot=isSlotted:equipped["-=inSlot"]=null,await super._preUpdate(changed,options,user)}}exports.PhysicalItemPF2e=PhysicalItemPF2e},73715:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.coinCompendiumIds=exports.CoinsPF2e=void 0;const DENOMINATIONS=["cp","sp","gp","pp"];class CoinsPF2e{constructor(data){var _a,_b,_c,_d;null!=data||(data={}),this.cp=null!==(_a=data.cp)&&void 0!==_a?_a:0,this.sp=null!==(_b=data.sp)&&void 0!==_b?_b:0,this.gp=null!==(_c=data.gp)&&void 0!==_c?_c:0,this.pp=null!==(_d=data.pp)&&void 0!==_d?_d:0}get copperValue(){const{cp,sp,gp,pp}=this;return cp+10*sp+100*gp+1e3*pp}add(coins){const other=new CoinsPF2e(coins);return new CoinsPF2e({pp:this.pp+other.pp,gp:this.gp+other.gp,sp:this.sp+other.sp,cp:this.cp+other.cp})}scale(factor){const result=new CoinsPF2e(this);if(result.pp*=factor,result.gp*=factor,result.sp*=factor,result.cp*=factor,factor%1!=0){result.gp+=result.pp%1*10,result.sp+=result.gp%1*10,result.cp+=result.sp%1*10;for(const denomination of DENOMINATIONS)result[denomination]=Math.floor(Number(result[denomination].toFixed(1)))}return result}strip(){return DENOMINATIONS.reduce(((result,denomination)=>0!==this[denomination]?{...result,[denomination]:this[denomination]}:result),{})}static fromString(coinString,quantity=1){return[...String(coinString).trim().replace(/,/g,"").matchAll(/(\d+)\s*([pgsc]p)/g)].map((match=>{const[value,denomination]=match.slice(1,3);return{[denomination]:(Number(value)||0)*quantity}})).reduce(((first,second)=>first.add(second)),new CoinsPF2e)}static fromPrice(price,factor){var _a;const per=Math.max(1,null!==(_a=price.per)&&void 0!==_a?_a:1);return new CoinsPF2e(price.value).scale(factor/per)}toString(){if(DENOMINATIONS.every((denomination=>!this[denomination])))return"0 gp";const DENOMINATIONS_REVERSED=[...DENOMINATIONS].reverse(),parts=[];for(const denomation of DENOMINATIONS_REVERSED)this[denomation]&&parts.push(`${this[denomation]} ${denomation}`);return parts.join(", ")}}exports.CoinsPF2e=CoinsPF2e;exports.coinCompendiumIds={pp:"JuNPeK5Qm1w6wpb4",gp:"B6B7tBWJSqOBz5zz",sp:"5Ew82vBF9YfaiY9f",cp:"lzJ8AVhRcbFul5fh"}},6560:function(__unused_webpack_module,exports,__webpack_require__){var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k);var desc=Object.getOwnPropertyDescriptor(m,k);desc&&!("get"in desc?!m.__esModule:desc.writable||desc.configurable)||(desc={enumerable:!0,get:function(){return m[k]}}),Object.defineProperty(o,k2,desc)}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)"default"===p||Object.prototype.hasOwnProperty.call(exports,p)||__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.PhysicalItemPF2e=void 0,__exportStar(__webpack_require__(47297),exports),__exportStar(__webpack_require__(10530),exports);var document_1=__webpack_require__(81022);Object.defineProperty(exports,"PhysicalItemPF2e",{enumerable:!0,get:function(){return document_1.PhysicalItemPF2e}}),__exportStar(__webpack_require__(73715),exports),__exportStar(__webpack_require__(13416),exports),__exportStar(__webpack_require__(31862),exports),__exportStar(__webpack_require__(38719),exports),__exportStar(__webpack_require__(39964),exports),__exportStar(__webpack_require__(66870),exports),__exportStar(__webpack_require__(65441),exports)},13416:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.WEAPON_MATERIAL_VALUATION_DATA=exports.ARMOR_MATERIAL_VALUATION_DATA=void 0;exports.WEAPON_MATERIAL_VALUATION_DATA={"":{low:null,standard:null,high:null},abysium:{low:null,standard:{level:12,price:2e3,rarity:"rare"},high:{level:18,price:24e3,rarity:"rare"}},adamantine:{low:null,standard:{level:11,price:1400,rarity:"uncommon"},high:{level:17,price:13500,rarity:"uncommon"}},coldIron:{low:{level:2,price:40,rarity:"common"},standard:{level:10,price:880,rarity:"common"},high:{level:16,price:9e3,rarity:"common"}},darkwood:{low:null,standard:{level:11,price:1400,rarity:"uncommon"},high:{level:17,price:13500,rarity:"uncommon"}},djezet:{low:null,standard:{level:12,price:1800,rarity:"rare"},high:{level:18,price:22e3,rarity:"rare"}},inubrix:{low:null,standard:{level:11,price:1400,rarity:"rare"},high:{level:17,price:13500,rarity:"rare"}},mithral:{low:null,standard:{level:11,price:1400,rarity:"uncommon"},high:{level:17,price:13500,rarity:"uncommon"}},noqual:{low:null,standard:{level:12,price:1600,rarity:"rare"},high:{level:18,price:24e3,rarity:"rare"}},peachwood:{low:null,standard:{level:12,price:2e3,rarity:"uncommon"},high:{level:18,price:19e3,rarity:"uncommon"}},orichalcum:{low:null,standard:null,high:{level:18,price:22500,rarity:"rare"}},siccatite:{low:null,standard:{level:11,price:1400,rarity:"rare"},high:{level:17,price:15e3,rarity:"rare"}},silver:{low:{level:2,price:40,rarity:"common"},standard:{level:10,price:880,rarity:"common"},high:{level:16,price:9e3,rarity:"common"}},"sisterstone-dusk":{low:{level:3,price:70,rarity:"rare"},standard:{level:11,price:1200,rarity:"rare"},high:{level:19,price:32e3,rarity:"rare"}},"sisterstone-scarlet":{low:{level:3,price:70,rarity:"rare"},standard:{level:11,price:1200,rarity:"rare"},high:{level:19,price:32e3,rarity:"rare"}},sovereignSteel:{low:null,standard:{level:12,price:1600,rarity:"rare"},high:{level:19,price:32e3,rarity:"rare"}},warpglass:{low:null,standard:null,high:{level:17,price:14e3,rarity:"rare"}}};exports.ARMOR_MATERIAL_VALUATION_DATA={"":{low:null,standard:null,high:null},abysium:{low:null,standard:{level:12,price:2e3,rarity:"rare"},high:{level:19,price:4e4,rarity:"rare"}},adamantine:{low:null,standard:{level:11,price:1600,rarity:"uncommon"},high:{level:19,price:32e3,rarity:"uncommon"}},coldIron:{low:{level:5,price:140,rarity:"common"},standard:{level:11,price:1200,rarity:"common"},high:{level:18,price:2e4,rarity:"common"}},darkwood:{low:null,standard:{level:12,price:1600,rarity:"uncommon"},high:{level:19,price:32e3,rarity:"uncommon"}},djezet:{low:null,standard:{level:12,price:1800,rarity:"rare"},high:{level:19,price:35e3,rarity:"rare"}},dragonhide:{low:null,standard:{level:12,price:1600,rarity:"uncommon"},high:{level:19,price:32e3,rarity:"uncommon"}},"grisantian-pelt":{low:null,standard:{level:12,price:1800,rarity:"rare"},high:{level:19,price:33e3,rarity:"rare"}},inubrix:{low:null,standard:{level:11,price:1200,rarity:"rare"},high:{level:18,price:18e3,rarity:"rare"}},mithral:{low:null,standard:{level:12,price:1600,rarity:"uncommon"},high:{level:19,price:32e3,rarity:"uncommon"}},noqual:{low:null,standard:{level:12,price:1600,rarity:"rare"},high:{level:19,price:32e3,rarity:"rare"}},peachwood:{low:null,standard:null,high:null},orichalcum:{low:null,standard:null,high:{level:20,price:55e3,rarity:"rare"}},siccatite:{low:null,standard:{level:12,price:1600,rarity:"rare"},high:{level:19,price:32e3,rarity:"rare"}},silver:{low:{level:5,price:140,rarity:"common"},standard:{level:11,price:1200,rarity:"common"},high:{level:18,price:2e4,rarity:"common"}},"sisterstone-dusk":{low:{level:5,price:140,rarity:"rare"},standard:{level:10,price:1e3,rarity:"rare"},high:{level:18,price:19500,rarity:"rare"}},"sisterstone-scarlet":{low:{level:5,price:140,rarity:"rare"},standard:{level:10,price:1e3,rarity:"rare"},high:{level:18,price:19500,rarity:"rare"}},sovereignSteel:{low:null,standard:{level:13,price:2400,rarity:"rare"},high:{level:20,price:5e4,rarity:"rare"}},warpglass:{low:null,standard:null,high:null}}},31862:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.WEAPON_VALUATION_DATA=exports.getPropertyRuneModifiers=exports.WEAPON_PROPERTY_RUNES=exports.getResiliencyBonus=exports.getStrikingDice=exports.getPropertyRunes=exports.getPropertySlots=void 0;const modifiers_1=__webpack_require__(92823),_util_1=__webpack_require__(6945);function getPropertyRunes(item,slots){var _a;const runes=[];for(let i=1;i<=slots;i+=1){const rune=null===(_a=item.system[`propertyRune${i}`])||void 0===_a?void 0:_a.value;(0,_util_1.isBlank)(rune)||runes.push(rune)}return runes}exports.getPropertySlots=function(item){var _a,_b;let slots=0;"orichalcum"===(null===(_a=item.system.preciousMaterial)||void 0===_a?void 0:_a.value)&&(slots+=1);let potencyRune=null!==(_b=item.system.potencyRune.value)&&void 0!==_b?_b:0;return"noABP"!==game.settings.get("pf2e","automaticBonusVariant")&&(potencyRune=0,slots+=getPropertyRunes(item,4).length,slots+=1),potencyRune&&(slots+=potencyRune),slots},exports.getPropertyRunes=getPropertyRunes;const strikingRuneValues=new Map([["striking",1],["greaterStriking",2],["majorStriking",3]]);exports.getStrikingDice=function(itemData){var _a;return null!==(_a=strikingRuneValues.get(itemData.strikingRune.value))&&void 0!==_a?_a:0};const resilientRuneValues=new Map([["resilient",1],["greaterResilient",2],["majorResilient",3]]);exports.getResiliencyBonus=function(itemData){var _a;return null!==(_a=resilientRuneValues.get(itemData.resiliencyRune.value))&&void 0!==_a?_a:0},exports.WEAPON_PROPERTY_RUNES={anarchic:{damage:{dice:[{damageType:"chaotic",diceNumber:1,dieSize:"d6",predicate:["target:trait:lawful"]}],notes:[{outcome:["criticalSuccess"],predicate:["target:trait:lawful"],title:"PF2E.WeaponPropertyRune.anarchic.Name",text:"PF2E.WeaponPropertyRune.anarchic.Note.criticalSuccess"}]},level:11,name:"PF2E.WeaponPropertyRune.anarchic.Name",price:1400,rarity:"common",slug:"anarchic",traits:["chaotic","evocation","magical"]},ancestralEchoing:{level:15,name:"PF2E.WeaponPropertyRune.ancestralEchoing.Name",price:9500,rarity:"rare",slug:"ancestralEchoing",traits:["dwarf","evocation","magical","saggorak"]},anchoring:{damage:{notes:[{outcome:["criticalSuccess"],title:"PF2E.WeaponPropertyRune.anchoring.Name",text:"PF2E.WeaponPropertyRune.anchoring.Note.criticalSuccess"}]},level:10,name:"PF2E.WeaponPropertyRune.anchoring.Name",price:900,rarity:"uncommon",slug:"anchoring",traits:["abjuration","magical"]},axiomatic:{damage:{dice:[{damageType:"lawful",diceNumber:1,dieSize:"d6",predicate:["target:trait:chaotic"]}],notes:[{outcome:["criticalSuccess"],predicate:["target:trait:chaotic"],title:"PF2E.WeaponPropertyRune.axiomatic.Name",text:"PF2E.WeaponPropertyRune.axiomatic.Note.criticalSuccess"}]},level:11,name:"PF2E.WeaponPropertyRune.axiomatic.Name",price:1400,rarity:"common",slug:"axiomatic",traits:["evocation","lawful","magical"]},bane:{level:4,name:"PF2E.WeaponPropertyRune.bane.Name",price:100,rarity:"uncommon",slug:"bane",traits:["divination","magical"]},bloodbane:{level:8,name:"PF2E.WeaponPropertyRune.bloodbane.Name",price:475,rarity:"uncommon",slug:"bloodbane",traits:["dwarf","evocation","magical"]},bloodthirsty:{damage:{notes:[{outcome:["criticalSuccess"],title:"PF2E.WeaponPropertyRune.bloodbane.Name",text:"PF2E.WeaponPropertyRune.bloodthirsty.Note.criticalSuccess"}]},level:16,name:"PF2E.WeaponPropertyRune.bloodthirsty.Name",price:8500,rarity:"uncommon",slug:"bloodthirsty",traits:["magical","necromancy"]},brilliant:{damage:{dice:[{damageType:"fire",diceNumber:1,dieSize:"d4"},{damageType:"good",diceNumber:1,dieSize:"d4",predicate:["target:trait:fiend"]},{damageType:"positive",diceNumber:1,dieSize:"d4",predicate:[{or:["target:trait:undead","target:negative-healing"]}]}],notes:[{outcome:["criticalSuccess"],title:"PF2E.WeaponPropertyRune.brilliant.Name",text:"PF2E.WeaponPropertyRune.brilliant.Note.criticalSuccess"}]},level:12,name:"PF2E.WeaponPropertyRune.brilliant.Name",price:2e3,rarity:"common",slug:"brilliant",traits:["evocation","magical"]},conducting:{level:7,name:"PF2E.WeaponPropertyRune.conducting.Name",price:300,rarity:"common",slug:"conducting",traits:["evocation","magical"]},corrosive:{damage:{dice:[{damageType:"acid",diceNumber:1,dieSize:"d6"}],notes:[{outcome:["criticalSuccess"],title:"PF2E.WeaponPropertyRune.corrosive.Name",text:"PF2E.WeaponPropertyRune.corrosive.Note.criticalSuccess"}]},level:8,name:"PF2E.WeaponPropertyRune.corrosive.Name",price:500,rarity:"common",slug:"corrosive",traits:["acid","conjuration","magical"]},crushing:{damage:{notes:[{outcome:["criticalSuccess"],title:"PF2E.WeaponPropertyRune.crushing.Name",text:"PF2E.WeaponPropertyRune.crushing.Note.criticalSuccess"}]},level:3,name:"PF2E.WeaponPropertyRune.crushing.Name",price:50,rarity:"uncommon",slug:"crushing",traits:["magical","necromancy"]},cunning:{level:5,name:"PF2E.WeaponPropertyRune.cunning.Name",price:140,rarity:"common",slug:"cunning",traits:["divination","magical"]},dancing:{level:13,name:"PF2E.WeaponPropertyRune.dancing.Name",price:2700,rarity:"uncommon",slug:"dancing",traits:["evocation","magical"]},disrupting:{damage:{dice:[{damageType:"positive",diceNumber:1,dieSize:"d6",predicate:[{or:["target:trait:undead","target:negative-healing"]}]}],notes:[{outcome:["criticalSuccess"],predicate:[{or:["target:trait:undead","target:negative-healing"]}],title:"PF2E.WeaponPropertyRune.disrupting.Name",text:"PF2E.WeaponPropertyRune.disrupting.Note.criticalSuccess"}]},level:5,name:"PF2E.WeaponPropertyRune.disrupting.Name",price:150,rarity:"common",slug:"disrupting",traits:["magical","necromancy"]},energizing:{level:6,name:"PF2E.WeaponPropertyRune.energizing.Name",price:250,rarity:"uncommon",slug:"energizing",traits:["abjuration","magical"]},extending:{level:7,name:"PF2E.WeaponPropertyRune.extending.Name",price:700,rarity:"common",slug:"extending",traits:["magical","transmutation"]},fanged:{level:2,name:"PF2E.WeaponPropertyRune.fanged.Name",price:30,rarity:"uncommon",slug:"fanged",traits:["magical","transmutation"]},fearsome:{damage:{notes:[{outcome:["criticalSuccess"],title:"PF2E.WeaponPropertyRune.fearsome.Name",text:"PF2E.WeaponPropertyRune.fearsome.Note.criticalSuccess"}]},level:5,name:"PF2E.WeaponPropertyRune.fearsome.Name",price:160,rarity:"common",slug:"fearsome",traits:["emotion","enchantment","fear","magical","mental"]},flaming:{damage:{dice:[{damageType:"fire",diceNumber:1,dieSize:"d6"}],notes:[{outcome:["criticalSuccess"],title:"PF2E.WeaponPropertyRune.flaming.Name",text:"PF2E.WeaponPropertyRune.flaming.Note.criticalSuccess"}]},level:8,name:"PF2E.WeaponPropertyRune.flaming.Name",price:500,rarity:"common",slug:"flaming",traits:["conjuration","fire","magical"]},frost:{damage:{dice:[{damageType:"cold",diceNumber:1,dieSize:"d6"}],notes:[{outcome:["criticalSuccess"],title:"PF2E.WeaponPropertyRune.frost.Name",text:"PF2E.WeaponPropertyRune.frost.Note.criticalSuccess"}]},level:8,name:"PF2E.WeaponPropertyRune.frost.Name",price:500,rarity:"common",slug:"frost",traits:["cold","conjuration","magical"]},ghostTouch:{damage:{notes:[{predicate:["target:trait:incorporeal"],title:"PF2E.WeaponPropertyRune.ghostTouch.Name",text:"PF2E.WeaponPropertyRune.ghostTouch.Note"}]},level:4,name:"PF2E.WeaponPropertyRune.ghostTouch.Name",price:75,rarity:"common",slug:"ghostTouch",traits:["magical","transmutation"]},greaterAnchoring:{damage:{notes:[{outcome:["criticalSuccess"],title:"PF2E.WeaponPropertyRune.greaterAnchoring.Name",text:"PF2E.WeaponPropertyRune.greaterAnchoring.Note.criticalSuccess"},{outcome:["success"],title:"PF2E.WeaponPropertyRune.greaterAnchoring.Name",text:"PF2E.WeaponPropertyRune.greaterAnchoring.Note.success"}]},level:18,name:"PF2E.WeaponPropertyRune.greaterAnchoring.Name",price:22e3,rarity:"uncommon",slug:"greaterAnchoring",traits:["abjuration","magical"]},greaterBloodbane:{level:13,name:"PF2E.WeaponPropertyRune.greaterBloodbane.Name",price:2800,rarity:"uncommon",slug:"greaterBloodbane",traits:["dwarf","evocation","magical"]},greaterBrilliant:{damage:{dice:[{damageType:"fire",diceNumber:1,dieSize:"d4"},{damageType:"good",diceNumber:1,dieSize:"d4",predicate:["target:trait:fiend"]},{damageType:"positive",diceNumber:1,dieSize:"d4",predicate:[{or:["target:trait:undead","target:negative-healing"]}]}],notes:[{outcome:["criticalSuccess"],title:"PF2E.WeaponPropertyRune.greaterBrilliant.Name",text:"PF2E.WeaponPropertyRune.greaterBrilliant.Note.criticalSuccess"},{outcome:["success"],title:"PF2E.WeaponPropertyRune.greaterBrilliant.Name",text:"PF2E.WeaponPropertyRune.greaterBrilliant.Note.success"}]},level:18,name:"PF2E.WeaponPropertyRune.greaterBrilliant.Name",price:24e3,rarity:"common",slug:"greaterBrilliant",traits:["evocation","magical"]},greaterCorrosive:{damage:{dice:[{damageType:"acid",diceNumber:1,dieSize:"d6"}],notes:[{outcome:["criticalSuccess"],title:"PF2E.WeaponPropertyRune.greaterCorrosive.Name",text:"PF2E.WeaponPropertyRune.greaterCorrosive.Note.criticalSuccess"},{outcome:["success"],title:"PF2E.WeaponPropertyRune.greaterCorrosive.Name",text:"PF2E.WeaponPropertyRune.greaterCorrosive.Note.success"}]},level:15,name:"PF2E.WeaponPropertyRune.greaterCorrosive.Name",price:6500,rarity:"common",slug:"greaterCorrosive",traits:["acid","conjuration","magical"]},greaterCrushing:{damage:{notes:[{outcome:["criticalSuccess"],title:"PF2E.WeaponPropertyRune.greaterCrushing.Name",text:"PF2E.WeaponPropertyRune.greaterCrushing.Note.criticalSuccess"}]},level:9,name:"PF2E.WeaponPropertyRune.greaterCrushing.Name",price:650,rarity:"uncommon",slug:"greaterCrushing",traits:["magical","necromancy"]},greaterDisrupting:{damage:{dice:[{damageType:"positive",diceNumber:2,dieSize:"d6",predicate:[{or:["target:trait:undead","target:negative-healing"]}]}],notes:[{outcome:["criticalSuccess"],predicate:[{or:["target:trait:undead","target:negative-healing"]}],title:"PF2E.WeaponPropertyRune.greaterDisrupting.Name",text:"PF2E.WeaponPropertyRune.greaterDisrupting.Note.criticalSuccess"}]},level:14,name:"PF2E.WeaponPropertyRune.greaterDisrupting.Name",price:4300,rarity:"uncommon",slug:"greaterDisrupting",traits:["magical","necromancy"]},greaterExtending:{level:13,name:"PF2E.WeaponPropertyRune.greaterExtending.Name",price:3e3,rarity:"common",slug:"greaterExtending",traits:["magical","transmutation"]},greaterFanged:{level:8,name:"PF2E.WeaponPropertyRune.greaterExtending.Name",price:425,rarity:"uncommon",slug:"greaterFanged",traits:["magical","transmutation"]},greaterFearsome:{damage:{notes:[{outcome:["criticalSuccess"],title:"PF2E.WeaponPropertyRune.greaterFearsome.Name",text:"PF2E.WeaponPropertyRune.greaterFearsome.Note.criticalSuccess"}]},level:12,name:"PF2E.WeaponPropertyRune.greaterFearsome.Name",price:2e3,rarity:"common",slug:"greaterFearsome",traits:["emotion","enchantment","fear","magical","mental"]},greaterFlaming:{damage:{dice:[{damageType:"fire",diceNumber:1,dieSize:"d6"}],notes:[{outcome:["criticalSuccess"],title:"PF2E.WeaponPropertyRune.greaterFlaming.Name",text:"PF2E.WeaponPropertyRune.greaterFlaming.Note.criticalSuccess"},{outcome:["success"],title:"PF2E.WeaponPropertyRune.greaterFlaming.Name",text:"PF2E.WeaponPropertyRune.greaterFlaming.Note.success"}]},level:15,name:"PF2E.WeaponPropertyRune.greaterFlaming.Name",price:6500,rarity:"common",slug:"greaterFlaming",traits:["conjuration","fire","magical"]},greaterFrost:{damage:{dice:[{damageType:"cold",diceNumber:1,dieSize:"d6"}],notes:[{outcome:["criticalSuccess"],title:"PF2E.WeaponPropertyRune.greaterFrost.Name",text:"PF2E.WeaponPropertyRune.greaterFrost.Note.criticalSuccess"},{outcome:["success"],title:"PF2E.WeaponPropertyRune.greaterFrost.Name",text:"PF2E.WeaponPropertyRune.greaterFrost.Note.success"}]},level:15,name:"PF2E.WeaponPropertyRune.greaterFrost.Name",price:6500,rarity:"common",slug:"greaterFrost",traits:["cold","conjuration","magical"]},greaterHauling:{level:11,name:"PF2E.WeaponPropertyRune.greaterHauling.Name",price:1300,rarity:"uncommon",slug:"greaterHauling",traits:["evocation","magical"]},greaterImpactful:{damage:{dice:[{damageType:"force",diceNumber:1,dieSize:"d6"}],notes:[{outcome:["criticalSuccess"],title:"PF2E.WeaponPropertyRune.greaterImpactful.Name",text:"PF2E.WeaponPropertyRune.greaterImpactful.Note.criticalSuccess"}]},level:17,name:"PF2E.WeaponPropertyRune.greaterImpactful.Name",price:15e3,rarity:"common",slug:"greaterImpactful",traits:["evocation","force","magical"]},greaterShock:{damage:{dice:[{damageType:"electricity",diceNumber:1,dieSize:"d6"}],notes:[{outcome:["criticalSuccess"],title:"PF2E.WeaponPropertyRune.greaterShock.Name",text:"PF2E.WeaponPropertyRune.greaterShock.Note.criticalSuccess"},{outcome:["success"],title:"PF2E.WeaponPropertyRune.greaterShock.Name",text:"PF2E.WeaponPropertyRune.greaterShock.Note.success"}]},level:15,name:"PF2E.WeaponPropertyRune.greaterShock.Name",price:6500,rarity:"common",slug:"greaterShock",traits:["electricity","evocation","magical"]},greaterThundering:{damage:{dice:[{damageType:"sonic",diceNumber:1,dieSize:"d6"}],notes:[{outcome:["criticalSuccess"],title:"PF2E.WeaponPropertyRune.greaterThundering.Name",text:"PF2E.WeaponPropertyRune.greaterThundering.Note.criticalSuccess"},{outcome:["success"],title:"PF2E.WeaponPropertyRune.greaterThundering.Name",text:"PF2E.WeaponPropertyRune.greaterThundering.Note.success"}]},level:15,name:"PF2E.WeaponPropertyRune.greaterThundering.Name",price:6500,rarity:"common",slug:"greaterThundering",traits:["evocation","magical","sonic"]},grievous:{damage:{notes:[{outcome:["criticalSuccess"],predicate:["item:group:axe"],title:"PF2E.WeaponPropertyRune.grievous.Name",text:"PF2E.WeaponPropertyRune.grievous.Note.Axe"},{outcome:["criticalSuccess"],predicate:["item:group:brawling"],title:"PF2E.WeaponPropertyRune.grievous.Name",text:"PF2E.WeaponPropertyRune.grievous.Note.Brawling"},{outcome:["criticalSuccess"],predicate:["item:group:club"],title:"PF2E.WeaponPropertyRune.grievous.Name",text:"PF2E.WeaponPropertyRune.grievous.Note.Club"},{outcome:["criticalSuccess"],predicate:["item:group:dart"],title:"PF2E.WeaponPropertyRune.grievous.Name",text:"PF2E.WeaponPropertyRune.grievous.Note.Dart"},{outcome:["criticalSuccess"],predicate:["item:group:flail"],title:"PF2E.WeaponPropertyRune.grievous.Name",text:"PF2E.WeaponPropertyRune.grievous.Note.Flail"},{outcome:["criticalSuccess"],predicate:["item:group:hammer"],title:"PF2E.WeaponPropertyRune.grievous.Name",text:"PF2E.WeaponPropertyRune.grievous.Note.Hammer"},{outcome:["criticalSuccess"],predicate:["item:group:knife"],title:"PF2E.WeaponPropertyRune.grievous.Name",text:"PF2E.WeaponPropertyRune.grievous.Note.Knife"},{outcome:["criticalSuccess"],predicate:["item:group:pick"],title:"PF2E.WeaponPropertyRune.grievous.Name",text:"PF2E.WeaponPropertyRune.grievous.Note.Pick"},{outcome:["criticalSuccess"],predicate:["item:group:polearm"],title:"PF2E.WeaponPropertyRune.grievous.Name",text:"PF2E.WeaponPropertyRune.grievous.Note.Polearm"},{outcome:["criticalSuccess"],predicate:["item:group:shield"],title:"PF2E.WeaponPropertyRune.grievous.Name",text:"PF2E.WeaponPropertyRune.grievous.Note.Shield"},{outcome:["criticalSuccess"],predicate:["item:group:sling"],title:"PF2E.WeaponPropertyRune.grievous.Name",text:"PF2E.WeaponPropertyRune.grievous.Note.Sling"},{outcome:["criticalSuccess"],predicate:["item:group:spear"],title:"PF2E.WeaponPropertyRune.grievous.Name",text:"PF2E.WeaponPropertyRune.grievous.Note.Spear"},{outcome:["criticalSuccess"],predicate:["item:group:sword"],title:"PF2E.WeaponPropertyRune.grievous.Name",text:"PF2E.WeaponPropertyRune.grievous.Note.Sword"}]},level:9,name:"PF2E.WeaponPropertyRune.grievous.Name",price:700,rarity:"common",slug:"grievous",traits:["enchantment","magical"]},hauling:{level:6,name:"PF2E.WeaponPropertyRune.hauling.Name",price:225,rarity:"uncommon",slug:"hauling",traits:["evocation","magical"]},holy:{damage:{dice:[{damageType:"good",diceNumber:1,dieSize:"d6",predicate:["target:trait:evil"]}]},level:11,name:"PF2E.WeaponPropertyRune.holy.Name",price:1400,rarity:"common",slug:"holy",traits:["evocation","good","magical"]},hopeful:{attack:{notes:[{outcome:["criticalSuccess"],title:"PF2E.WeaponPropertyRune.hopeful.Name",text:"PF2E.WeaponPropertyRune.hopeful.Note.criticalSuccess"}]},level:11,name:"PF2E.WeaponPropertyRune.hopeful.Name",price:1200,rarity:"uncommon",slug:"hopeful",traits:["enchantment","magical"]},impactful:{damage:{dice:[{damageType:"force",diceNumber:1,dieSize:"d6"}],notes:[{outcome:["criticalSuccess"],title:"PF2E.WeaponPropertyRune.impactful.Name",text:"PF2E.WeaponPropertyRune.impactful.Note.criticalSuccess"}]},level:10,name:"PF2E.WeaponPropertyRune.impactful.Name",price:1e3,rarity:"common",slug:"impactful",traits:["evocation","force","magical"]},keen:{attack:{notes:[{outcome:["success"],title:"PF2E.WeaponPropertyRune.keen.Name",text:"PF2E.WeaponPropertyRune.keen.Note"}]},level:13,name:"PF2E.WeaponPropertyRune.keen.Name",price:3e3,rarity:"uncommon",slug:"keen",traits:["magical","transmutation"]},kinWarding:{level:3,name:"PF2E.WeaponPropertyRune.kinWarding.Name",price:52,rarity:"uncommon",slug:"kinWarding",traits:["abjuration","dwarf","magical"]},majorFanged:{level:15,name:"PF2E.WeaponPropertyRune.majorFanged.Name",price:6e3,rarity:"uncommon",slug:"majorFanged",traits:["magical","transmutation"]},pacifying:{level:5,name:"PF2E.WeaponPropertyRune.pacifying.Name",price:150,rarity:"uncommon",slug:"pacifying",traits:["enchantment","magical"]},returning:{attack:{notes:[{title:"PF2E.WeaponPropertyRune.returning.Name",text:"PF2E.WeaponPropertyRune.returning.Note"}]},level:3,name:"PF2E.WeaponPropertyRune.returning.Name",price:55,rarity:"common",slug:"returning",traits:["evocation","magical"]},serrating:{damage:{dice:[{damageType:"slashing",diceNumber:1,dieSize:"d4"}],notes:[{outcome:["criticalSuccess"],title:"PF2E.WeaponPropertyRune.serrating.Name",text:"PF2E.WeaponPropertyRune.serrating.Note.criticalSuccess"}]},level:10,name:"PF2E.WeaponPropertyRune.serrating.Name",price:1e3,rarity:"uncommon",slug:"serrating",traits:["evocation","magical"]},shifting:{level:6,name:"PF2E.WeaponPropertyRune.shifting.Name",price:225,rarity:"common",slug:"shifting",traits:["magical","transmutation"]},shock:{damage:{dice:[{damageType:"electricity",diceNumber:1,dieSize:"d6"}],notes:[{outcome:["criticalSuccess"],title:"PF2E.WeaponPropertyRune.shock.Name",text:"PF2E.WeaponPropertyRune.shock.Note.criticalSuccess"}]},level:8,name:"PF2E.WeaponPropertyRune.shock.Name",price:500,rarity:"common",slug:"shock",traits:["electricity","conjuration","magical"]},speed:{level:16,name:"PF2E.WeaponPropertyRune.speed.Name",price:1e4,rarity:"rare",slug:"speed",traits:["magical","transmutation"]},spellStoring:{level:13,name:"PF2E.WeaponPropertyRune.spellStoring.Name",price:2700,rarity:"uncommon",slug:"spellStoring",traits:["abjuration","magical"]},thundering:{damage:{dice:[{damageType:"sonic",diceNumber:1,dieSize:"d6"}],notes:[{outcome:["criticalSuccess"],title:"PF2E.WeaponPropertyRune.thundering.Name",text:"PF2E.WeaponPropertyRune.thundering.Note.criticalSuccess"}]},level:8,name:"PF2E.WeaponPropertyRune.thundering.Name",price:500,rarity:"common",slug:"thundering",traits:["evocation","magical","sonic"]},unholy:{damage:{dice:[{damageType:"evil",diceNumber:1,dieSize:"d6",predicate:["target:trait:good"]}]},level:11,name:"PF2E.WeaponPropertyRune.unholy.Name",price:1400,rarity:"common",slug:"unholy",traits:["evil","evocation","magical"]},vorpal:{level:17,name:"PF2E.WeaponPropertyRune.vorpal.Name",price:15e3,rarity:"rare",slug:"vorpal",traits:["evocation","magical"]},wounding:{damage:{notes:[{outcome:["criticalSuccess"],title:"PF2E.WeaponPropertyRune.wounding.Name",text:"PF2E.WeaponPropertyRune.wounding.Note.criticalSuccess"},{outcome:["success"],title:"PF2E.WeaponPropertyRune.wounding.Name",text:"PF2E.WeaponPropertyRune.wounding.Note.success"}]},level:7,name:"PF2E.WeaponPropertyRune.wounding.Name",price:340,rarity:"common",slug:"wounding",traits:["magical","necromancy"]}},exports.getPropertyRuneModifiers=function(runes){return runes.flatMap((rune=>{var _a;const runeConfig=CONFIG.PF2E.runes.weapon.property[rune];return runeConfig&&(null===(_a=runeConfig.damage)||void 0===_a?void 0:_a.dice)?function(rune,dice){return(dice=deepClone(dice)).map((die=>{var _a,_b,_c;return new modifiers_1.DiceModifierPF2e({slug:rune,label:null===(_a=CONFIG.PF2E.runes.weapon.property[rune])||void 0===_a?void 0:_a.name,diceNumber:null!==(_b=die.diceNumber)&&void 0!==_b?_b:1,dieSize:null!==(_c=die.dieSize)&&void 0!==_c?_c:"d6",damageType:die.damageType,predicate:die.predicate})}))}(rune,runeConfig.damage.dice):[]}))};exports.WEAPON_VALUATION_DATA={potency:{0:null,1:{level:2,price:35,rarity:"common",traits:["evocation"]},2:{level:10,price:935,rarity:"common",traits:["evocation"]},3:{level:16,price:8935,rarity:"common",traits:["evocation"]},4:{level:16,price:8935,rarity:"common",traits:["evocation"]}},striking:{"":null,striking:{level:4,price:65,rarity:"common",traits:["evocation"]},greaterStriking:{level:12,price:1065,rarity:"common",traits:["evocation"]},majorStriking:{level:19,price:31065,rarity:"common",traits:["evocation"]}}}},38719:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.PhysicalItemSheetPF2e=void 0;const helpers_1=__webpack_require__(69554),_util_1=__webpack_require__(6945),_1=__webpack_require__(6560),base_1=__webpack_require__(22222);class PhysicalItemSheetPF2e extends base_1.ItemSheetPF2e{async getData(options){var _a,_b,_c,_d;const sheetData=await super.getData(options),identifiedData=this.item.getMystifiedData("identified",{source:!0});sheetData.item.name=identifiedData.name,sheetData.item.img=identifiedData.img,sheetData.item.system.description.value=identifiedData.data.description.value;const{actionTraits}=CONFIG.PF2E,rollData={...this.item.getRollData(),...null===(_a=this.actor)||void 0===_a?void 0:_a.getRollData()};sheetData.enrichedContent.description=await TextEditor.enrichHTML(sheetData.item.system.description.value,{rollData,async:!0}),sheetData.enrichedContent.unidentifiedDescription=await TextEditor.enrichHTML(sheetData.item.system.identification.unidentified.data.description.value,{rollData,async:!0});const activations=[];for(const action of this.item.activations){const description=await TextEditor.enrichHTML(action.description.value,{rollData,async:!0});activations.push({action,id:action.id,base:`system.activations.${action.id}`,description,traits:(0,helpers_1.createSheetTags)(actionTraits,null!==(_b=action.traits)&&void 0!==_b?_b:{value:[]})})}return{...sheetData,itemType:game.i18n.localize("PF2E.ItemTitle"),basePriceString:new _1.CoinsPF2e(this.item._source.system.price.value).toString(),priceString:this.item.price.value.toString(),actionTypes:CONFIG.PF2E.actionTypes,actionsNumber:CONFIG.PF2E.actionsNumber,bulkTypes:CONFIG.PF2E.bulkTypes,frequencies:CONFIG.PF2E.frequencies,sizes:CONFIG.PF2E.actorSizes,stackGroups:CONFIG.PF2E.stackGroups,usage:CONFIG.PF2E.usageTraits,isPhysical:!0,activations,bulkDisabled:!!(null===(_d=null===(_c=sheetData.data)||void 0===_c?void 0:_c.stackGroup)||void 0===_d?void 0:_d.trim())}}activateListeners($html){var _a;super.activateListeners($html),$html.find("input[data-property]").on("focus",(event=>{var _a,_b;const $input=$(event.target),propertyPath=null!==(_a=$input.attr("data-property"))&&void 0!==_a?_a:"",value=$input.val();void 0===value||Array.isArray(value)||$input.attr("data-value",value);const baseValue=null!==(_b=$input.attr("data-value-base"))&&void 0!==_b?_b:String(getProperty(this.item._source,propertyPath));$input.val(baseValue).attr({name:propertyPath})})),$html.find("input[data-property]").on("blur",(event=>{var _a,_b;const $input=$(event.target);$input.removeAttr("name").removeAttr("style").attr({type:"text"});const propertyPath=null!==(_a=$input.attr("data-property"))&&void 0!==_a?_a:"",preparedValue=null!==(_b=$input.attr("data-value"))&&void 0!==_b?_b:String(getProperty(this.item,propertyPath));$input.val(preparedValue)})),$html.find("[data-action=activation-add]").on("click",(event=>{event.preventDefault();const id=randomID(16),action={id,actionCost:{value:1,type:"action"},components:{command:!1,envision:!1,interact:!1,cast:!1},description:{value:""},traits:{value:[],custom:""}};this.item.update({[`system.activations.${id}`]:action})})),$html.find("[data-action=activation-delete]").on("click",(event=>{var _a,_b;event.preventDefault();const id=$(event.target).closest("[data-activation-id]").attr("data-activation-id");1===Object.values(null!==(_a=this.item.system.activations)&&void 0!==_a?_a:[]).length&&id&&id in(null!==(_b=this.item.system.activations)&&void 0!==_b?_b:{})?this.item.update({"system.-=activations":null}):this.item.update({[`system.activations.-=${id}`]:null})})),$html.find("[data-action=activation-frequency-add]").on("click",(event=>{var _a;const id=$(event.target).closest("[data-activation-id]").attr("data-activation-id");if(id&&id in(null!==(_a=this.item.system.activations)&&void 0!==_a?_a:{})){const per=CONFIG.PF2E.frequencies.day;this.item.update({[`system.activations.${id}.frequency`]:{value:1,max:1,per}})}})),$html.find("[data-action=activation-frequency-delete]").on("click",(event=>{var _a;const id=$(event.target).closest("[data-activation-id]").attr("data-activation-id");id&&id in(null!==(_a=this.item.system.activations)&&void 0!==_a?_a:{})&&this.item.update({[`system.activations.${id}.-=frequency`]:null})}));const $otherTagsHint=$html.find("i.other-tags-hint");$otherTagsHint.tooltipster({maxWidth:350,theme:"crb-hover",content:game.i18n.localize(null!==(_a=$otherTagsHint.attr("title"))&&void 0!==_a?_a:"")})}prepareMaterials(valuationData){const{material}=this.item,preciousMaterials=CONFIG.PF2E.preciousMaterials,materials=Object.entries(valuationData).reduce(((result,[materialKey,materialData])=>{const validGrades=[..._1.PRECIOUS_MATERIAL_GRADES].filter((grade=>!!materialData[grade]));return validGrades.length&&(result[materialKey]={label:game.i18n.localize(preciousMaterials[materialKey]),grades:Object.fromEntries(validGrades.map((grade=>[grade,{...materialData[grade],label:game.i18n.localize(CONFIG.PF2E.preciousMaterialGrades[grade])}])))}),result}),{});return{value:material.precious?`${material.precious.type}|${material.precious.grade}`:"",materials}}async _updateObject(event,formData){var _a,_b,_c,_d;if("string"==typeof formData.preciousMaterial){const typeGrade=formData.preciousMaterial.split("|");(0,_util_1.objectHasKey)(CONFIG.PF2E.preciousMaterials,null!==(_a=typeGrade[0])&&void 0!==_a?_a:"")&&(0,_util_1.objectHasKey)(CONFIG.PF2E.preciousMaterialGrades,null!==(_b=typeGrade[1])&&void 0!==_b?_b:"")?(formData["system.preciousMaterial.value"]=typeGrade[0],formData["system.preciousMaterialGrade.value"]=typeGrade[1]):(formData["system.preciousMaterial.value"]=null,formData["system.preciousMaterialGrade.value"]=null),delete formData.preciousMaterial}const propertyPaths=["system.baseItem","system.preciousMaterial.value","system.preciousMaterialGrade.value","system.group","system.group.value"];for(const path of propertyPaths)""===formData[path]&&(formData[path]=null);formData["system.price.value"]&&(formData["system.price.value"]=_1.CoinsPF2e.fromString(String(formData["system.price.value"])));const expanded=expandObject(formData);for(const action of Object.values(null!==(_d=null===(_c=expanded.system)||void 0===_c?void 0:_c.activations)&&void 0!==_d?_d:[])){const actionCost=action.actionCost;if(actionCost){const isAction="action"===actionCost.type;actionCost.value||(actionCost.value=isAction?actionCost.value||1:null)}}return super._updateObject(event,flattenObject(expanded))}}exports.PhysicalItemSheetPF2e=PhysicalItemSheetPF2e},39964:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0})},65441:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.getUsageDetails=exports.isEquipped=void 0,exports.isEquipped=function(usage,equipped){var _a,_b;return usage.type===equipped.carryType&&(!("worn"===usage.type&&usage.where&&!equipped.inSlot)&&("held"!==usage.type||(null!==(_a=equipped.handsHeld)&&void 0!==_a?_a:0)>=(null!==(_b=usage.hands)&&void 0!==_b?_b:1)))},exports.getUsageDetails=function(usage){switch(usage){case"held-in-one-hand":case"held-in-one-plus-hands":return{value:usage,type:"held",hands:1};case"held-in-two-hands":return{value:usage,type:"held",hands:2};case"worn":case"worn-under-armor":case"worn-and-attached-to-two-weapons":case"affixed-to-armor":case"affixed-to-armor-or-travelers-clothing":case"affixed-to-armor-or-a-weapon":case"affixed-to-headgear":case"affixed-to-weapon":case"affixed-to-a-ranged-weapon":case"affixed-to-a-shield":case"affixed-to-crossbow-or-firearm":case"affixed-to-firearm":case"affixed-to-firearm-with-a-reload-of-1":case"affixed-to-firearm-with-the-kickback-trait":case"affixed-to-a-two-handed-firearm-or-crossbow":case"applied-to-a-wind-powered-vehicle":case"applied-to-any-item-of-light-or-negligible-bulk":case"applied-to-any-visible-article-of-clothing":case"applied-to-belt-cape-cloak-or-scarf":case"applied-to-boots-cape-cloak-or-umbrella":case"applied-to-dueling-cape-or-shield":case"applied-to-shield":case"attached-to-crossbow-or-firearm":case"attached-to-crossbow-or-firearm-scope":case"attached-to-crossbow-or-firearm-firing-mechanism":case"attached-to-firearm":case"attached-to-firearm-scope":case"attached-to-a-thrown-weapon":case"bonded":case"each-rune-applied-to-a-separate-item-that-has-pockets":case"tattooed-on-the-body":case"etched-onto-armor":case"etched-onto-med-heavy-armor":case"etched-onto-a-weapon":case"etched-onto-thrown-weapon":case"etched-onto-melee-weapon":case"etched-onto-clan-dagger":case"etched-onto-lm-nonmetal-armor":case"sewn-into-clothing":case"":return{value:usage,type:"worn"};case"wornarmor":case"wornamulet":case"wornanklets":case"wornarmbands":case"wornbackpack":case"wornbarding":case"wornbelt":case"wornbeltpouch":case"wornbracers":case"wornbracelet":case"worncloak":case"worncirclet":case"wornclothing":case"worncollar":case"worncrown":case"wornepaulet":case"worneyepiece":case"worngarment":case"worngloves":case"wornheadwear":case"wornmask":case"wornnecklace":case"wornonbelt":case"wornring":case"wornshoes":case"wornhorseshoes":case"wornsaddle":case"wornwrist":return{value:usage,type:"worn",where:usage.substring(4)}}return console.warn(`PF2E System | Unknown usage: [${usage}]`),{value:usage,type:"worn",where:null}}},66870:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.PRECIOUS_MATERIAL_TYPES=exports.PRECIOUS_MATERIAL_GRADES=exports.PHYSICAL_ITEM_TYPES=exports.DENOMINATIONS=void 0;const PHYSICAL_ITEM_TYPES=new Set(["armor","backpack","book","consumable","equipment","treasure","weapon"]);exports.PHYSICAL_ITEM_TYPES=PHYSICAL_ITEM_TYPES;const PRECIOUS_MATERIAL_TYPES=new Set(["abysium","adamantine","coldIron","darkwood","djezet","dragonhide","grisantian-pelt","inubrix","mithral","noqual","orichalcum","peachwood","siccatite","silver","sisterstone-dusk","sisterstone-scarlet","sovereignSteel","warpglass"]);exports.PRECIOUS_MATERIAL_TYPES=PRECIOUS_MATERIAL_TYPES;const PRECIOUS_MATERIAL_GRADES=new Set(["low","standard","high"]);exports.PRECIOUS_MATERIAL_GRADES=PRECIOUS_MATERIAL_GRADES;exports.DENOMINATIONS=["pp","gp","sp","cp"]},22222:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.ItemSheetPF2e=void 0;const rules_1=__webpack_require__(37434),helpers_1=__webpack_require__(69554),inline_roll_links_1=__webpack_require__(27542),localize_1=__webpack_require__(41332),tag_selector_1=__webpack_require__(26115),_util_1=__webpack_require__(6945),codemirror_1=__webpack_require__(52758),rule_elements_1=__webpack_require__(93317);class ItemSheetPF2e extends ItemSheet{constructor(){var _a;super(...arguments),this.selectedRuleElementType=null!==(_a=Object.keys(rules_1.RuleElements.all).at(0))&&void 0!==_a?_a:null,this.editingRuleElementIndex=null,this.ruleElementForms={}}static get defaultOptions(){const options=super.defaultOptions;return options.width=650,options.height=460,options.classes=options.classes.concat(["pf2e","item"]),options.template="systems/pf2e/templates/items/item-sheet.html",options.scrollY=[".tab.active"],options.tabs=[{navSelector:".tabs",contentSelector:".sheet-body",initial:"description"},{navSelector:".mystify-nav",contentSelector:".mystify-sheet",initial:"unidentified"}],options}get editingRuleElement(){var _a;return null===this.editingRuleElementIndex?null:null!==(_a=this.item.toObject().system.rules[this.editingRuleElementIndex])&&void 0!==_a?_a:null}get validTraits(){return(0,_util_1.objectHasKey)(CONFIG.PF2E.Item.traits,this.item.type)?CONFIG.PF2E.Item.traits[this.item.type]:null}async getData(options={}){var _a,_b,_c,_d,_e,_f,_g;null===(_a=options.classes)||void 0===_a||_a.push(this.item.type),options.editable=this.isEditable;const item=this.item.clone({},{keepId:!0}),itemData=item.toObject(!1),rules=this.item.toObject().system.rules,enrichedContent={},rollData={...this.item.getRollData(),...null===(_b=this.actor)||void 0===_b?void 0:_b.getRollData()};enrichedContent.description=await game.pf2e.TextEditor.enrichHTML(itemData.system.description.value,{rollData,async:!0});const validTraits=this.validTraits,hasRarity=!this.item.isOfType("action","condition","deity","effect","lore","melee"),traits=validTraits?(0,helpers_1.createSheetTags)(validTraits,null!==(_d=null===(_c=this.item.system.traits)||void 0===_c?void 0:_c.value)&&void 0!==_d?_d:[]):null;this.ruleElementForms={};for(const[idx,rule]of rules.entries()){const FormClass=null!==(_e=rule_elements_1.RULE_ELEMENT_FORMS[String(rule.key)])&&void 0!==_e?_e:rule_elements_1.RuleElementForm;this.ruleElementForms[Number(idx)]=new FormClass(this.item,idx,rule)}const traitSlugs=(()=>{var _a,_b;const readonlyTraits=null!==(_b=null===(_a=this.item.system.traits)||void 0===_a?void 0:_a.value.filter((t=>{var _a,_b;return!(null!==(_b=null===(_a=this.item._source.system.traits)||void 0===_a?void 0:_a.value)&&void 0!==_b?_b:[]).includes(t)})))&&void 0!==_b?_b:[];return Object.keys(null!=traits?traits:{}).map((slug=>{var _a;return{id:slug,value:game.i18n.localize(null!==(_a=null==validTraits?void 0:validTraits[slug])&&void 0!==_a?_a:slug),readonly:readonlyTraits.includes(slug)}}))})();return{itemType:null,showTraits:null!==this.validTraits,hasSidebar:this.item.isOfType("condition","lore"),hasDetails:!0,sidebarTitle:game.i18n.format("PF2E.Item.SidebarSummary",{type:game.i18n.localize(`ITEM.Type${this.item.type.capitalize()}`)}),cssClass:this.isEditable?"editable":"locked",editable:this.isEditable,document:this.item,item:itemData,isPhysical:!1,data:item.system,enrichedContent,limited:this.item.limited,options:this.options,owner:this.item.isOwner,title:this.title,user:{isGM:game.user.isGM},rarity:hasRarity?null!==(_g=null===(_f=this.item.system.traits)||void 0===_f?void 0:_f.rarity)&&void 0!==_g?_g:"common":null,rarities:CONFIG.PF2E.rarityTraits,traits,traitSlugs,enabledRulesUI:game.settings.get("pf2e","enabledRulesUI"),ruleEditing:!!this.editingRuleElement,rules:{labels:rules.map((ruleData=>{var _a;const translations=localize_1.LocalizePF2e.translations.PF2E.RuleElement,label=null!==(_a=translations[String(ruleData.key).replace(/^PF2E\.RuleElement\./,"")])&&void 0!==_a?_a:translations.Unrecognized;return{label,recognized:label!==translations.Unrecognized}})),selection:{selected:this.selectedRuleElementType,types:(0,_util_1.sortStringRecord)(Object.keys(rules_1.RuleElements.all).reduce(((result,key)=>{var _a;const translations=localize_1.LocalizePF2e.translations.PF2E.RuleElement;return result[key]=game.i18n.localize(null!==(_a=translations[key])&&void 0!==_a?_a:key),result}),{}))},elements:await Promise.all(rules.map((async(rule,index)=>({template:await this.ruleElementForms[index].render(),index,rule}))))},sidebarTemplate:()=>`systems/pf2e/templates/items/${item.type}-sidebar.html`,detailsTemplate:()=>`systems/pf2e/templates/items/${item.type}-details.html`,proficiencies:CONFIG.PF2E.proficiencyLevels}}onTagSelector(anchor){var _a,_b,_c;if("basic"!==(null!==(_a=anchor.dataset.tagSelector)&&void 0!==_a?_a:""))throw(0,_util_1.ErrorPF2e)("Item sheets can only use the basic tag selector");const propertyIsFlat="true"===anchor.dataset.flat,objectProperty=null!==(_b=anchor.dataset.property)&&void 0!==_b?_b:"",title=anchor.dataset.title,configTypes=(null!==(_c=anchor.dataset.configTypes)&&void 0!==_c?_c:"").split(",").map((type=>type.trim())).filter((tag=>(0,_util_1.tupleHasValue)(tag_selector_1.SELECTABLE_TAG_FIELDS,tag))),selectorOptions={objectProperty,configTypes,title,flat:propertyIsFlat};"true"===anchor.dataset.noCustom?selectorOptions.allowCustom=!1:this.actor&&configTypes.includes("attackEffects")&&(selectorOptions.customChoices=this.getAttackEffectOptions()),new tag_selector_1.TagSelectorBasic(this.item,selectorOptions).render(!0)}getAttackEffectOptions(){var _a,_b;return null!==(_b=null===(_a=this.actor)||void 0===_a?void 0:_a.items.filter((i=>"action"===i.type||"consumable"===i.type)).reduce(((options,item)=>{var _a;const key=null!==(_a=item.slug)&&void 0!==_a?_a:(0,_util_1.sluggify)(item.name);return mergeObject(options,{[key]:item.name},{inplace:!1})}),CONFIG.PF2E.attackEffects))&&void 0!==_b?_b:{}}async close(options){return this.editingRuleElementIndex=null,super.close(options)}activateListeners($html){var _a,_b,_c;super.activateListeners($html);const html=$html[0];for(const anchor of(0,_util_1.htmlQueryAll)(html,"a.tag-selector"))anchor.addEventListener("click",(()=>this.onTagSelector(anchor)));const ruleElementSelect=html.querySelector("select[data-action=select-rule-element]");null==ruleElementSelect||ruleElementSelect.addEventListener("change",(()=>{this.selectedRuleElementType=ruleElementSelect.value}));for(const anchor of(0,_util_1.htmlQueryAll)(html,"a.add-rule-element"))anchor.addEventListener("click",(async event=>{var _a;await this._onSubmit(event);const rulesData=this.item.toObject().system.rules,key=null!==(_a=this.selectedRuleElementType)&&void 0!==_a?_a:"NewRuleElement";this.item.update({"system.rules":rulesData.concat({key})})}));for(const anchor of(0,_util_1.htmlQueryAll)(html,"a.edit-rule-element"))anchor.addEventListener("click",(async event=>{var _a,_b;await this._onSubmit(event);const index=null!==(_b=Number(null!==(_a=anchor.dataset.ruleIndex)&&void 0!==_a?_a:"NaN"))&&void 0!==_b?_b:null;this.editingRuleElementIndex=index,this.render(!0)}));for(const anchor of(0,_util_1.htmlQueryAll)(html,".rules a.remove-rule-element"))anchor.addEventListener("click",(async event=>{var _a;await this._onSubmit(event);const rules=this.item.toObject().system.rules,index=Number(null!==(_a=anchor.dataset.ruleIndex)&&void 0!==_a?_a:"NaN");rules&&Number.isInteger(index)&&rules.length>index&&(rules.splice(index,1),this.item.update({"system.rules":rules}))}));for(const anchor of(0,_util_1.htmlQueryAll)(html,"a[data-clipboard]"))anchor.addEventListener("click",(()=>{const clipText=anchor.dataset.clipboard;clipText&&(navigator.clipboard.writeText(clipText),ui.notifications.info(game.i18n.format("PF2E.ClipboardNotification",{clipText})))}));const editingRuleElement=this.editingRuleElement;if(editingRuleElement){const ruleText=JSON.stringify(editingRuleElement,null,2),view=new codemirror_1.CodeMirror.EditorView({doc:ruleText,extensions:[codemirror_1.CodeMirror.basicSetup,codemirror_1.CodeMirror.keybindings,codemirror_1.CodeMirror.json(),codemirror_1.CodeMirror.jsonLinter()]});null===(_a=html.querySelector(".rule-editing .editor-placeholder"))||void 0===_a||_a.replaceWith(view.dom);const closeBtn=html.querySelector(".rule-editing button[data-action=close]");null==closeBtn||closeBtn.addEventListener("click",(event=>{event.preventDefault(),this.editingRuleElementIndex=null,this.render()})),null==closeBtn||closeBtn.removeAttribute("disabled"),null===(_b=html.querySelector(".rule-editing button[data-action=apply]"))||void 0===_b||_b.addEventListener("click",(event=>{event.preventDefault();const value=view.state.doc.toString();if(null===this.editingRuleElementIndex)return this.editingRuleElementIndex=null,void this.render();try{const rules=this.item.toObject().system.rules;rules[this.editingRuleElementIndex]=JSON.parse(value),this.editingRuleElementIndex=null,this.item.update({"system.rules":rules})}catch(error){if(error instanceof Error)throw ui.notifications.error(game.i18n.format("PF2E.ErrorMessage.RuleElementSyntax",{message:error.message})),console.warn("Syntax error in rule element definition.",error.message,value),error}}))}const ruleSections=html.querySelectorAll(".rules .rule-form");for(const ruleSection of Array.from(ruleSections)){const idx=ruleSection.dataset.idx?Number(ruleSection.dataset.idx):NaN,form=this.ruleElementForms[idx];form&&form.activateListeners(ruleSection)}inline_roll_links_1.InlineRollLinks.listen(html,this.item);const{validTraits}=this,tagElement=html.querySelector(".sheet-header .tags"),traitsPrepend=html.querySelector(".traits-extra");if(null!==validTraits&&tagElement instanceof HTMLInputElement){const tags=(0,_util_1.tagify)(tagElement,{whitelist:validTraits});traitsPrepend&&tags.DOM.scope.prepend(traitsPrepend.content)}else tagElement&&traitsPrepend&&tagElement.append(traitsPrepend.content);this.updateSidebarVisibility(this._tabs[0].active),null===(_c=(0,_util_1.htmlQuery)(html,".add-skill-variant"))||void 0===_c||_c.addEventListener("click",(()=>{var _a;if(!this.item.isOfType("lore"))return;const variants=null!==(_a=this.item.system.variants)&&void 0!==_a?_a:{},index=Object.keys(variants).length;this.item.update({[`system.variants.${index}`]:{label:"+X in terrain",options:""}})}));for(const button of(0,_util_1.htmlQueryAll)(html,".skill-variants .remove-skill-variant"))button.addEventListener("click",(event=>{if(!(event.currentTarget instanceof HTMLElement))return;const index=event.currentTarget.dataset.skillVariantIndex;this.item.update({[`system.variants.-=${index}`]:null})}))}_onChangeTab(event,tabs,active){super._onChangeTab(event,tabs,active),this.updateSidebarVisibility(active)}updateSidebarVisibility(activeTab){var _a,_b;const sidebarHeader=null===(_a=this.element[0])||void 0===_a?void 0:_a.querySelector(".sidebar-summary"),sidebar=null===(_b=this.element[0])||void 0===_b?void 0:_b.querySelector(".sheet-sidebar");if(sidebarHeader&&sidebar){const display="rules"===activeTab?"none":"";sidebarHeader.style.display=sidebar.style.display=display}}activateEditor(name,options,initialContent){return super.activateEditor(name,options,"system.description.value"===name?this.item._source.system.description.value:initialContent)}_getSubmitData(updateData={}){const fd=new FormDataExtended(this.form,{editors:this.editors}),data=updateData?mergeObject(fd.object,updateData):expandObject(fd.object),flattenedData=flattenObject(data);return(0,helpers_1.processTagifyInSubmitData)(this.form,flattenedData),flattenedData}_getHeaderButtons(){const buttons=super._getHeaderButtons(),hasMultipleSheets=Object.keys(CONFIG.Item.sheetClasses[this.item.type]).length>1,sheetButton=buttons.find((button=>"configure-sheet"===button.class));return!hasMultipleSheets&&sheetButton&&buttons.splice(buttons.indexOf(sheetButton),1),buttons}_canDragDrop(_selector){return this.item.isOwner}async _onSubmit(event,{updateData=null,preventClose=!1,preventRender=!1}={}){return $(this.form).find("tags ~ input").each(((_i,input)=>{""===input.value&&(input.value="[]")})),super._onSubmit(event,{updateData,preventClose,preventRender})}async _updateObject(event,formData){var _a,_b,_c,_d;""===formData["system.baseItem"]&&(formData["system.baseItem"]=null);const rulesVisible=!!this.form.querySelector(".rules"),expanded=expandObject(formData);if(rulesVisible&&(null===(_a=expanded.system)||void 0===_a?void 0:_a.rules)){const rules=null!==(_b=this.item.toObject().system.rules)&&void 0!==_b?_b:[];for(const[key,value]of Object.entries(expanded.system.rules)){const idx=Number(key);if("string"==typeof value){try{rules[idx]=JSON.parse(value)}catch(error){if(error instanceof Error)throw ui.notifications.error(game.i18n.format("PF2E.ErrorMessage.RuleElementSyntax",{message:error.message})),console.warn("Syntax error in rule element definition.",error.message,value),error}continue}if(!value)continue;rules[idx]=mergeObject(null!==(_c=rules[idx])&&void 0!==_c?_c:{},value),null===(_d=this.ruleElementForms[idx])||void 0===_d||_d._updateObject(rules[idx]);const predicateValue=value.predicate;if("string"==typeof predicateValue&&""===predicateValue.trim())delete rules[idx].predicate;else try{rules[idx].predicate=JSON.parse(predicateValue)}catch(error){if(error instanceof Error)throw ui.notifications.error(game.i18n.format("PF2E.ErrorMessage.RuleElementSyntax",{message:error.message})),console.warn("Syntax error in rule element definition.",error.message,predicateValue),error}}expanded.system.rules=rules}return super._updateObject(event,flattenObject(expanded))}async _render(force,options){await(0,helpers_1.maintainTagifyFocusInRender)(this,(()=>super._render(force,options)))}}exports.ItemSheetPF2e=ItemSheetPF2e},52758:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.CodeMirror=void 0;const codemirror_1=__webpack_require__(61181),view_1=__webpack_require__(43777),commands_1=__webpack_require__(77504),lint_1=__webpack_require__(18918),lang_json_1=__webpack_require__(20798);exports.CodeMirror={EditorView:codemirror_1.EditorView,basicSetup:codemirror_1.basicSetup,json:lang_json_1.json,jsonLinter:()=>(0,lint_1.linter)((0,lang_json_1.jsonParseLinter)()),keybindings:view_1.keymap.of([commands_1.indentWithTab])}},49238:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.ItemSheetPF2e=void 0;var base_1=__webpack_require__(22222);Object.defineProperty(exports,"ItemSheetPF2e",{enumerable:!0,get:function(){return base_1.ItemSheetPF2e}})},20532:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.coerceNumber=exports.RuleElementForm=void 0,exports.coerceNumber=function(value){return""===value||isNaN(Number(value))?value:Number(value)};exports.RuleElementForm=class RuleElementForm{constructor(item,index,rule){this.item=item,this.index=index,this.rule=rule,this.template="systems/pf2e/templates/items/rules/default.html"}async getData(){return{index:this.index,rule:this.rule}}async render(){const data=await this.getData();return renderTemplate(this.template,data)}updateItem(updates){const rules=this.item.toObject().system.rules;rules[this.index]=mergeObject(this.rule,updates,{performDeletions:!0}),this.item.update({"system.rules":rules})}activateListeners(_html){}_updateObject(_formData){}}},65349:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.FlatModifierForm=void 0;const modifiers_1=__webpack_require__(92823),util_1=__webpack_require__(58903),_util_1=__webpack_require__(6945),base_1=__webpack_require__(20532);class FlatModifierForm extends base_1.RuleElementForm{constructor(){super(...arguments),this.template="systems/pf2e/templates/items/rules/flat-modifier.html"}activateListeners(html){var _a,_b;const selectorElement=(0,_util_1.htmlQuery)(html,".selector-list");selectorElement&&(0,_util_1.tagify)(selectorElement),null===(_a=html.querySelector("[data-action=toggle-selector]"))||void 0===_a||_a.addEventListener("click",(()=>{var _a;const selector=this.rule.selector,newValue=Array.isArray(selector)?null!==(_a=selector.at(0))&&void 0!==_a?_a:"":[null!=selector?selector:""].filter((s=>!!s));this.updateItem({selector:newValue})})),null===(_b=html.querySelector("[data-action=toggle-brackets]"))||void 0===_b||_b.addEventListener("click",(()=>{const value=this.rule.value;(0,util_1.isBracketedValue)(value)?this.updateItem({value:""}):this.updateItem({value:{brackets:[{value:""}]}})}));for(const button of html.querySelectorAll("[data-action=bracket-add]"))button.addEventListener("click",(()=>{const value=this.rule.value;(0,util_1.isBracketedValue)(value)&&(value.brackets.push({value:""}),this.updateItem({value}))}));for(const button of html.querySelectorAll("[data-action=bracket-delete]"))button.addEventListener("click",(event=>{var _a,_b;const value=this.rule.value,idx=Number(null===(_b=null===(_a=event.target)||void 0===_a?void 0:_a.closest("[data-idx]"))||void 0===_b?void 0:_b.dataset.idx);(0,util_1.isBracketedValue)(value)&&(value.brackets.splice(idx,1),this.updateItem({value}))}))}async getData(){var _a;const data=await super.getData();data.rule.type="untyped"===data.rule.type?"":data.rule.type;const valueMode=(0,util_1.isBracketedValue)(this.rule.value)?"brackets":(0,_util_1.isObject)(this.rule.value)?"object":"primitive",isDamage=[null!==(_a=this.rule.selector)&&void 0!==_a?_a:[]].flat().some((s=>String(s).endsWith("damage")));return{...data,selectorIsArray:Array.isArray(this.rule.selector),abilities:CONFIG.PF2E.abilities,types:[...modifiers_1.MODIFIER_TYPES].filter((type=>"untyped"!==type)),damageCategories:CONFIG.PF2E.damageCategories,isDamage,value:{mode:valueMode,data:this.rule.value}}}_updateObject(formData){var _a,_b;if((0,_util_1.isObject)(formData.value)&&"brackets"in formData.value){const brackets=formData.value.brackets=Array.from(Object.values(null!==(_a=formData.value.brackets)&&void 0!==_a?_a:{}));""===formData.value.field&&delete formData.value.field;for(const bracket of brackets)null===bracket.start&&delete bracket.start,null===bracket.end&&delete bracket.end,bracket.value=(0,_util_1.isObject)(bracket.value)?"":(0,base_1.coerceNumber)(bracket.value)}else(0,_util_1.isObject)(formData.value)||(formData.value=(0,base_1.coerceNumber)(null!==(_b=formData.value)&&void 0!==_b?_b:""));delete formData["ability"===formData.type?"value":"ability"],formData.critical=!(0,_util_1.tupleHasValue)([!1,"false"],formData.critical)&&(!!formData.critical||null),null===formData.critical&&delete formData.critical;for(const optional of["label","type","damageType","damageCategory","hideIfDisabled"])formData[optional]||delete formData[optional]}}exports.FlatModifierForm=FlatModifierForm},93317:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.RULE_ELEMENT_FORMS=exports.RuleElementForm=void 0;const degree_of_success_1=__webpack_require__(54870),_util_1=__webpack_require__(6945),base_1=__webpack_require__(20532);Object.defineProperty(exports,"RuleElementForm",{enumerable:!0,get:function(){return base_1.RuleElementForm}});const flat_modifier_1=__webpack_require__(65349);class RollNoteForm extends base_1.RuleElementForm{constructor(){super(...arguments),this.html=null,this.template="systems/pf2e/templates/items/rules/note.html"}activateListeners(html){this.html=html;const optionsEl=html.querySelector(".outcomes");optionsEl&&(0,_util_1.tagify)(optionsEl,{whitelist:[...degree_of_success_1.DEGREE_OF_SUCCESS_STRINGS],maxTags:3})}_updateObject(ruleData){var _a;const{html}=this;if(html){const shouldBeHidden=null===(_a=html.querySelector(".hidden-value"))||void 0===_a?void 0:_a.checked;shouldBeHidden!==["gm","owner"].includes(String(ruleData.visibility))&&(shouldBeHidden?ruleData.visibility="owner":delete ruleData.visibility)}Array.isArray(ruleData.outcome)&&0===ruleData.outcome.length&&delete ruleData.outcome,"string"==typeof ruleData.title&&(ruleData.title=ruleData.title.trim(),""===ruleData.title&&delete ruleData.title)}}class GrantItemForm extends base_1.RuleElementForm{constructor(){super(...arguments),this.template="systems/pf2e/templates/items/rules/grant-item.html"}async getData(){var _a;const data=await super.getData(),uuid=this.rule.uuid?String(this.rule.uuid):null;return{...data,granted:uuid?await fromUuid(uuid):null,allowDuplicate:null===(_a=this.rule.allowDuplicate)||void 0===_a||_a}}_updateObject(ruleData){"string"==typeof ruleData.uuid&&(ruleData.uuid=ruleData.uuid.trim(),""===ruleData.uuid&&delete ruleData.uuid),ruleData.replaceSelf||delete ruleData.replaceSelf,ruleData.reevaluateOnUpdate||delete ruleData.reevaluateOnUpdate,ruleData.allowDuplicate&&delete ruleData.allowDuplicate}}const RULE_ELEMENT_FORMS={Note:RollNoteForm,GrantItem:GrantItemForm,FlatModifier:flat_modifier_1.FlatModifierForm};exports.RULE_ELEMENT_FORMS=RULE_ELEMENT_FORMS},70859:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0})},71451:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.SpellPF2e=void 0;const modifiers_1=__webpack_require__(92823),_item_1=__webpack_require__(10843),ghost_measured_template_1=__webpack_require__(70543),chat_message_1=__webpack_require__(40405),util_1=__webpack_require__(58903),_scene_1=__webpack_require__(12789),dice_1=__webpack_require__(18235),sheet_util_1=__webpack_require__(15806),damage_1=__webpack_require__(12227),check_1=__webpack_require__(11848),_util_1=__webpack_require__(6945),helpers_1=__webpack_require__(6605),overlay_1=__webpack_require__(41436);class SpellPF2e extends _item_1.ItemPF2e{constructor(data,context={}){var _a;super(data,mergeObject(context,{pf2e:{ready:!0}})),this.trickMagicEntry=null,this.isFromConsumable=null!==(_a=context.fromConsumable)&&void 0!==_a&&_a}get baseLevel(){return this.system.level.value}get level(){var _a;if(!this.actor)return this.baseLevel;const isAutoHeightened=this.isCantrip||this.isFocusSpell,fixedHeightenedLevel=this.system.location.autoHeightenLevel||(null===(_a=this.spellcasting)||void 0===_a?void 0:_a.system.autoHeightenLevel.value)||null;return(isAutoHeightened?fixedHeightenedLevel||Math.ceil(this.actor.level/2)||null:this.system.location.heightenedLevel||null)||this.baseLevel}get traits(){return new Set(this.system.traits.value)}get castingTraits(){const{components}=this;return[null===(0,_util_1.getActionIcon)(this.system.time.value,null)?"exploration":[],components.verbal?"concentrate":[],["focus","material","somatic"].some((c=>components[c]))?"manipulate":[]].flat()}get school(){return this.system.school.value}get traditions(){var _a;return(null===(_a=this.spellcasting)||void 0===_a?void 0:_a.tradition)?new Set([this.spellcasting.tradition]):new Set(this.system.traditions.value)}get spellcasting(){var _a;const spellcastingId=this.system.location.value;return null===(_a=this.actor)||void 0===_a?void 0:_a.spellcasting.find((entry=>entry.id===spellcastingId))}get isCantrip(){return this.traits.has("cantrip")&&!this.isRitual}get isFocusSpell(){return"focus"===this.system.category.value}get isRitual(){return"ritual"===this.system.category.value}get components(){const components=this.system.components,results=[];return components.focus&&results.push(game.i18n.localize("PF2E.SpellComponentShortF")),components.material&&results.push(game.i18n.localize("PF2E.SpellComponentShortM")),components.somatic&&results.push(game.i18n.localize("PF2E.SpellComponentShortS")),components.verbal&&results.push(game.i18n.localize("PF2E.SpellComponentShortV")),{...components,value:results.join("")}}get unlimited(){return this.isCantrip}get isVariant(){return!!this.original}get hasVariants(){return this.overlays.size>0}get uuid(){return this.isVariant?this.original.uuid:super.uuid}computeCastLevel(slotLevel){return(this.isCantrip||this.isFocusSpell)&&this.actor?this.level:Math.max(this.baseLevel,null!=slotLevel?slotLevel:this.level)}getRollData(rollOptions={}){var _a,_b;const spellLevel=Number(null==rollOptions?void 0:rollOptions.castLevel)||null,castLevel=Math.max(this.baseLevel,spellLevel||this.level);if(spellLevel&&castLevel!==this.level){return this.clone({"system.location.heightenedLevel":castLevel}).getRollData()}const rollData=super.getRollData();if(null===(_a=this.actor)||void 0===_a?void 0:_a.isOfType("character","npc")){const spellcasting=this.spellcasting,{abilities}=this.actor.system;!(null==spellcasting?void 0:spellcasting.system)&&this.trickMagicEntry?rollData.mod=abilities[this.trickMagicEntry.ability].mod:rollData.mod=abilities[null!==(_b=null==spellcasting?void 0:spellcasting.ability)&&void 0!==_b?_b:"int"].mod}return rollData.castLevel=castLevel,rollData.heighten=Math.max(0,castLevel-this.baseLevel),rollData}getDamageFormula(castLevel=this.level,rollData={}){var _a,_b;if(!this.isVariant){const variant=this.loadVariant({castLevel});if(variant)return variant.getDamageFormula(castLevel,rollData)}const formulas=[];for(const[id,damage]of Object.entries(null!==(_a=this.system.damage.value)&&void 0!==_a?_a:{})){if(damage.type.subtype)continue;const parts=[];damage.value&&"0"!==damage.value&&parts.push(damage.value),damage.applyMod&&this.actor&&parts.push("@mod");const heightening=this.system.heightening;if("interval"===(null==heightening?void 0:heightening.type)&&heightening.interval){const scalingFormula=heightening.damage[id];if(scalingFormula&&"0"!==scalingFormula&&heightening.interval){const partCount=Math.floor((castLevel-this.baseLevel)/heightening.interval);if(partCount>0){const scalingParts=Array(partCount).fill(scalingFormula);parts.push(scalingParts.join("+"))}}}if(0===parts.length)continue;const categories=[];damage.type.subtype&&categories.push(damage.type.subtype),categories.push(...null!==(_b=damage.type.categories)&&void 0!==_b?_b:[],damage.type.value);const baseFormulaFixed=Roll.replaceFormulaData(parts.join(" + "),rollData).replace(/[\s]*\+[\s]*-[\s]*/g," - "),formula=(0,dice_1.combineTerms)(baseFormulaFixed).formula;formulas.push(formula)}const{actor}=this;if(actor&&Object.keys(this.system.damage.value).length){const domains=["damage","spell-damage"],heightened=this.clone({"system.location.heightenedLevel":castLevel}),modifiers=(0,util_1.extractModifiers)(actor.synthetics,domains,{resolvables:{spell:heightened}}),rollOptions=new Set([...actor.getRollOptions(domains),...this.getRollOptions("item"),...this.traits]),damageDice=(0,util_1.extractDamageDice)(actor.synthetics.damageDice,domains,{test:rollOptions,resolvables:{spell:heightened}}),adjusted=(0,helpers_1.applyDamageDice)(formulas,damageDice),damageModifier=new modifiers_1.StatisticModifier("",modifiers,rollOptions);return damageModifier.totalModifier&&adjusted.push(`${damageModifier.totalModifier}`),adjusted.join(" + ")}return formulas.join(" + ")}loadVariant(options={}){if(this.original)return this.original.loadVariant(options);const{castLevel,overlayIds}=options,appliedOverlays=new Map,override=(()=>{var _a;const heightenEntries=this.getHeightenLayers(castLevel);if(0===heightenEntries.length&&!overlayIds)return null;let source=this.toObject();if(overlayIds){const overlays=new Map(overlayIds.map((id=>[id,this.overlays.get(id,{strict:!0})])));if([...overlays.values()].map((overlay=>overlay.overlayType)).filter((type=>"override"===type)).length>1)throw(0,_util_1.ErrorPF2e)(`Error loading variant of Spell ${this.name} (${this.uuid}). Cannot apply multiple override overlays.`);for(const[overlayId,overlayData]of overlays){if("override"===overlayData.overlayType)delete source.system.overlays,source.system.rules=[],source=mergeObject(source,overlayData,{overwrite:!0});appliedOverlays.set(overlayData.overlayType,overlayId)}}for(const overlay of heightenEntries)mergeObject(source.system,overlay.system);const currentLevel=null!==(_a=source.system.location.heightenedLevel)&&void 0!==_a?_a:source.system.level.value;return castLevel&&castLevel>currentLevel&&(source.system.location.heightenedLevel=castLevel),source})();if(!override)return null;const variantSpell=new SpellPF2e(override,{parent:this.actor});return variantSpell.original=this,variantSpell.appliedOverlays=appliedOverlays,variantSpell}getHeightenLayers(level){const heightening=this.system.heightening;return"fixed"!==(null==heightening?void 0:heightening.type)?[]:Object.entries(heightening.levels).map((([level,system])=>({level:Number(level),system}))).filter((system=>!level||level>=system.level)).sort(((first,second)=>first.level-second.level))}createTemplate(){var _a,_b,_c,_d;const{area}=this.system,areaType={burst:"circle",emanation:"circle",line:"ray",cone:"cone",rect:"rect",square:"rect",cube:"rect"}[area.areaType],templateData={t:areaType,distance:Number(area.value)/5*(null!==(_b=null===(_a=canvas.dimensions)||void 0===_a?void 0:_a.distance)&&void 0!==_b?_b:0),fillColor:game.user.color,flags:{pf2e:{origin:{type:this.type,uuid:this.uuid,name:this.name,slug:this.slug,traits:deepClone(this.system.traits.value)}}}};"ray"===areaType?templateData.width=CONFIG.MeasuredTemplate.defaults.width*(null!==(_d=null===(_c=canvas.dimensions)||void 0===_c?void 0:_c.distance)&&void 0!==_d?_d:1):"cone"===areaType&&(templateData.angle=CONFIG.MeasuredTemplate.defaults.angle);const templateDoc=new _scene_1.MeasuredTemplateDocumentPF2e(templateData,{parent:canvas.scene});return new ghost_measured_template_1.GhostTemplate(templateDoc)}placeTemplate(){this.createTemplate().drawPreview()}prepareBaseData(){super.prepareBaseData(),this.system.level.value=Math.clamped(this.system.level.value,1,10)||1,this.overlays=new overlay_1.SpellOverlayCollection(this,this.system.overlays)}prepareSiblingData(){var _a;this.system.traits.value.push(this.school,...this.traditions),(null===(_a=this.spellcasting)||void 0===_a?void 0:_a.isInnate)&&mergeObject(this.system.location,{uses:{value:1,max:1}},{overwrite:!1})}getRollOptions(prefix=this.type){var _a,_b;const options=new Set;!((null===(_a=this.spellcasting)||void 0===_a?void 0:_a.isPrepared)||(null===(_b=this.spellcasting)||void 0===_b?void 0:_b.isSpontaneous))||this.isCantrip||this.isFromConsumable||options.add(`${prefix}:spell-slot`),this.system.duration.value||options.add(`${prefix}:duration:0`);for(const damage of Object.values(this.system.damage.value)){const category=damage_1.DamageCategorization.fromDamageType(damage.type.value);damage.type&&options.add(`${prefix}:damage:${damage.type.value}`),category&&options.add(`${prefix}:damage:${category}`)}"heal"!==this.system.spellType.value&&options.add("damaging-effect");for(const trait of this.traits)options.add(trait);return super.getRollOptions(prefix).concat([...options])}async toMessage(event,{create=!0,data={},rollMode}={}){var _a,_b,_c,_d;const message=await super.toMessage(event,{create:!1,data,rollMode});if(!message)return;const nearestItem=event?event.currentTarget.closest(".item"):{},contextualData=Object.keys(data).length>0?data:nearestItem.dataset||{},messageSource=message.toObject(),entry=null!==(_a=this.trickMagicEntry)&&void 0!==_a?_a:this.spellcasting;if(entry){const tradition=Array.from(this.traditions).at(0);messageSource.flags.pf2e.casting={id:entry.id,level:null!==(_b=data.castLevel)&&void 0!==_b?_b:Number(contextualData.castLevel)||this.level,tradition:null!==(_d=null!==(_c=entry.tradition)&&void 0!==_c?_c:tradition)&&void 0!==_d?_d:"arcane"}}return messageSource.flags.pf2e.isFromConsumable=this.isFromConsumable,this.isVariant&&(messageSource.flags.pf2e.spellVariant={overlayIds:[...this.appliedOverlays.values()]}),create?chat_message_1.ChatMessagePF2e.create(messageSource,{renderSheet:!1}):(message.updateSource(messageSource),message)}async getChatData(htmlOptions={},rollOptions={}){var _a,_b,_c,_d;if(!this.actor)throw(0,_util_1.ErrorPF2e)(`Cannot retrieve chat data for unowned spell ${this.name}`);const slotLevel=Number(rollOptions.slotLevel)||this.level,castLevel=Number(rollOptions.castLevel)||this.computeCastLevel(slotLevel);if(!this.isVariant){const variant=this.loadVariant({castLevel});if(variant)return variant.getChatData(htmlOptions,rollOptions)}const variants=this.overlays.overrideVariants.flatMap((variant=>{const overlayIds=[...variant.appliedOverlays.values()];return{actions:(()=>{const actionIcon=(0,_util_1.getActionIcon)(variant.system.time.value,null);return variant.system.time.value!==this.system.time.value&&actionIcon?actionIcon:null})(),name:variant.name,overlayIds,sort:variant.sort}})).sort(((a,b)=>a.sort-b.sort)),rollData=null!==(_a=htmlOptions.rollData)&&void 0!==_a?_a:this.getRollData({castLevel});null!==(_b=rollData.item)&&void 0!==_b||(rollData.item=this);const localize=game.i18n.localize.bind(game.i18n),systemData=this.system,options={...htmlOptions,rollData},description=await game.pf2e.TextEditor.enrichHTML(this.description,{...options,async:!0}),trickData=this.trickMagicEntry,spellcasting=this.spellcasting;if(!spellcasting&&!trickData)return console.warn(`PF2e System | Orphaned spell ${this.name} (${this.id}) on actor ${this.actor.name} (${this.actor.id})`),{...systemData};const statistic=(null==trickData?void 0:trickData.statistic)||(null==spellcasting?void 0:spellcasting.statistic);if(!statistic)return console.warn(`PF2e System | Spell ${this.name} is missing a statistic to cast with (${this.id}) on actor ${this.actor.name} (${this.actor.id})`),{...systemData};const statisticChatData=statistic.getChatData({item:this}),spellDC=statisticChatData.dc.value,isAttack="attack"===systemData.spellType.value,isSave="save"===systemData.spellType.value||""!==systemData.save.value,formula=this.getDamageFormula(castLevel,rollData),hasDamage=formula&&"0"!==formula,saveType=systemData.save.value?game.i18n.localize(CONFIG.PF2E.saves[systemData.save.value]):"",saveKey=systemData.save.basic?"PF2E.SaveDCLabelBasic":"PF2E.SaveDCLabel",saveLabel=game.i18n.format(saveKey,{dc:spellDC,type:saveType}),isHeal="heal"===systemData.spellType.value,damageLabel=localize(isHeal?"PF2E.SpellTypeHeal":"PF2E.DamageLabel"),areaSize=null!==(_c=systemData.area.value)&&void 0!==_c?_c:"",areaType=game.i18n.localize(null!==(_d=CONFIG.PF2E.areaTypes[systemData.area.areaType])&&void 0!==_d?_d:""),areaUnit=game.i18n.localize("PF2E.Foot"),area=systemData.area.value?game.i18n.format("PF2E.SpellArea",{areaSize,areaUnit,areaType}).trim():null,baseLevel=this.baseLevel,heightened=castLevel-baseLevel,levelLabel=(()=>{const type=this.isCantrip?localize("PF2E.TraitCantrip"):localize(CONFIG.PF2E.spellCategories[this.system.category.value]);return game.i18n.format("PF2E.ItemLevel",{type,level:castLevel})})(),properties=[heightened?game.i18n.format("PF2E.SpellLevelBase",{level:(0,_util_1.ordinal)(baseLevel)}):null,heightened?game.i18n.format("PF2E.SpellLevelHeightened",{heightened}):null,`${localize("PF2E.SpellComponentsLabel")}: ${this.components.value}`,systemData.range.value?`${localize("PF2E.SpellRangeLabel")}: ${systemData.range.value}`:null,systemData.target.value?`${localize("PF2E.SpellTargetLabel")}: ${systemData.target.value}`:null,area,systemData.time.value?`${localize("PF2E.SpellTimeLabel")}: ${systemData.time.value}`:null,systemData.duration.value?`${localize("PF2E.SpellDurationLabel")}: ${systemData.duration.value}`:null].filter((p=>null!==p)),spellTraits=this.traitChatData({...CONFIG.PF2E.spellTraits,...CONFIG.PF2E.magicTraditions}),item=this.isFromConsumable?JSON.stringify(this.toObject(!1)):void 0;return{...systemData,description:{value:description},isAttack,isSave,check:isAttack?statisticChatData.check:void 0,save:{...statisticChatData.dc,type:systemData.save.value,label:saveLabel},hasDamage,castLevel,slotLevel,levelLabel,damageLabel,formula,properties,spellTraits,traits:spellTraits,actionTraits:this.castingTraits.map((t=>(0,_util_1.traitSlugToObject)(t,CONFIG.PF2E.actionTraits))),areaSize,areaType,areaUnit,item,variants}}async rollAttack(event,attackNumber=1,context={}){var _a;const trickMagicEntry=this.trickMagicEntry,spellcastingEntry=this.spellcasting,statistic=null===(_a=null!=trickMagicEntry?trickMagicEntry:spellcastingEntry)||void 0===_a?void 0:_a.statistic;if(!statistic)throw(0,_util_1.ErrorPF2e)("Spell points to location that is not a spellcasting type");await statistic.check.roll({...(0,sheet_util_1.eventToRollParams)(event),...context,item:this,attackNumber})}async rollDamage(event){var _a;const castLevel=Number(null===(_a=event.currentTarget.closest("*[data-cast-level]"))||void 0===_a?void 0:_a.dataset.castLevel)||this.level,rollData=this.getRollData({castLevel}),formula=this.getDamageFormula(castLevel,rollData),title=(()=>{var _a;if("heal"===this.system.spellType.value)return`${this.name} - ${game.i18n.localize("PF2E.SpellTypeHeal")}`;{const damageType=Object.values(null!==(_a=this.system.damage.value)&&void 0!==_a?_a:{}).filter((damage=>"persistent"!==damage.type.subtype&&"splash"!==damage.type.subtype)).map((damage=>damage.type.value)).filter((type=>(0,_util_1.objectHasKey)(CONFIG.PF2E.damageTypes,type))).map((type=>game.i18n.localize(CONFIG.PF2E.damageTypes[type]))).join("/");return`${this.name} - ${game.i18n.localize("PF2E.DamageLabel")} (${damageType})`}})();await dice_1.DicePF2e.damageRoll({event,item:this,parts:[formula],data:rollData,actor:this.actor,title,speaker:ChatMessage.getSpeaker({actor:this.actor}),dialogOptions:{width:400,top:event.clientY-80,left:window.innerWidth-710}})}rollCounteract(event){var _a,_b,_c;if(!(null===(_a=this.actor)||void 0===_a?void 0:_a.isOfType("character","npc")))return;const spellcastingEntry=null!==(_b=this.trickMagicEntry)&&void 0!==_b?_b:this.spellcasting;if(!(spellcastingEntry instanceof _item_1.SpellcastingEntryPF2e))throw(0,_util_1.ErrorPF2e)("Spell points to location that is not a spellcasting type");const modifiers=[],ability=(null===(_c=spellcastingEntry.system.ability)||void 0===_c?void 0:_c.value)||"int",domains=["all","counteract-check",`${ability}-based`];modifiers.push((0,modifiers_1.createAbilityModifier)({actor:this.actor,ability,domains}));const proficiencyRank=spellcastingEntry.rank;modifiers.push(modifiers_1.ProficiencyModifier.fromLevelAndRank(this.actor.level,proficiencyRank));const traits=this.system.traits.value;let flavor="<hr>";flavor+=`<h3>${game.i18n.localize("PF2E.Counteract")}</h3>`,flavor+="<hr>";const spellLevel=(()=>{const card=event.currentTarget.closest("*[data-spell-lvl]"),cardData=card?card.dataset:{};return Number(cardData.spellLvl)||1})(),addFlavor=(success,level)=>{const title=game.i18n.localize(`PF2E.${success}`),description=game.i18n.format(`PF2E.CounteractDescription.${success}`,{level});flavor+=`<strong>${title}</strong> ${description}<br />`};flavor+=`<p>${game.i18n.localize("PF2E.CounteractDescription.Hint")}</p>`,flavor+="<p>",addFlavor("CritSuccess",spellLevel+3),addFlavor("Success",spellLevel+1),addFlavor("Failure",spellLevel),addFlavor("CritFailure",0),flavor+="</p>";const check=new modifiers_1.StatisticModifier(flavor,modifiers),finalOptions=new Set(this.actor.getRollOptions(domains).concat(traits));(0,modifiers_1.ensureProficiencyOption)(finalOptions,proficiencyRank);const spellTraits={...CONFIG.PF2E.spellTraits,...CONFIG.PF2E.magicSchools,...CONFIG.PF2E.magicTraditions},traitObjects=traits.map((trait=>({name:trait,label:spellTraits[trait]})));check_1.CheckPF2e.roll(check,{actor:this.actor,type:"counteract-check",options:finalOptions,title:game.i18n.localize("PF2E.Counteract"),traits:traitObjects},event)}async update(data,options){return this.original&&this.appliedOverlays.has("override")&&this.sheet.rendered?this.original.overlays.updateOverride(this,data,options):super.update(data,options)}async _preUpdate(changed,options,user){var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l,_m;await super._preUpdate(changed,options,user);const diff=null!==(_a=options.diff)&&void 0!==_a?_a:options.diff=!0,uses=null===(_c=null===(_b=changed.system)||void 0===_b?void 0:_b.location)||void 0===_c?void 0:_c.uses;if(uses){const currentUses=null!==(_f=null!==(_d=uses.value)&&void 0!==_d?_d:null===(_e=this.system.location.uses)||void 0===_e?void 0:_e.value)&&void 0!==_f?_f:1,currentMax=null!==(_g=uses.max)&&void 0!==_g?_g:null===(_h=this.system.location.uses)||void 0===_h?void 0:_h.max;uses.value=Math.clamped(Number(currentUses),0,Number(currentMax))}const newLocation=null===(_k=null===(_j=changed.system)||void 0===_j?void 0:_j.location)||void 0===_k?void 0:_k.value,locationChanged="string"==typeof newLocation&&newLocation!==this.system.location.value;if(diff&&(!this.actor||locationChanged)){const system=null!==(_l=changed.system)&&void 0!==_l?_l:changed.system={},locationUpdates=system.location=this.actor?null!==(_m=system.location)&&void 0!==_m?_m:{}:{value:""},keys=Object.keys(this.system.location).filter((k=>"value"!==k&&!(k in locationUpdates)));for(const key of keys)locationUpdates[`-=${key}`]=null}}}exports.SpellPF2e=SpellPF2e},6605:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.applyDamageDice=void 0,exports.applyDamageDice=function(formulas,dice){return formulas.map((formula=>{var _a,_b;const roll=new Roll(formula);for(const adjustment of dice){const die=roll.dice.shift();if(die instanceof Die&&(adjustment.override&&(die.number=null!==(_a=adjustment.override.diceNumber)&&void 0!==_a?_a:die.number,adjustment.override.dieSize))){const faces=Number(null===(_b=/\d{1,2}/.exec(adjustment.override.dieSize))||void 0===_b?void 0:_b.shift());Number.isInteger(faces)&&(die.faces=faces)}}return roll.formula}))}},12114:function(__unused_webpack_module,exports,__webpack_require__){var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k);var desc=Object.getOwnPropertyDescriptor(m,k);desc&&!("get"in desc?!m.__esModule:desc.writable||desc.configurable)||(desc={enumerable:!0,get:function(){return m[k]}}),Object.defineProperty(o,k2,desc)}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)"default"===p||Object.prototype.hasOwnProperty.call(exports,p)||__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:!0}),__exportStar(__webpack_require__(70859),exports),__exportStar(__webpack_require__(71451),exports),__exportStar(__webpack_require__(6605),exports),__exportStar(__webpack_require__(41436),exports),__exportStar(__webpack_require__(30988),exports),__exportStar(__webpack_require__(77729),exports),__exportStar(__webpack_require__(12759),exports)},41436:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.SpellOverlayCollection=void 0;const _util_1=__webpack_require__(6945);class SpellOverlayCollection extends Collection{constructor(spell,entries){super(Object.entries(null!=entries?entries:{})),this.spell=spell}get overrideVariants(){return[...this.entries()].reduce(((result,[overlayId,data])=>{if("override"===data.overlayType){const spell=this.spell.loadVariant({overlayIds:[overlayId]});if(spell)return[...result,spell]}return result}),[])}getType(overlayId){return this.get(overlayId,{strict:!0}).overlayType}async create(overlayType,options={renderSheet:!1}){const id=randomID();if("override"===overlayType)if(await this.spell.update({[`system.overlays.${id}`]:{_id:id,sort:this.overrideVariants.length+1,overlayType:"override"}}),options.renderSheet){const variantSpell=this.spell.loadVariant({overlayIds:[id]});variantSpell&&variantSpell.sheet.render(!0)}}async updateOverride(variantSpell,data,options){var _a;variantSpell.updateSource(data,options);const variantSource=variantSpell.toObject(),originSource=this.spell.toObject(),difference=diffObject(originSource,variantSource);return 0===Object.keys(difference).length||(null===(_a=difference.system)||void 0===_a||delete _a.description,difference.overlayType="override",await this.spell.update({[`system.overlays.-=${variantSpell.id}`]:null},{render:!1}),await this.spell.update({[`system.overlays.${variantSpell.id}`]:difference}),variantSpell.sheet.rendered&&variantSpell.sheet.render(!0)),variantSpell}async deleteOverlay(overlayId){this.verifyOverlayId(overlayId),await this.spell.update({[`system.overlays.-=${overlayId}`]:null}),this.delete(overlayId)}verifyOverlayId(overlayId){if(!this.has(overlayId))throw(0,_util_1.ErrorPF2e)(`Spell ${this.spell.name} (${this.spell.uuid}) does not have an overlay with id: ${overlayId}`)}}exports.SpellOverlayCollection=SpellOverlayCollection},30988:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.SpellSheetPF2e=void 0;const base_1=__webpack_require__(22222),_util_1=__webpack_require__(6945),spellOverridable={time:"PF2E.SpellTimeLabel",components:"PF2E.SpellComponentsLabel",target:"PF2E.SpellTargetLabel",area:"PF2E.AreaLabel",range:"PF2E.SpellRangeLabel",damage:"PF2E.DamageLabel"},DEFAULT_INTERVAL_SCALING={type:"interval",interval:1,damage:{}};class SpellSheetPF2e extends base_1.ItemSheetPF2e{async getData(options){const sheetData=await super.getData(options),{isCantrip,isFocusSpell,isRitual}=this.item,itemType=isCantrip&&isFocusSpell?game.i18n.localize("PF2E.SpellCategoryFocusCantrip"):this.item.isCantrip?game.i18n.localize("PF2E.TraitCantrip"):game.i18n.localize(CONFIG.PF2E.spellCategories[this.item.system.category.value]),damageTypes=Object.fromEntries(Object.entries(CONFIG.PF2E.damageTypes).map((([slug,localizeKey])=>[slug,game.i18n.localize(localizeKey)])).sort(((damageA,damageB)=>damageA[1].localeCompare(damageB[1])))),variants=this.item.overlays.overrideVariants.map((variant=>({name:variant.name,id:variant.id,sort:variant.sort,actions:(0,_util_1.getActionGlyph)(variant.system.time.value)}))).sort(((variantA,variantB)=>variantA.sort-variantB.sort));return{...sheetData,hasSidebar:!0,itemType,isCantrip,isFocusSpell,isRitual,variants,isVariant:this.item.isVariant,spellCategories:CONFIG.PF2E.spellCategories,spellTypes:CONFIG.PF2E.spellTypes,saves:CONFIG.PF2E.saves,magicSchools:CONFIG.PF2E.magicSchools,spellLevels:CONFIG.PF2E.spellLevels,damageTypes,damageSubtypes:CONFIG.PF2E.damageSubtypes,damageCategories:CONFIG.PF2E.damageCategories,spellComponents:this.formatSpellComponents(sheetData.data),areaSizes:CONFIG.PF2E.areaSizes,areaTypes:CONFIG.PF2E.areaTypes,heightenIntervals:[1,2,3,4],heightenOverlays:this.prepareHeighteningLevels(),canHeighten:this.getAvailableHeightenLevels().length>0}}static get defaultOptions(){return{...super.defaultOptions,dragDrop:[{dragSelector:"[data-variant-id]",dropSelector:"[data-can-drop=true]"}]}}get title(){return this.item.isVariant?game.i18n.format("PF2E.Item.Spell.Variants.SheetTitle",{originalName:this.item.original.name}):super.title}get validTraits(){const traits=deepClone(CONFIG.PF2E.spellTraits);return delete traits[this.item.school],traits}activateListeners($html){super.activateListeners($html);const html=$html[0];(0,_util_1.tagify)(html.querySelector('input[name="system.traditions.value"]'),{whitelist:CONFIG.PF2E.magicTraditions}),$html.find(".toggle-trait").on("change",(evt=>{var _a;const target=evt.target,trait=null!==(_a=target.dataset.trait)&&void 0!==_a?_a:"";if((0,_util_1.objectHasKey)(CONFIG.PF2E.spellTraits,trait)){if(target.checked&&!this.item.traits.has(trait)){const newTraits=this.item.system.traits.value.concat([trait]);this.item.update({"system.traits.value":newTraits})}else if(!target.checked&&this.item.traits.has(trait)){const newTraits=this.item.system.traits.value.filter((t=>t!==trait));this.item.update({"system.traits.value":newTraits})}}else console.warn("Toggled trait is invalid")})),$html.find("[data-action=damage-create]").on("click",(event=>{var _a;event.preventDefault();const baseKey=null!==(_a=this.getOverlayFromEvent(event))&&void 0!==_a?_a:"data";this.item.update({[`${baseKey}.damage.value.${randomID()}`]:{value:"",type:{value:"bludgeoning",categories:[]}}})})),$html.find("[data-action=damage-delete]").on("click",(event=>{var _a;event.preventDefault();const overlayData=this.getOverlayFromEvent(event),baseKey=null!==(_a=null==overlayData?void 0:overlayData.base)&&void 0!==_a?_a:"data",id=$(event.target).closest("[data-action=damage-delete]").attr("data-id");if(id){const values={[`${baseKey}.damage.value.-=${id}`]:null};overlayData||(values[`${baseKey}.heightening.damage.-=${id}`]=null),this.item.update(values)}})),$html.find("[data-action=heightening-interval-create]").on("click",(event=>{var _a,_b;event.preventDefault();const baseKey=null!==(_b=null===(_a=this.getOverlayFromEvent(event))||void 0===_a?void 0:_a.base)&&void 0!==_b?_b:"data";this.item.update({[`${baseKey}.heightening`]:DEFAULT_INTERVAL_SCALING})})),$html.find("[data-action=heightening-delete]").on("click",(()=>{this.item.update({"system.-=heightening":null})})),$html.find("[data-action=heightening-fixed-create]").on("click",(()=>{var _a;const highestLevel=null===(_a=this.item.getHeightenLayers().at(-1))||void 0===_a?void 0:_a.level,available=this.getAvailableHeightenLevels(),level=highestLevel&&highestLevel<10?highestLevel+1:available.at(0);void 0!==level&&this.item.update({"system.heightening":{type:"fixed",levels:{[level]:{}}}})})),$html.find("[data-action=overlay-delete]").on("click",(async event=>{const overlay=this.getOverlayFromEvent(event);if(!overlay)return;if("heighten"===overlay.type){const layers=this.item.getHeightenLayers();if(1===layers.length&&layers[0].level===overlay.level)return void this.item.update({"system.-=heightening":null})}const parts=overlay.base.split(".");parts.push(`-=${parts.pop()}`),this.item.update({[parts.join(".")]:null})})),$html.find("[data-action=overlay-add-property]").on("click",(event=>{event.preventDefault();const overlay=this.getOverlayFromEvent(event),property=$(event.target).closest("[data-action=overlay-add-property]").attr("data-property");if(overlay&&overlay.data&&property&&!(property in overlay.data)){const value=(()=>{const scaling=this.item.getHeightenLayers().reverse();for(const entry of[...scaling,{system:this.item.system}])if((0,_util_1.objectHasKey)(entry.system,property))return entry.system[property]})();void 0!==value?this.item.update({[`${overlay.base}.${property}`]:value}):ui.notifications.warn(`PF2e System | Failed to initialize property ${property} for overlay`)}})),$html.find("[data-action=overlay-remove-property]").on("click",(event=>{event.preventDefault();const overlayData=this.getOverlayFromEvent(event),property=$(event.target).closest("[data-action=overlay-remove-property]").attr("data-property");if(overlayData&&property){const updates={[`${overlayData.base}.-=${property}`]:null};"damage"===property&&(updates[`${overlayData.base}.-=heightening`]=null),this.item.update(updates)}})),$html.find("[data-action=change-level]").on("change",(event=>{var _a;const overlay=this.getOverlayFromEvent(event);if(!overlay)return;const currentLevel=overlay.level,element=event.target,newLevel=Number(element.value),existingData=this.item.getHeightenLayers().find((layer=>layer.level===currentLevel));this.item.update({[`${overlay.collectionPath}.-=${currentLevel}`]:null,[`${overlay.collectionPath}.${newLevel}`]:null!==(_a=null==existingData?void 0:existingData.system)&&void 0!==_a?_a:{}})})),$html.find("[data-action=variant-create]").on("click",(()=>{this.item.overlays.create("override")})),$html.find("[data-action=variant-edit]").on("click",(event=>{var _a;const id=$(event.target).closest("[data-action=variant-edit]").attr("data-id");id&&(null===(_a=this.item.loadVariant({overlayIds:[id]}))||void 0===_a||_a.sheet.render(!0))})),$html.find("[data-action=variant-delete]").on("click",(event=>{const id=$(event.target).closest("[data-action=variant-delete]").attr("data-id");if(id){const variant=this.item.loadVariant({overlayIds:[id]});if(!variant)throw(0,_util_1.ErrorPF2e)(`Spell ${this.item.name} (${this.item.uuid}) does not have a variant with id: ${id}`);new Dialog({title:game.i18n.localize("PF2E.Item.Spell.Variants.DeleteDialogTitle"),content:`<p>${game.i18n.format("PF2E.Item.Spell.Variants.DeleteDialogText",{variantName:variant.name})}</p>`,buttons:{delete:{icon:(0,_util_1.fontAwesomeIcon)("fa-trash").outerHTML,label:game.i18n.localize("PF2E.DeleteShortLabel"),callback:()=>{this.item.overlays.deleteOverlay(id)}},cancel:{icon:(0,_util_1.fontAwesomeIcon)("fa-times").outerHTML,label:game.i18n.localize("Cancel")}},default:"cancel"}).render(!0)}}))}async _updateObject(event,formData){this.item.original&&this.item.appliedOverlays.has("override")&&!this.rendered?await this.item.original.overlays.updateOverride(this.item,formData):super._updateObject(event,formData)}_onDragStart(event){var _a,_b;const id=null!==(_b=null===(_a=event.target.closest(".variant"))||void 0===_a?void 0:_a.dataset.variantId)&&void 0!==_b?_b:"";event.dataTransfer.setData("text/plain",JSON.stringify({action:"sort",data:{sourceId:id}}))}async _onDrop(event){var _a,_b,_c,_d;event.preventDefault();const transferString=event.dataTransfer.getData("text/plain");if(!transferString)return;const{action,data}=null!==(_a=JSON.parse(transferString))&&void 0!==_a?_a:{};switch(action){case"sort":{const sourceId=null!==(_b=null==data?void 0:data.sourceId)&&void 0!==_b?_b:"",targetId=null!==(_d=null===(_c=event.target.closest(".variant"))||void 0===_c?void 0:_c.dataset.variantId)&&void 0!==_d?_d:"";if(sourceId&&targetId&&sourceId!==targetId){const sourceVariant=this.item.loadVariant({overlayIds:[sourceId]}),targetVariant=this.item.loadVariant({overlayIds:[targetId]});if(sourceVariant&&targetVariant){const siblings=this.item.overlays.overrideVariants.filter((variant=>variant.id!==sourceId&&variant.id!==targetId));siblings.push(targetVariant);const sorting=SortingHelpers.performIntegerSort(sourceVariant,{target:targetVariant,siblings,sortKey:"sort",sortBefore:!0});for(const s of sorting)await this.item.overlays.updateOverride(s.target,s.update,{render:!1});this.render(!0)}}break}}}formatSpellComponents(data){if(!data.components)return[];const comps=[];return data.components.focus&&comps.push(game.i18n.localize(CONFIG.PF2E.spellComponents.F)),data.components.material&&comps.push(game.i18n.localize(CONFIG.PF2E.spellComponents.M)),data.components.somatic&&comps.push(game.i18n.localize(CONFIG.PF2E.spellComponents.S)),data.components.verbal&&comps.push(game.i18n.localize(CONFIG.PF2E.spellComponents.V)),data.materials.value&&comps.push(data.materials.value),comps}getAvailableHeightenLevels(){const heightenLayers=this.item.getHeightenLayers();return[2,3,4,5,6,7,8,9,10].filter((level=>level>this.item.baseLevel&&!heightenLayers.some((layer=>layer.level===level))))}getOverlayFromEvent(event){const $overlayEl=$(event.target).closest("[data-overlay-type]");if(0===$overlayEl.length)return null;const domData=$overlayEl.data(),overlayType=String(domData.overlayType);if(!(0,_util_1.tupleHasValue)(["heighten","variant"],overlayType))return null;const id="overlayId"in domData?String(domData.overlayId):null,level="level"in domData?Number(domData.level):null,collectionPath="heighten"===overlayType?"system.heightening.levels":"system.variants",base="heighten"===overlayType?`${collectionPath}.${level}`:`${collectionPath}.${id}`,data=(()=>{if("heighten"===overlayType){const heightening=this.item.system.heightening;if("fixed"===(null==heightening?void 0:heightening.type))return heightening.levels[level]}return null})();return{id,level,type:overlayType,collectionPath,base,data}}prepareHeighteningLevels(){return this.item.getHeightenLayers().map((layer=>{const{level,system}=layer,base=`system.heightening.levels.${layer.level}`,missing=[];for(const[key,label]of Object.entries(spellOverridable))key in layer.system||missing.push({key,label});const heightenLevels=this.getAvailableHeightenLevels();return heightenLevels.push(level),heightenLevels.sort(((a,b)=>a-b)),{id:null,level,base,dataPath:base,type:"heighten",system,missing,heightenLevels}}))}}exports.SpellSheetPF2e=SpellSheetPF2e},77729:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0})},12759:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.SPELL_COMPONENTS=exports.MAGIC_TRADITIONS=exports.MAGIC_SCHOOLS=void 0;const MAGIC_SCHOOLS=new Set(["abjuration","conjuration","divination","enchantment","evocation","illusion","necromancy","transmutation"]);exports.MAGIC_SCHOOLS=MAGIC_SCHOOLS;const MAGIC_TRADITIONS=new Set(["arcane","divine","occult","primal"]);exports.MAGIC_TRADITIONS=MAGIC_TRADITIONS;exports.SPELL_COMPONENTS=["focus","material","somatic","verbal"]},31170:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.SpellCollection=void 0;const _item_1=__webpack_require__(10843),_util_1=__webpack_require__(6945);class SpellCollection extends Collection{constructor(entry){super(),this.entry=entry}get id(){return this.entry.id}get actor(){return this.entry.actor}get highestLevel(){var _a,_b;const highestSpell=Math.max(...this.map((s=>s.level))),actorSpellLevel=Math.ceil((null!==(_b=null===(_a=this.actor)||void 0===_a?void 0:_a.level)&&void 0!==_b?_b:0)/2);return Math.min(10,Math.max(highestSpell,actorSpellLevel))}async addSpell(spell,options={}){var _a,_b;const actor=this.actor;if(!actor.isOfType("creature"))throw(0,_util_1.ErrorPF2e)("Spellcasting entries can only exist on creatures");const canHeighten=!(spell.isCantrip||spell.isFocusSpell||spell.isRitual)&&(this.entry.isSpontaneous||this.entry.isInnate),heightenLevel=canHeighten?null!==(_a=options.slotLevel)&&void 0!==_a?_a:spell.level:spell.baseLevel;if(spell.system.location.value===this.id&&spell.level===heightenLevel)return null;if(spell.baseLevel>heightenLevel&&this.id===(null===(_b=spell.system.location)||void 0===_b?void 0:_b.value)){const targetLevelLabel=game.i18n.format("PF2E.SpellLevel",{level:(0,_util_1.ordinal)(heightenLevel)}),baseLabel=game.i18n.format("PF2E.SpellLevel",{level:(0,_util_1.ordinal)(spell.baseLevel)});ui.notifications.warn(game.i18n.format("PF2E.Item.Spell.Warning.InvalidLevel",{name:spell.name,targetLevel:targetLevelLabel,baseLevel:baseLabel}))}const heightenedUpdate=canHeighten&&heightenLevel>=spell.baseLevel?{"system.location.heightenedLevel":heightenLevel}:{};if(spell.actor===actor)return spell.update({"system.location.value":this.id,...heightenedUpdate});{const source=spell.clone({"system.location.value":this.id,...heightenedUpdate}).toObject(),created=(await actor.createEmbeddedDocuments("Item",[source])).shift();return created instanceof _item_1.SpellPF2e?created:null}}async prepareSpell(spell,slotLevel,spellSlot){if(spell.baseLevel>slotLevel&&(0!==slotLevel||!spell.isCantrip)){const targetLevelLabel=game.i18n.format("PF2E.SpellLevel",{level:(0,_util_1.ordinal)(slotLevel)}),baseLabel=game.i18n.format("PF2E.SpellLevel",{level:(0,_util_1.ordinal)(spell.baseLevel)});return ui.notifications.warn(game.i18n.format("PF2E.Item.Spell.Warning.InvalidLevel",{name:spell.name,targetLevel:targetLevelLabel,baseLevel:baseLabel})),this.entry}CONFIG.debug.hooks&&console.debug(`PF2e System | Updating location for spell ${spell.name} to match spellcasting entry ${this.id}`);const key=`system.slots.slot${slotLevel}.prepared.${spellSlot}`,updates={[key]:{id:spell.id}},slot=this.entry.system.slots[`slot${slotLevel}`].prepared[spellSlot];return slot&&(void 0!==slot.prepared&&(updates[`${key}.-=prepared`]=null),void 0!==slot.name&&(updates[`${key}.-=name`]=null)),this.entry.update(updates)}unprepareSpell(slotLevel,spellSlot){!0===CONFIG.debug.hooks&&console.debug(`PF2e System | Updating spellcasting entry ${this.id} to remove spellslot ${spellSlot} for spell level ${slotLevel}`);const key=`system.slots.slot${slotLevel}.prepared.${spellSlot}`;return this.entry.update({[key]:{name:game.i18n.localize("PF2E.SpellSlotEmpty"),id:null,prepared:!1,expended:!1}})}setSlotExpendedState(slotLevel,spellSlot,isExpended){const key=`system.slots.slot${slotLevel}.prepared.${spellSlot}.expended`;return this.entry.update({[key]:isExpended})}async getSpellData(){var _a,_b,_c;const{actor}=this.entry;if(!actor.isOfType("character","npc"))throw(0,_util_1.ErrorPF2e)("Spellcasting entries can only exist on characters and npcs");const results=[],spells=this.contents.sort(((s1,s2)=>(s1.sort||0)-(s2.sort||0))),signatureSpells=spells.filter((s=>s.system.location.signature)),isFlexible=this.entry.isFlexible;if(this.entry.isPrepared)for(let level=0;level<=this.highestLevel;level++){const data=this.entry.system.slots[`slot${level}`],active=[];if((this.entry.system.showSlotlessLevels.value||data.max>0)&&(0===level||!isFlexible)){const maxPrepared=Math.max(data.max,0);active.push(...Array(maxPrepared).fill(null));for(const[key,value]of Object.entries(data.prepared)){const spell=value.id?this.get(value.id):null;spell&&(active[Number(key)]={spell,chatData:await spell.getChatData({},{slotLevel:level}),expended:!!value.expended})}}results.push({label:0===level?"PF2E.TraitCantrip":CONFIG.PF2E.spellLevels[level],level,uses:{value:level>0&&isFlexible?data.value||0:void 0,max:data.max},isCantrip:0===level,active})}else if(this.entry.isFocusPool){const cantrips=spells.filter((spell=>spell.isCantrip)),leveled=spells.filter((spell=>!spell.isCantrip));if(cantrips.length){const active=await Promise.all(cantrips.map((async spell=>({spell,chatData:await spell.getChatData()}))));results.push({label:"PF2E.Actor.Creature.Spellcasting.Cantrips",level:0,isCantrip:!0,active})}if(leveled.length){const active=await Promise.all(leveled.map((async spell=>({spell,chatData:await spell.getChatData()}))));results.push({label:actor.isOfType("character")?"PF2E.Focus.Spells":"PF2E.Focus.Pool",level:Math.max(1,Math.ceil(actor.level/2)),isCantrip:!1,uses:null!==(_a=actor.system.resources.focus)&&void 0!==_a?_a:{value:0,max:0},active})}}else{const alwaysShowHeader=!this.entry.isRitual,spellsByLevel=(0,_util_1.groupBy)(spells,(spell=>spell.isCantrip?0:spell.level));for(let level=0;level<=this.highestLevel;level++){const data=this.entry.system.slots[`slot${level}`],spells=null!==(_b=spellsByLevel.get(level))&&void 0!==_b?_b:[];if(alwaysShowHeader||spells.length){const uses=this.entry.isSpontaneous&&0!==level?{value:data.value,max:data.max}:void 0,active=await Promise.all(spells.map((async spell=>{var _a;return{spell,chatData:await spell.getChatData(),expended:this.entry.isInnate&&!(null===(_a=spell.system.location.uses)||void 0===_a?void 0:_a.value),uses:this.entry.isInnate&&!spell.unlimited?spell.system.location.uses:void 0}}))),hideForSpontaneous=this.entry.isSpontaneous&&0===(null==uses?void 0:uses.max)&&0===active.length,hideForInnate=this.entry.isInnate&&0===active.length;if(!this.entry.system.showSlotlessLevels.value&&(hideForSpontaneous||hideForInnate))continue;results.push({label:0===level?"PF2E.TraitCantrip":CONFIG.PF2E.spellLevels[level],level,isCantrip:0===level,uses,active})}}}if(this.entry.isSpontaneous||isFlexible)for(const spell of signatureSpells)for(const result of results){if(spell.baseLevel>result.level)continue;if(!this.entry.system.showSlotlessLevels.value&&0===(null===(_c=result.uses)||void 0===_c?void 0:_c.max))continue;const existing=result.active.find((a=>(null==a?void 0:a.spell.id)===spell.id));if(existing)existing.signature=!0;else{const chatData=await spell.getChatData({},{slotLevel:result.level});result.active.push({spell,chatData,signature:!0,virtual:!0})}}const flexibleAvailable=(()=>{if(!isFlexible)return;const totalSlots=results.filter((result=>!result.isCantrip)).map((level=>{var _a;return(null===(_a=level.uses)||void 0===_a?void 0:_a.max)||0})).reduce(((first,second)=>first+second),0);return{value:signatureSpells.length,max:totalSlots}})();return{levels:results,flexibleAvailable,spellPrepList:this.getSpellPrepList(spells)}}getSpellPrepList(spells){var _a,_b;if(!this.entry.isPrepared)return{};const spellPrepList={},spellsByLevel=(0,_util_1.groupBy)(spells,(spell=>spell.isCantrip?0:spell.baseLevel));for(let level=0;level<=this.highestLevel;level++)spellPrepList[level]=null!==(_b=null===(_a=spellsByLevel.get(level))||void 0===_a?void 0:_a.map((spell=>({spell,signature:this.entry.isFlexible&&spell.system.location.signature}))))&&void 0!==_b?_b:[];return Object.values(spellPrepList).some((s=>!!s.length))?spellPrepList:null}}exports.SpellCollection=SpellCollection},70267:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.SpellcastingEntryPF2e=void 0;const _actor_1=__webpack_require__(85530),_item_1=__webpack_require__(10843),values_1=__webpack_require__(12759),data_1=__webpack_require__(52769),statistic_1=__webpack_require__(77486),_util_1=__webpack_require__(6945),collection_1=__webpack_require__(31170);class SpellcastingEntryPF2e extends _item_1.ItemPF2e{get ability(){return this.system.ability.value||"int"}get tradition(){const defaultTradition="items"===this.system.prepared.value?null:"arcane",tradition=this.system.tradition.value;return(0,_util_1.setHasElement)(values_1.MAGIC_TRADITIONS,tradition)?tradition:defaultTradition}get rank(){var _a;return null!==(_a=this.system.proficiency.value)&&void 0!==_a?_a:0}get isPrepared(){return"prepared"===this.system.prepared.value}get isFlexible(){return this.isPrepared&&!!this.system.prepared.flexible}get isSpontaneous(){return"spontaneous"===this.system.prepared.value}get isInnate(){return"innate"===this.system.prepared.value}get isFocusPool(){return"focus"===this.system.prepared.value}get isRitual(){return"ritual"===this.system.prepared.value}get highestLevel(){var _a,_b;return null!==(_b=null===(_a=this.spells)||void 0===_a?void 0:_a.highestLevel)&&void 0!==_b?_b:0}prepareBaseData(){var _a,_b;super.prepareBaseData(),(_b=this.system.proficiency).slug||(_b.slug=this.system.tradition.value),this.system.proficiency.value=Math.max(1,this.system.proficiency.value),this.actor&&(this.statistic=new statistic_1.Statistic(this.actor,{slug:null!==(_a=this.slug)&&void 0!==_a?_a:(0,_util_1.sluggify)(this.name),label:"PF2E.Actor.Creature.Spellcasting.InvalidProficiency",check:{type:"check"}}))}prepareSiblingData(){if(this.actor&&"items"!==this.system.prepared.value){this.spells=new collection_1.SpellCollection(this);const spells=this.actor.itemTypes.spell.filter((i=>i.system.location.value===this.id));for(const spell of spells)this.spells.set(spell.id,spell);this.actor.spellcasting.collections.set(this.spells.id,this.spells)}else this.spells=null}prepareActorData(){const actor=this.actor,tradition=this.tradition;if(actor.isOfType("character")&&!this.isInnate&&tradition){const proficiency=actor.system.proficiencies.traditions[tradition],rank=this.system.proficiency.value;proficiency.rank=Math.max(rank,proficiency.rank)}}canCastSpell(spell,options={}){if("items"===this.system.prepared.value){const{origin}=options;return!!origin&&("scroll"!==this.system.prepared.validItems||origin.traits.has("scroll"))}const isSpellcastingFeature=this.isPrepared||this.isSpontaneous;if(options.origin&&!isSpellcastingFeature)return!1;if(!this.spells)return!1;const matchesTradition=this.tradition&&spell.traditions.has(this.tradition),isInSpellList=this.spells.some((s=>s.slug===spell.slug));return matchesTradition||isInSpellList}async cast(spell,options={}){var _a,_b,_c;const consume=null===(_a=options.consume)||void 0===_a||_a,message=null===(_b=options.message)||void 0===_b||_b,slotLevel=null!==(_c=options.level)&&void 0!==_c?_c:spell.level,valid=!consume||spell.isCantrip||await this.consume(spell,slotLevel,options.slot);if(message&&valid){const castLevel=spell.computeCastLevel(slotLevel);await spell.toMessage(void 0,{rollMode:options.rollMode,data:{castLevel}})}}async consume(spell,level,slot){var _a,_b,_c,_d,_e;const actor=this.actor;if(!(actor instanceof _actor_1.CharacterPF2e||actor instanceof _actor_1.NPCPF2e))throw(0,_util_1.ErrorPF2e)("Spellcasting entries require an actor");if(this.isRitual)return!0;if(spell.isVariant&&(spell=spell.original),this.isFocusPool){const currentPoints=null!==(_b=null===(_a=actor.system.resources.focus)||void 0===_a?void 0:_a.value)&&void 0!==_b?_b:0;return currentPoints>0?(await actor.update({"system.resources.focus.value":currentPoints-1}),!0):(ui.notifications.warn(game.i18n.localize("PF2E.Focus.NotEnoughFocusPointsError")),!1)}const levelLabel=game.i18n.localize(CONFIG.PF2E.spellLevels[level]),slotKey=(0,data_1.goesToEleven)(level)?`slot${level}`:"slot0";if(null===this.system.slots||!this.spells)return!1;if(this.isPrepared&&!this.isFlexible){const preparedData=this.system.slots[slotKey].prepared;if(null!=slot||(slot=Number(null===(_c=Object.entries(preparedData).filter((([_,slot])=>slot.id===spell.id&&!slot.expended)).at(0))||void 0===_c?void 0:_c[0])),!Number.isInteger(slot))throw(0,_util_1.ErrorPF2e)("Slot not given for prepared spell, and no alternative slot was found");return null!==(_d=preparedData[slot].expended)&&void 0!==_d&&_d?(ui.notifications.warn(game.i18n.format("PF2E.SpellSlotExpendedError",{name:spell.name})),!1):(await this.spells.setSlotExpendedState(level,slot,!0),!0)}if(this.isInnate){const remainingUses=(null===(_e=spell.system.location.uses)||void 0===_e?void 0:_e.value)||0;return remainingUses<=0?(ui.notifications.warn(game.i18n.format("PF2E.SpellSlotExpendedError",{name:spell.name})),!1):(await spell.update({"system.location.uses.value":remainingUses-1}),!0)}const slots=this.system.slots[slotKey];return slots.value>0?(await this.update({[`system.slots.${slotKey}.value`]:slots.value-1}),!0):(ui.notifications.warn(game.i18n.format("PF2E.SpellSlotNotEnoughError",{name:spell.name,level:levelLabel})),!1)}async addSpell(spell,options){var _a,_b;return null!==(_b=null===(_a=this.spells)||void 0===_a?void 0:_a.addSpell(spell,options))&&void 0!==_b?_b:null}async prepareSpell(spell,slotLevel,spellSlot){var _a,_b;return null!==(_b=null===(_a=this.spells)||void 0===_a?void 0:_a.prepareSpell(spell,slotLevel,spellSlot))&&void 0!==_b?_b:null}async unprepareSpell(spellLevel,slotLevel){var _a,_b;return null!==(_b=null===(_a=this.spells)||void 0===_a?void 0:_a.unprepareSpell(spellLevel,slotLevel))&&void 0!==_b?_b:null}async setSlotExpendedState(slotLevel,spellSlot,isExpended){var _a,_b;return null!==(_b=null===(_a=this.spells)||void 0===_a?void 0:_a.setSlotExpendedState(slotLevel,spellSlot,isExpended))&&void 0!==_b?_b:null}async getSpellData(){var _a,_b;if(!(null===(_a=this.actor)||void 0===_a?void 0:_a.isOfType("character","npc")))throw(0,_util_1.ErrorPF2e)("Spellcasting entries can only exist on characters and npcs");const spellCollectionData=await(null===(_b=this.spells)||void 0===_b?void 0:_b.getSpellData());return{id:this.id,name:this.name,statistic:this.statistic.getChatData(),tradition:this.tradition,castingType:this.system.prepared.value,isPrepared:this.isPrepared,isSpontaneous:this.isSpontaneous,isFlexible:this.isFlexible,isInnate:this.isInnate,isFocusPool:this.isFocusPool,isRitual:this.isRitual,hasCollection:!!this.spells,...null!=spellCollectionData?spellCollectionData:{levels:[]}}}getRollOptions(prefix=this.type){return[`${prefix}:${this.ability}`,`${prefix}:${this.tradition}`,`${prefix}:${this.system.prepared.value}`]}async _preUpdate(changed,options,user){var _a;if(null===(_a=changed.system)||void 0===_a?void 0:_a.slots)for(const key of[0,1,2,3,4,5,6,7,8,9,10]){const slotKey=`slot${key}`,slotData=changed.system.slots[slotKey];if(slotData&&("max"in slotData&&(slotData.max=Math.max(Number(slotData.max)||0,0)),"value"in slotData)){const max="max"in slotData?Number(null==slotData?void 0:slotData.max)||0:this.system.slots[slotKey].max;slotData.value=Math.clamped(Number(slotData.value),0,max)}}await super._preUpdate(changed,options,user)}}exports.SpellcastingEntryPF2e=SpellcastingEntryPF2e},73041:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.TrickMagicItemEntry=exports.traditionSkills=exports.TRICK_MAGIC_SKILLS=void 0;const util_1=__webpack_require__(58903),statistic_1=__webpack_require__(77486);exports.TRICK_MAGIC_SKILLS=["arcana","nature","occultism","religion"];const TrickMagicTradition={arcana:"arcane",nature:"primal",occultism:"occult",religion:"divine"};exports.traditionSkills={arcane:"arcana",divine:"religion",occult:"occultism",primal:"nature"};exports.TrickMagicItemEntry=class TrickMagicItemEntry{constructor(actor,skill){this.actor=actor,this.skill=skill,this.id=`trick-${this.skill}`,this.tradition=TrickMagicTradition[this.skill];const{abilities}=actor,{ability}=["int","wis","cha"].map((ability=>({ability,value:abilities[ability].value}))).reduce(((highest,next)=>next.value>highest.value?next:highest));this.ability=ability;const tradition=TrickMagicTradition[skill],selectors=[`${ability}-based`,"all","spell-attack-dc"],attackSelectors=[`${tradition}-spell-attack`,"spell-attack","spell-attack-roll","attack","attack-roll"],saveSelectors=[`${tradition}-spell-dc`,"spell-dc"],skillRank=actor.skills[skill].rank,trickRank=4===skillRank?2:3===skillRank?1:0;this.statistic=new statistic_1.Statistic(actor,{slug:`trick-${tradition}`,label:CONFIG.PF2E.magicTraditions[tradition],ability,rank:trickRank||"untrained-level",modifiers:(0,util_1.extractModifiers)(actor.synthetics,selectors),domains:selectors,check:{type:"spell-attack-roll",modifiers:(0,util_1.extractModifiers)(actor.synthetics,attackSelectors),domains:attackSelectors},dc:{modifiers:(0,util_1.extractModifiers)(actor.synthetics,saveSelectors),domains:saveSelectors}})}async cast(spell,options={}){const{rollMode,message}=options,castLevel=spell.computeCastLevel(spell.level);if(!1!==message)try{spell.trickMagicEntry=this,await spell.toMessage(void 0,{rollMode,data:{castLevel}})}finally{spell.trickMagicEntry=null}}}},24782:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.TreasurePF2e=void 0;const physical_1=__webpack_require__(6560),values_1=__webpack_require__(66870);class TreasurePF2e extends physical_1.PhysicalItemPF2e{get isCoinage(){return"coins"===this.system.stackGroup}get denomination(){if(!this.isCoinage)return null;const options=values_1.DENOMINATIONS.filter((denomination=>!!this.price.value[denomination]));return 1===options.length?options[0]:null}prepareBaseData(){super.prepareBaseData(),this.isCoinage&&(this.system.size="med")}async getChatData(htmlOptions={}){const systemData=this.system,traits=this.traitChatData({});return this.processChatData(htmlOptions,{...systemData,traits})}}exports.TreasurePF2e=TreasurePF2e},14580:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.TreasureSheetPF2e=exports.TreasurePF2e=void 0;var document_1=__webpack_require__(24782);Object.defineProperty(exports,"TreasurePF2e",{enumerable:!0,get:function(){return document_1.TreasurePF2e}});var sheet_1=__webpack_require__(57930);Object.defineProperty(exports,"TreasureSheetPF2e",{enumerable:!0,get:function(){return sheet_1.TreasureSheetPF2e}})},57930:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.TreasureSheetPF2e=void 0;const physical_1=__webpack_require__(6560);class TreasureSheetPF2e extends physical_1.PhysicalItemSheetPF2e{async getData(options){return{...await super.getData(options),hasDetails:!1,hasSidebar:!0,currencies:CONFIG.PF2E.currencies}}}exports.TreasureSheetPF2e=TreasureSheetPF2e},31225:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.PC_ITEM_TYPES=void 0;const PC_ITEM_TYPES=new Set(["ancestry","background","class","deity","feat","heritage"]);exports.PC_ITEM_TYPES=PC_ITEM_TYPES},83982:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0})},86885:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.WeaponPF2e=void 0;const automatic_bonus_progression_1=__webpack_require__(7908),size_1=__webpack_require__(43270),_item_1=__webpack_require__(10843),physical_1=__webpack_require__(6560),values_1=__webpack_require__(12759),localize_1=__webpack_require__(41332),_util_1=__webpack_require__(6945),values_2=__webpack_require__(16585);class WeaponPF2e extends _item_1.PhysicalItemPF2e{constructor(){super(...arguments),this.altUsageType=null}get isEquipped(){const{category,slug,traits}=this.system;return"unarmed"===category&&"handwraps-of-mighty-blows"!==slug||(super.isEquipped||1===this.handsHeld&&traits.value.some((t=>/^jousting-d\d{1,2}$/.test(t))))}isStackableWith(item){var _a;if("unarmed"===this.category||!item.isOfType("weapon")||"unarmed"===item.category)return!1;const equippedButStackable=["bomb","dart"].includes(null!==(_a=this.group)&&void 0!==_a?_a:"");return!((this.isEquipped||item.isEquipped)&&!equippedButStackable)&&super.isStackableWith(item)}get baseType(){return this.system.baseItem}get group(){return this.system.group}get category(){return this.system.category}get hands(){var _a;return null!==(_a={worngloves:"0","held-in-one-hand":"1","held-in-one-plus-hands":"1+","held-in-two-hands":"2"}[this.system.usage.value])&&void 0!==_a?_a:"1"}get rangeIncrement(){return this.system.range}get maxRange(){var _a;return null!==(_a=this.system.maxRange)&&void 0!==_a?_a:this.rangeIncrement?6*this.rangeIncrement:null}get reload(){return this.system.reload.value||null}get isSpecific(){var _a,_b;return null!==(_b=null===(_a=this.system.specific)||void 0===_a?void 0:_a.value)&&void 0!==_b&&_b}get isMelee(){return null===this.rangeIncrement}get isRanged(){return null!==this.rangeIncrement}get isThrown(){return this.isRanged&&"-"===this.reload}get baseDamage(){return this.system.damage}get dealsDamage(){const{baseDamage}=this;return baseDamage.dice>0||baseDamage.modifier>0}get material(){return this.system.material}get requiresAmmo(){return this.isRanged&&![null,"-"].includes(this.reload)}get ammo(){var _a,_b;const ammo=null===(_a=this.actor)||void 0===_a?void 0:_a.items.get(null!==(_b=this.system.selectedAmmoId)&&void 0!==_b?_b:"");return ammo instanceof _item_1.ConsumablePF2e&&ammo.quantity>0?ammo:null}get otherTags(){return new Set(this.system.traits.otherTags)}getRollOptions(prefix="weapon"){var _a,_b;const delimitedPrefix=prefix?`${prefix}:`:"",damage_type=this.system.damage.damageType,damage_dieFaces=Number(null===(_a=this.system.damage.die)||void 0===_a?void 0:_a.replace(/^d/,"")),{actor}=this,actorSize=null==actor?void 0:actor.system.traits.size,oversized="unarmed"!==this.category&&!!(null==actorSize?void 0:actorSize.isSmallerThan(this.size,{smallIsMedium:!0})),isDeityFavored=!!(this.baseType&&(null==actor?void 0:actor.isOfType("character"))&&(null===(_b=actor.deity)||void 0===_b?void 0:_b.favoredWeapons.includes(this.baseType))),thrownMelee=this.isThrown&&"thrown"===this.altUsageType,baseTypeRollOptions=(()=>{var _a,_b,_c;const equivalentBases=CONFIG.PF2E.equivalentWeapons;return[null!==(_a=this.baseType)&&void 0!==_a?_a:[],null!==(_c=equivalentBases[null!==(_b=this.baseType)&&void 0!==_b?_b:""])&&void 0!==_c?_c:[]].flat().reduce(((types,t)=>({...types,[`base:${t}`]:!0})),{})})();return[super.getRollOptions(prefix),Object.entries({[`category:${this.category}`]:!0,[`group:${this.group}`]:!!this.group,...baseTypeRollOptions,[`base:${this.baseType}`]:!!this.baseType,[`hands-held:${this.handsHeld}`]:this.isEquipped&&this.handsHeld>0,[`usage:hands:${this.hands}`]:"0"!==this.hands,[`range-increment:${this.rangeIncrement}`]:!!this.rangeIncrement,[`reload:${this.reload}`]:!!this.reload,[`damage:type:${damage_type}`]:!0,[`damage:die:faces:${damage_dieFaces}`]:!0,[`damage-dice:${1+this.system.runes.striking}`]:!0,"deity-favored":isDeityFavored,oversized,melee:this.isMelee,ranged:this.isRanged,thrown:this.isThrown,"thrown-melee":thrownMelee}).filter((([_key,isTrue])=>isTrue)).map((([key])=>`${delimitedPrefix}${key}`))].flat().sort()}prepareBaseData(){var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l,_m,_o,_p,_q,_r,_s,_t,_u;super.prepareBaseData();const systemData=this.system;systemData.category||(systemData.category="simple"),systemData.group||(systemData.group=null),systemData.baseItem||(systemData.baseItem=null),(_e=systemData.bonusDamage).value||(_e.value=0),(_f=systemData.splashDamage).value||(_f.value=0),(_g=systemData.potencyRune).value||(_g.value=null),(_h=systemData.strikingRune).value||(_h.value=null),(_j=systemData.propertyRune1).value||(_j.value=null),(_k=systemData.propertyRune2).value||(_k.value=null),(_l=systemData.propertyRune3).value||(_l.value=null),(_m=systemData.propertyRune4).value||(_m.value=null),(_o=systemData.reload).value||(_o.value=null),systemData.selectedAmmoId||(systemData.selectedAmmoId=null),(_p=systemData.damage).die||(_p.die=null),null!==(_a=(_q=systemData.damage).modifier)&&void 0!==_a||(_q.modifier=0),!systemData.damage.die&&systemData.damage.dice>0&&((_r=systemData.damage).modifier||(_r.modifier=systemData.damage.dice),systemData.damage.dice=0);const preciousMaterial=systemData.preciousMaterial.value&&systemData.preciousMaterialGrade.value?{type:systemData.preciousMaterial.value,grade:systemData.preciousMaterialGrade.value}:null;systemData.material={base:[{type:"steel",thickness:"thin"}],precious:preciousMaterial},automatic_bonus_progression_1.AutomaticBonusProgression.cleanupRunes(this);const traitsArray=systemData.traits.value;("alchemical-bomb"===systemData.baseItem||traitsArray.some((t=>/^thrown(?:-\d+)?$/.test(t))))&&(this.system.reload.value="-");const traitSet=this.traits,mandatoryRanged=(0,_util_1.setHasElement)(values_2.MANDATORY_RANGED_GROUPS,systemData.group)||traitSet.has("thrown");if(mandatoryRanged){null!==(_b=(_s=this.system).range)&&void 0!==_b||(_s.range=10),traitSet.has("combination")&&(this.system.group="firearm");const{otherTags}=systemData.traits;"bow"===this.group&&(0,_util_1.setHasElement)(values_2.CROSSBOW_WEAPONS,this.baseType)&&!otherTags.includes("crossbow")&&systemData.traits.otherTags.push("crossbow")}!mandatoryRanged&&traitsArray.some((t=>/^thrown-\d+$/.test(t)))&&(this.system.range=null),systemData.reload.consume=this.isMelee?null:null!==this.reload,null!==(_c=(_t=this.flags.pf2e).comboMeleeUsage)&&void 0!==_c||(_t.comboMeleeUsage=!1),this.system.meleeUsage&&(null!==(_d=(_u=this.system.meleeUsage).traits)&&void 0!==_d||(_u.traits=[])),this.processMaterialAndRunes()}prepareDerivedData(){var _a;super.prepareDerivedData();const systemData=this.system,{potencyRune,strikingRune,propertyRune1,propertyRune2,propertyRune3,propertyRune4}=systemData;this.system.runes={potency:null!==(_a=potencyRune.value)&&void 0!==_a?_a:0,striking:(0,physical_1.getStrikingDice)({strikingRune}),property:[propertyRune1.value,propertyRune2.value,propertyRune3.value,propertyRune4.value].filter((rune=>!!rune)),effects:[]}}processMaterialAndRunes(){var _a,_b;const systemData=this.system,runesData=this.getRunesData(),baseTraits=systemData.traits.value,magicTraits=(()=>{const hasFundamentalRunes=!!this.system.potencyRune.value||!!this.system.strikingRune.value,hasPropertyRunes=[1,2,3,4].map((n=>this.system[`propertyRune${n}`])).some((r=>!!r.value)),abpSetting=game.settings.get("pf2e","automaticBonusVariant");return hasFundamentalRunes||hasPropertyRunes&&"ABPFundamentalPotency"===abpSetting})()?["evocation","magical"]:[];systemData.traits.value=Array.from(new Set([...baseTraits,...magicTraits])),systemData.traits.otherTags.push(...runesData.flatMap((runeData=>{var _a;return null!==(_a=runeData.otherTags)&&void 0!==_a?_a:[]})));const materialData=this.getMaterialData();if(!this.isMagical&&!materialData||this.isSpecific)return;const baseLevel=this.level;systemData.level.value=runesData.map((runeData=>runeData.level)).concat(null!==(_a=null==materialData?void 0:materialData.level)&&void 0!==_a?_a:0).reduce(((highest,level)=>level>highest?level:highest),baseLevel);const rarityOrder={common:0,uncommon:1,rare:2,unique:3},baseRarity=this.rarity;systemData.traits.rarity=runesData.map((runeData=>runeData.rarity)).concat(null!==(_b=null==materialData?void 0:materialData.rarity)&&void 0!==_b?_b:"common").reduce(((highest,rarity)=>rarityOrder[rarity]>rarityOrder[highest]?rarity:highest),baseRarity),this.name=this.generateMagicName()}computeAdjustedPrice(){var _a;const materialData=this.getMaterialData();if(!this.isMagical&&!materialData||this.isSpecific)return null;const runesData=this.getRunesData(),materialPrice=null!==(_a=null==materialData?void 0:materialData.price)&&void 0!==_a?_a:0,heldOrStowedBulk=new physical_1.Bulk({light:this.system.bulk.heldOrStowed}),materialValue=materialPrice+Math.max(Math.ceil(heldOrStowedBulk.normal),1)*materialPrice/10,runeValue=runesData.reduce(((sum,rune)=>sum+rune.price),0);return new physical_1.CoinsPF2e({gp:runeValue+materialValue})}getRunesData(){var _a,_b,_c,_d,_e,_f;const systemData=this.system,propertyRuneData=CONFIG.PF2E.runes.weapon.property;return[physical_1.WEAPON_VALUATION_DATA.potency[null!==(_a=systemData.potencyRune.value)&&void 0!==_a?_a:0],physical_1.WEAPON_VALUATION_DATA.striking[null!==(_b=systemData.strikingRune.value)&&void 0!==_b?_b:""],propertyRuneData[null!==(_c=systemData.propertyRune1.value)&&void 0!==_c?_c:""],propertyRuneData[null!==(_d=systemData.propertyRune2.value)&&void 0!==_d?_d:""],propertyRuneData[null!==(_e=systemData.propertyRune3.value)&&void 0!==_e?_e:""],propertyRuneData[null!==(_f=systemData.propertyRune4.value)&&void 0!==_f?_f:""]].filter((datum=>!!datum))}getMaterialData(){var _a,_b,_c,_d,_e;const material=this.material,materialData=physical_1.WEAPON_MATERIAL_VALUATION_DATA[null!==(_b=null===(_a=material.precious)||void 0===_a?void 0:_a.type)&&void 0!==_b?_b:""];return null!==(_e=null==materialData?void 0:materialData[null!==(_d=null===(_c=material.precious)||void 0===_c?void 0:_c.grade)&&void 0!==_d?_d:"low"])&&void 0!==_e?_e:null}async getChatData(htmlOptions={}){const traits=this.traitChatData(CONFIG.PF2E.weaponTraits),chatData=await super.getChatData();return this.processChatData(htmlOptions,{...chatData,traits,properties:[CONFIG.PF2E.weaponCategories[this.category],this.rangeIncrement?`PF2E.TraitRangeIncrement${this.rangeIncrement}`:null]})}generateMagicName(){var _a,_b,_c,_d,_e,_f,_g,_h;const translations=localize_1.LocalizePF2e.translations.PF2E,baseWeapons=translations.Weapon.Base,storedName=this._source.name;if(this.isSpecific||!this.baseType||storedName!==baseWeapons[this.baseType])return this.name;const systemData=this.system,potencyRune=systemData.potencyRune.value,strikingRune=systemData.strikingRune.value,propertyRunes={1:null!==(_b=null===(_a=systemData.propertyRune1)||void 0===_a?void 0:_a.value)&&void 0!==_b?_b:null,2:null!==(_d=null===(_c=systemData.propertyRune2)||void 0===_c?void 0:_c.value)&&void 0!==_d?_d:null,3:null!==(_f=null===(_e=systemData.propertyRune3)||void 0===_e?void 0:_e.value)&&void 0!==_f?_f:null,4:null!==(_h=null===(_g=systemData.propertyRune4)||void 0===_g?void 0:_g.value)&&void 0!==_h?_h:null},{material}=this,params={base:this.baseType?baseWeapons[this.baseType]:this.name,material:material.precious&&game.i18n.localize(CONFIG.PF2E.preciousMaterials[material.precious.type]),potency:potencyRune,striking:strikingRune&&game.i18n.localize(CONFIG.PF2E.weaponStrikingRunes[strikingRune]),property1:propertyRunes[1]&&game.i18n.localize(CONFIG.PF2E.weaponPropertyRunes[propertyRunes[1]]),property2:propertyRunes[2]&&game.i18n.localize(CONFIG.PF2E.weaponPropertyRunes[propertyRunes[2]]),property3:propertyRunes[3]&&game.i18n.localize(CONFIG.PF2E.weaponPropertyRunes[propertyRunes[3]]),property4:propertyRunes[4]&&game.i18n.localize(CONFIG.PF2E.weaponPropertyRunes[propertyRunes[4]])},formatStrings=translations.Item.Weapon.GeneratedName,formatString=(()=>{const key=[params.potency&&"Potency",params.striking&&"Striking",params.property4?"FourProperties":params.property3?"ThreeProperties":params.property2?"TwoProperties":params.property1?"OneProperty":null,params.material&&"Material"].filter((keyPart=>!!keyPart)).join("")||null;return key&&formatStrings[key]})();return formatString?game.i18n.format(formatString,params):this.name}getMystifiedData(status,{source=!1}={}){const mystifiedData=super.getMystifiedData(status);return source&&(mystifiedData.name=this._source.name),mystifiedData}generateUnidentifiedName({typeOnly=!1}={typeOnly:!1}){var _a;const translations=localize_1.LocalizePF2e.translations.PF2E,base=this.baseType?translations.Weapon.Base[this.baseType]:null,group=this.group?CONFIG.PF2E.weaponGroups[this.group]:null,itemType=game.i18n.localize(null!==(_a=null!=base?base:group)&&void 0!==_a?_a:"ITEM.TypeWeapon");if(typeOnly)return itemType;const formatString=localize_1.LocalizePF2e.translations.PF2E.identification.UnidentifiedItem;return game.i18n.format(formatString,{item:itemType})}getAltUsages({recurse=!0}={}){var _a,_b;const meleeUsage=this.toMeleeUsage();return[null!==(_a=this.toThrownUsage())&&void 0!==_a?_a:[],null!=meleeUsage?meleeUsage:[],recurse&&null!==(_b=null==meleeUsage?void 0:meleeUsage.toThrownUsage())&&void 0!==_b?_b:[]].flat()}clone(data,options){const clone=super.clone(data,options);return(null==options?void 0:options.altUsage)&&clone instanceof WeaponPF2e&&(clone.altUsageType=options.altUsage),clone}toThrownUsage(){const traits=this._source.system.traits.value,thrownTrait=traits.find((t=>/^thrown-\d{1,3}$/.test(t)));if(this.isRanged||!thrownTrait)return null;const range=Number(/(\d{1,3})$/.exec(thrownTrait).at(1)),newTraits=deepClone(traits);newTraits.splice(newTraits.indexOf(thrownTrait),1,"thrown");const overlay={system:{range,traits:{value:newTraits}}};return this.clone(overlay,{keepId:!0,altUsage:"thrown"})}toMeleeUsage(){const{meleeUsage}=this.system;if(!meleeUsage||this.flags.pf2e.comboMeleeUsage)return null;const overlay={system:{damage:{damageType:meleeUsage.damage.type,dice:1,die:meleeUsage.damage.die},group:meleeUsage.group,range:null,reload:{value:null},traits:{value:meleeUsage.traits.concat("combination")},selectedAmmoId:null},flags:{pf2e:{comboMeleeUsage:!0}}};return this.clone(overlay,{keepId:!0,altUsage:"melee"})}toNPCAttacks(){const{actor}=this;if(!actor.isOfType("npc"))throw(0,_util_1.ErrorPF2e)("Melee items can only be generated for NPCs");const baseDamage=(()=>{const weaponDamage=this.baseDamage,ability=this.rangeIncrement&&!this.isThrown?"dex":"str",actorLevel=actor.system.details.level.base,dice=[1,2,3,4].reduce(((closest,dice)=>Math.abs(dice-Math.round((actorLevel+2)/4))<Math.abs(closest-Math.round((actorLevel+2)/4))?dice:closest)),constant=(()=>{const totalModifier=actor.abilities[ability].mod+(actor.level>1?dice:0);return 0===totalModifier?"":[totalModifier<0?"-":"+",Math.abs(totalModifier)].join("")})();return{damage:weaponDamage.die?`${dice}${weaponDamage.die}${constant}`:dice.toString(),damageType:weaponDamage.damageType}})(),fromPropertyRunes=this.system.runes.property.flatMap((r=>{var _a,_b;return null!==(_b=null===(_a=physical_1.WEAPON_PROPERTY_RUNES[r].damage)||void 0===_a?void 0:_a.dice)&&void 0!==_b?_b:[]})).map((d=>{var _a;return{damage:`${d.diceNumber}${d.dieSize}`,damageType:null!==(_a=d.damageType)&&void 0!==_a?_a:baseDamage.damageType}})),npcReach={tiny:null,sm:"reach-10",med:"reach-10",lg:"reach-15",huge:"reach-20",grg:"reach-25"},source={name:this._source.name,type:"melee",system:{weaponType:{value:this.isMelee?"melee":"ranged"},bonus:{value:Math.round(1.5*this.actor.level+7)},damageRolls:[baseDamage,fromPropertyRunes].flat().reduce(((rolls,roll)=>mergeObject(rolls,{[randomID()]:roll})),{}),traits:{value:(traits=>{var _a;const newTraits=traits.flatMap((t=>{var _a;return"reach"===t?null!==(_a=npcReach[this.size])&&void 0!==_a?_a:[]:"thrown"===t&&(0,_util_1.setHasElement)(values_2.THROWN_RANGES,this.rangeIncrement)?`thrown-${this.rangeIncrement}`:t})).filter((t=>!(t in CONFIG.PF2E.creatureTraits||(0,_util_1.setHasElement)(values_1.MAGIC_TRADITIONS,t)||(0,_util_1.setHasElement)(values_1.MAGIC_SCHOOLS,t)||t.startsWith("thrown")&&!this.isThrown||"finesse"===t&&this.isRanged||"brutal"===t&&this.isMelee||"combination"===t&&(this.isMelee||this.isThrown)||"critical-fusion"===t&&this.isThrown)));this.isRanged&&!this.isThrown&&newTraits.push(`range-increment-${this.rangeIncrement}`);const actorSize=new size_1.ActorSizePF2e({value:actor.size});actorSize.isLargerThan("med")&&!newTraits.some((t=>t.startsWith("reach")))&&(actorSize.decrement(),newTraits.push(...[null!==(_a=npcReach[actorSize.value])&&void 0!==_a?_a:[]].flat()));const reloadTrait=`reload-${this.reload}`;return(0,_util_1.objectHasKey)(CONFIG.PF2E.npcAttackTraits,reloadTrait)&&newTraits.push(reloadTrait),newTraits.sort()})(this.system.traits.value)},rules:deepClone(this._source.system.rules)},flags:{pf2e:{linkedWeapon:this.id}}};return[new _item_1.MeleePF2e(source,{parent:this.actor}),...this.getAltUsages({recurse:!1}).flatMap((u=>u.toNPCAttacks()))]}}exports.WeaponPF2e=WeaponPF2e},14299:function(__unused_webpack_module,exports,__webpack_require__){var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k);var desc=Object.getOwnPropertyDescriptor(m,k);desc&&!("get"in desc?!m.__esModule:desc.writable||desc.configurable)||(desc={enumerable:!0,get:function(){return m[k]}}),Object.defineProperty(o,k2,desc)}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)"default"===p||Object.prototype.hasOwnProperty.call(exports,p)||__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.WeaponSheetPF2e=exports.WeaponPF2e=void 0,__exportStar(__webpack_require__(83982),exports);var document_1=__webpack_require__(86885);Object.defineProperty(exports,"WeaponPF2e",{enumerable:!0,get:function(){return document_1.WeaponPF2e}});var sheet_1=__webpack_require__(9053);Object.defineProperty(exports,"WeaponSheetPF2e",{enumerable:!0,get:function(){return sheet_1.WeaponSheetPF2e}}),__exportStar(__webpack_require__(56704),exports),__exportStar(__webpack_require__(16585),exports)},9053:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.WeaponSheetPF2e=void 0;const physical_1=__webpack_require__(6560),helpers_1=__webpack_require__(69554),localize_1=__webpack_require__(41332),_util_1=__webpack_require__(6945),values_1=__webpack_require__(16585);class WeaponSheetPF2e extends physical_1.PhysicalItemSheetPF2e{async getData(options){var _a,_b,_c;const sheetData=await super.getData(options);sheetData.data.damage=deepClone(this.item._source.system.damage);const potencyRuneValue="ABPFundamentalPotency"===game.settings.get("pf2e","automaticBonusVariant")?4:null!==(_a=sheetData.data.potencyRune.value)&&void 0!==_a?_a:0,propertyRuneSlots=[[1,sheetData.data.propertyRune1],[2,sheetData.data.propertyRune2],[3,sheetData.data.propertyRune3],[4,sheetData.data.propertyRune4]];sheetData.propertyRuneSlots=propertyRuneSlots.filter((([slotNumber,slot],idx)=>{var _a,_b;return!(!(slotNumber<=potencyRuneValue||"orichalcum"===sheetData.data.preciousMaterial.value)||1!==slotNumber&&!(null===(_a=sheetData.data[`propertyRune${idx}`])||void 0===_a?void 0:_a.value)||(null===(_b=sheetData.data.specific)||void 0===_b?void 0:_b.value)&&null===slot.value)})).map((([slotNumber,slot])=>({...slot,name:`system.propertyRune${slotNumber}.value`,label:game.i18n.localize(`PF2E.PropertyRuneLabel${slotNumber}`),number:slotNumber})));const baseData=this.item.toObject();sheetData.data.traits.rarity=baseData.system.traits.rarity;const hintText=localize_1.LocalizePF2e.translations.PF2E.Item.Weapon.FromMaterialAndRunes,adjustedLevelHint=this.item.level!==baseData.system.level.value?game.i18n.format(hintText,{property:game.i18n.localize("PF2E.LevelLabel"),value:this.item.level}):null,adjustedPriceHint=(()=>new physical_1.CoinsPF2e(baseData.system.price.value).scale(baseData.system.quantity).copperValue!==this.item.assetValue.copperValue?game.i18n.format(hintText,{property:game.i18n.localize("PF2E.PriceLabel"),value:this.item.price.value.toString()}):null)(),groups=Object.fromEntries(Object.entries(CONFIG.PF2E.weaponGroups).map((([slug,localizeKey])=>[slug,game.i18n.localize(localizeKey)])).sort(((damageA,damageB)=>damageA[1].localeCompare(damageB[1])))),damageTypes=Object.fromEntries(Object.entries(CONFIG.PF2E.damageTypes).map((([slug,localizeKey])=>[slug,game.i18n.localize(localizeKey)])).sort(((damageA,damageB)=>damageA[1].localeCompare(damageB[1])))),weaponPropertyRunes=Object.fromEntries(Object.entries(CONFIG.PF2E.runes.weapon.property).map((([slug,data])=>[slug,game.i18n.localize(data.name)])).sort(((runeA,runeB)=>runeA[1].localeCompare(runeB[1])))),traitSet=this.item.traits,isComboWeapon=traitSet.has("combination"),weaponRanges=Array.from(values_1.WEAPON_RANGES).reduce(((ranges,range)=>({...ranges,[range]:game.i18n.format("PF2E.WeaponRangeN",{range})})),{}),mandatoryRanged=(0,_util_1.setHasElement)(values_1.MANDATORY_RANGED_GROUPS,this.item.group)||["combination","thrown","volley-20","volley-30","volley-50"].some((trait=>traitSet.has(trait))),mandatoryMelee=sheetData.data.traits.value.some((trait=>/^thrown-\d+$/.test(trait))),otherTags=(()=>{const otherWeaponTags=deepClone(CONFIG.PF2E.otherWeaponTags);return"1"!==this.item.hands&&delete otherWeaponTags.implement,(0,helpers_1.createSheetTags)(otherWeaponTags,sheetData.data.traits.otherTags)})(),meleeUsage=null!==(_b=sheetData.data.meleeUsage)&&void 0!==_b?_b:{group:"knife",damage:{type:"piercing",die:"d4"},traits:[]},abpEnabled="noABP"!==game.settings.get("pf2e","automaticBonusVariant");return{...sheetData,hasDetails:!0,hasSidebar:!0,preciousMaterials:this.prepareMaterials(physical_1.WEAPON_MATERIAL_VALUATION_DATA),weaponPotencyRunes:CONFIG.PF2E.weaponPotencyRunes,weaponStrikingRunes:CONFIG.PF2E.weaponStrikingRunes,weaponPropertyRunes,otherTags,adjustedLevelHint,adjustedPriceHint,abpEnabled,baseLevel:baseData.system.level.value,rarity:baseData.system.traits.rarity,basePrice:new physical_1.CoinsPF2e(baseData.system.price.value),categories:CONFIG.PF2E.weaponCategories,groups,baseTypes:localize_1.LocalizePF2e.translations.PF2E.Weapon.Base,itemBonuses:CONFIG.PF2E.itemBonuses,damageDie:CONFIG.PF2E.damageDie,damageDice:CONFIG.PF2E.damageDice,conditionTypes:CONFIG.PF2E.conditionTypes,damageTypes,weaponRanges,mandatoryMelee,mandatoryRanged,weaponReload:CONFIG.PF2E.weaponReload,weaponMAP:CONFIG.PF2E.weaponMAP,isBomb:"bomb"===this.item.group,isComboWeapon,meleeGroups:CONFIG.PF2E.meleeWeaponGroups,meleeUsage,meleeUsageTraits:(0,helpers_1.createSheetTags)(CONFIG.PF2E.weaponTraits,null!==(_c=meleeUsage.traits)&&void 0!==_c?_c:[])}}activateListeners($html){super.activateListeners($html),$html.find("i.fa-info-circle.small[title]").tooltipster({maxWidth:275,position:"right",theme:"crb-hover",contentAsHTML:!0}),$html.find("i.fa-info-circle.large[title]").tooltipster({maxWidth:400,theme:"crb-hover",contentAsHTML:!0})}async _updateObject(event,formData){var _a;const weapon=this.item;formData["system.bonusDamage.value"]||(formData["system.bonusDamage.value"]=0),formData["system.splashDamage.value"]||(formData["system.splashDamage.value"]=0),formData["system.potencyRune.value"]||(formData["system.potencyRune.value"]=null),formData["system.strikingRune.value"]||(formData["system.strikingRune.value"]=null);for(const slotNumber of[1,2,3,4])formData[_a=`system.propertyRune${slotNumber}.value`]||(formData[_a]=null);formData["system.range"]||(formData["system.range"]=null);const isSpecific=formData["system.specific.value"];return isSpecific!==weapon.isSpecific&&(!0===isSpecific?(formData["system.price.value"]=this.item.price.value,formData["system.specific.price"]=this.item.price.value,formData["system.specific.material"]=weapon.material,formData["system.specific.runes"]={potency:formData["system.potencyRune.value"],striking:formData["system.strikingRune.value"]}):!1===isSpecific&&(formData["system.specific.-=material"]=null,formData["system.specific.-=runes"]=null)),weapon.system.meleeUsage&&!this.item.traits.has("combination")&&(formData["system.-=meleeUsage"]=null),super._updateObject(event,formData)}}exports.WeaponSheetPF2e=WeaponSheetPF2e},56704:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0})},16585:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.WEAPON_RANGES=exports.WEAPON_PROPERTY_RUNE_TYPES=exports.WEAPON_MATERIAL_EFFECTS=exports.WEAPON_GROUPS=exports.WEAPON_CATEGORIES=exports.THROWN_RANGES=exports.MANDATORY_RANGED_GROUPS=exports.MELEE_WEAPON_GROUPS=exports.CROSSBOW_WEAPONS=void 0;const WEAPON_CATEGORIES=new Set(["unarmed","simple","martial","advanced"]);exports.WEAPON_CATEGORIES=WEAPON_CATEGORIES;const MELEE_OR_RANGED_GROUPS=new Set(["dart","knife"]),MELEE_WEAPON_GROUPS=new Set([...MELEE_OR_RANGED_GROUPS,"axe","brawling","club","flail","hammer","pick","polearm","shield","spear","sword"]);exports.MELEE_WEAPON_GROUPS=MELEE_WEAPON_GROUPS;const MANDATORY_RANGED_GROUPS=new Set(["bomb","bow","firearm","sling"]);exports.MANDATORY_RANGED_GROUPS=MANDATORY_RANGED_GROUPS;const WEAPON_GROUPS=new Set([...MELEE_WEAPON_GROUPS,...MANDATORY_RANGED_GROUPS]);exports.WEAPON_GROUPS=WEAPON_GROUPS;const WEAPON_MATERIAL_EFFECTS=new Set(["abysium","adamantine","coldIron","djezet","silver","mithral","noqual","peachwood","silver","sisterstone-dusk","sisterstone-scarlet","sovereignSteel"]);exports.WEAPON_MATERIAL_EFFECTS=WEAPON_MATERIAL_EFFECTS;const WEAPON_PROPERTY_RUNE_TYPES=new Set(["anarchic","ancestralEchoing","anchoring","axiomatic","bane","bloodbane","bloodthirsty","brilliant","conducting","corrosive","crushing","cunning","dancing","disrupting","energizing","extending","fanged","fearsome","flaming","frost","ghostTouch","greaterAnchoring","greaterBloodbane","greaterBrilliant","greaterCorrosive","greaterCrushing","greaterDisrupting","greaterExtending","greaterFanged","greaterFearsome","greaterFlaming","greaterFrost","greaterHauling","greaterImpactful","greaterShock","greaterThundering","grievous","hauling","holy","hopeful","impactful","keen","kinWarding","majorFanged","pacifying","returning","serrating","shifting","shock","speed","spellStoring","thundering","unholy","vorpal","wounding"]);exports.WEAPON_PROPERTY_RUNE_TYPES=WEAPON_PROPERTY_RUNE_TYPES;const THROWN_RANGES=new Set([10,15,20,30,40,60,80,100]);exports.THROWN_RANGES=THROWN_RANGES;const WEAPON_RANGES=new Set([...THROWN_RANGES,50,70,90,120,140,150,180,240,300]);exports.WEAPON_RANGES=WEAPON_RANGES;const CROSSBOW_WEAPONS=new Set(["alchemical-crossbow","crossbow","hand-crossbow","heavy-crossbow","repeating-crossbow","repeating-hand-crossbow","repeating-heavy-crossbow","taw-launcher"]);exports.CROSSBOW_WEAPONS=CROSSBOW_WEAPONS},46047:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.JournalTextTinyMCESheetPF2e=exports.JournalSheetPF2e=void 0;class JournalSheetPF2e extends JournalSheet{static get theme(){return null}static get defaultOptions(){const options=super.defaultOptions,{theme}=this;return theme&&options.classes.push(theme),options}}exports.JournalSheetPF2e=JournalSheetPF2e;class JournalTextTinyMCESheetPF2e extends JournalTextTinyMCESheet{async activateEditor(name,options={},initialContent=""){var _a;const editor=await super.activateEditor(name,options,initialContent),parentSheet=null===(_a=this.object.parent)||void 0===_a?void 0:_a.sheet.constructor,theme=null==parentSheet?void 0:parentSheet.theme;return editor.contentDocument.documentElement.classList.add("journal-entry-page","text"),editor.contentDocument.body.classList.add("journal-page-content"),theme&&editor.contentDocument.documentElement.classList.add(theme),editor}}exports.JournalTextTinyMCESheetPF2e=JournalTextTinyMCESheetPF2e},49151:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.MacroPF2e=void 0;class MacroPF2e extends Macro{get visible(){return this.permission>=CONST.DOCUMENT_PERMISSION_LEVELS.OBSERVER}_executeScript({actor,token}={}){var _a,_b;const speaker=ChatMessage.implementation.getSpeaker(),character=game.user.character;null!=actor||(actor=game.actors.get(null!==(_a=speaker.actor)&&void 0!==_a?_a:"")),null!=token||(token=canvas.ready?canvas.tokens.get(null!==(_b=speaker.token)&&void 0!==_b?_b:""):null);const fn=new(0,async function(){}.constructor)("speaker","actor","token","character",["{",this.command,"}"].join("\n"));try{return fn.call(this,speaker,actor,token,character)}catch(_c){ui.notifications.error("There was an error in your macro syntax. See the console (F12) for details")}}}exports.MacroPF2e=MacroPF2e},54310:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.MigrationBase=void 0;exports.MigrationBase=class MigrationBase{constructor(){this.version=this.constructor.version,this.requiresFlush=!1}}},63051:function(__unused_webpack_module,exports,__webpack_require__){var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k);var desc=Object.getOwnPropertyDescriptor(m,k);desc&&!("get"in desc?!m.__esModule:desc.writable||desc.configurable)||(desc={enumerable:!0,get:function(){return m[k]}}),Object.defineProperty(o,k2,desc)}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(o,v){Object.defineProperty(o,"default",{enumerable:!0,value:v})}:function(o,v){o.default=v}),__importStar=this&&this.__importStar||function(mod){if(mod&&mod.__esModule)return mod;var result={};if(null!=mod)for(var k in mod)"default"!==k&&Object.prototype.hasOwnProperty.call(mod,k)&&__createBinding(result,mod,k);return __setModuleDefault(result,mod),result};Object.defineProperty(exports,"__esModule",{value:!0}),exports.MigrationList=exports.MigrationRunner=void 0;const runner_1=__webpack_require__(46842),Migrations=__importStar(__webpack_require__(3733));var runner_2=__webpack_require__(46842);Object.defineProperty(exports,"MigrationRunner",{enumerable:!0,get:function(){return runner_2.MigrationRunner}});class MigrationList{static get latestVersion(){return Math.max(...this.list.map((Migration=>Migration.version)))}static constructAll(){return this.list.map((Migration=>new Migration))}static constructFromVersion(version){const minVersion=Number(version)||runner_1.MigrationRunner.RECOMMENDED_SAFE_VERSION;return this.list.filter((Migration=>Migration.version>minVersion)).map((Migration=>new Migration))}static constructRange(min,max=1/0){return this.list.filter((Migration=>Migration.version>=min&&Migration.version<=max)).map((Migration=>new Migration))}}exports.MigrationList=MigrationList,MigrationList.list=Object.values(Migrations)},3731:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration600Reach=void 0;const base_1=__webpack_require__(54310);class Migration600Reach extends base_1.MigrationBase{async updateItem(item){"ancestry"===item.type&&(item.system.reach=5)}}exports.Migration600Reach=Migration600Reach,Migration600Reach.version=.6},48324:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration601SplitEffectCompendia=void 0;const base_1=__webpack_require__(54310),_util_1=__webpack_require__(6945);class Migration601SplitEffectCompendia extends base_1.MigrationBase{async updateItem(item){var _a;"string"==typeof item.system.description.value&&(item.system.description.value=item.system.description.value.replace(/(@Compendium\[pf2e\.)(spell-effects)(\.)([a-zA-Z0-9]{16})(\]{.*?})/g,((_full,first,_replace,dot,itemId,rest)=>first+((0,_util_1.objectHasKey)(Migration601SplitEffectCompendia.effectLocations,itemId)?Migration601SplitEffectCompendia.effectLocations[itemId]:"??")+dot+itemId+rest))),"string"==typeof(null===(_a=item.flags.core)||void 0===_a?void 0:_a.sourceId)&&(item.flags.core.sourceId=item.flags.core.sourceId.replace(/(Compendium\.pf2e\.)(spell-effects)(\.)([a-zA-Z0-9]{16})/g,((_full,first,_replace,dot,itemId)=>first+((0,_util_1.objectHasKey)(Migration601SplitEffectCompendia.effectLocations,itemId)?Migration601SplitEffectCompendia.effectLocations[itemId]:"??")+dot+itemId)))}async migrate(){game.macros.forEach((macro=>{macro.data.command=macro.data.command.replace(/(Compendium\.pf2e\.)(spell-effects)(\.)([a-zA-Z0-9]{16})/g,((_full,first,_replace,dot,itemId)=>first+((0,_util_1.objectHasKey)(Migration601SplitEffectCompendia.effectLocations,itemId)?Migration601SplitEffectCompendia.effectLocations[itemId]:"??")+dot+itemId))}))}}exports.Migration601SplitEffectCompendia=Migration601SplitEffectCompendia,Migration601SplitEffectCompendia.version=.601,Migration601SplitEffectCompendia.effectLocations={QuZ5frBMJF3gi7RY:"consumable-effects","7z1iY4AaNEAIKuAU":"consumable-effects","1mKjaWC65KWPuFR4":"consumable-effects",mi4Md1fB2XThCand:"consumable-effects",R106i7WCXvHLGMTu:"consumable-effects",kkDbalYEavzRpYlp:"consumable-effects",qVKrrKpTghgMIuGH:"consumable-effects",HeRHBo2NaKy5IxhU:"consumable-effects",tTBJ33UGtzXjWOJp:"consumable-effects",xVAdPzFaSvJXPMKv:"consumable-effects",fYjvLx9DHIdCHdDx:"consumable-effects",kwD0wuW5Ndkc9YXB:"consumable-effects",fIpzDpuwLdIS4tW5:"consumable-effects","1ouUo8lLK6H79Rqh":"consumable-effects",xFQRiVU6h8EA6Lw9:"consumable-effects",MI5OCkF9IXmD2lPF:"consumable-effects",S4MZzALqFoXJsr6o:"consumable-effects",wFF0SZs1Hcf87Kk1:"consumable-effects","2C1HuKDQDGFZuv7l":"consumable-effects",q1EhQ716bPSgJVnC:"consumable-effects",eh7EqmDBDW30ShCu:"consumable-effects",wTZnKkT0K4Tdy8mD:"consumable-effects",Cxa7MdgMCUoMqbKm:"consumable-effects",PeuUz7JaabCgl6Yh:"consumable-effects",lNWACCNe9RYgaFxb:"consumable-effects",j9zVZwRBVAcnpEkE:"consumable-effects",qit1mLbJUyRTYcPU:"consumable-effects",jaBMZKdoywOTrQvP:"consumable-effects",RT1BxXrbbGgk40Ti:"consumable-effects",ztxW3lBPRcesF7wK:"consumable-effects","7vCenP9j6FuHRv5C":"consumable-effects","7UL8belWmo7U5YGM":"consumable-effects",bcxVvIbuZWOvsKcA:"consumable-effects","4tepFOJLhZSelPoa":"consumable-effects",qwoLV4awdezlEJ60:"consumable-effects",GBBjw61g4ekJymT0:"consumable-effects",vFOr2JAJxiVvvn2E:"consumable-effects",BV8RPntjc9FUzD3g:"consumable-effects",kgotU0sFmtAHYySB:"consumable-effects",VCypzSu659eC6jNi:"consumable-effects",wyLEew86nhNUXASu:"consumable-effects",Wa4317cqU4lJ8vAQ:"consumable-effects",Z9oPh462q82IYIZ6:"consumable-effects",EpB7yJPEuG6ez4z3:"consumable-effects",PpLxndUSgzgs6dd0:"consumable-effects",lPRuIRbu0rHBkoKY:"consumable-effects",Yxssrnh9UZJAM0V7:"consumable-effects","9MeHc072G4L8AJkp":"consumable-effects",xLilBqqf34ZJYO9i:"consumable-effects","1l139A2Qik4lBHKO":"consumable-effects","2PNo8u4wxSbz5WEs":"consumable-effects",fUrZ4xcMJz0CfTyG:"consumable-effects","6A8jsLR7upLGuRiv":"consumable-effects",Zdh2uO1vVYJmaqld:"consumable-effects",Mf9EBLhYmZerf0nS:"consumable-effects",ModBoFdCi7YQU4gP:"consumable-effects",W3xQBLj5hLOtb6Tj:"consumable-effects","2Bds6d4UGQZqYSZM":"consumable-effects","6PNLBIdlqqWNCFMy":"consumable-effects","988f6NpOo4YzFzIr":"consumable-effects",VPtsrpbP0AE642al:"consumable-effects",MCny5ohCGf09a7Wl:"consumable-effects",RRusoN3HEGnDO1Dg:"consumable-effects",thOpQunbQr77XWdF:"consumable-effects","9keegq0GdS1eSrNr":"consumable-effects",jw6Tr9FbErjLAFLQ:"consumable-effects","5xgapIXn5DwbXHKh":"consumable-effects",t7VUJHSUT6bkVUjg:"consumable-effects",yrbz0rZzp8aZEqbv:"consumable-effects","16tOZk4qy329s2aK":"consumable-effects",zd85Ny1RS46OL0TD:"consumable-effects",oAewXfq9c0ecaSfw:"consumable-effects",dpIrjd1UPY7EnWUD:"consumable-effects","9FfFhu2kl2wMTsiI":"consumable-effects",v5Ht1V4MZvRKRBjL:"consumable-effects",TkRuKKYyPHTGPfgf:"consumable-effects",XrlChFETfe8avLsX:"consumable-effects",qzRcSQ0HTTp58hV2:"consumable-effects",TsWUTODTVi487SEz:"consumable-effects","5Gof60StUppR2Xn9":"consumable-effects",mG6S6zm6hxaF7Tla:"consumable-effects",zlSNbMDIlTOpcO8R:"consumable-effects",b9DTIJyBT8kvIBpj:"consumable-effects",PEPOd38VfVzQMKG5:"consumable-effects","1xHHvQlW4pRR89qj":"consumable-effects",AMhUb42NAJ1aisZp:"consumable-effects",kwOtHtmlH69ctK0O:"consumable-effects",VrYfR2WuyA15zFhq:"consumable-effects",OAN5Fj21PJPhIqRU:"consumable-effects",e6dXfbKzv5sNr1zh:"consumable-effects",Hnt3Trd7TiFICB06:"consumable-effects",p2aGtovaY1feytws:"equipment-effects",yvabfuAO74pvH8hh:"equipment-effects",etJW0w4CiSFgMrWP:"equipment-effects",vOU4Yv2MyAfYBbmF:"equipment-effects",FbFl95WRpzrrijh3:"equipment-effects",iK6JeCsZwm5Vakks:"equipment-effects",P7Y7pO2ulZ5wBgxU:"equipment-effects",cg5qyeMJUh6b4fta:"equipment-effects",fbSFwwp60AuDDKpK:"equipment-effects","88kqcDmsoAEddzUt":"equipment-effects",lLP56tbG689TNKW5:"equipment-effects",PeiuJ951kkBPTCSM:"equipment-effects",G0lG7IIZnCZtYi6v:"equipment-effects",gDefAEEMXVVZgqXH:"equipment-effects",uXEp1rPU5fY4OiBf:"equipment-effects",Uadsb25G18pKdZ2e:"equipment-effects",viCX9fZzTWGuoO85:"equipment-effects",eeGWTG9ZAha4IIOY:"equipment-effects",ioGzmVSmMGXWWBYb:"equipment-effects",pAMyEbJzWBoYoGhs:"equipment-effects","7dLsA9PAb5ij7Bc6":"equipment-effects",NE7Fm5YnUhD4ySX3:"equipment-effects","8ersuvNJXX00XaIQ":"equipment-effects",EpNflrkmWzQ0lEb4:"equipment-effects",iEkH8BKLMUa2wxLX:"equipment-effects",bP40jr6wE6MCsRvY:"equipment-effects",eSIYyxi6uTKiP6W5:"equipment-effects",E4B02mJmNexQLa8F:"equipment-effects","3O5lvuX4VHqtpCkU":"equipment-effects",ah41XCrV4LFsVyzl:"equipment-effects",W3BCLbX6j1IqL0uB:"equipment-effects",zqKzWGLODgIvtiKf:"equipment-effects",lBMhT2W2raYMa8JS:"equipment-effects","5uK3fmGlfJrbWQz4":"equipment-effects",i0tm2ZHekp7rGGR3:"equipment-effects",Zb8RYgmzCI6fQE0o:"equipment-effects",QapoFh0tbUgMwSIB:"equipment-effects",UlalLihKzDxcOdXL:"equipment-effects",lO95TwgihBdTilAB:"equipment-effects","9PASRixhNM0ogqmG":"equipment-effects","7MgpgF8tOXOiDEwv":"equipment-effects","1S51uIRb9bnZtpFU":"equipment-effects","1nCwQErK6hpkNvfw":"feat-effects","5IGz4iheaiUWm5KR":"feat-effects",uFYvW3kFP9iyNfVX:"feat-effects",CgxYa0lrLUjS2ZhI:"feat-effects",nwkYZs6YwXYAJ4ps:"feat-effects",qUowHpn79Dpt1hVn:"feat-effects",RozqjLocahvQWERr:"feat-effects",tPKXLtDJ3bzJcXlv:"feat-effects",gYpy9XBPScIlY93p:"feat-effects",Im5JBInybWFbHEYS:"feat-effects",BCyGDKcplkJiSAKJ:"feat-effects",PMHwCrnh9W4sMu5b:"feat-effects",pf9yvKNg6jZLrE30:"feat-effects",eeAlh6edygcZIz9c:"feat-effects",b2kWJuCPj1rDMdwz:"feat-effects",UQ7vZgmfK0VSFS8A:"feature-effects",s1tulrmW6teTFjVd:"feature-effects",aKRo5TIhUtu0kyEr:"feature-effects",yfbP64r4a9e5oyli:"feature-effects",n1vhmOd7aNiuR3nk:"feature-effects",FNTTeJHiK6iOjrSq:"feature-effects","3gGBZHcUFsHLJeQH":"feature-effects",rJpkKaPRGaH0pLse:"feature-effects","9AUcoY48H5LrVZiF":"feature-effects",KVbS7AbhQdeuA0J6:"feature-effects","6fb15XuSV4TNuVAT":"feature-effects",vguxP8ukwVTWWWaA:"feature-effects",SVGW8CLKwixFlnTv:"feature-effects",ruRAfGJnik7lRavk:"feature-effects",uBJsxCzNhje8m8jj:"feature-effects","7BFd8A9HFrmg6vwL":"feature-effects",z3uyCMBddrPK5umr:"feature-effects",Nv70aqcQgCBpDYp8:"feature-effects",OqH6IaeOwRWkGPrk:"feature-effects",Lb4q2bBAgxamtix5:"feature-effects",Gqy7K6FnbLtwGpud:"spell-effects","41WThj17MZBXTO2X":"spell-effects",sPCWrhUHqlbGhYSD:"spell-effects","3qHKBDF7lrHw8jFK":"spell-effects",l9HRQggofFGIxEse:"spell-effects",beReeFroAx24hj83:"spell-effects",qkwb5DD3zmKwvbk0:"spell-effects",GnWkI3T3LYRlm3X8:"spell-effects",dWbg2gACxMkSnZag:"spell-effects",Jemq5UknGdMO7b73:"spell-effects",LXf1Cqi1zyo4DaLv:"spell-effects"}},33999:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration602UpdateDiehardFeat=void 0;const base_1=__webpack_require__(54310),_item_1=__webpack_require__(10843);class Migration602UpdateDiehardFeat extends base_1.MigrationBase{constructor(){super(),this.requiresFlush=!0,this.diehardPromise=fromUuid("Compendium.pf2e.feats-srd.I0BhPWqYf1bbzEYg")}async updateActor(actorData){const diehard=actorData.items.find((itemData=>"diehard"===itemData.system.slug&&"feat"===itemData.type));if("character"===actorData.type&&void 0!==diehard){actorData.system.attributes.dying.max=4;const diehardIndex=actorData.items.indexOf(diehard),newDiehard=await this.diehardPromise;if(!(newDiehard instanceof _item_1.FeatPF2e))throw Error("PF2E System | Expected item not found in Compendium");actorData.items.splice(diehardIndex,1,newDiehard.toObject())}}}exports.Migration602UpdateDiehardFeat=Migration602UpdateDiehardFeat,Migration602UpdateDiehardFeat.version=.602},66171:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration603ResetQuickRollDefault=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(54310);class Migration603ResetQuickRollDefault extends base_1.MigrationBase{async updateUser(userData){const flags=userData.flags;(0,_util_1.isObject)(flags.PF2e)&&(0,_util_1.isObject)(flags.PF2e.settings)&&"boolean"==typeof flags.PF2e.settings.quickD20roll&&(flags.PF2e.settings.quickD20roll=!1)}}exports.Migration603ResetQuickRollDefault=Migration603ResetQuickRollDefault,Migration603ResetQuickRollDefault.version=.603},92887:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration604FixClassItem=void 0;const base_1=__webpack_require__(54310);class Migration604FixClassItem extends base_1.MigrationBase{async updateItem(item){"class"===item.type&&(Array.isArray(item.system.ancestryFeatLevels)&&(item.system.ancestryFeatLevels={value:item.system.ancestryFeatLevels}),Array.isArray(item.system.classFeatLevels)&&(item.system.classFeatLevels={value:item.system.classFeatLevels}),Array.isArray(item.system.skillFeatLevels)&&(item.system.skillFeatLevels={value:item.system.skillFeatLevels}),Array.isArray(item.system.generalFeatLevels)&&(item.system.generalFeatLevels={value:item.system.generalFeatLevels}),Array.isArray(item.system.skillIncreaseLevels)&&(item.system.skillIncreaseLevels={value:item.system.skillIncreaseLevels}),Array.isArray(item.system.abilityBoostLevels)&&(item.system.abilityBoostLevels={value:item.system.abilityBoostLevels}))}}exports.Migration604FixClassItem=Migration604FixClassItem,Migration604FixClassItem.version=.604},19032:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration605CatchUpToTemplateJSON=void 0;const base_1=__webpack_require__(54310),helpers_1=__webpack_require__(44252);class Migration605CatchUpToTemplateJSON extends base_1.MigrationBase{addEffects(entityData){Array.isArray(entityData.effects)||(entityData.effects=[])}async updateActor(actorData){if(this.addEffects(actorData),"character"===actorData.type||"npc"===actorData.type){if("string"==typeof actorData.system.attributes.hp.max){const newMax=parseInt(actorData.system.attributes.hp.max,10);Number.isInteger(newMax)&&(actorData.system.attributes.hp.max=newMax)}if("string"==typeof actorData.system.attributes.hp.value){const newValue=parseInt(actorData.system.attributes.hp.value,10);Number.isInteger(newValue)&&(actorData.system.attributes.hp.value=newValue)}if("string"==typeof actorData.system.details.level.value){const newLevel=parseInt(actorData.system.details.level.value,10);Number.isInteger(newLevel)&&(actorData.system.details.level.value=newLevel)}"tempmax"in actorData.system.attributes.hp&&delete actorData.system.attributes.hp.tempmax,"special"in actorData.system.attributes.speed&&delete actorData.system.attributes.speed.special}}async updateItem(itemData,actorData){this.addEffects(itemData),!itemData.system.slug&&actorData&&(itemData.system.slug=null),Array.isArray(itemData.system.rules)||(itemData.system.rules=[]),itemData.system.traits&&!itemData.system.traits.custom&&(itemData.system.traits.custom="");const traits=itemData.system.traits;if(traits&&!traits.rarity&&(traits.rarity={value:"common"}),(0,helpers_1.isPhysicalData)(itemData)&&!itemData.system.identification){itemData.system.identification.status="identified"}"spell"!==itemData.type||itemData.system.hasCounteractCheck||(itemData.system.hasCounteractCheck={value:!1}),"lore"===itemData.type&&"featType"in itemData.system&&delete itemData.system.featType,"action"===itemData.type&&"skill_requirements"in itemData.system&&delete itemData.system.skill_requirements,"action"===itemData.type&&"skill_requirement"in itemData.system&&delete itemData.system.skill_requirement}}exports.Migration605CatchUpToTemplateJSON=Migration605CatchUpToTemplateJSON,Migration605CatchUpToTemplateJSON.version=.605},97591:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration606SignatureSpells=void 0;const base_1=__webpack_require__(54310);class Migration606SignatureSpells extends base_1.MigrationBase{async updateItem(item){if("spellcastingEntry"===item.type){const data=item.system;data.signatureSpells||(data.signatureSpells={value:[]})}}}exports.Migration606SignatureSpells=Migration606SignatureSpells,Migration606SignatureSpells.version=.606},35650:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration607MeleeItemDamageRolls=void 0;const base_1=__webpack_require__(54310);class Migration607MeleeItemDamageRolls extends base_1.MigrationBase{async updateItem(itemData){if("melee"===itemData.type&&Array.isArray(itemData.system.damageRolls)){const damageRolls={};itemData.system.damageRolls.forEach((roll=>{const key=randomID(20);damageRolls[key]=roll})),itemData.system.damageRolls=damageRolls}}}exports.Migration607MeleeItemDamageRolls=Migration607MeleeItemDamageRolls,Migration607MeleeItemDamageRolls.version=.607},88146:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration608DeletePersistedKits=void 0;const base_1=__webpack_require__(54310);class Migration608DeletePersistedKits extends base_1.MigrationBase{async updateItem(itemData,actorData){if(actorData&&"kit"===itemData.type){const index=actorData.items.indexOf(itemData);actorData.items.splice(index,1)}}}exports.Migration608DeletePersistedKits=Migration608DeletePersistedKits,Migration608DeletePersistedKits.version=.608},65596:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration609LootActorTraits=void 0;const base_1=__webpack_require__(54310);class Migration609LootActorTraits extends base_1.MigrationBase{async updateActor(source){var _a;if("loot"===source.type&&(null===(_a=source.system.traits)||void 0===_a?void 0:_a.traits)){const systemData=source.system;systemData.traits||(source.system.traits.rarity,systemData.traits={rarity:{value:"common"},size:{value:"med"},traits:{value:[]},di:{custom:"",value:[]},dr:[],dv:[],ci:[]})}}}exports.Migration609LootActorTraits=Migration609LootActorTraits,Migration609LootActorTraits.version=.609},83512:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration610SetHeritageFeatType=void 0;const base_1=__webpack_require__(54310);class Migration610SetHeritageFeatType extends base_1.MigrationBase{async updateItem(itemSource){var _a;const itemTraits=null===(_a=itemSource.system.traits)||void 0===_a?void 0:_a.value;if("feat"===itemSource.type&&(null==itemTraits?void 0:itemTraits.includes("heritage"))){itemSource.system.featType.value="heritage";const index=itemTraits.indexOf("heritage");itemTraits.splice(index,1)}}}exports.Migration610SetHeritageFeatType=Migration610SetHeritageFeatType,Migration610SetHeritageFeatType.version=.61},39127:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration611UpdateToughnessMountainsStoutness=void 0;const base_1=__webpack_require__(54310),_item_1=__webpack_require__(10843),_util_1=__webpack_require__(6945);class Migration611UpdateToughnessMountainsStoutness extends base_1.MigrationBase{constructor(){super(),this.requiresFlush=!0,this.featSlugs=["mountains-stoutness","mountain-s-stoutness","toughness"],this.featsPromise=game.packs.get("pf2e.feats-srd").getDocuments()}async updateActor(actorData){if("character"!==actorData.type)return;const oldFeatsData=actorData.items.filter((itemData=>{var _a;return this.featSlugs.includes(null!==(_a=itemData.system.slug)&&void 0!==_a?_a:"")&&"feat"===itemData.type}));for(const oldFeatData of oldFeatsData){"mountain-s-stoutness"===oldFeatData.system.slug&&(oldFeatData.system.slug="mountains-stoutness");const newFeat="toughness"===oldFeatData.system.slug?(await this.featsPromise).find((feat=>"toughness"===feat.slug)):(await this.featsPromise).find((feat=>"mountains-stoutness"===feat.slug));if(!(newFeat instanceof _item_1.FeatPF2e))throw(0,_util_1.ErrorPF2e)("Expected item not found in Compendium");newFeat._source.system.location=oldFeatData.system.location;const oldFeatIndex=actorData.items.indexOf(oldFeatData);actorData.items.splice(oldFeatIndex,1,newFeat.toObject())}}}exports.Migration611UpdateToughnessMountainsStoutness=Migration611UpdateToughnessMountainsStoutness,Migration611UpdateToughnessMountainsStoutness.version=.611},25483:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration612NormalizeRarities=void 0;const base_1=__webpack_require__(54310);class Migration612NormalizeRarities extends base_1.MigrationBase{async updateActor(actorData){if("familiar"===actorData.type)return;const traitsAndOtherMiscellany=actorData.system.traits;"rarity"in traitsAndOtherMiscellany||(traitsAndOtherMiscellany.rarity={value:"common"});const rarities=["common","uncommon","rare","unique"];for(const rarity of rarities){const{traits}=traitsAndOtherMiscellany;if(null==traits?void 0:traits.value.includes(rarity)){const index=traits.value.indexOf(rarity);traits.value.splice(index,1),traitsAndOtherMiscellany.rarity={value:rarity}}}}}exports.Migration612NormalizeRarities=Migration612NormalizeRarities,Migration612NormalizeRarities.version=.612},90736:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration613RemoveAmmoCharges=void 0;const base_1=__webpack_require__(54310);class Migration613RemoveAmmoCharges extends base_1.MigrationBase{async updateItem(itemData){"consumable"===itemData.type&&"ammo"===itemData.system.consumableType.value&&(itemData.system.charges.value=0,itemData.system.charges.max=0)}}exports.Migration613RemoveAmmoCharges=Migration613RemoveAmmoCharges,Migration613RemoveAmmoCharges.version=.613},34788:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration614NumifyMeleeBonuses=void 0;const base_1=__webpack_require__(54310);class Migration614NumifyMeleeBonuses extends base_1.MigrationBase{async updateItem(itemData){"melee"===itemData.type&&(itemData.system.bonus={value:Number(itemData.system.bonus.value)})}}exports.Migration614NumifyMeleeBonuses=Migration614NumifyMeleeBonuses,Migration614NumifyMeleeBonuses.version=.614},69506:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration615RemoveInstinctTrait=void 0;const base_1=__webpack_require__(54310);class Migration615RemoveInstinctTrait extends base_1.MigrationBase{async updateItem(itemData){const traits=itemData.system.traits;traits&&("string"==typeof traits.value?traits.value=[]:traits.value=traits.value.filter((trait=>"instinct"!==trait)))}}exports.Migration615RemoveInstinctTrait=Migration615RemoveInstinctTrait,Migration615RemoveInstinctTrait.version=.615},7115:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration616MigrateFeatPrerequisites=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(54310);class Migration616MigrateFeatPrerequisites extends base_1.MigrationBase{async updateItem(source){if("feat"===source.type){const update=[],prerequisites=source.system.prerequisites;if(prerequisites.value){if("string"==typeof prerequisites.value)update.push({value:prerequisites.value});else if(Array.isArray(prerequisites.value))for(const p of prerequisites.value)p&&update.push({value:(0,_util_1.isObject)(p)&&"string"==typeof p.value?p.value:String(p)})}else if(Array.isArray(prerequisites))for(const p of prerequisites)p&&update.push({value:(null==p?void 0:p.value)?p.value:p});source.system.prerequisites={value:update}}}}exports.Migration616MigrateFeatPrerequisites=Migration616MigrateFeatPrerequisites,Migration616MigrateFeatPrerequisites.version=.616},39281:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration617FixUserFlags=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(54310);class Migration617FixUserFlags extends base_1.MigrationBase{async updateUser(userData){var _a,_b,_c,_d,_e;const flags=userData.flags,settings=null===(_a=flags.PF2e)||void 0===_a?void 0:_a.settings;if((0,_util_1.isObject)(settings)&&"string"==typeof settings.color){const uiTheme=null!==(_b=settings.color)&&void 0!==_b?_b:"blue",showRollDialogs=!settings.quickD20roll;null!==(_c=flags.pf2e)&&void 0!==_c||(flags.pf2e={}),flags.pf2e.settings={uiTheme,showEffectPanel:null===(_e=null===(_d=flags.pf2e)||void 0===_d?void 0:_d.showEffectPanel)||void 0===_e||_e,showRollDialogs},delete flags.PF2e,flags["-=PF2e"]=null}}}exports.Migration617FixUserFlags=Migration617FixUserFlags,Migration617FixUserFlags.version=.617},14740:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration618MigrateItemImagePaths=void 0;const base_1=__webpack_require__(54310);class Migration618MigrateItemImagePaths extends base_1.MigrationBase{constructor(){super(...arguments),this.IMAGE_PATHS={"systems/pf2e/icons/equipment/weapons/blowgun.png":"systems/pf2e/icons/equipment/weapons/blowgun.jpg","systems/pf2e/icons/equipment/weapons/trident.png":"systems/pf2e/icons/equipment/weapons/trident.jpg","systems/pf2e/icons/equipment/weapons/longsword.png":"systems/pf2e/icons/equipment/weapons/longsword.jpg","systems/pf2e/icons/equipment/weapons/composite-longbow.png":"systems/pf2e/icons/equipment/weapons/composite-longbow.jpg","systems/pf2e/icons/equipment/weapons/composite-shortbow.png":"systems/pf2e/icons/equipment/weapons/composite-shortbow.jpg","systems/pf2e/icons/equipment/weapons/dagger.png":"systems/pf2e/icons/equipment/weapons/dagger.jpg","systems/pf2e/icons/equipment/weapons/katar.png":"systems/pf2e/icons/equipment/weapons/katar.jpg","systems/pf2e/icons/equipment/weapons/kukri.png":"systems/pf2e/icons/equipment/weapons/kukri.jpg","systems/pf2e/icons/equipment/weapons/shortbow.png":"systems/pf2e/icons/equipment/weapons/shortbow.jpg","systems/pf2e/icons/equipment/weapons/scimitar.png":"systems/pf2e/icons/equipment/weapons/scimitar.jpg","systems/pf2e/icons/equipment/weapons/hatchet.png":"systems/pf2e/icons/equipment/weapons/hatchet.jpg","systems/pf2e/icons/equipment/weapons/halfling-sling-staff.png":"systems/pf2e/icons/equipment/weapons/halfling-sling-staff.jpg","systems/pf2e/icons/equipment/weapons/halberd.png":"systems/pf2e/icons/equipment/weapons/halberd.jpg","systems/pf2e/icons/equipment/weapons/shield-spikes.png":"systems/pf2e/icons/equipment/weapons/shield-spikes.jpg","systems/pf2e/icons/equipment/weapons/light-mace.jpg":"systems/pf2e/icons/equipment/weapons/light-mace.jpg","systems/pf2e/icons/equipment/weapons/morningstar.png":"systems/pf2e/icons/equipment/weapons/morningstar.jpg","systems/pf2e/icons/equipment/weapons/sling.png":"systems/pf2e/icons/equipment/weapons/sling.jpg","systems/pf2e/icons/equipment/weapons/main-gauche.png":"systems/pf2e/icons/equipment/weapons/main-gauche.jpg","systems/pf2e/icons/equipment/weapons/bastard-sword.png":"systems/pf2e/icons/equipment/weapons/bastard-sword.jpg","systems/pf2e/icons/equipment/weapons/spear.png":"systems/pf2e/icons/equipment/weapons/spear.jpg","systems/pf2e/icons/equipment/weapons/staff.png":"systems/pf2e/icons/equipment/weapons/staff.jpg","systems/pf2e/icons/equipment/weapons/katana.png":"systems/pf2e/icons/equipment/weapons/katana.jpg","systems/pf2e/icons/equipment/weapons/elven-curve-blade.png":"systems/pf2e/icons/equipment/weapons/elven-curve-blade.jpg","systems/pf2e/icons/equipment/weapons/bo-staff.png":"systems/pf2e/icons/equipment/weapons/bo-staff.jpg","systems/pf2e/icons/equipment/weapons/clan-dagger.png":"systems/pf2e/icons/equipment/weapons/clan-dagger.jpg","systems/pf2e/icons/equipment/weapons/dogslicer.png":"systems/pf2e/icons/equipment/weapons/dogslicer.jpg","systems/pf2e/icons/equipment/weapons/falchion.png":"systems/pf2e/icons/equipment/weapons/falchion.jpg","systems/pf2e/icons/equipment/weapons/fist.png":"systems/pf2e/icons/equipment/weapons/fist.jpg","systems/pf2e/icons/equipment/weapons/gauntlet.png":"systems/pf2e/icons/equipment/weapons/gauntlet.jpg","systems/pf2e/icons/equipment/weapons/gnome-hooked-hammer.png":"systems/pf2e/icons/equipment/weapons/gnome-hooked-hammer.jpg","systems/pf2e/icons/equipment/weapons/greatpick.png":"systems/pf2e/icons/equipment/weapons/greatpick.jpg","systems/pf2e/icons/equipment/weapons/guisarme.png":"systems/pf2e/icons/equipment/weapons/guisarme.jpg","systems/pf2e/icons/equipment/weapons/horsechopper.png":"systems/pf2e/icons/equipment/weapons/horsechopper.jpg","systems/pf2e/icons/equipment/weapons/lance.png":"systems/pf2e/icons/equipment/weapons/lance.jpg","systems/pf2e/icons/equipment/weapons/maul.png":"systems/pf2e/icons/equipment/weapons/maul.jpg","systems/pf2e/icons/equipment/weapons/pick.png":"systems/pf2e/icons/equipment/weapons/pick.jpg","systems/pf2e/icons/equipment/weapons/ranseur.png":"systems/pf2e/icons/equipment/weapons/ranseur.jpg","systems/pf2e/icons/equipment/weapons/sai.png":"systems/pf2e/icons/equipment/weapons/sai.jpg","systems/pf2e/icons/equipment/weapons/sawtooth-saber.png":"systems/pf2e/icons/equipment/weapons/sawtooth-saber.jpg","systems/pf2e/icons/equipment/weapons/shield-bash.png":"systems/pf2e/icons/equipment/weapons/shield-bash.jpg","systems/pf2e/icons/equipment/weapons/shield-boss.png":"systems/pf2e/icons/equipment/weapons/shield-boss.jpg","systems/pf2e/icons/equipment/weapons/shuriken.png":"systems/pf2e/icons/equipment/weapons/shuriken.jpg","systems/pf2e/icons/equipment/weapons/spiked-gauntlet.png":"systems/pf2e/icons/equipment/weapons/spiked-gauntlet.jpg","systems/pf2e/icons/equipment/weapons/broom.png":"systems/pf2e/icons/equipment/held-items/broom-of-flying.jpg","systems/pf2e/icons/equipment/weapons/cutlass.png":"systems/pf2e/icons/equipment/weapons/scimitar.jpg","systems/pf2e/icons/equipment/weapons/scalpel.png":"systems/pf2e/icons/equipment/weapons/war-razor.jpg","systems/pf2e/icons/equipment/weapons/cane.png":"systems/pf2e/icons/equipment/weapons/cane.jpg"}}async updateItem(itemData){var _a;itemData.img=null!==(_a=this.IMAGE_PATHS[itemData.img])&&void 0!==_a?_a:itemData.img}}exports.Migration618MigrateItemImagePaths=Migration618MigrateItemImagePaths,Migration618MigrateItemImagePaths.version=.618},91944:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration619TraditionLowercaseAndRemoveWandScroll=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(54310),LEGIT_TRADITIONS=["arcane","divine","occult","primal","focus","ritual","halcyon",""];class Migration619TraditionLowercaseAndRemoveWandScroll extends base_1.MigrationBase{async updateItem(item,actorData){if(!actorData||"spellcastingEntry"!==item.type)return;const tradition=item.system.tradition;if(tradition.value=tradition.value.toLowerCase(),(0,_util_1.tupleHasValue)(LEGIT_TRADITIONS,item.system.tradition.value))return;const highestTradition=actorData.items.filter((itemData=>"spellcastingEntry"===itemData.type)).reduce(((prev,current)=>{var _a;if((0,_util_1.tupleHasValue)(LEGIT_TRADITIONS,current.system.tradition.value)){const value=null!==(_a=current.system.spelldc.value)&&void 0!==_a?_a:0;if(value>prev.value){return{name:current.system.tradition.value,value}}}return prev}),{name:"arcane",value:0});tradition.value=highestTradition.name}}exports.Migration619TraditionLowercaseAndRemoveWandScroll=Migration619TraditionLowercaseAndRemoveWandScroll,Migration619TraditionLowercaseAndRemoveWandScroll.version=.619},58708:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration620RenameToWebp=void 0;const base_1=__webpack_require__(54310);class Migration620RenameToWebp extends base_1.MigrationBase{constructor(){super(...arguments),this.regexp=/(\/?systems\/pf2e\/[^"]+)\.(?:jpg|png)\b/}renameToWebP(imgPath){return"string"==typeof imgPath&&this.regexp.test(imgPath)?imgPath.replace(this.regexp,"$1.webp"):null==imgPath?void 0:imgPath.replace("icons/svg/mystery-man.svg","systems/pf2e/icons/default-icons/mystery-man.svg")}isABCK(itemData){return["ancestry","background","class","kit"].includes(itemData.type)}async updateActor(actorData){var _a,_b;actorData.img=this.renameToWebP(actorData.img),"string"==typeof(null===(_a=actorData.prototypeToken)||void 0===_a?void 0:_a.texture.src)&&(actorData.prototypeToken.texture.src=this.renameToWebP(actorData.prototypeToken.texture.src));for(const effect of null!==(_b=actorData.effects)&&void 0!==_b?_b:[])effect.icon=this.renameToWebP(effect.icon);if("character"===actorData.type){const details=actorData.system.details;details.deity&&(details.deity.image=this.renameToWebP(details.deity.image))}}async updateItem(itemData){var _a,_b;itemData.img=this.renameToWebP(itemData.img);for(const effect of null!==(_a=itemData.effects)&&void 0!==_a?_a:[])effect.icon=this.renameToWebP(effect.icon);if("condition"===itemData.type&&(null===(_b=itemData.flags.pf2e)||void 0===_b?void 0:_b.condition)&&(itemData.system.hud.img.value=this.renameToWebP(itemData.system.hud.img.value)),this.isABCK(itemData)){const embedData=itemData.system.items,embeds=Object.values(embedData).filter((maybeEmbed=>!!maybeEmbed));for(const embed of embeds)if(embed.img=this.renameToWebP(embed.img),"items"in embed&&embed.items){const deepEmbeds=Object.values(embed.items).filter((maybeDeepEmbed=>!!maybeDeepEmbed));for(const deepEmbed of deepEmbeds)deepEmbed.img=this.renameToWebP(deepEmbed.img)}}}async updateMacro(macroData){macroData.img=this.renameToWebP(macroData.img)}async updateTable(tableData){tableData.img=this.renameToWebP(tableData.img);for(const result of tableData.results)result.img=this.renameToWebP(result.img)}async updateToken(tokenData){tokenData.texture.src=this.renameToWebP(tokenData.texture.src),tokenData.effects=tokenData.effects.filter((texture=>!this.regexp.test(texture)))}async updateUser(userData){userData.img=this.renameToWebP(userData.img)}}exports.Migration620RenameToWebp=Migration620RenameToWebp,Migration620RenameToWebp.version=.62},42712:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration621RemoveConfigSpellSchools=void 0;const values_1=__webpack_require__(12759),_util_1=__webpack_require__(6945),base_1=__webpack_require__(54310);class Migration621RemoveConfigSpellSchools extends base_1.MigrationBase{constructor(){super(...arguments),this.KEY_MAP={abj:"abjuration",con:"conjuration",div:"divination",enc:"enchantment",evo:"evocation",ill:"illusion",nec:"necromancy",trs:"transmutation"}}reassignSchool(abbreviation){return(0,_util_1.objectHasKey)(this.KEY_MAP,abbreviation)?this.KEY_MAP[abbreviation]:(0,_util_1.setHasElement)(values_1.MAGIC_SCHOOLS,abbreviation)?abbreviation:this.KEY_MAP.evo}async updateItem(itemData){var _a;if("spell"===itemData.type){const school=null!==(_a=itemData.system.school)&&void 0!==_a?_a:{value:"evocation"};school.value=this.reassignSchool(school.value)}}}exports.Migration621RemoveConfigSpellSchools=Migration621RemoveConfigSpellSchools,Migration621RemoveConfigSpellSchools.version=.621},63267:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration623NumifyPotencyRunes=void 0;const base_1=__webpack_require__(54310);class Migration623NumifyPotencyRunes extends base_1.MigrationBase{async updateItem(itemData){if("weapon"!==itemData.type&&"armor"!==itemData.type)return;const potencyRune=itemData.system.potencyRune;potencyRune?potencyRune.value=Number(itemData.system.potencyRune.value)||null:itemData.system.potencyRune={value:null}}}exports.Migration623NumifyPotencyRunes=Migration623NumifyPotencyRunes,Migration623NumifyPotencyRunes.version=.623},24636:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration624RemoveTokenEffectIconFlags=void 0;const base_1=__webpack_require__(54310);class Migration624RemoveTokenEffectIconFlags extends base_1.MigrationBase{async updateActor(actorData){var _a,_b;const flags=actorData.flags;(null===(_b=null===(_a=flags.pf2e)||void 0===_a?void 0:_a.token)||void 0===_b?void 0:_b.effects)&&(delete flags.pf2e.token.effects,"game"in globalThis&&(flags.pf2e.token["-=effects"]=null))}async updateToken(tokenData){var _a,_b,_c;const flags=null!==(_a=tokenData.actorData.flags)&&void 0!==_a?_a:{};(null===(_c=null===(_b=flags.pf2e)||void 0===_b?void 0:_b.token)||void 0===_c?void 0:_c.effects)&&(delete flags.pf2e.token.effects,"game"in globalThis&&(flags.pf2e.token["-=effects"]=null))}}exports.Migration624RemoveTokenEffectIconFlags=Migration624RemoveTokenEffectIconFlags,Migration624RemoveTokenEffectIconFlags.version=.624},7715:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration625EnsurePresenceOfSaves=void 0;const base_1=__webpack_require__(54310);class Migration625EnsurePresenceOfSaves extends base_1.MigrationBase{async updateActor(actorData){var _a;if("npc"!==actorData.type)return;const saves=actorData.system.saves;for(const key of["fortitude","reflex","will"])null!==(_a=saves[key])&&void 0!==_a||(saves[key]={value:0,saveDetail:""}),"number"!=typeof saves[key].value&&(saves[key].value=Number(saves[key].value)||0),"string"!=typeof saves[key].saveDetail&&(saves[key].saveDetail="")}}exports.Migration625EnsurePresenceOfSaves=Migration625EnsurePresenceOfSaves,Migration625EnsurePresenceOfSaves.version=.625},4099:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration626UpdateSpellCategory=void 0;const base_1=__webpack_require__(54310);class Migration626UpdateSpellCategory extends base_1.MigrationBase{async updateItem(source){var _a,_b,_c,_d;if("spell"!==source.type)return;const systemData=source.system,traditions=systemData.traditions,isFocus=traditions.value.includes("focus"),isRitual=traditions.value.includes("ritual");if("string"==typeof traditions.value&&(traditions.value=[]),systemData.spellCategorie||systemData.spellCategory){const currentCategory=null!==(_d=null!==(_b=null===(_a=systemData.spellCategorie)||void 0===_a?void 0:_a.value)&&void 0!==_b?_b:null===(_c=systemData.spellCategory)||void 0===_c?void 0:_c.value)&&void 0!==_d?_d:"";source.system.category={value:isFocus?"focus":isRitual?"ritual":""===currentCategory?"spell":currentCategory},delete systemData.spellCategorie,delete systemData.spellCategory,"game"in globalThis&&(systemData["-=spellCategorie"]=null,systemData["-=spellCategory"]=null)}["focus","ritual"].includes(source.system.spellType.value)&&(source.system.spellType.value="utility"),traditions.value=traditions.value.filter((tradition=>!["focus","ritual"].includes(tradition)))}}exports.Migration626UpdateSpellCategory=Migration626UpdateSpellCategory,Migration626UpdateSpellCategory.version=.626},63023:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration627LowerCaseSpellSaves=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(54310),AllSaves=["fortitude","reflex","will"];class Migration627LowerCaseSpellSaves extends base_1.MigrationBase{async updateItem(itemData){var _a,_b;if("spell"!==itemData.type)return;const saveType=null!==(_b=null===(_a=itemData.system.save.value)||void 0===_a?void 0:_a.toLowerCase())&&void 0!==_b?_b:"";(0,_util_1.tupleHasValue)(AllSaves,saveType)?itemData.system.save.value=saveType:itemData.system.save.value=""}}exports.Migration627LowerCaseSpellSaves=Migration627LowerCaseSpellSaves,Migration627LowerCaseSpellSaves.version=.627},19691:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration629SetBaseItems=void 0;const base_1=__webpack_require__(54310),_util_1=__webpack_require__(6945),helpers_1=__webpack_require__(44252);class Migration629SetBaseItems extends base_1.MigrationBase{constructor(){super(...arguments),this.BASE_ARMORS=["explorers-clothing","padded-armor","leather-armor","studded-leather-armor","chain-shirt","hide-armor","scale-mail","chain-mail","breastplate","splint-mail","half-plate","full-plate","hellknight-plate"],this.MAGIC_ARMOR_TO_BASE={"breastplate-of-command-greater":"breastplate","breastplate-of-command":"breastplate","celestial-armor":"chain-mail","demon-armor":"full-plate",dragonplate:"full-plate","electric-eelskin":"leather-armor","forgotten-shell":"full-plate","ghoul-hide":"hide-armor","glorious-plate":"full-plate","impenetrable-scale":"scale-mail","jerkin-of-liberation":"studded-leather-armor","mail-of-luck":"splint-mail","moonlit-chain":"chain-shirt","noxious-jerkin":"padded-armor","numerian-steel-breastplate":"breastplate","plate-armor-of-the-deep":"full-plate","rhino-hide":"hide-armor","spangled-riders-suit":"studded-leather-armor","victory-plate":"full-plate"},this.BASE_WEAPONS=["adze","aklys","alchemical-bomb","alchemical-crossbow","aldori-dueling-sword","arrows","bastard-sword","battle-axe","battle-lute","bladed-diabolo","bladed-hoop","bladed-scarf","blowgun-darts","blowgun","bo-staff","boarding-axe","boarding-pike","bola","bolts","buugeng","clan-dagger","claw","claw-blade","club","combat-grapnel","composite-longbow","composite-shortbow","crossbow","dagger","daikyu","dart","dogslicer","dwarven-war-axe","elven-curve-blade","exquisite-sword-cane-sheath","exquisite-sword-cane","falchion","fangwire","fauchard","fighting-fan","filchers-fork","fire-poi","fist","flail","gaff","gauntlet","gill-hook","glaive","gnome-flickmace","gnome-hooked-hammer","greataxe","greatclub","greatpick","greatsword","guisarme","halberd","halfling-sling-staff","hand-adze","hand-crossbow","hatchet","heavy-crossbow","horsechopper","javelin","jaws","juggling-club","kama","katana","katar","khakkara","khopesh","kukri","lance","light-hammer","light-mace","light-pick","longbow","longspear","longsword","mace","machete","main-gauche","mambele","maul","meteor-hammer","monkeys-fist","morningstar","naginata","nightstick","nine-ring-sword","nunchaku","ogre-hook","orc-knuckle-dagger","orc-necksplitter","pick","poi","polytool","ranseur","rapier","rhoka-sword","rungu","sai","sap","sawtooth-saber","scimitar","scorpion-whip","scourge","scythe","shears","shield-bash","shield-boss","shield-spikes","shortbow","shortsword","shuriken","sickle","sling-bullets","sling","spear","spiked-chain","spiked-gauntlet","staff","starknife","stiletto-pen","sword-cane","tamchal-chakram","taw-launcher","tekko-kagi","temple-sword","tengu-gale-blade","throwing-knife","thunder-sling","tricky-pick","trident","urumi","wakizashi","war-flail","war-razor","warhammer","whip-claw","whip","wish-blade","wish-knife","wooden-taws"]}async updateItem(itemData){var _a;if(!(0,helpers_1.isPhysicalData)(itemData))return;const systemData=itemData.system;!systemData.slug||"armor"!==itemData.type&&"weapon"!==itemData.type||("armor"===itemData.type?("hide"!==systemData.slug&&"hide"!==(0,_util_1.sluggify)(itemData.name)||(systemData.slug="hide-armor"),this.BASE_ARMORS.includes(null!==(_a=systemData.slug)&&void 0!==_a?_a:"")?systemData.baseItem=systemData.slug:systemData.slug in this.MAGIC_ARMOR_TO_BASE&&(systemData.baseItem=this.MAGIC_ARMOR_TO_BASE[systemData.slug])):"weapon"===itemData.type&&(this.BASE_WEAPONS.includes(systemData.slug)&&(systemData.baseItem=systemData.slug),"cinderclaw-gauntlet"===systemData.slug&&(systemData.baseItem="spiked-gauntlet")))}}exports.Migration629SetBaseItems=Migration629SetBaseItems,Migration629SetBaseItems.version=.629},8004:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration630FixTalismanSpelling=void 0;const base_1=__webpack_require__(54310);class Migration630FixTalismanSpelling extends base_1.MigrationBase{async updateItem(itemData){if("consumable"===itemData.type){const consumableType=itemData.system.consumableType;"talasman"===consumableType.value&&(consumableType.value="talisman")}}}exports.Migration630FixTalismanSpelling=Migration630FixTalismanSpelling,Migration630FixTalismanSpelling.version=.63},21962:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration631FixSenseRuleElementSelector=void 0;const base_1=__webpack_require__(54310);class Migration631FixSenseRuleElementSelector extends base_1.MigrationBase{constructor(){super(...arguments),this.SENSE_SELECTOR_CONVERSION={lowlightvision:"lowLightVision",Tremorsense:"tremorsense"}}async updateItem(source){var _a;const rules=source.system.rules;for(const rule of rules)"PF2E.RuleElement.Sense"===rule.key&&"string"==typeof rule.selector&&(rule.selector=null!==(_a=this.SENSE_SELECTOR_CONVERSION[rule.selector])&&void 0!==_a?_a:rule.selector)}}exports.Migration631FixSenseRuleElementSelector=Migration631FixSenseRuleElementSelector,Migration631FixSenseRuleElementSelector.version=.631},34441:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration632DeleteOrphanedSpells=void 0;const base_1=__webpack_require__(54310);class Migration632DeleteOrphanedSpells extends base_1.MigrationBase{constructor(){super(...arguments),this.requiresFlush=!0}async updateActor(actorData){const spells=actorData.items.filter((itemData=>"spell"===itemData.type)),entries=actorData.items.filter((itemData=>"spellcastingEntry"===itemData.type)),orphans=spells.filter((spellData=>!entries.some((entryData=>entryData._id===spellData.system.location.value))));actorData.items=actorData.items.filter((itemData=>!orphans.some((orphan=>orphan._id===itemData._id))))}}exports.Migration632DeleteOrphanedSpells=Migration632DeleteOrphanedSpells,Migration632DeleteOrphanedSpells.version=.632},76937:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration633DeleteUnidentifiedTraits=void 0;const helpers_1=__webpack_require__(44252),base_1=__webpack_require__(54310);class Migration633DeleteUnidentifiedTraits extends base_1.MigrationBase{async updateItem(itemData){var _a,_b;if("melee"===itemData.type){const systemData=itemData.system;systemData.identification&&("game"in globalThis?itemData["system.-=identification"]=null:delete systemData.identification)}if(!(0,helpers_1.isPhysicalData)(itemData))return;const unidentifiedDataData=null===(_b=null===(_a=itemData.system.identification)||void 0===_a?void 0:_a.unidentified)||void 0===_b?void 0:_b.data;(null==unidentifiedDataData?void 0:unidentifiedDataData.traits)&&("game"in globalThis?itemData["system.identification.unidentified.data.-=traits"]=null:delete unidentifiedDataData.traits)}}exports.Migration633DeleteUnidentifiedTraits=Migration633DeleteUnidentifiedTraits,Migration633DeleteUnidentifiedTraits.version=.633},98489:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration634PurgeMartialItems=void 0;const base_1=__webpack_require__(54310);class Migration634PurgeMartialItems extends base_1.MigrationBase{async updateActor(actorData){const martialIds=actorData.items.filter((itemData=>"martial"===itemData.type)).map((itemData=>itemData._id)),martialItemWeapons=actorData.items.filter((itemData=>{var _a,_b;if("weapon"!==itemData.type)return!1;const systemData=itemData.system;return martialIds.includes(null!==(_b=null===(_a=systemData.weaponType)||void 0===_a?void 0:_a.value)&&void 0!==_b?_b:"")}));for(const weaponData of martialItemWeapons)weaponData.data.category="simple";actorData.items=actorData.items.filter((itemData=>"martial"!==itemData.type))}}exports.Migration634PurgeMartialItems=Migration634PurgeMartialItems,Migration634PurgeMartialItems.version=.634},69222:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration635NumifyACAndQuantity=void 0;const helpers_1=__webpack_require__(44252),base_1=__webpack_require__(54310);class Migration635NumifyACAndQuantity extends base_1.MigrationBase{async updateActor(actorData){"hazard"!==actorData.type&&"npc"!==actorData.type&&"vehicle"!==actorData.type||(actorData.system.attributes.ac.value=Number(actorData.system.attributes.ac.value))}async updateItem(itemData){if((0,helpers_1.isPhysicalData)(itemData)){const quantity=itemData.system.quantity||{value:0};quantity instanceof Object&&(quantity.value=Number(quantity.value))}}}exports.Migration635NumifyACAndQuantity=Migration635NumifyACAndQuantity,Migration635NumifyACAndQuantity.version=.635},95184:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration636NumifyArmorData=void 0;const base_1=__webpack_require__(54310);class Migration636NumifyArmorData extends base_1.MigrationBase{async updateItem(itemData){if("armor"!==itemData.type)return;const systemData=itemData.system;systemData.armor.value=Number(systemData.armor.value)||0,systemData.check.value=Number(systemData.check.value)||0,systemData.dex.value=Number(systemData.dex.value)||0,systemData.strength.value=Number(systemData.strength.value)||0,"string"==typeof systemData.speed.value&&(systemData.speed.value=parseInt(systemData.speed.value,10)||0)}}exports.Migration636NumifyArmorData=Migration636NumifyArmorData,Migration636NumifyArmorData.version=.636},87245:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration637CleanMeleeItems=void 0;const base_1=__webpack_require__(54310),meleeKeys=new Set(["description","source","traits","rules","slug","weaponType","attack","damageRolls","bonus","attackEffects"]);class Migration637CleanMeleeItems extends base_1.MigrationBase{async updateItem(itemData){if("melee"!==itemData.type)return;const systemData=itemData.system;for(const key of Object.keys(systemData))meleeKeys.has(key)||delete systemData[key]}}exports.Migration637CleanMeleeItems=Migration637CleanMeleeItems},75650:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration638SpellComponents=void 0;const base_1=__webpack_require__(54310),validComponents=["material","somatic","verbal"];class Migration638SpellComponents extends base_1.MigrationBase{async updateItem(itemData){var _a;if("spell"!==itemData.type)return;const components=itemData.system.components,oldComponents=new Set(null===(_a=components.value)||void 0===_a?void 0:_a.split(",").map((v=>v.trim().toLowerCase())));for(const component of validComponents)components[component]=components[component]||oldComponents.has(component);delete components.value,"game"in globalThis&&(components["-=value"]=null)}}exports.Migration638SpellComponents=Migration638SpellComponents,Migration638SpellComponents.version=.638},2769:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration639NormalizeLevelAndPrice=void 0;const helpers_1=__webpack_require__(44252),helpers_2=__webpack_require__(73715),_util_1=__webpack_require__(6945),base_1=__webpack_require__(54310);class Migration639NormalizeLevelAndPrice extends base_1.MigrationBase{constructor(){super(...arguments),this.coinSlugs=new Set(["platinum-pieces","gold-pieces","silver-pieces","copper-pieces"])}async updateItem(itemData){var _a;if("level"in itemData.system&&(itemData.system.level.value=Number(itemData.system.level.value)||0),!(0,helpers_1.isPhysicalData)(itemData)||this.coinSlugs.has(null!==(_a=itemData.system.slug)&&void 0!==_a?_a:""))return;const system=itemData.system,price=system.price;if("string"==typeof price.value||!(0,_util_1.isObject)(price.value))if(price.value?price.value=price.value.trim():price.value="0 gp",/^[0-9]+$/.test(price.value))price.value=`${price.value} gp`;else{const quantity=system.quantity,priceValue=price.value;helpers_2.CoinsPF2e.fromString(priceValue,quantity).copperValue&&(price.value="0 gp")}}}exports.Migration639NormalizeLevelAndPrice=Migration639NormalizeLevelAndPrice,Migration639NormalizeLevelAndPrice.version=.639},90794:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration640CantripsAreNotZeroLevel=void 0;const base_1=__webpack_require__(54310);class Migration640CantripsAreNotZeroLevel extends base_1.MigrationBase{async updateItem(itemData){if("spell"!==itemData.type)return;const level=itemData.system.level;0===level.value&&(level.value=1,itemData.system.traits.value.includes("cantrip")||itemData.system.traits.value.push("cantrip"))}}exports.Migration640CantripsAreNotZeroLevel=Migration640CantripsAreNotZeroLevel,Migration640CantripsAreNotZeroLevel.version=.64},26121:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration641SovereignSteelValue=void 0;const base_1=__webpack_require__(54310);class Migration641SovereignSteelValue extends base_1.MigrationBase{async updateItem(itemSource){var _a;"weapon"===itemSource.type&&"sovereign steel"===(null===(_a=itemSource.system.preciousMaterial.value)||void 0===_a?void 0:_a.toLowerCase())&&(itemSource.system.preciousMaterial.value="sovereignSteel")}}exports.Migration641SovereignSteelValue=Migration641SovereignSteelValue,Migration641SovereignSteelValue.version=.641},4063:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration642TrackSchemaVersion=void 0;const base_1=__webpack_require__(54310);class Migration642TrackSchemaVersion extends base_1.MigrationBase{async updateActor(actorSource){var _a,_b;null!==(_a=(_b=actorSource.system).schema)&&void 0!==_a||(_b.schema={version:null,lastMigration:null})}async updateItem(itemSource){var _a,_b;null!==(_a=(_b=itemSource.system).schema)&&void 0!==_a||(_b.schema={version:null,lastMigration:null})}}exports.Migration642TrackSchemaVersion=Migration642TrackSchemaVersion,Migration642TrackSchemaVersion.version=.642},62371:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration643HazardLevel=void 0;const base_1=__webpack_require__(54310);class Migration643HazardLevel extends base_1.MigrationBase{async updateActor(actorSource){if("hazard"!==actorSource.type)return;const hazardDetails=actorSource.system.details;if("number"==typeof hazardDetails.level){const level=hazardDetails.level;hazardDetails.level={value:level}}}}exports.Migration643HazardLevel=Migration643HazardLevel,Migration643HazardLevel.version=.643},69080:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration644SpellcastingCategory=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(54310),defaultTraditionByClass={wizard:"arcane",cleric:"divine",druid:"primal",bard:"occult",ranger:"primal",champion:"divine",monk:"divine"};class Migration644SpellcastingCategory extends base_1.MigrationBase{async updateItem(item,actor){var _a,_b;if(!actor||"spellcastingEntry"!==item.type)return;const spellcasting=item.system;if("ritual"===spellcasting.tradition.value)spellcasting.prepared.value="ritual",spellcasting.tradition.value="";else if("focus"===spellcasting.tradition.value){spellcasting.prepared.value="focus";const possibleMatch=actor.items.find((testItem=>{if("spellcastingEntry"!==testItem.type)return!1;const testSpellcasting=testItem.system;return(0,_util_1.tupleHasValue)(["prepared","spontaneous"],testSpellcasting.prepared.value)&&"focus"!==testSpellcasting.tradition.value&&("character"===actor.type?testSpellcasting.proficiency.value===spellcasting.proficiency.value:testSpellcasting.spelldc.value===spellcasting.spelldc.value)&&(testSpellcasting.ability.value||"int")===(spellcasting.ability.value||"int")}));if(possibleMatch)spellcasting.tradition.value=possibleMatch.system.tradition.value;else{const classItem=actor.items.find((testItem=>"class"===testItem.type)),className=(null==classItem?void 0:classItem.system.slug)||(0,_util_1.sluggify)(null!==(_a=null==classItem?void 0:classItem.name)&&void 0!==_a?_a:"");spellcasting.tradition.value=null!==(_b=defaultTraditionByClass[className])&&void 0!==_b?_b:"arcane"}}}}exports.Migration644SpellcastingCategory=Migration644SpellcastingCategory,Migration644SpellcastingCategory.version=.644},2876:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration645TokenImageSize=void 0;const base_1=__webpack_require__(54310);class Migration645TokenImageSize extends base_1.MigrationBase{constructor(){super(...arguments),this.imageOverrides=new Map,this.sizeOverrides=new Map}isTokenImageFlag(flag){return"string"==typeof flag}isTokenSizeFlag(flag){return flag instanceof Object&&"height"in flag&&"number"==typeof flag.height&&"width"in flag&&"number"==typeof flag.width}async updateActor(actorSource){var _a,_b,_c,_d,_e;const flags=actorSource.flags,originalImg=null===(_b=null===(_a=flags.pf2e)||void 0===_a?void 0:_a.token)||void 0===_b?void 0:_b.img;this.isTokenImageFlag(originalImg)&&this.imageOverrides.set(actorSource._id,originalImg);const originalSize=null===(_d=null===(_c=flags.pf2e)||void 0===_c?void 0:_c.token)||void 0===_d?void 0:_d.size;this.isTokenSizeFlag(originalSize)&&this.sizeOverrides.set(actorSource._id,originalSize),"object"==typeof(null===(_e=flags.pf2e)||void 0===_e?void 0:_e.token)&&("game"in globalThis&&(flags.pf2e["-=token"]=null),delete flags.pf2e.token)}async updateToken(tokenSource,actor){var _a,_b,_c,_d,_e;tokenSource.texture.src=null!==(_b=this.imageOverrides.get(null!==(_a=null==actor?void 0:actor.id)&&void 0!==_a?_a:""))&&void 0!==_b?_b:tokenSource.texture.src;const sizeOverride=this.sizeOverrides.get(null!==(_c=null==actor?void 0:actor.id)&&void 0!==_c?_c:"");tokenSource.height=null!==(_d=null==sizeOverride?void 0:sizeOverride.height)&&void 0!==_d?_d:tokenSource.height,tokenSource.width=null!==(_e=null==sizeOverride?void 0:sizeOverride.width)&&void 0!==_e?_e:tokenSource.width}}exports.Migration645TokenImageSize=Migration645TokenImageSize,Migration645TokenImageSize.version=.645},11338:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration646UpdateInlineLinks=void 0;const base_1=__webpack_require__(54310);class Migration646UpdateInlineLinks extends base_1.MigrationBase{updateCheckAttributes(markup=""){return markup.replace(/\bdata-pf2-([a-z]+)-check="\w*"/g,'data-pf2-check="$1"').replace(/\bdata-pf2-(?:saving-throw|skill-check)\b/g,"data-pf2-check")}async updateActor(actorData){var _a;if("hazard"===actorData.type){const hazardDetails=actorData.system.details;hazardDetails.disable=this.updateCheckAttributes(null!==(_a=hazardDetails.disable)&&void 0!==_a?_a:"")}}async updateItem(itemData){var _a;const description=itemData.system.description;description.value=this.updateCheckAttributes(null!==(_a=description.value)&&void 0!==_a?_a:"")}}exports.Migration646UpdateInlineLinks=Migration646UpdateInlineLinks,Migration646UpdateInlineLinks.version=.646},30161:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration647FixPCSenses=void 0;const base_1=__webpack_require__(54310);class Migration647FixPCSenses extends base_1.MigrationBase{async updateActor(actorData){if("character"!==actorData.type)return;const notTraits=actorData.system.traits;Array.isArray(notTraits.senses)?notTraits.senses=notTraits.senses.filter((sense=>!!sense)):notTraits.senses=[]}}exports.Migration647FixPCSenses=Migration647FixPCSenses,Migration647FixPCSenses.version=.647},79483:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration648RemoveInvestedProperty=void 0;const base_1=__webpack_require__(54310);class Migration648RemoveInvestedProperty extends base_1.MigrationBase{async updateItem(itemSource){if("treasure"!==itemSource.type&&"consumable"!==itemSource.type)return;const systemData=itemSource.system;delete systemData.invested,"game"in globalThis&&(systemData["-=invested"]=null)}}exports.Migration648RemoveInvestedProperty=Migration648RemoveInvestedProperty,Migration648RemoveInvestedProperty.version=.648},26888:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration649FocusToActor=void 0;const base_1=__webpack_require__(54310);class Migration649FocusToActor extends base_1.MigrationBase{async updateActor(actorData){var _a,_b;if(!["character","npc"].includes(actorData.type))return;const systemData=actorData.system;systemData.resources||(systemData.resources={});const spellLists=actorData.items.filter((i=>"spellcastingEntry"===i.type)).sort(((a,b)=>(a.sort||0)-(b.sort||0))).map((i=>i.system)).filter((i=>"focus"===i.prepared.value&&i.focus)).sort(((a,b)=>{var _a,_b;return((null===(_a=b.focus)||void 0===_a?void 0:_a.pool)||0)-((null===(_b=a.focus)||void 0===_b?void 0:_b.pool)||0)}));if(0===spellLists.length)return;const focusOld=spellLists[0].focus;actorData.system.resources.focus={value:null!==(_a=null==focusOld?void 0:focusOld.points)&&void 0!==_a?_a:0,max:null!==(_b=null==focusOld?void 0:focusOld.pool)&&void 0!==_b?_b:1}}async updateItem(itemData){if("spellcastingEntry"!==itemData.type)return;const data=itemData.system;delete data.focus,"game"in globalThis&&(data["-=focus"]=null)}}exports.Migration649FocusToActor=Migration649FocusToActor,Migration649FocusToActor.version=.649},24002:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration650StringifyWeaponProperties=void 0;const base_1=__webpack_require__(54310);class Migration650StringifyWeaponProperties extends base_1.MigrationBase{async updateItem(itemData){var _a,_b;if("weapon"!==itemData.type)return;const systemData=itemData.system;systemData.weaponType&&((_b=systemData.weaponType).value||(_b.value="simple"));const range=null!==(_a=systemData.range)&&void 0!==_a?_a:systemData.range={value:"melee"};range instanceof Object&&"string"==typeof range.value&&(range.value=range.value.trim()||"melee","reach"===range.value&&(range.value="melee"))}}exports.Migration650StringifyWeaponProperties=Migration650StringifyWeaponProperties,Migration650StringifyWeaponProperties.version=.65},50813:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration651EphemeralFocusPool=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(54310);class Migration651EphemeralFocusPool extends base_1.MigrationBase{constructor(){super(...arguments),this.increasesByOne=new Set(["abundant-step","achaekeks-grip","advanced-bloodline","advanced-deitys-domain","advanced-domain","advanced-revelation","advanced-school-spell","advanced-seeker-of-truths","animal-feature","arcane-school-spell","apex-companion","basic-lesson","beastmasters-trance","blessed-sacrifice","cackle","champions-sacrifice","clinging-shadows-initiate","counter-perform","debilitating-dichotomy","domain-acumen","domain-fluency","empty-body","enlarge-companion","ephemeral-tracking","familiar-form","fatal-aria","gaze-of-veracity","greater-bloodline","greater-lesson","greater-revelation","heal-animal","healing-touch","hunters-luck","hunters-vision","impaling-briars","inspire-heroics","invoke-disaster","invoke-the-crimson-oath","ki-blast","ki-form","ki-rush","ki-strike","leaf-order","light-of-revelation","lingering-composition","litany-against-sloth","litany-against-wrath","litany-of-depravity","litany-of-righteousness","litany-of-self-interest","loremasters-etude","magic-hide","major-lesson","mantis-form","medusas-wrath","order-spell","perfect-ki-adept","perfect-strike","quivering-palm","rangers-bramble","shadow-magic","shadows-web","shall-not-falter-shall-not-rout","snare-hopping","song-of-the-fallen","soothing-ballad","soothing-mist","speaking-sky","spellmasters-ward","steal-the-sky","storm-order","sun-blade","suns-fury","terrain-transposition","transcribe-moment","universal-versatility","vision-of-weakness","wholeness-of-body","wild-winds-initiate","wind-caller","wind-jump","wronged-monks-wrath"])}needsRuleElement(rules){return!rules.some((rule=>"ActiveEffectLike"===rule.key&&"system.resources.focus.max"===rule.path))}async updateActor(actorSource){var _a,_b,_c;if("character"!==actorSource.type)return;const systemData=actorSource.system;null!==(_a=systemData.resources)&&void 0!==_a||(systemData.resources={});const resources=systemData.resources;"number"==typeof(null===(_b=resources.focus)||void 0===_b?void 0:_b.max)&&"game"in globalThis?resources.focus["-=max"]=null:null===(_c=resources.focus)||void 0===_c||delete _c.max}async updateItem(itemSource){if("feat"!==itemSource.type)return;const systemData=itemSource.system,rule=(()=>{var _a;const slug=null!==(_a=systemData.slug)&&void 0!==_a?_a:(0,_util_1.sluggify)(itemSource.name);return"revelation-spells"===slug?{key:"ActiveEffectLike",path:"system.resources.focus.max",mode:"upgrade",value:2,priority:10}:"major-curse"===slug?{key:"ActiveEffectLike",path:"system.resources.focus.max",mode:"upgrade",value:3}:["composition-spells","devotion-spells","druidic-order","hexes"].includes(slug)||/^(?:arcane-school|bloodline)-/.test(slug)&&"classfeature"===itemSource.system.featType.value?{key:"ActiveEffectLike",path:"system.resources.focus.max",mode:"upgrade",value:1,priority:10}:this.increasesByOne.has(slug)||slug.startsWith("first-revelation-")?{key:"ActiveEffectLike",path:"system.resources.focus.max",mode:"add",value:1}:null})();rule&&this.needsRuleElement(itemSource.system.rules)&&systemData.rules.push(rule)}}exports.Migration651EphemeralFocusPool=Migration651EphemeralFocusPool,Migration651EphemeralFocusPool.version=.651},35673:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration652KillHalcyonTradition=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(54310),defaultTraditionByClass={wizard:"arcane",druid:"primal",ranger:"primal"};class Migration652KillHalcyonTradition extends base_1.MigrationBase{async updateItem(itemData,actor){var _a,_b;if("spellcastingEntry"!==itemData.type)return;const tradition=itemData.system.tradition;if("halcyon"===tradition.value){const classItem=null==actor?void 0:actor.items.find((testItem=>"class"===testItem.type)),className=(null==classItem?void 0:classItem.system.slug)||(0,_util_1.sluggify)(null!==(_a=null==classItem?void 0:classItem.name)&&void 0!==_a?_a:"");tradition.value=null!==(_b=defaultTraditionByClass[className])&&void 0!==_b?_b:"arcane"}}}exports.Migration652KillHalcyonTradition=Migration652KillHalcyonTradition,Migration652KillHalcyonTradition.version=.652},67060:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration653AEstoREs=void 0;const base_1=__webpack_require__(54310);class Migration653AEstoREs extends base_1.MigrationBase{constructor(){super(...arguments),this.pathsToRemove=new Set([...["unarmored","light","medium","heavy"].map((category=>`system.martial.${category}.rank`)),...["unarmed","simple","martial","advanced"].map((category=>`system.martial.${category}.rank`)),...["fortitude","reflex","will"].map((save=>`system.saves.${save}.rank`)),"system.details.keyability.value","system.attributes.perception.rank","system.attributes.classDC.rank"])}isRemovableAE(effect){return effect.changes.every(this.isRemoveableChange)}isRemoveableChange(change){return 0!==change.mode&&Number.isInteger(Number(change.value))||5===change.mode&&!change.value.startsWith("{")}fixClassKeyAbilities(classSource){const keyAbility=classSource.system.keyAbility;keyAbility.value=keyAbility.value.map((value=>"string"==typeof value?value:value.value))}async updateActor(actorSource){if("character"!==actorSource.type)return;actorSource.system.martial={},actorSource.effects=actorSource.effects.filter((effect=>{var _a,_b;const origin=null!==(_a=effect.origin)&&void 0!==_a?_a:"",itemId=null===(_b=/\bItem\.([A-Za-z0-9]{16})$/.exec(origin))||void 0===_b?void 0:_b[1],itemSource=actorSource.items.find((maybeSource=>maybeSource._id===itemId));return itemSource&&!(["class","effect","feat"].includes(itemSource.type)&&this.isRemovableAE(effect))}))}async updateItem(itemSource){if("class"!==itemSource.type&&"effect"!==itemSource.type&&"feat"!==itemSource.type)return;"class"===itemSource.type&&this.fixClassKeyAbilities(itemSource);const modes={1:"multiply",2:"add",3:"downgrade",4:"upgrade",5:"override"};for(const effect of[...itemSource.effects]){"class"===itemSource.type&&(effect.changes=effect.changes.filter((change=>!this.pathsToRemove.has(change.key))));const toAELikes=effect.changes.filter(this.isRemoveableChange),rules=itemSource.system.rules;for(const change of toAELikes){if(0===change.mode)continue;const newRule={key:"ActiveEffectLike",path:change.key,mode:modes[change.mode],value:Number.isNaN(Number(change.value))?change.value:Number(change.value),priority:change.priority};rules.push(newRule)}effect.changes=effect.changes.filter((change=>!this.isRemoveableChange(change)))}itemSource.effects=itemSource.effects.filter((effect=>!this.isRemovableAE(effect)))}}exports.Migration653AEstoREs=Migration653AEstoREs,Migration653AEstoREs.version=.653},6029:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration654ActionTypeAndCount=void 0;const base_1=__webpack_require__(54310);class Migration654ActionTypeAndCount extends base_1.MigrationBase{async updateItem(item){if("feat"!==item.type&&"action"!==item.type)return;const systemData=item.system;systemData.actions.value=Math.min(3,Math.max(Number(systemData.actions.value),0))||null}}exports.Migration654ActionTypeAndCount=Migration654ActionTypeAndCount,Migration654ActionTypeAndCount.version=.654},49198:function(__unused_webpack_module,exports,__webpack_require__){var _Migration655CreatureTokenSizes_instances,_Migration655CreatureTokenSizes_isTokenSizeRE,_Migration655CreatureTokenSizes_isActorSizeAELike,_Migration655CreatureTokenSizes_isBracketedValue,__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration655CreatureTokenSizes=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(54310);class Migration655CreatureTokenSizes extends base_1.MigrationBase{constructor(){super(...arguments),_Migration655CreatureTokenSizes_instances.add(this),this.dimensionToSize={.5:"tiny",2:"lg",3:"huge",4:"grg"}}async updateItem(itemSource){var _a,_b,_c,_d;null!==(_a=(_d=itemSource.system).rules)&&void 0!==_a||(_d.rules=[]);const rules=itemSource.system.rules,actorSizeAELike=rules.find(__classPrivateFieldGet(this,_Migration655CreatureTokenSizes_instances,"m",_Migration655CreatureTokenSizes_isActorSizeAELike)),tokenSizeRE=rules.find(__classPrivateFieldGet(this,_Migration655CreatureTokenSizes_instances,"m",_Migration655CreatureTokenSizes_isTokenSizeRE));if(actorSizeAELike)actorSizeAELike.key="CreatureSize",delete actorSizeAELike.path,delete actorSizeAELike.mode;else if(tokenSizeRE&&["number","string","object"].includes(typeof tokenSizeRE.value))if(tokenSizeRE.key="CreatureSize",__classPrivateFieldGet(this,_Migration655CreatureTokenSizes_instances,"m",_Migration655CreatureTokenSizes_isBracketedValue).call(this,tokenSizeRE.value))for(const bracket of tokenSizeRE.value.brackets)"number"==typeof bracket.value&&(bracket.value=null!==(_b=this.dimensionToSize[bracket.value])&&void 0!==_b?_b:"med");else"number"==typeof tokenSizeRE.value&&(tokenSizeRE.value=null!==(_c=this.dimensionToSize[tokenSizeRE.value])&&void 0!==_c?_c:"med");tokenSizeRE&&"CreatureSize"!==tokenSizeRE.key&&itemSource.system.rules.splice(itemSource.system.rules.indexOf(tokenSizeRE),1)}}exports.Migration655CreatureTokenSizes=Migration655CreatureTokenSizes,_Migration655CreatureTokenSizes_instances=new WeakSet,_Migration655CreatureTokenSizes_isTokenSizeRE=function(rule){return"string"==typeof rule.key&&rule.key.endsWith("TokenSize")},_Migration655CreatureTokenSizes_isActorSizeAELike=function(rule){return"string"==typeof rule.key&&rule.key.endsWith("ActiveEffectLike")&&"system.traits.size.value"===rule.path},_Migration655CreatureTokenSizes_isBracketedValue=function(value){return(0,_util_1.isObject)(value)&&Array.isArray(value.brackets)},Migration655CreatureTokenSizes.version=.655},41387:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration656OtherFocusPoolSources=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(54310);class Migration656OtherFocusPoolSources extends base_1.MigrationBase{constructor(){super(...arguments),this.increasesByOne=new Set(["additional-shadow-magic","basic-bloodline-spell","blessed-one-dedication","breath-of-the-dragon","crystal-ward-spells","domain-initiate","expanded-domain-initiate","gravity-weapon","heal-companion","leaf-order","shadow-illusion","storm-order","wings-of-the-dragon"])}needsRuleElement(rules){return!rules.some((rule=>"ActiveEffectLike"===rule.key&&"system.resources.focus.max"===rule.path))}async updateItem(itemSource){if("feat"!==itemSource.type)return;const systemData=itemSource.system,rule=(()=>{var _a;const slug=null!==(_a=systemData.slug)&&void 0!==_a?_a:(0,_util_1.sluggify)(itemSource.name);return"druidic-order"===slug?{key:"ActiveEffectLike",path:"system.resources.focus.max",mode:"upgrade",value:1,priority:10}:this.increasesByOne.has(slug)?{key:"ActiveEffectLike",path:"system.resources.focus.max",mode:"add",value:1}:null})();rule&&this.needsRuleElement(itemSource.system.rules)&&systemData.rules.push(rule)}}exports.Migration656OtherFocusPoolSources=Migration656OtherFocusPoolSources,Migration656OtherFocusPoolSources.version=.656},43453:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration657RemoveSetProperty=void 0;const base_1=__webpack_require__(54310);class Migration657RemoveSetProperty extends base_1.MigrationBase{async updateActor(actorSource){var _a;const systemFlags=null!==(_a=actorSource.flags.pf2e)&&void 0!==_a?_a:{};delete systemFlags["set-property"],"game"in globalThis&&"set-property"in systemFlags&&(systemFlags["-=set-property"]=null)}async updateItem(itemSource){var _a,_b;null!==(_a=(_b=itemSource.system).rules)&&void 0!==_a||(_b.rules=[]);const rules=itemSource.system.rules,setPropertyRules=itemSource.system.rules.filter((rule=>"string"==typeof rule.key&&["SetProperty","PF2E.RuleElement.SetProperty"].includes(rule.key)&&"string"==typeof rule.property&&"object"==typeof rule.on&&null!==rule.on&&"added"in rule.on)),aeLikes=setPropertyRules.map((setProperty=>({key:"ActiveEffectLike",mode:"override",path:setProperty.property.replace(/^flags\.2e/,"flags.pf2e"),value:setProperty.on.added,priority:10})));for(const setPropertyRule of setPropertyRules){const index=rules.indexOf(setPropertyRule);rules.splice(index,1,aeLikes.shift())}itemSource.system.rules=itemSource.system.rules.filter((rule=>rule&&"string"==typeof rule.key&&!rule.key.trim().endsWith("SetProperty")))}}exports.Migration657RemoveSetProperty=Migration657RemoveSetProperty,Migration657RemoveSetProperty.version=.657},50169:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration658MonkUnarmoredProficiency=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(54310);class Migration658MonkUnarmoredProficiency extends base_1.MigrationBase{async updateItem(itemSource){var _a;const slug=null!==(_a=itemSource.system.slug)&&void 0!==_a?_a:(0,_util_1.sluggify)(itemSource.name);"class"===itemSource.type&&"monk"===slug&&2!==itemSource.system.defenses.unarmored&&(itemSource.system.defenses.unarmored=2)}}exports.Migration658MonkUnarmoredProficiency=Migration658MonkUnarmoredProficiency,Migration658MonkUnarmoredProficiency.version=.658},77636:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration659MultipleDamageRows=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(54310),formulaHasValue=value=>!!value&&"0"!==value,modes=["level1","level2","level3","level4"];class Migration659MultipleDamageRows extends base_1.MigrationBase{async updateItem(itemData){var _a;if("spell"!==itemData.type)return;const data=itemData.system;if(data.scaling instanceof Object&&("string"==typeof data.scaling.mode&&(0,_util_1.tupleHasValue)(modes,data.scaling.mode)&&(data.scaling.interval=modes.indexOf(data.scaling.mode)+1),"string"==typeof data.scaling.formula&&formulaHasValue(data.scaling.formula)&&!data.scaling.damage&&(data.scaling.damage={0:data.scaling.formula}),data.scaling.interval&&data.scaling.damage?"game"in globalThis?(data.scaling["-=mode"]=null,data.scaling["-=formula"]=null):(delete data.scaling.mode,delete data.scaling.formula):"game"in globalThis?data["-=scaling"]=null:delete data.scaling),"string"==typeof data.damage.value){if(formulaHasValue(data.damage.value)||data.damage.applyMod){const value=data.damage.value;data.damage.value={0:{value,applyMod:data.damage.applyMod||void 0,type:{value:(null===(_a=data.damageType)||void 0===_a?void 0:_a.value)||"untyped",categories:[]}}}}else data.damage.value={};"game"in globalThis?data.damage["-=applyMod"]=null:delete data.damage.applyMod}"damageType"in data&&("game"in globalThis?data["-=damageType"]=null:data.damageType=void 0)}}exports.Migration659MultipleDamageRows=Migration659MultipleDamageRows,Migration659MultipleDamageRows.version=.659},46105:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration660DerivedSpellTraits=void 0;const base_1=__webpack_require__(54310),values_1=__webpack_require__(12759);class Migration660DerivedSpellTraits extends base_1.MigrationBase{constructor(){super(...arguments),this.derivedTraits=[...values_1.MAGIC_SCHOOLS,...values_1.MAGIC_TRADITIONS]}async updateItem(itemSource){if("spell"===itemSource.type){const traits=itemSource.system.traits;traits.value=traits.value.filter((trait=>!this.derivedTraits.includes(trait)))}}}exports.Migration660DerivedSpellTraits=Migration660DerivedSpellTraits,Migration660DerivedSpellTraits.version=.66},10335:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration661NumifyVehicleDimensions=void 0;const base_1=__webpack_require__(54310);class Migration661NumifyVehicleDimensions extends base_1.MigrationBase{async updateActor(actorSource){if("vehicle"===actorSource.type){const{space}=actorSource.system.details;space.long=Number(space.long)||2,space.wide=Number(space.wide)||2,space.high=Number(space.high)||1}}}exports.Migration661NumifyVehicleDimensions=Migration661NumifyVehicleDimensions,Migration661NumifyVehicleDimensions.version=.661},63724:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration662LinkToActorSizeDefaults=void 0;const base_1=__webpack_require__(54310);class Migration662LinkToActorSizeDefaults extends base_1.MigrationBase{async updateActor(actorSource){var _a,_b,_c,_d,_e,_f;const linkToActorSize=!["hazard","loot"].includes(actorSource.type);null!==(_a=(_d=actorSource.prototypeToken).flags)&&void 0!==_a||(_d.flags={pf2e:{linkToActorSize}}),null!==(_b=(_e=actorSource.prototypeToken.flags).pf2e)&&void 0!==_b||(_e.pf2e={linkToActorSize}),null!==(_c=(_f=actorSource.prototypeToken.flags.pf2e).linkToActorSize)&&void 0!==_c||(_f.linkToActorSize=linkToActorSize)}async updateToken(tokenSource,actor){var _a,_b,_c,_d;const linkToActorSize=!["hazard","loot"].includes(actor.type);null!==(_a=(_c=tokenSource.flags).pf2e)&&void 0!==_a||(_c.pf2e={linkToActorSize}),null!==(_b=(_d=tokenSource.flags.pf2e).linkToActorSize)&&void 0!==_b||(_d.linkToActorSize=linkToActorSize)}}exports.Migration662LinkToActorSizeDefaults=Migration662LinkToActorSizeDefaults,Migration662LinkToActorSizeDefaults.version=.662},47655:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration663FixSpellDamage=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(54310);function createBasicDamage(value,applyMod,damageType){return{0:{applyMod,type:{categories:[],value:damageType},value}}}function createBasicScaling(interval,scaling){return{interval,damage:{0:scaling}}}class Migration663FixSpellDamage extends base_1.MigrationBase{async updateItem(itemData){var _a,_b,_c;if("spell"!==itemData.type)return;if(Object.keys(null!==(_b=null===(_a=itemData.system.damage)||void 0===_a?void 0:_a.value)&&void 0!==_b?_b:{}).length>0)return;const itemName=null!==(_c=itemData.system.slug)&&void 0!==_c?_c:(0,_util_1.sluggify)(itemData.name),systemData=itemData.system;switch(itemName){case"animated-assault":systemData.damage.value=createBasicDamage("2d10",!1,"bludgeoning"),systemData.scaling=createBasicScaling(2,"2d10");break;case"daze":systemData.damage.value=createBasicDamage("0",!0,"mental"),systemData.scaling=createBasicScaling(2,"1d6");break;case"personal-blizzard":systemData.damage.value={0:{applyMod:!1,type:{value:"cold",categories:[]},value:"1d6"},1:{applyMod:!1,type:{value:"cold",subtype:"persistent",categories:[]},value:"1d6"}},systemData.scaling={interval:1,damage:{0:"1",1:"1"}};break;case"power-word-kill":systemData.damage.value=createBasicDamage("50",!1,"untyped")}}}exports.Migration663FixSpellDamage=Migration663FixSpellDamage,Migration663FixSpellDamage.version=.663},69417:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration664DeleteCUBConditions=void 0;const base_1=__webpack_require__(54310);class Migration664DeleteCUBConditions extends base_1.MigrationBase{async updateActor(actorSource){const cubConditions=actorSource.items.filter((item=>{var _a;return"condition"===item.type&&!(null===(_a=item.system.references)||void 0===_a?void 0:_a.overriddenBy)}));for(const condition of cubConditions)actorSource.items.findSplice((item=>item===condition))}}exports.Migration664DeleteCUBConditions=Migration664DeleteCUBConditions,Migration664DeleteCUBConditions.version=.664},46544:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration665HandwrapsCorrections=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(54310);class Migration665HandwrapsCorrections extends base_1.MigrationBase{async updateItem(itemSource){var _a;const slug=null!==(_a=itemSource.system.slug)&&void 0!==_a?_a:(0,_util_1.sluggify)(itemSource.name);if("weapon"===itemSource.type&&"handwraps-of-mighty-blows"===slug){itemSource.system.usage.value="worn-gloves"}const dirPath="systems/pf2e/icons/equipment/worn-items/other-worn-items";itemSource.img===`${dirPath}/handwraps-of-nighty-blows.webp`&&(itemSource.img=`${dirPath}/handwraps-of-mighty-blows.webp`)}}exports.Migration665HandwrapsCorrections=Migration665HandwrapsCorrections,Migration665HandwrapsCorrections.version=.665},69e3:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration666UsageAndStowingContainers=void 0;const helpers_1=__webpack_require__(44252),_util_1=__webpack_require__(6945),base_1=__webpack_require__(54310);class Migration666UsageAndStowingContainers extends base_1.MigrationBase{constructor(){super(...arguments),this.backpacks=new Set(["backpack","knapsack-of-halflingkind","knapsack-of-halflingkind-greater","sturdy-satchel","vaultbreaker-harness","voyagers-pack"]),this.wornGarment=new Set(["sleeves-of-storage","sleeves-of-storage-greater"]),this.wornGloves=new Set(["gloves-of-storing"]),this.heldInTwoHands=new Set(["bag-of-devouring-type-i","bag-of-devouring-type-ii","bag-of-devouring-type-iii","bag-of-holding-type-i","bag-of-holding-type-ii","bag-of-holding-type-iii","bag-of-holding-type-iv","bag-of-weasels","chest","sealing-chest-greater","sealing-chest-lesser","sealing-chest-moderate"]),this.stowingContainers=new Set([...this.backpacks,...this.heldInTwoHands,...this.wornGarment,...this.wornGloves,"extradimensional-stash"])}async updateItem(itemSource){var _a,_b;if(!itemSource.system.traits)return;const traits=itemSource.system.traits;if("string"==typeof(null===(_a=traits.usage)||void 0===_a?void 0:_a.value)){const traitUsage=traits.usage.value,isPhysical=(0,helpers_1.isPhysicalData)(itemSource),keepUsage=isPhysical&&("held-in-one-hand"!==traitUsage||""===itemSource.system.usage.value);isPhysical&&keepUsage&&(itemSource.system.usage.value=traits.usage.value),"game"in globalThis?traits["-=usage"]=null:delete traits.usage}if("backpack"!==itemSource.type)return;const slug=null!==(_b=itemSource.system.slug)&&void 0!==_b?_b:(0,_util_1.sluggify)(itemSource.name);this.backpacks.has(slug)?itemSource.system.usage.value="wornbackpack":this.heldInTwoHands.has(slug)?itemSource.system.usage.value="held-in-two-hands":this.wornGarment.has(slug)?itemSource.system.usage.value="worngarment":this.wornGloves.has(slug)?itemSource.system.usage.value="worngloves":itemSource.system.usage.value="worn",itemSource.system.stowing=this.stowingContainers.has(slug)}}exports.Migration666UsageAndStowingContainers=Migration666UsageAndStowingContainers,Migration666UsageAndStowingContainers.version=.666},91543:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration667HPSubProperties=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(54310);class Migration667HPSubProperties extends base_1.MigrationBase{addRecoveryMultiplier(itemSource,slug){if(!["dream-may","fast-recovery"].includes(slug))return;const rules=itemSource.system.rules;if(!rules.some((rule=>"path"in rule&&"system.attributes.hp.recoveryMultiplier"===rule.path))){const element={key:"ActiveEffectLike",mode:"add",path:"system.attributes.hp.recoveryMultiplier",value:1};rules.push(element)}}addNegativeHealing(itemSource,slug){if(!["dhampir","negative-healing"].includes(slug))return;const rules=itemSource.system.rules;if(!rules.some((rule=>"path"in rule&&"system.attributes.hp.negativeHealing"===rule.path))){const element={key:"ActiveEffectLike",mode:"override",path:"system.attributes.hp.negativeHealing",value:!0};rules.push(element)}}async updateItem(itemSource){var _a;if("feat"!==itemSource.type&&"action"!==itemSource.type)return;const slug=null!==(_a=itemSource.system.slug)&&void 0!==_a?_a:(0,_util_1.sluggify)(itemSource.name);this.addRecoveryMultiplier(itemSource,slug),this.addNegativeHealing(itemSource,slug)}}exports.Migration667HPSubProperties=Migration667HPSubProperties,Migration667HPSubProperties.version=.667},25409:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration668ArmorSpeedPenalty=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(54310);class Migration668ArmorSpeedPenalty extends base_1.MigrationBase{async updateItem(itemSource){var _a,_b,_c;const slug=null!==(_a=itemSource.system.slug)&&void 0!==_a?_a:(0,_util_1.sluggify)(itemSource.name);if("armor"===itemSource.type){const rules=null!==(_b=(_c=itemSource.system).rules)&&void 0!==_b?_b:_c.rules=[],rule=rules.find((r=>{var _a;return"string"==typeof r.key&&r.key.endsWith("FlatModifier")&&"speed"===r.selector&&"object"==typeof r.value&&JSON.stringify(null!==(_a=r.predicate)&&void 0!==_a?_a:null)===JSON.stringify({not:["unburdened-iron"]})}));rule&&rules.splice(rules.indexOf(rule),1)}else if("feat"===itemSource.type)if("unburdened-iron"===slug){const rule={key:"RollOption",domain:"speed",option:"armor:ignore-speed-penalty"};itemSource.system.rules=[rule]}else if("armored-stealth"===slug){const rule={key:"RollOption",domain:"stealth",option:"armor:ignore-noisy-penalty"};itemSource.system.rules=[rule]}}}exports.Migration668ArmorSpeedPenalty=Migration668ArmorSpeedPenalty,Migration668ArmorSpeedPenalty.version=.668},93322:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration669NPCAttackEffects=void 0;const base_1=__webpack_require__(54310),_util_1=__webpack_require__(6945);class Migration669NPCAttackEffects extends base_1.MigrationBase{async updateItem(item,actor){var _a,_b;actor&&"melee"===item.type&&(null!==(_a=(_b=item.system).attackEffects)&&void 0!==_a||(_b.attackEffects={value:[]}),Array.isArray(item.system.attackEffects.value)&&item.system.attackEffects.value.forEach(((entry,index,arr)=>{arr[index]=(0,_util_1.sluggify)(entry)})))}}exports.Migration669NPCAttackEffects=Migration669NPCAttackEffects,Migration669NPCAttackEffects.version=.669},3892:function(__unused_webpack_module,exports,__webpack_require__){var _Migration670AncestryVision_instances,_Migration670AncestryVision_setAncestryVision,__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration670AncestryVision=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(54310);class Migration670AncestryVision extends base_1.MigrationBase{constructor(){super(...arguments),_Migration670AncestryVision_instances.add(this),this.DARKVISION_ID="HHVQDp61ehcpdiU8",this.LOWLIGHTVISION_ID="DRtaqOHXTRtGRIUT"}async updateActor(source){if("character"!==source.type)return;const ancestry=source.items.find((item=>"ancestry"===item.type));if(ancestry){__classPrivateFieldGet(this,_Migration670AncestryVision_instances,"m",_Migration670AncestryVision_setAncestryVision).call(this,ancestry);for(const vision of["darkvision","low-light-vision"]){const index=source.items.findIndex((item=>{var _a;return"feat"===item.type&&(null!==(_a=item.system.slug)&&void 0!==_a?_a:(0,_util_1.sluggify)(item.name))===vision}));-1!==index&&source.items.splice(index,1)}}}async updateItem(source,actor){"ancestry"!==source.type||actor||__classPrivateFieldGet(this,_Migration670AncestryVision_instances,"m",_Migration670AncestryVision_setAncestryVision).call(this,source)}}exports.Migration670AncestryVision=Migration670AncestryVision,_Migration670AncestryVision_instances=new WeakSet,_Migration670AncestryVision_setAncestryVision=function(ancestry){var _a,_b;const features=ancestry.system.items;for(const[key,value]of Object.entries(features))(null==value?void 0:value.id)===this.LOWLIGHTVISION_ID?("game"in globalThis?features[`-=${key}`]=null:delete features[key],ancestry.system.vision="darkvision"===ancestry.system.vision?"darkvision":"lowLightVision"):(null==value?void 0:value.id)===this.DARKVISION_ID&&("game"in globalThis?features[`-=${key}`]=null:delete features[key],ancestry.system.vision="darkvision");null!==(_a=(_b=ancestry.system).vision)&&void 0!==_a||(_b.vision="normal")},Migration670AncestryVision.version=.67},3725:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration670NoCustomTrait=void 0;const base_1=__webpack_require__(54310);class Migration670NoCustomTrait extends base_1.MigrationBase{async updateItem(itemSource){const traits=itemSource.system.traits;traits&&(Array.isArray(traits.value)||(traits.value=[]),traits.value=traits.value.filter((trait=>trait&&"custom"!==trait)))}}exports.Migration670NoCustomTrait=Migration670NoCustomTrait,Migration670NoCustomTrait.version=.67},55986:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration671NoPCItemsOnNonPCs=void 0;const base_1=__webpack_require__(54310);class Migration671NoPCItemsOnNonPCs extends base_1.MigrationBase{async updateActor(actorSource){if("character"===actorSource.type)return;const pcOnlyTypes=["ancestry","background","class","feat"],forbiddenItems=actorSource.items.filter((item=>pcOnlyTypes.includes(item.type)));for(const forbiddenItem of forbiddenItems){const index=actorSource.items.findIndex((item=>item===forbiddenItem));-1!==index&&actorSource.items.splice(index,1)}}}exports.Migration671NoPCItemsOnNonPCs=Migration671NoPCItemsOnNonPCs,Migration671NoPCItemsOnNonPCs.version=.671},83337:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration672RemoveNPCBaseProperties=void 0;const values_1=__webpack_require__(8382),base_1=__webpack_require__(54310);class Migration672RemoveNPCBaseProperties extends base_1.MigrationBase{removeBase(property,replace="value"){property[replace]=Number(property[replace])||0,"number"==typeof property.base&&(property[replace]=property.base,"game"in globalThis?property["-=base?"]=null:delete property.base)}async updateActor(actorSource){if("npc"!==actorSource.type)return;const{ac,hp,perception}=actorSource.system.attributes;this.removeBase(ac),this.removeBase(hp,"max"),this.removeBase(perception);const{saves}=actorSource.system;for(const saveType of values_1.SAVE_TYPES)this.removeBase(saves[saveType])}async updateItem(itemSource,actorSource){"npc"===(null==actorSource?void 0:actorSource.type)&&"lore"===itemSource.type&&this.removeBase(itemSource.system.mod)}}exports.Migration672RemoveNPCBaseProperties=Migration672RemoveNPCBaseProperties,Migration672RemoveNPCBaseProperties.version=.672},97094:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration673RemoveBulwarkREs=void 0;const base_1=__webpack_require__(54310),_util_1=__webpack_require__(6945);class Migration673RemoveBulwarkREs extends base_1.MigrationBase{hasRuleElement(rules){return rules.some((r=>{var _a;return"string"==typeof r.key&&r.key.endsWith("FlatModifier")&&(0,_util_1.isObject)(r.predicate)&&!!(null===(_a=r.predicate.all)||void 0===_a?void 0:_a.includes("self:armor:trait:bulwark"))}))}async updateItem(item){var _a;const{rules}=item.system;if("armor"===item.type){const index=rules.findIndex((rule=>{var _a;return"string"==typeof rule.key&&rule.key.endsWith("FlatModifier")&&"reflex"===rule.selector&&"ability"===rule.type&&/bulwark/i.test(String(null!==(_a=rule.label)&&void 0!==_a?_a:""))}));-1!==index&&rules.splice(index)}const slug=null!==(_a=item.system.slug)&&void 0!==_a?_a:(0,_util_1.sluggify)(item.name);if("feat"===item.type&&"mighty-bulwark"===slug&&!this.hasRuleElement(rules)){const newRules=[{key:"FlatModifier",predicate:{all:["self:armor:trait:bulwark"]},selector:"reflex",type:"untyped",value:4},{key:"RollOption",domain:"reflex",option:"self:armor:bulwark-all"}];rules.push(...newRules)}}}exports.Migration673RemoveBulwarkREs=Migration673RemoveBulwarkREs,Migration673RemoveBulwarkREs.version=.673},75141:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration674StableHomebrewTagIDs=void 0;const homebrew_1=__webpack_require__(27608),localize_1=__webpack_require__(41332),_util_1=__webpack_require__(6945),base_1=__webpack_require__(54310);class Migration674StableHomebrewTagIDs extends base_1.MigrationBase{constructor(){super(...arguments),this.homebrewKeys=deepClone(homebrew_1.HomebrewElements.SETTINGS),this.homebrewTags=this.homebrewKeys.reduce(((settings,key)=>mergeObject(settings,{[key]:game.settings.get("pf2e",`homebrew.${key}`)})),{})}updateDocumentTags(documentTags=[]){for(const key of this.homebrewKeys){const homebrewTags=this.homebrewTags[key];for(const tag of homebrewTags){const index=documentTags.indexOf(tag.id);-1!==index&&documentTags.splice(index,1,`hb_${(0,_util_1.sluggify)(tag.value)}`)}}}async updateActor(source){var _a,_b;"familiar"!==source.type&&(null===(_a=source.system.traits)||void 0===_a?void 0:_a.traits)&&(this.updateDocumentTags(source.system.traits.traits.value),"character"!==source.type&&"npc"!==source.type||this.updateDocumentTags(null===(_b=source.system.traits)||void 0===_b?void 0:_b.languages.value))}async updateItem(itemSource){var _a;this.updateDocumentTags(null===(_a=itemSource.system.traits)||void 0===_a?void 0:_a.value)}async migrate(){for(const key of this.homebrewKeys){const tags=this.homebrewTags[key];for(const tag of tags){tag.id=`hb_${(0,_util_1.sluggify)(tag.value)}`;const tagMap="baseWeapons"===key?localize_1.LocalizePF2e.translations.PF2E.Weapon.Base:CONFIG.PF2E[key];tagMap[tag.id]=tag.value,delete tagMap[key]}tags.length>0&&await game.settings.set("pf2e",`homebrew.${key}`,tags)}}}exports.Migration674StableHomebrewTagIDs=Migration674StableHomebrewTagIDs,Migration674StableHomebrewTagIDs.version=.674},96710:function(__unused_webpack_module,exports,__webpack_require__){var _Migration675FlatModifierAEsToREs_instances,_Migration675FlatModifierAEsToREs_isFlatModifier,_Migration675FlatModifierAEsToREs_toRuleElement,__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration675FlatModifierAEsToREs=void 0;const base_1=__webpack_require__(54310);class Migration675FlatModifierAEsToREs extends base_1.MigrationBase{constructor(){super(...arguments),_Migration675FlatModifierAEsToREs_instances.add(this)}async updateActor(actorSource){for(const effect of[...actorSource.effects])effect.changes.some((change=>change.key.endsWith(".modifiers")))&&actorSource.effects.splice(actorSource.effects.indexOf(effect),1)}async updateItem(itemSource){for(const effect of[...itemSource.effects]){for(const change of effect.changes.filter((change=>change.key.endsWith(".modifiers")))){const reData=__classPrivateFieldGet(this,_Migration675FlatModifierAEsToREs_instances,"m",_Migration675FlatModifierAEsToREs_toRuleElement).call(this,change.value);reData&&(effect.changes.splice(effect.changes.indexOf(change),1),itemSource.system.rules.push(reData))}0===effect.changes.length&&itemSource.effects.splice(itemSource.effects.indexOf(effect),1)}}}exports.Migration675FlatModifierAEsToREs=Migration675FlatModifierAEsToREs,_Migration675FlatModifierAEsToREs_instances=new WeakSet,_Migration675FlatModifierAEsToREs_isFlatModifier=function(data){return"object"==typeof data&&null!==data&&(("number"==typeof(obj=data).modifier||"string"==typeof obj.modifier)&&"string"==typeof obj.type);var obj},_Migration675FlatModifierAEsToREs_toRuleElement=function(aeValue){const aeModifier=(()=>{try{const parsed=JSON.parse(aeValue);return __classPrivateFieldGet(this,_Migration675FlatModifierAEsToREs_instances,"m",_Migration675FlatModifierAEsToREs_isFlatModifier).call(this,parsed)?parsed:null}catch(error){return console.warn(error),null}})();return"string"==typeof(null==aeModifier?void 0:aeModifier.modifier)&&aeModifier.modifier.replace("@data.","@"),aeModifier&&{key:"FlatModifier",type:aeModifier.type,value:aeModifier.modifier,selector:"hp"}},Migration675FlatModifierAEsToREs.version=.675},85235:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration676ReplaceItemsWithRELikeAEs=void 0;const _item_1=__webpack_require__(10843),_util_1=__webpack_require__(6945),base_1=__webpack_require__(54310);class Migration676ReplaceItemsWithRELikeAEs extends base_1.MigrationBase{constructor(){super(...arguments),this.toughnessPromise=fromUuid("Compendium.pf2e.feats-srd.AmP0qu7c5dlBSath"),this.stoutnessPromise=fromUuid("Compendium.pf2e.feats-srd.COP89tjrNhEucuRW"),this.toughPromise=fromUuid("Compendium.pf2e.familiar-abilities.Le8UWr5BU8rV3iBf")}replaceItem({items,type,slug,replacement}){if(!(replacement instanceof _item_1.ItemPF2e))throw(0,_util_1.ErrorPF2e)("Unexpected error retrieving compendium item");const current=items.find((itemSource=>{var _a;return itemSource.type===type&&(null===(_a=itemSource.system.slug)||void 0===_a?void 0:_a.replace(/'/g,""))===slug}));if(current){const newSource=replacement.toObject();"feat"===current.type&&"feat"===newSource.type&&(newSource.system.location=current.system.location),items.splice(items.indexOf(current),1,newSource)}}async updateActor(actorSource){"familiar"===actorSource.type?this.replaceItem({items:actorSource.items,type:"effect",slug:"tough",replacement:await this.toughPromise}):"character"===actorSource.type&&(this.replaceItem({items:actorSource.items,type:"feat",slug:"toughness",replacement:await this.toughnessPromise}),this.replaceItem({items:actorSource.items,type:"feat",slug:"mountains-stoutness",replacement:await this.stoutnessPromise}))}}exports.Migration676ReplaceItemsWithRELikeAEs=Migration676ReplaceItemsWithRELikeAEs,Migration676ReplaceItemsWithRELikeAEs.version=.676},9838:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration677RuleValueDataRefs=void 0;const base_1=__webpack_require__(54310);class Migration677RuleValueDataRefs extends base_1.MigrationBase{async updateItem(itemSource){for(const rule of itemSource.system.rules)"string"==typeof rule.value&&(rule.value=rule.value.replace("@data.","@"))}}exports.Migration677RuleValueDataRefs=Migration677RuleValueDataRefs,Migration677RuleValueDataRefs.version=.677},45497:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration678SeparateNPCAttackTraits=void 0;const data_1=__webpack_require__(52769),_util_1=__webpack_require__(6945),base_1=__webpack_require__(54310);class Migration678SeparateNPCAttackTraits extends base_1.MigrationBase{async updateItem(itemSource){if("weapon"===itemSource.type){const weaponTraits=itemSource.system.traits.value,rangeTraits=weaponTraits.filter((trait=>/^range(?!d)/.test(trait)));for(const trait of rangeTraits)weaponTraits.splice(weaponTraits.indexOf(trait),1);const reloadTraits=weaponTraits.filter((trait=>trait.startsWith("reload")));for(const trait of reloadTraits)weaponTraits.splice(weaponTraits.indexOf(trait),1);itemSource.system.traits.value=[...new Set(weaponTraits)].sort()}if(!itemSource.system.traits)return;const itemTraits=itemSource.system.traits.value;for(const trait of itemTraits)(0,_util_1.tupleHasValue)(data_1.RARITIES,trait)&&(itemTraits.splice(itemTraits.indexOf(trait),1),"common"!==trait&&(0,_util_1.isObject)(itemSource.system.traits.rarity)&&"common"===itemSource.system.traits.rarity.value&&(itemSource.system.traits.rarity.value=trait))}}exports.Migration678SeparateNPCAttackTraits=Migration678SeparateNPCAttackTraits,Migration678SeparateNPCAttackTraits.version=.678},38580:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration679TowerShieldSpeedPenalty=void 0;const base_1=__webpack_require__(54310);class Migration679TowerShieldSpeedPenalty extends base_1.MigrationBase{constructor(){super(...arguments),this.towerShieldSlugs=["darkwood-tower-shield-high-grade","darkwood-tower-shield-standard-grade","tower-shield"]}async updateItem(itemSource){var _a;if("armor"===itemSource.type){const systemData=itemSource.system;this.towerShieldSlugs.includes(null!==(_a=systemData.slug)&&void 0!==_a?_a:"")&&(itemSource.system.speed.value=-5),systemData.armor.value=Number(systemData.armor.value)||0,systemData.speed.value=Number(systemData.speed.value)||0;systemData.potencyRune.value=Number(systemData.potencyRune.value)||0,"resilient"in systemData&&("game"in globalThis?systemData["-=resilient"]=null:delete systemData.resilient)}}}exports.Migration679TowerShieldSpeedPenalty=Migration679TowerShieldSpeedPenalty,Migration679TowerShieldSpeedPenalty.version=.679},95615:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration680SetWeaponHands=void 0;const base_1=__webpack_require__(54310);class Migration680SetWeaponHands extends base_1.MigrationBase{constructor(){super(...arguments),this.oneHandedWeapons=new Set(["repeating-hand-crossbow"]),this.onePlusHandedWeapons=new Set(["backpack-ballista","backpack-catapult","composite-longbow","composite-shortbow","hongali-hornbow","longbow","shortbow","sun-sling"]),this.shieldAttachments=new Set(["shield-boss","shield-spikes"]),this.firearmAttachments=new Set(["bayonette","reinforced-stock"]),this.wornGloves=new Set(["handwraps-of-mighty-blows"]),this.twoHandedWeapons=new Set(["adze","alchemical-crossbow","arquebus","axe-musket","bladed-diabolo","bladed-scarf","blunderbuss","bo-staff","boarding-pike","butchering-axe","combat-grapnel","crossbow","double-barreled-musket","dueling-spear","dwarven-scattergun","elven-branched-spear","elven-curve-blade","explosive-dogslicer","falchion","fauchard","fire-lance","flingflenser","flintlock-musket","gill-hook","glaive","gnome-amalgam-musket","greataxe","greatclub","greatpick","greatsword","guisarme","gun-sword","halberd","halfling-sling-staff","hammer-gun","harmona-gun","heavy-crossbow","horsechopper","kusarigama","lance","longspear","maul","meteor-hammer","mithral-tree","naginata","ogre-hook","ranseur","repeating-crossbow","repeating-heavy-crossbow","scythe","shauth-lash","spiked-chain","taw-launcher","three-peaked-tree","thundermace","war-flail","whip-claw"])}isShield(source){var _a;return"armor"===source.type&&("shield"===(null===(_a=source.system.armorType)||void 0===_a?void 0:_a.value)||"shield"===source.system.category)}async updateItem(itemSource){var _a,_b;if(this.isShield(itemSource))itemSource.system.usage.value="held-in-one-hand";else if("weapon"===itemSource.type){null!==(_a=(_b=itemSource.system).usage)&&void 0!==_a||(_b.usage={value:"held-in-one-hand"});const{baseItem,slug,traits}=itemSource.system,usage=itemSource.system.usage;if(this.twoHandedWeapons.has(baseItem||slug||""))usage.value="held-in-two-hands";else if(this.onePlusHandedWeapons.has(baseItem||slug||""))usage.value="held-in-one-plus-hands";else if(this.oneHandedWeapons.has(baseItem||slug||""))usage.value="held-in-one-hand";else if(this.shieldAttachments.has(baseItem||slug||"")){usage.value="held-in-one-hand";const attachedIndex=traits.value.findIndex((trait=>"attached"===trait));-1!==attachedIndex&&traits.value.splice(attachedIndex,1,"attached-to-shield")}else if(this.firearmAttachments.has(baseItem||slug||"")){usage.value="held-in-one-hand";const attachedIndex=traits.value.findIndex((trait=>"attached"===trait));-1!==attachedIndex&&traits.value.splice(attachedIndex,1,"attached-to-crossbow-or-firearm")}else this.wornGloves.has(baseItem||slug||"")&&(usage.value="worn-gloves")}}}exports.Migration680SetWeaponHands=Migration680SetWeaponHands,Migration680SetWeaponHands.version=.68},4720:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration681GiantLanguageToJotun=void 0;const base_1=__webpack_require__(54310);class Migration681GiantLanguageToJotun extends base_1.MigrationBase{replaceGiant({value}){const giantIndex=value.indexOf("giant");-1!==giantIndex&&value.splice(giantIndex,1,"jotun")}async updateActor(actorSource){"character"!==actorSource.type&&"npc"!==actorSource.type||this.replaceGiant(actorSource.system.traits.languages)}async updateItem(itemSource){"ancestry"===itemSource.type&&this.replaceGiant(itemSource.system.additionalLanguages)}}exports.Migration681GiantLanguageToJotun=Migration681GiantLanguageToJotun,Migration681GiantLanguageToJotun.version=.681},97548:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration682BiographyFields=void 0;const base_1=__webpack_require__(54310);class Migration682BiographyFields extends base_1.MigrationBase{replaceBiographyData(old){var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l,_m,_o,_p,_q,_r,_s,_t,_u,_v,_w,_x,_y,_z;old.details.biography.public?(old.details.biography.appearance=old.details.biography.public,old.details.biography["-=public"]=null):null!==(_a=(_o=old.details.biography).appearance)&&void 0!==_a||(_o.appearance=""),old.details.biography.value?(old.details.biography.campaignNotes=old.details.biography.value,old.details.biography["-=value"]=null):null!==(_b=(_p=old.details.biography).campaignNotes)&&void 0!==_b||(_p.campaignNotes=""),"game"in globalThis||(delete old.details.biography.public,delete old.details.biography.value),null!==(_c=(_q=old.details.biography).backstory)&&void 0!==_c||(_q.backstory=""),null!==(_d=(_r=old.details.biography).birthPlace)&&void 0!==_d||(_r.birthPlace=""),null!==(_e=(_s=old.details.biography).attitude)&&void 0!==_e||(_s.attitude=""),null!==(_f=(_t=old.details.biography).beliefs)&&void 0!==_f||(_t.beliefs=""),null!==(_g=(_u=old.details.biography).likes)&&void 0!==_g||(_u.likes=""),null!==(_h=(_v=old.details.biography).dislikes)&&void 0!==_h||(_v.dislikes=""),null!==(_j=(_w=old.details.biography).catchphrases)&&void 0!==_j||(_w.catchphrases=""),null!==(_k=(_x=old.details.biography).allies)&&void 0!==_k||(_x.allies=""),null!==(_l=(_y=old.details.biography).enemies)&&void 0!==_l||(_y.enemies=""),null!==(_m=(_z=old.details.biography).organaizations)&&void 0!==_m||(_z.organaizations="")}async updateActor(actorSource){"character"===actorSource.type&&this.replaceBiographyData(actorSource.system)}}exports.Migration682BiographyFields=Migration682BiographyFields,Migration682BiographyFields.version=.682},9581:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration683FlavorTextToPublicNotes=void 0;const base_1=__webpack_require__(54310);class Migration683FlavorTextToPublicNotes extends base_1.MigrationBase{replaceFlavorTextData(old){var _a,_b,_c,_d,_e,_f;old.details.flavorText?(old.details.publicNotes=old.details.flavorText,old.details["-=flavorText"]=null):null!==(_a=(_d=old.details).publicNotes)&&void 0!==_a||(_d.publicNotes=""),"game"in globalThis||delete old.details.flavorText,null!==(_b=(_e=old.details).blurb)&&void 0!==_b||(_e.blurb=""),null!==(_c=(_f=old.details).privateNotes)&&void 0!==_c||(_f.privateNotes="")}async updateActor(actorSource){"npc"===actorSource.type&&this.replaceFlavorTextData(actorSource.system)}}exports.Migration683FlavorTextToPublicNotes=Migration683FlavorTextToPublicNotes,Migration683FlavorTextToPublicNotes.version=.683},10852:function(__unused_webpack_module,exports,__webpack_require__){var _Migration684RationsToConsumable_instances,_Migration684RationsToConsumable_rationsSourceId,_Migration684RationsToConsumable_rationsPromise,_Migration684RationsToConsumable_isOldRations,_Migration684RationsToConsumable_getRationRefs,__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration684RationsToConsumable=void 0;const _item_1=__webpack_require__(10843),_util_1=__webpack_require__(6945),base_1=__webpack_require__(54310);class Migration684RationsToConsumable extends base_1.MigrationBase{constructor(){super(...arguments),_Migration684RationsToConsumable_instances.add(this),_Migration684RationsToConsumable_rationsSourceId.set(this,"Compendium.pf2e.equipment-srd.L9ZV076913otGtiB"),_Migration684RationsToConsumable_rationsPromise.set(this,fromUuid(__classPrivateFieldGet(this,_Migration684RationsToConsumable_rationsSourceId,"f")))}async updateActor(source){var _a,_b;const oldRations=source.items.filter((i=>__classPrivateFieldGet(this,_Migration684RationsToConsumable_instances,"m",_Migration684RationsToConsumable_isOldRations).call(this,i))),rations=await __classPrivateFieldGet(this,_Migration684RationsToConsumable_rationsPromise,"f");if(!(rations instanceof _item_1.ConsumablePF2e))throw(0,_util_1.ErrorPF2e)("Unexpected error acquiring compendium item");for(const oldRation of oldRations){const newRation=rations.toObject();newRation.folder=oldRation.folder,newRation.sort=oldRation.sort;const oldContainerId=null!==(_a=oldRation.system.containerId)&&void 0!==_a?_a:{value:null};oldContainerId instanceof Object&&(newRation.system.containerId=oldContainerId.value);const oldQuantity=oldRation.system.quantity;(0,_util_1.isObject)(oldQuantity)&&(newRation.system.quantity=Math.ceil((null!==(_b=oldQuantity.value)&&void 0!==_b?_b:1)/7)),source.items.findSplice((item=>item===oldRation),newRation)}}async updateItem(source){if("kit"!==source.type)return;const rationRefs=__classPrivateFieldGet(this,_Migration684RationsToConsumable_instances,"m",_Migration684RationsToConsumable_getRationRefs).call(this,Object.values(source.system.items));for(const rationRef of rationRefs)rationRef.quantity=Math.ceil(rationRef.quantity/7)}}exports.Migration684RationsToConsumable=Migration684RationsToConsumable,_Migration684RationsToConsumable_rationsSourceId=new WeakMap,_Migration684RationsToConsumable_rationsPromise=new WeakMap,_Migration684RationsToConsumable_instances=new WeakSet,_Migration684RationsToConsumable_isOldRations=function(itemSource){var _a;return"equipment"===(null==itemSource?void 0:itemSource.type)&&(null===(_a=itemSource.flags.core)||void 0===_a?void 0:_a.sourceId)===__classPrivateFieldGet(this,_Migration684RationsToConsumable_rationsSourceId,"f")},_Migration684RationsToConsumable_getRationRefs=function _Migration684RationsToConsumable_getRationRefs(itemRefs){return itemRefs.reduce(((rationRefs,itemRef)=>(itemRef.isContainer&&itemRef.items?rationRefs.push(...__classPrivateFieldGet(this,_Migration684RationsToConsumable_instances,"m",_Migration684RationsToConsumable_getRationRefs).call(this,Object.values(itemRef.items))):"pf2e.equipment-srd"===itemRef.pack&&"L9ZV076913otGtiB"===itemRef.id&&rationRefs.push(itemRef),rationRefs)),[])},Migration684RationsToConsumable.version=.684},26921:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration685FixMeleeUsageTraits=void 0;const base_1=__webpack_require__(54310);class Migration685FixMeleeUsageTraits extends base_1.MigrationBase{async updateItem(itemSource){if("weapon"===itemSource.type){const systemData=itemSource.system;systemData.meleeUsage&&!Array.isArray(systemData.meleeUsage.traits)&&(systemData.meleeUsage.traits=systemData.meleeUsage.traits.value)}}}exports.Migration685FixMeleeUsageTraits=Migration685FixMeleeUsageTraits,Migration685FixMeleeUsageTraits.version=.685},77882:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration686HeroPointsToResources=void 0;const base_1=__webpack_require__(54310);class Migration686HeroPointsToResources extends base_1.MigrationBase{async updateActor(actorSource){if("character"!==actorSource.type)return;const systemSource=actorSource.system;if(systemSource.attributes.heroPoints){systemSource.resources.heroPoints={value:systemSource.attributes.heroPoints.rank},systemSource.attributes["-=heroPoints"]=null,"game"in globalThis||delete systemSource.attributes.heroPoints}}}exports.Migration686HeroPointsToResources=Migration686HeroPointsToResources,Migration686HeroPointsToResources.version=.686},1802:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration687FamiliarityAEsToREs=void 0;const base_1=__webpack_require__(54310);class Migration687FamiliarityAEsToREs extends base_1.MigrationBase{isFamiliarityAE(data){return"object"==typeof data&&null!==data&&("string"==typeof(obj=data).trait&&"string"==typeof obj.category);var obj}toRuleElement(sameAs,aeValue){const aeData=(()=>{try{const parsed=JSON.parse(aeValue);return this.isFamiliarityAE(parsed)?parsed:null}catch(error){return console.warn(error),null}})();return aeData&&{key:"LinkedProficiency",slug:`${aeData.category}-${aeData.trait}-weapons`,predicate:{all:[`weapon:trait:${aeData.trait}`,`weapon:category:${aeData.category}`]},sameAs}}async updateActor(actorSource){actorSource.effects=[]}async updateItem(itemSource){for(const effect of[...itemSource.effects])for(const change of effect.changes.filter((change=>change.key.startsWith("system.martial.")))){const linkTo=change.key.replace(/^data\.martial\.|\.familiarity$/g,""),reData=this.toRuleElement(linkTo,change.value);reData&&itemSource.system.rules.push(reData)}itemSource.effects=[]}}exports.Migration687FamiliarityAEsToREs=Migration687FamiliarityAEsToREs,Migration687FamiliarityAEsToREs.version=.687},80450:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration688ClampSpellLevel=void 0;const base_1=__webpack_require__(54310);class Migration688ClampSpellLevel extends base_1.MigrationBase{async updateItem(itemSource){"spell"===itemSource.type&&(itemSource.system.level.value=Math.min(Math.max(itemSource.system.level.value,1),10))}}exports.Migration688ClampSpellLevel=Migration688ClampSpellLevel,Migration688ClampSpellLevel.version=.688},68850:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration689EncumberanceActiveEffects=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(54310);class Migration689EncumberanceActiveEffects extends base_1.MigrationBase{async updateItem(itemSource){var _a;const systemData=itemSource.system,slug=null!==(_a=systemData.slug)&&void 0!==_a?_a:(0,_util_1.sluggify)(itemSource.name),amountToIncreaseBy="feat"===itemSource.type&&"hefty-hauler"===slug?2:"feat"===itemSource.type&&"hardy-traveler"===slug||"equipment"===itemSource.type&&"lifting-belt"===slug?1:0;if(0===amountToIncreaseBy)return;if(systemData.rules.some((r=>"ActiveEffectLike"===r.key)))return;const rules=[{key:"ActiveEffectLike",path:"system.attributes.bonusEncumbranceBulk",mode:"add",value:amountToIncreaseBy},{key:"ActiveEffectLike",path:"system.attributes.bonusLimitBulk",mode:"add",value:amountToIncreaseBy}];for(const rule of rules)systemData.rules.push(rule)}}exports.Migration689EncumberanceActiveEffects=Migration689EncumberanceActiveEffects,Migration689EncumberanceActiveEffects.version=.689},21715:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration690InitiativeTiebreakItems=void 0;const base_1=__webpack_require__(54310);class Migration690InitiativeTiebreakItems extends base_1.MigrationBase{constructor(){super(...arguments),this.itemSlugs=["ambush-awareness","elven-instincts","pilgrims-token"],this.rule={key:"ActiveEffectLike",path:"system.attributes.initiative.tiebreakPriority",mode:"override",value:0}}async updateItem(itemSource){var _a;!this.itemSlugs.includes(null!==(_a=itemSource.system.slug)&&void 0!==_a?_a:"")||itemSource.system.rules.some((rule=>"ActiveEffectLike"===rule.key))||"pilgrims-token"===itemSource.system.slug&&"equipment"!==itemSource.type||itemSource.system.rules.push(this.rule)}}exports.Migration690InitiativeTiebreakItems=Migration690InitiativeTiebreakItems,Migration690InitiativeTiebreakItems.version=.69},2741:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration691WeaponRangeAbilityCategoryGroup=void 0;const values_1=__webpack_require__(16585),_util_1=__webpack_require__(6945),base_1=__webpack_require__(54310);class Migration691WeaponRangeAbilityCategoryGroup extends base_1.MigrationBase{isOldGroupData(group){return(0,_util_1.isObject)(group)&&("string"==typeof group.value||null===group.value)}isOldRangeData(range){return range instanceof Object&&"value"in range&&"string"==typeof range.value}async updateItem(itemSource){if("weapon"===itemSource.type){const systemData=itemSource.system;systemData.category=(systemData.weaponType?systemData.weaponType.value:systemData.category)||"simple",systemData.weaponType&&(systemData["-=weaponType"]=null,"game"in globalThis||delete systemData.weaponType),systemData.group=(this.isOldGroupData(systemData.group)?systemData.group.value:systemData.group)||null;const hasOldRangeData=this.isOldRangeData(systemData.range);if(systemData.range=hasOldRangeData?Number(systemData.range.value)||null:systemData.range,hasOldRangeData&&systemData.ability&&("str"!==systemData.ability.value||(0,_util_1.setHasElement)(values_1.MANDATORY_RANGED_GROUPS,systemData.group)||(systemData.range=null),delete systemData.ability,systemData["-=ability"]=null),(0,_util_1.setHasElement)(values_1.MANDATORY_RANGED_GROUPS,systemData.group)){const thrownIndex=systemData.traits.value.findIndex((trait=>/^thrown-\d+/.test(trait)));-1!==thrownIndex&&(systemData.traits.value[thrownIndex]="thrown",systemData.reload.value="-")}"falchion"===systemData.baseItem?systemData.group="sword":"orc-knuckle-dagger"===systemData.baseItem&&(systemData.group="knife")}const{rules}=itemSource.system,strikeRules=rules.filter((rule=>/\bStrike$/.test(String(rule.key))));for(const rule of strikeRules)rule.key="Strike",rule.range=Number(rule.range)||null,delete rule.ability}}exports.Migration691WeaponRangeAbilityCategoryGroup=Migration691WeaponRangeAbilityCategoryGroup,Migration691WeaponRangeAbilityCategoryGroup.version=.691},64046:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration692CraftingEntryFeatReplacement=void 0;const _item_1=__webpack_require__(10843),_util_1=__webpack_require__(6945),base_1=__webpack_require__(54310);class Migration692CraftingEntryFeatReplacement extends base_1.MigrationBase{constructor(){super(...arguments),this.requiresFlush=!0,this.slugToPromise=new Map([["advanced-alchemy",fromUuid("Compendium.pf2e.classfeatures.Pe0zmIqyTBc2Td0I")],["field-discovery-bomber",fromUuid("Compendium.pf2e.classfeatures.8QAFgy9U8PxEa7Dw")],["field-discovery-chirurgeon",fromUuid("Compendium.pf2e.classfeatures.qC0Iz6SlG2i9gv6g")],["field-discovery-mutagenist",fromUuid("Compendium.pf2e.classfeatures.V4Jt7eDnJBLv5bDj")],["field-discovery-toxicologist",fromUuid("Compendium.pf2e.classfeatures.6zo2PJGYoig7nFpR")],["infused-reagents",fromUuid("Compendium.pf2e.classfeatures.wySB9VHOW1v3TX1L")],["alchemist-dedication",fromUuid("Compendium.pf2e.feats-srd.CJMkxlxHiHZQYDCz")],["deeper-dabbler",fromUuid("Compendium.pf2e.feats-srd.PTXZ2C3AV8tZf0iX")],["efficient-alchemy-paragon",fromUuid("Compendium.pf2e.feats-srd.2FBZ0apnmZ7b61ct")],["expert-alchemy",fromUuid("Compendium.pf2e.feats-srd.soHLtpMM9h3AE7PD")],["expert-fireworks-crafter",fromUuid("Compendium.pf2e.feats-srd.dDFQJem5K9Jzxgda")],["expert-herbalism",fromUuid("Compendium.pf2e.feats-srd.owJorCBZmUi5lIV0")],["expert-poisoner",fromUuid("Compendium.pf2e.feats-srd.VruIzuysxw4tY6rk")],["firework-technician-dedication",fromUuid("Compendium.pf2e.feats-srd.MVbNnjqQOK9d8Ki3")],["gadget-specialist",fromUuid("Compendium.pf2e.feats-srd.DQN7YC7s7T0pL6Aa")],["herbalist-dedication",fromUuid("Compendium.pf2e.feats-srd.5CRt5Dy9eLv5LpRF")],["master-alchemy",fromUuid("Compendium.pf2e.feats-srd.f6k9lIrIS4SfnCnG")],["munitions-crafter",fromUuid("Compendium.pf2e.feats-srd.lFVqejlf52cdYrZy")],["munitions-machinist",fromUuid("Compendium.pf2e.feats-srd.lh3STEvbGnP7jVMr")],["plentiful-snares",fromUuid("Compendium.pf2e.feats-srd.wGaxWwJhIXbMJft1")],["poisoner-dedication",fromUuid("Compendium.pf2e.feats-srd.y7DDs03GtDnmhxFp")],["snare-genius",fromUuid("Compendium.pf2e.feats-srd.8DIzXO1YpsU3DpJw")],["snare-specialist",fromUuid("Compendium.pf2e.feats-srd.0haS0qXR9xTYKoTG")],["snarecrafter-dedication",fromUuid("Compendium.pf2e.feats-srd.4MUbwilvb9dI0X59")],["talisman-dabbler-dedication",fromUuid("Compendium.pf2e.feats-srd.1t5479E6bdvFs4E7")],["ubiquitous-gadgets",fromUuid("Compendium.pf2e.feats-srd.ny0nfGTDUE4p8TtO")],["ubiquitous-snares",fromUuid("Compendium.pf2e.feats-srd.bX2WI5k0afqPpCfm")]])}replaceItem({items,current,replacement}){if(!(replacement instanceof _item_1.ItemPF2e))throw(0,_util_1.ErrorPF2e)("Unexpected error retrieving compendium item");const newSource=replacement.toObject();"feat"===current.type&&"feat"===newSource.type&&(newSource.system.location=current.system.location),items.splice(items.indexOf(current),1,newSource)}async updateActor(actorSource){"character"===actorSource.type&&this.slugToPromise.forEach((async(promise,slug)=>{const current=actorSource.items.find((itemSource=>"feat"===itemSource.type&&itemSource.system.slug===slug));current&&this.replaceItem({items:actorSource.items,current,replacement:await promise})}))}}exports.Migration692CraftingEntryFeatReplacement=Migration692CraftingEntryFeatReplacement,Migration692CraftingEntryFeatReplacement.version=.692},87780:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration693ArmorCategoryGroup=void 0;const base_1=__webpack_require__(54310);class Migration693ArmorCategoryGroup extends base_1.MigrationBase{isOldGroupData(group){return group instanceof Object&&"value"in group&&("string"==typeof group.value||null===group.value)}async updateItem(itemSource){if("armor"!==itemSource.type)return;const systemData=itemSource.system;systemData.category=(systemData.armorType?systemData.armorType.value:systemData.category)||"simple",systemData.armorType&&(systemData["-=armorType"]=null,"game"in globalThis||delete systemData.armorType),systemData.group=(this.isOldGroupData(systemData.group)?systemData.group.value:systemData.group)||null}}exports.Migration693ArmorCategoryGroup=Migration693ArmorCategoryGroup,Migration693ArmorCategoryGroup.version=.693},35149:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration694RetireSystemTokenSettings=void 0;const base_1=__webpack_require__(54310);class Migration694RetireSystemTokenSettings extends base_1.MigrationBase{async migrate(){const systemNameHover=Number(game.settings.storage.get("world").getItem("pf2e.defaultTokenSettingsName"))||CONST.TOKEN_DISPLAY_MODES.OWNER_HOVER,systemBarHover=Number(game.settings.storage.get("world").getItem("pf2e.defaultTokenSettingsBar"))||CONST.TOKEN_DISPLAY_MODES.OWNER_HOVER,coreTokenDefaults=game.settings.get("core","defaultToken");coreTokenDefaults.displayName=systemNameHover,coreTokenDefaults.displayBars=systemBarHover}}exports.Migration694RetireSystemTokenSettings=Migration694RetireSystemTokenSettings,Migration694RetireSystemTokenSettings.version=.694},14887:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration695SummonToSummoned=void 0;const base_1=__webpack_require__(54310);class Migration695SummonToSummoned extends base_1.MigrationBase{async updateItem(itemSource){var _a;const traits=itemSource.system.traits;if(traits)if("action"===itemSource.type)null!==(_a=traits.custom)&&void 0!==_a||(traits.custom=""),"summon"===traits.custom.toLowerCase()&&(traits.custom="",traits.value=Array.from(new Set([...traits.value,"summon"])).sort());else{const index=traits.value.indexOf("summon");-1!==index&&(traits.value[index]="summoned")}}}exports.Migration695SummonToSummoned=Migration695SummonToSummoned,Migration695SummonToSummoned.version=.695},55269:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration696FlatAbilityModifiers=void 0;const values_1=__webpack_require__(8382),_util_1=__webpack_require__(6945),base_1=__webpack_require__(54310);class Migration696FlatAbilityModifiers extends base_1.MigrationBase{constructor(){super(...arguments),this.abilityModPattern=/@abilities\.([a-z]{3})\.mod\b/,this.abbreviationMap=new Map(Array.from(values_1.ABILITY_ABBREVIATIONS).map((a=>[`PF2E.Ability${(0,_util_1.sluggify)(a,{camel:"bactrian"})}`,a])))}async updateItem(itemSource){var _a,_b,_c,_d;const rules=itemSource.system.rules;for(const rule of rules)if("string"==typeof rule.key&&rule.key.endsWith("FlatModifier")&&"ability"===rule.type&&!(0,_util_1.setHasElement)(values_1.ABILITY_ABBREVIATIONS,rule.ability)){const abilityFromValue=null!==(_b=null===(_a=this.abilityModPattern.exec(String(rule.value)))||void 0===_a?void 0:_a[1])&&void 0!==_b?_b:null;rule.ability=null!==(_d=null!=abilityFromValue?abilityFromValue:this.abbreviationMap.get(String(null!==(_c=rule.label)&&void 0!==_c?_c:"")))&&void 0!==_d?_d:"str","string"==typeof rule.value&&rule.value.startsWith("@")&&rule.value.endsWith(".mod")&&delete rule.value}"thief-racket"!==itemSource.system.slug||rules.some((rule=>"dex"===rule.ability))||rules.unshift({ability:"dex",key:"FlatModifier",predicate:{all:["weapon:melee","weapon:trait:finesse"],not:["weapon:category:unarmed"]},selector:"damage",type:"ability"})}}exports.Migration696FlatAbilityModifiers=Migration696FlatAbilityModifiers,Migration696FlatAbilityModifiers.version=.696},5299:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration697WeaponReachTrait=void 0;const base_1=__webpack_require__(54310);class Migration697WeaponReachTrait extends base_1.MigrationBase{async updateItem(itemSource){if("weapon"===itemSource.type){const traits=itemSource.system.traits.value,numericReach=traits.find((t=>/^reach-\d+$/.test(t)));numericReach&&traits.splice(traits.indexOf(numericReach),1,"reach")}}}exports.Migration697WeaponReachTrait=Migration697WeaponReachTrait,Migration697WeaponReachTrait.version=.697},18133:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration698RemoveDerivedActorTraits=void 0;const values_1=__webpack_require__(49976),base_1=__webpack_require__(54310);class Migration698RemoveDerivedActorTraits extends base_1.MigrationBase{async updateActor(source){if(source.system.traits.traits&&("character"===source.type||"npc"===source.type)){const traits=source.system.traits.traits.value;for(const trait of values_1.ALIGNMENT_TRAITS){const index=traits.indexOf(trait);index>=0&&traits.splice(index,1)}if("character"===source.type){const ancestry=source.items.find((i=>"ancestry"===i.type));if(!ancestry)return;for(const trait of ancestry.system.traits.value){const index=traits.indexOf(trait);index>=0&&traits.splice(index,1)}}}}}exports.Migration698RemoveDerivedActorTraits=Migration698RemoveDerivedActorTraits,Migration698RemoveDerivedActorTraits.version=.698},44069:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration699ItemDescriptionEmptyString=void 0;const base_1=__webpack_require__(54310);class Migration699ItemDescriptionEmptyString extends base_1.MigrationBase{async updateItem(itemSource){var _a,_b;null!==(_a=(_b=itemSource.system.description).value)&&void 0!==_a||(_b.value="")}}exports.Migration699ItemDescriptionEmptyString=Migration699ItemDescriptionEmptyString,Migration699ItemDescriptionEmptyString.version=.699},87232:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration700SingleClassFeatures=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(54310);class Migration700SingleClassFeatures extends base_1.MigrationBase{constructor(){super(...arguments),this.itemIds={alertness:["D8CSi8c9XiRpVc5M","OZaJz4exCoz6vuuv","qJ4fwGpoNC36ZQ8I","2o1Cj7hDayDlslqY","TAIOtk5VvPZvv4nu"],"armor-expertise":["x5jaCJxsmD5sx3KB","fRifyINZF5SKDfib"],"armor-mastery":["CGB1TczFhQhdQxml","IPDwS5pTgU3Cq6Nl"],evasion:["MV6XIuAgN9uSA0Da","EZuWfYSv3ASLyKtu","DqWr3LqUpT3Xi2xq"],"expert-spellcaster":["cD3nSupdCvONuHiE","mdzk070ixIDpid7V"],"great-fortitude":["F57Na5VxfBp56kke","25GSAotUcDwInYgG"],"improved-evasion":["L5D0NwFXdLiVSnk5","6XwGONPdr9SFDtDc"],"incredible-senses":["nLwPMPLRne1HnL00","iyb5FU2BpsCCan8Q","kktZhQPJgC5F4hgU"],"iron-will":["wMyDcVNmA7xGK83S","JVCxv4HuLaaFhAf4"],juggernaut:["OMZs5y16jZRW9KQK","sHCFQZM0xHCOYOId","Ba97T4anGhizfaCt","pzTRQxuoNOeWAalC","ojB0UJWpSekQPjT7"],"lightning-reflexes":["TUOeATt52P43r5W0","rz87RgR1crWTd7j5","Xqd0vrxq2bLXxdaB","tfugXJHITCnArN1b","7PzcKaDGy6tIkQh4","EJzjY6AIsTYqW0ee"],"magical-fortitude":["70jqXP2eS4tRZ0Ok","MzyPNlxrNA5OKVd7"],"master-spellcaster":["l1InYvhnQSz6Ucxc","zu9PcxvfoZlqQVk5"],"medium-armor-expertise":["FCEp9jjxxgRJDJV3","tzUaTqB6GHAeffOl"],"medium-armor-mastery":["cGMSYAErbUG5E8X2","NcEpvnIZfKzG1Iou"],resolve:["JQAujUXjczVnYDEI","D2g6sZQAWaTccviQ","vv63fioCtOvDIdF2","9WjZSliQZJlyGvUi"],"vigilant-senses":["0npO4rPscGm0dX13","NTp146fjLreL5zsj"],"weapon-expertise":["9XLUh9iMepZesdmc","F5BHEav90oOJ2LwN","O99eXctsEjEpuBwe"],"weapon-specialization":["9EqIasqfI8YIM3Pt","WiM7X4xmpMx4s6LD","1NGTc0gqEtwaFqUK"]},this.features=["Alertness","Armor Expertise","Armor Mastery","Evasion","Expert Spellcaster","Great Fortitude","Improved Evasion","Incredible Senses","Iron Will","Juggernaut","Lightning Reflexes","Magical Fortitude","Master Spellcaster","Medium Armor Expertise","Medium Armor Mastery","Resolve","Vigilant Senses","Weapon Expertise","Weapon Specialization"].map((name=>({slug:(0,_util_1.sluggify)(name),name})))}migrateClass(itemSource){var _a;for(const refId in itemSource.system.items){const itemRef=itemSource.system.items[refId];itemRef.level=Number(itemRef.level)||1;for(const feature of this.features)"swashbuckler"===itemSource.system.slug&&"weapon-expertise"===feature.slug||this.itemIds[feature.slug].includes(null!==(_a=itemRef.id)&&void 0!==_a?_a:"")&&(itemRef.id=this.itemIds[feature.slug][0],itemRef.name=feature.name)}}migrateFeature(itemSource){var _a;for(const feature of this.features)"swashbuckler"===itemSource.system.slug&&"weapon-expertise"===feature.slug||(null===(_a=itemSource.system.slug)||void 0===_a?void 0:_a.startsWith(`${feature.slug}-level-`))&&(itemSource.system.slug=feature.slug,itemSource.name.startsWith(`${feature.name} `)&&(itemSource.name=feature.name),itemSource.system.traits.value=[])}async updateItem(itemSource){"class"===itemSource.type?this.migrateClass(itemSource):"feat"===itemSource.type&&"classfeature"===itemSource.system.featType.value&&this.migrateFeature(itemSource)}}exports.Migration700SingleClassFeatures=Migration700SingleClassFeatures,Migration700SingleClassFeatures.version=.7},86401:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration701ModifierNameToSlug=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(54310);class Migration701ModifierNameToSlug extends base_1.MigrationBase{async updateItem(itemSource){const rules=itemSource.system.rules.filter((r=>["FlatModifier","DamageDice"].includes(String(r.key))));for(const rule of rules)rule.name&&(rule.label?rule.slug=(0,_util_1.sluggify)(rule.name):rule.label=rule.name,delete rule.name),"Rage"===rule.label&&(rule.label="PF2E.TraitRage")}}exports.Migration701ModifierNameToSlug=Migration701ModifierNameToSlug,Migration701ModifierNameToSlug.version=.701},84579:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration702REFormulasAtInstanceLevel=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(54310);class Migration702REFormulasAtInstanceLevel extends base_1.MigrationBase{raiseToInstanceLevel(value){return value.replace(/@[a-z.]+/gi,(match=>["@mod","@castLevel","@heighten","@item.badge.value"].includes(match)||match.indexOf("@spell")>=0?match:"@details.level.value"===match||"@actor.details.level.value"===match?"@actor.level":"@item.value.value"===match?"@item.badge.value":match.startsWith("@abilities.")?match.replace(/\babilities\b/,"actor.abilities"):match.startsWith("@attributes.")?match.replace(/\battributes\b/,"actor.attributes"):"@item.level.value"===match?"@item.level":/^@item\.[a-z]+$/.test(match)?match:match.replace(/@item\.(?!data\b)/,"@item.system.").replace(/@(?!(?:item|actor|[A-Z]\w+))/,"@actor.system.")))}async updateItem(itemSource){const rules=itemSource.system.rules;for(const rule of rules)try{if("string"==typeof rule.value)rule.value=this.raiseToInstanceLevel(rule.value);else if((0,_util_1.isObject)(rule.value)&&"brackets"in rule.value&&Array.isArray(rule.value.brackets))for(const bracket of rule.value.brackets)(0,_util_1.isObject)(bracket)&&"string"==typeof bracket.value&&(bracket.value=this.raiseToInstanceLevel(bracket.value));"Note"===rule.key&&rule.text&&(rule.text=this.raiseToInstanceLevel(rule.text))}catch(_a){continue}}}exports.Migration702REFormulasAtInstanceLevel=Migration702REFormulasAtInstanceLevel,Migration702REFormulasAtInstanceLevel.version=.702},14327:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration703SpellDamageStructure=void 0;const base_1=__webpack_require__(54310);class Migration703SpellDamageStructure extends base_1.MigrationBase{async updateItem(itemSource){"spell"===itemSource.type&&(itemSource.system.damage instanceof Object?itemSource.system.damage.value instanceof Object||(itemSource.system.damage.value={}):itemSource.system.damage={value:{}})}}exports.Migration703SpellDamageStructure=Migration703SpellDamageStructure,Migration703SpellDamageStructure.version=.703},27220:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration704MartialProficiencyRE=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(54310);class Migration704MartialProficiencyRE extends base_1.MigrationBase{async updateItem(itemSource){var _a;const rules=itemSource.system.rules.filter((r=>"LinkedProficiency"===r.key));for(const rule of rules)if(rule.key="MartialProficiency",rule.definition=rule.predicate,delete rule.predicate,"string"==typeof rule.slug&&(null===(_a=itemSource.system.slug)||void 0===_a?void 0:_a.endsWith("-weapon-familiarity"))&&!rule.label){const key=(0,_util_1.sluggify)(rule.slug,{camel:"bactrian"});rule.label=`PF2E.SpecificRule.MartialProficiency.${key}`}if("class"===itemSource.type&&"gunslinger"===itemSource.system.slug&&0===itemSource.system.rules.length){const gunslingerRules=[{definition:{all:["weapon:category:simple"],any:["weapon:group:firearm","weapon:tag:crossbow"]},key:"MartialProficiency",label:"PF2E.SpecificRule.MartialProficiency.SimpleFirearmsCrossbows",slug:"simple-firearms-crossbows",value:2},{definition:{all:["weapon:category:martial"],any:["weapon:group:firearm","weapon:tag:crossbow"]},key:"MartialProficiency",label:"PF2E.SpecificRule.MartialProficiency.MartialFirearmsCrossbows",slug:"martial-firearms-crossbows",value:2},{definition:{all:["weapon:category:advanced"],any:["weapon:group:firearm","weapon:tag:crossbow"]},key:"MartialProficiency",label:"PF2E.SpecificRule.MartialProficiency.AdvancedFirearmsCrossbows",slug:"advanced-firearms-crossbows",value:1}];itemSource.system.rules=gunslingerRules}}}exports.Migration704MartialProficiencyRE=Migration704MartialProficiencyRE,Migration704MartialProficiencyRE.version=.704},64131:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration705GunslingerCatchUp=void 0;const base_1=__webpack_require__(54310);class Migration705GunslingerCatchUp extends base_1.MigrationBase{async updateItem(itemSource){if("feat"===itemSource.type&&"classfeature"===itemSource.system.featType.value)switch(itemSource.system.slug){case"singular-expertise":{const rules=[{key:"FlatModifier",selector:"firearm-weapon-group-damage",type:"circumstance",value:1},{key:"FlatModifier",predicate:{all:["weapon:tag:crossbow"]},selector:"bow-weapon-group-damage",type:"circumstance",value:1}];itemSource.system.rules=rules;break}case"gunslinger-weapon-mastery":{const rules=[{key:"ActiveEffectLike",mode:"upgrade",path:"system.martial.unarmed.rank",value:2},{key:"ActiveEffectLike",mode:"upgrade",path:"system.martial.simple.rank",value:2},{key:"ActiveEffectLike",mode:"upgrade",path:"system.martial.martial.rank",value:2},{key:"ActiveEffectLike",mode:"upgrade",path:"system.martial.advanced-firearms-crossbows.rank",value:2},{key:"ActiveEffectLike",mode:"upgrade",path:"system.martial.simple-firearms-crossbows.rank",value:3},{key:"ActiveEffectLike",mode:"upgrade",path:"system.martial.martial-firearms-crossbows.rank",value:3}];itemSource.system.rules=rules;break}case"gunslinging-legend":{const rules=[{key:"ActiveEffectLike",mode:"upgrade",path:"system.martial.unarmed.rank",value:3},{key:"ActiveEffectLike",mode:"upgrade",path:"system.martial.simple.rank",value:3},{key:"ActiveEffectLike",mode:"upgrade",path:"system.martial.martial.rank",value:3},{key:"ActiveEffectLike",mode:"upgrade",path:"system.martial.advanced-firearms-crossbows.rank",value:3},{key:"ActiveEffectLike",mode:"upgrade",path:"system.martial.simple-firearms-crossbows.rank",value:4},{key:"ActiveEffectLike",mode:"upgrade",path:"system.martial.martial-firearms-crossbows.rank",value:4}];itemSource.system.rules=rules;break}}}}exports.Migration705GunslingerCatchUp=Migration705GunslingerCatchUp,Migration705GunslingerCatchUp.version=.705},99488:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration706FormulasAtInstanceLevelEverythingElse=void 0;const _702_re_formulas_at_instance_level_1=__webpack_require__(84579);class Migration706FormulasAtInstanceLevelEverythingElse extends _702_re_formulas_at_instance_level_1.Migration702REFormulasAtInstanceLevel{async updateItem(itemSource){if(itemSource.system.description.value&&(itemSource.system.description.value=this.replaceInlineRolls(itemSource.system.description.value)),"spell"===itemSource.type)for(const value of Object.values(itemSource.system.damage.value))value.value=this.raiseToInstanceLevel(value.value);if("melee"===itemSource.type)for(const value of Object.values(itemSource.system.damageRolls))value.damage=this.raiseToInstanceLevel(value.damage)}replaceInlineRolls(value){return value.replace(/\[\[(.*)\]\]/g,(match=>this.raiseToInstanceLevel(match)))}}exports.Migration706FormulasAtInstanceLevelEverythingElse=Migration706FormulasAtInstanceLevelEverythingElse,Migration706FormulasAtInstanceLevelEverythingElse.version=.706},66857:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration707BracketedFormulasAtInstanceLevel=void 0;const _702_re_formulas_at_instance_level_1=__webpack_require__(84579);class Migration707BracketedFormulasAtInstanceLevel extends _702_re_formulas_at_instance_level_1.Migration702REFormulasAtInstanceLevel{}exports.Migration707BracketedFormulasAtInstanceLevel=Migration707BracketedFormulasAtInstanceLevel,Migration707BracketedFormulasAtInstanceLevel.version=.707},68028:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration708SpecificRuleLabel=void 0;const base_1=__webpack_require__(54310);class Migration708SpecificRuleLabel extends base_1.MigrationBase{async updateItem(itemSource){for(const rule of itemSource.system.rules)rule.label&&(rule.label=String(rule.label).replace(/\bSpecificRules\b/,"SpecificRule"))}}exports.Migration708SpecificRuleLabel=Migration708SpecificRuleLabel,Migration708SpecificRuleLabel.version=.708},7116:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration709REFormulasAtInstanceLevelRedux=void 0;const _util_1=__webpack_require__(6945),_702_re_formulas_at_instance_level_1=__webpack_require__(84579);class Migration709REFormulasAtInstanceLevelRedux extends _702_re_formulas_at_instance_level_1.Migration702REFormulasAtInstanceLevel{walkObject(obj){if(Array.isArray(obj))for(let i=0;i<obj.length;i++)obj[i]=this.findAndMigrateFormulas(obj[i]);else for(const[key,value]of Object.entries(obj))obj[key]=this.findAndMigrateFormulas(value)}findAndMigrateFormulas(value){return"string"==typeof value&&value.includes("@")?this.raiseToInstanceLevel(value):((0,_util_1.isObject)(value)&&this.walkObject(value),value)}async updateItem(itemSource){const rules=itemSource.system.rules.filter((r=>"BattleForm"===r.key));for(const rule of rules)this.walkObject(rule);"spell"===itemSource.type&&"wild-shape"===itemSource.system.slug&&(itemSource.system.rules=[])}}exports.Migration709REFormulasAtInstanceLevelRedux=Migration709REFormulasAtInstanceLevelRedux,Migration709REFormulasAtInstanceLevelRedux.version=.709},26183:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration710RarityToString=void 0;const base_1=__webpack_require__(54310);class Migration710RarityToString extends base_1.MigrationBase{updateTraits(traits){"object"==typeof(null==traits?void 0:traits.rarity)&&null!==traits.rarity&&(traits.rarity=traits.rarity.value)}async updateActor(actorSource){var _a;"traits"in actorSource.system&&this.updateTraits(null!==(_a=actorSource.system.traits)&&void 0!==_a?_a:null)}async updateItem(itemSource){var _a;"traits"in itemSource.system&&this.updateTraits(null!==(_a=itemSource.system.traits)&&void 0!==_a?_a:null)}}exports.Migration710RarityToString=Migration710RarityToString,Migration710RarityToString.version=.71},96902:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration711HeritageItems=void 0;const traits_1=__webpack_require__(39713),base_1=__webpack_require__(54310);class Migration711HeritageItems extends base_1.MigrationBase{constructor(){super(...arguments),this.officialAncestries={tengu:{name:"Tengu",uuid:"Compendium.pf2e.ancestries.18xDKYPDBLEv2myX"},kitsune:{name:"Kitsune",uuid:"Compendium.pf2e.ancestries.4BL5wf1VF9feC2rY"},poppet:{name:"Poppet",uuid:"Compendium.pf2e.ancestries.6F2fSFC1Eo1JdpY4"},kobold:{name:"Kobold",uuid:"Compendium.pf2e.ancestries.7oQxL6wgsokD3QXG"},catfolk:{name:"Catfolk",uuid:"Compendium.pf2e.ancestries.972EkpJOPv9KkQIW"},dwarf:{name:"Dwarf",uuid:"Compendium.pf2e.ancestries.BYj5ZvlXZdpaEgA6"},gnome:{name:"Gnome",uuid:"Compendium.pf2e.ancestries.CYlfsYLJcBOgqKtD"},fleshwarp:{name:"Fleshwarp",uuid:"Compendium.pf2e.ancestries.FXlXmNBFiiz9oasi"},strix:{name:"Strix",uuid:"Compendium.pf2e.ancestries.GXcC6oVa5quzgNHD"},android:{name:"Android",uuid:"Compendium.pf2e.ancestries.GfLwE884NoRC7cRi"},halfling:{name:"Halfling",uuid:"Compendium.pf2e.ancestries.GgZAHbrjnzWOZy2v"},lizardfolk:{name:"Lizardfolk",uuid:"Compendium.pf2e.ancestries.HWEgF7Gmoq55VhTL"},human:{name:"Human",uuid:"Compendium.pf2e.ancestries.IiG7DgeLWYrSNXuX"},ratfolk:{name:"Ratfolk",uuid:"Compendium.pf2e.ancestries.P6PcVnCkh4XMdefw"},elf:{name:"Elf",uuid:"Compendium.pf2e.ancestries.PgKmsA2aKdbLU6O0"},anadi:{name:"Anadi",uuid:"Compendium.pf2e.ancestries.TQEqWqc7BYiadUdY"},sprite:{name:"Sprite",uuid:"Compendium.pf2e.ancestries.TRqoeYfGAFjQbviF"},goloma:{name:"Goloma",uuid:"Compendium.pf2e.ancestries.c4secsSNG2AO7I5i"},leshy:{name:"Leshy",uuid:"Compendium.pf2e.ancestries.cdhgByGG1WtuaK73"},fetchling:{name:"Fetchling",uuid:"Compendium.pf2e.ancestries.hIA3qiUsxvLZXrFP"},grippli:{name:"Grippli",uuid:"Compendium.pf2e.ancestries.hXM5jXezIki1cMI2"},automaton:{name:"Automaton",uuid:"Compendium.pf2e.ancestries.kYsBAJ103T44agJF"},orc:{name:"Orc",uuid:"Compendium.pf2e.ancestries.lSGWXjcbOa6O5fTx"},hobgoblin:{name:"Hobgoblin",uuid:"Compendium.pf2e.ancestries.piNLXUrm9iaGqD2i"},shoony:{name:"Shoony",uuid:"Compendium.pf2e.ancestries.q6rsqYARyOGXZA8F"},goblin:{name:"Goblin",uuid:"Compendium.pf2e.ancestries.sQfjTMDaZbT9DThq"},conrasu:{name:"Conrasu",uuid:"Compendium.pf2e.ancestries.tZn4qIHCUA6wCdnI"},gnoll:{name:"Gnoll",uuid:"Compendium.pf2e.ancestries.vxbQ1Yw4qwgjTzqo"},shisk:{name:"Shisk",uuid:"Compendium.pf2e.ancestries.x1YinOddgUxwOLqP"},azarketi:{name:"Azarketi",uuid:"Compendium.pf2e.ancestries.yFoojz6q3ZjvceFw"}},this.heritagesWithoutAncestryInName={"half-elf":"human","half-orc":"human","skilled-heritage":"human","versatile-heritage":"human",draxie:"sprite",grig:"sprite",melixie:"sprite",nyktera:"sprite",pixie:"sprite","deep-rat":"ratfolk","desert-rat":"ratfolk","longsnout-rat":"ratfolk","sewer-rat":"ratfolk","shadow-rat":"ratfolk","snow-rat":"ratfolk","tunnel-rat":"ratfolk","rite-of-invocation":"conrasu","rite-of-knowing":"conrasu","rite-of-light":"conrasu","rite-of-passage":"conrasu","rite-of-reinforcement":"conrasu"},this.ancestrySlugs=Object.keys(this.officialAncestries)}isHeritageFeature(feature){return"feat"===feature.type&&"heritage"===feature.system.featType.value}heritageFromFeat(feature){var _a,_b,_c,_d;const featureSlug=null!==(_a=feature.system.slug)&&void 0!==_a?_a:"",ancestrySlug=null!==(_b=this.heritagesWithoutAncestryInName[featureSlug])&&void 0!==_b?_b:this.ancestrySlugs.find((s=>featureSlug.includes(s))),ancestryReference=null!==(_c=this.officialAncestries[null!=ancestrySlug?ancestrySlug:""])&&void 0!==_c?_c:null,traits=feature.system.traits,{flags}=feature;return(null===(_d=flags.core)||void 0===_d?void 0:_d.sourceId)&&(flags.core.sourceId=flags.core.sourceId.replace("ancestryfeatures","heritages")),{_id:randomID(),type:"heritage",img:feature.img.endsWith("/feat.svg")?"systems/pf2e/icons/default-icons/heritage.svg":feature.img,name:feature.name,effects:[],folder:feature.folder,flags:feature.flags,sort:feature.sort,ownership:feature.ownership,system:{description:feature.system.description,rules:feature.system.rules,schema:feature.system.schema,slug:feature.system.slug,ancestry:ancestryReference,traits:{value:traits.value.filter((t=>(t in traits_1.creatureTraits||t.startsWith("hb_"))&&!(t in this.officialAncestries))),rarity:traits.rarity,custom:""},source:feature.system.source}}}async updateActor(actorSource){const heritageFeatures=actorSource.items.filter((i=>this.isHeritageFeature(i))),firstHeritageFeature=heritageFeatures[0];if(!actorSource.items.some((i=>"heritage"===i.type))&&firstHeritageFeature&&"character"===actorSource.type){const heritageSource=this.heritageFromFeat(firstHeritageFeature);actorSource.items.push(heritageSource);const details=actorSource.system.details;details.heritage&&(details["-=heritage"]=null,"game"in globalThis||delete details.heritage)}for(const feature of heritageFeatures)actorSource.items.splice(actorSource.items.indexOf(feature),1)}async updateItem(itemSource,actorSource){if(actorSource||!this.isHeritageFeature(itemSource))return;const newSource=itemSource;newSource.type="heritage","systems/pf2e/icons/default-icons/feat.svg"===itemSource.img&&(itemSource.img="systems/pf2e/icons/default-icons/heritage.svg");const newSystemData=this.heritageFromFeat(itemSource).system,toDelete=["featType","actionCategory","actions","actionType","level","location"],deletionProperties=toDelete.map((k=>`-=${k}`));for(const property of deletionProperties)newSystemData[property]=null;if(!("game"in globalThis))for(const property of toDelete)delete newSystemData[property];newSource.system=newSystemData}}exports.Migration711HeritageItems=Migration711HeritageItems,Migration711HeritageItems.version=.711},75992:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration712ActorShieldStructure=void 0;const base_1=__webpack_require__(54310);class Migration712ActorShieldStructure extends base_1.MigrationBase{async updateActor(source){if("character"===source.type||"npc"===source.type){const attributes=source.system.attributes;attributes.shield&&(attributes["-=shield"]=null,"game"in globalThis?attributes.shield={}:delete attributes.shield)}}}exports.Migration712ActorShieldStructure=Migration712ActorShieldStructure,Migration712ActorShieldStructure.version=.712},94697:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration713FistToStrikeRE=void 0;const base_1=__webpack_require__(54310);class Migration713FistToStrikeRE extends base_1.MigrationBase{async updateItem(itemSource){if("feat"!==itemSource.type||!["powerful-fist","martial-artist-dedication"].includes(itemSource.system.slug))return;if(itemSource.system.rules.some((rule=>"Strike"===rule.key)))return;itemSource.system.rules=[{key:"Strike",img:"systems/pf2e/icons/features/classes/powerful-fist.webp",slug:"fist",category:"unarmed",damage:{base:{damageType:"bludgeoning",dice:1,die:"d6"}},group:"brawling",label:"PF2E.Strike.Fist.Label",range:null,traits:["agile","finesse","nonlethal","unarmed"]}]}}exports.Migration713FistToStrikeRE=Migration713FistToStrikeRE,Migration713FistToStrikeRE.version=.713},2923:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration714RangeIncrementREs=void 0;const base_1=__webpack_require__(54310);class Migration714RangeIncrementREs extends base_1.MigrationBase{constructor(){super(...arguments),this.farLobber={definition:{all:["weapon:base:alchemical-bomb"]},key:"AdjustStrike",mode:"upgrade",property:"range-increment",value:30},this.farShot={definition:{all:["weapon:ranged"]},key:"AdjustStrike",mode:"multiply",property:"range-increment",value:2},this.farThrow={key:"AdjustModifier",mode:"add",predicate:{all:["weapon:trait:thrown"]},selectors:["ranged-attack-roll"],slug:"range-penalty",value:1},this.huntPrey={key:"RollOption",domain:"ranged-attack-roll",option:"ignore-range-penalty:2",predicate:{all:["hunted-prey"]}},this.legendaryShot={key:"RollOption",domain:"ranged-attack-roll",option:"ignore-range-penalty:5"},this.masterfulHunter={key:"RollOption",domain:"ranged-attack-roll",option:"ignore-range-penalty:3",predicate:{all:["hunted-prey",{gte:["weapon:proficiency:rank",3]}]}},this.shootistsEdge=[{key:"ActiveEffectLike",mode:"upgrade",path:"system.attributes.classDC.rank",value:3},{key:"RollOption",domain:"ranged-attack-roll",option:"ignore-range-penalty:3",phase:"beforeRoll",predicate:{all:[{gte:["weapon:proficiency:rank",3]}]}}],this.triangulate=[{default:!0,key:"ToggleProperty",label:"PF2E.SpecificRule.ToggleProperty.Triangulate",property:"flags.pf2e.rollOptions.all.triangulate"},{domain:"ranged-attack-roll",key:"RollOption",option:"ignore-range-penalty:2",predicate:{all:["triangulate"]}},{key:"AdjustModifier",mode:"add",predicate:{all:["triangulate"]},selectors:["ranged-attack-roll"],slug:"range-penalty",value:1}],this.uncannyBombs={definition:{all:["weapon:base:alchemical-bomb"]},key:"AdjustStrike",mode:"upgrade",property:"range-increment",value:60},this.unerringShot={key:"RollOption",option:"ignore-range-penalty",phase:"beforeRoll",predicate:{all:[{gte:["weapon:proficiency:rank",3]}]}}}async updateItem(source){const{rules}=source.system;if("feat"===source.type)switch(source.system.slug){case"far-lobber":return void(source.system.rules=[this.farLobber]);case"far-shot":return void(source.system.rules=[this.farShot]);case"far-throw":return void(source.system.rules=[this.farThrow]);case"hunt-prey":return void(!rules.some((r=>"RollOption"===r.key&&r.option===this.huntPrey.option))&&rules.push(this.huntPrey));case"legendary-shot":return void(source.system.rules=[this.legendaryShot]);case"masterful-hunter":return void(!rules.some((r=>"RollOption"===r.key&&r.option===this.masterfulHunter.option))&&rules.push(this.masterfulHunter));case"shootists-edge":return void(source.system.rules=this.shootistsEdge);case"triangulate":return void(source.system.rules=this.triangulate);case"uncanny-bombs":return void(source.system.rules=[this.uncannyBombs]);case"unerring-shot":return void(source.system.rules=[this.unerringShot])}}}exports.Migration714RangeIncrementREs=Migration714RangeIncrementREs,Migration714RangeIncrementREs.version=.714},91984:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration715DangerousSorcery=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(54310);class Migration715DangerousSorcery extends base_1.MigrationBase{constructor(){super(...arguments),this.dangerousSorcery={key:"FlatModifier",phase:"afterDerived",predicate:{all:["item:spell-slot","item:duration:0","damaging-effect"]},selector:"spell-damage",value:"@spell.level"}}async updateItem(source){var _a;if("feat"!==source.type)return;"dangerous-sorcery"!==(null!==(_a=source.system.slug)&&void 0!==_a?_a:(0,_util_1.sluggify)(source.name))||source.system.rules.length||(source.system.rules=[this.dangerousSorcery])}}exports.Migration715DangerousSorcery=Migration715DangerousSorcery,Migration715DangerousSorcery.version=.715},67683:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration716StrikeDamageSelector=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(54310);class Migration716StrikeDamageSelector extends base_1.MigrationBase{constructor(){super(...arguments),this.itemsToSkip=new Set(["effect-fanatical-frenzy","effect-heroic-recovery","effect-lantern-of-hope","effect-lantern-of-hope-gestalt","spell-effect-inspire-courage","spell-effect-inspire-heroics-courage-2","spell-effect-inspire-heroics-courage-3","spell-effect-stoke-the-heart"])}async updateItem(source){var _a,_b;if(this.itemsToSkip.has(null!==(_a=source.system.slug)&&void 0!==_a?_a:""))return;const{rules}=source.system;for(const rule of rules)(0,_util_1.isObject)(rule)&&["damage","mundane-damage"].includes(String(null!==(_b=rule.selector)&&void 0!==_b?_b:""))&&(rule.selector="strike-damage")}}exports.Migration716StrikeDamageSelector=Migration716StrikeDamageSelector,Migration716StrikeDamageSelector.version=.716},9553:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration717TakeFeatLimits=void 0;const base_1=__webpack_require__(54310);class Migration717TakeFeatLimits extends base_1.MigrationBase{constructor(){super(...arguments),this.levelOneOnly=new Set(["celestial-eyes","chance-death","deliberate-death","elemental-eyes","eyes-of-the-night","fiendish-eyes","gravesight","willing-death"]),this.maxTakeable={"additional-lore":1/0,"advanced-domain":1/0,"advanced-general-training":1/0,"animal-senses":1/0,"animal-senses-darkvision":1/0,"animal-senses-low-light-vision":1/0,"animal-senses-scent-imprecise":1/0,"armor-proficiency":3,assurance:1/0,"automatic-knowledge":1/0,"blessing-of-the-sun-gods":1/0,"consult-the-spirits":1/0,"domain-initiate":1/0,"general-training":1/0,"greater-animal-senses":1/0,"greater-sun-blessing":1/0,"hellknight-order-cross-training":1/0,"living-weapon":1/0,"magic-arrow":1/0,"modular-dynamo":1/0,multilingual:1/0,"settlement-scholastics":1/0,"skill-training":1/0,"terrain-stalker":1/0}}async updateItem(source){var _a;if("feat"!==source.type)return;const slug=null!==(_a=source.system.slug)&&void 0!==_a?_a:"";source.system.traits.value.includes("lineage")||this.levelOneOnly.has(slug)?source.system.onlyLevel1=!0:"game"in globalThis&&(source.system.onlyLevel1=!1),!source.system.onlyLevel1&&slug in this.maxTakeable?source.system.maxTakable=this.maxTakeable[slug]:"game"in globalThis&&(source.system.maxTakable=1)}}exports.Migration717TakeFeatLimits=Migration717TakeFeatLimits,Migration717TakeFeatLimits.version=.717},22290:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration718CarryType=void 0;const helpers_1=__webpack_require__(44252),base_1=__webpack_require__(54310),usage_1=__webpack_require__(65441);class Migration718CarryType extends base_1.MigrationBase{async updateItem(itemData,actor){var _a,_b,_c,_d,_e,_f,_g;if(!(0,helpers_1.isPhysicalData)(itemData))return;const systemData=itemData.system;if(systemData.usage instanceof Object||(systemData.usage={value:"held-in-one-hand"}),"worn-gloves"===systemData.usage.value)systemData.usage.value="worngloves";else if("armor"===itemData.type){const{category}=itemData.system;systemData.usage.value="shield"===category?"held-in-one-hand":"wornarmor"}else"equipment"===itemData.type&&(null===(_a=systemData.slug)||void 0===_a?void 0:_a.startsWith("clothing-"))&&(systemData.usage.value="worn");if(!("game"in globalThis)&&!actor)return void delete systemData.equipped;null!==(_b=systemData.equipped)&&void 0!==_b||(systemData.equipped={carryType:"worn"}),null!==(_c=(_g=systemData.equipped).carryType)&&void 0!==_c||(_g.carryType="worn");const equipped=systemData.equipped;if(!("value"in equipped))return;if(!actor||!["character","npc"].includes(null!==(_d=actor.type)&&void 0!==_d?_d:""))return equipped["-=value"]=null,void delete equipped.value;const containerId=null!==(_e=itemData.system.containerId)&&void 0!==_e?_e:{value:null};if(containerId instanceof Object&&containerId.value){const inStowingContainer=actor.items.some((i=>"backpack"===i.type&&i.system.stowing&&i._id===containerId.value));if(inStowingContainer){if(inStowingContainer)return void(equipped.carryType="stowed")}else containerId.value=null}equipped.carryType="worn";const usage=(0,usage_1.getUsageDetails)(systemData.usage.value);"worn"===usage.type?equipped.inSlot=!!equipped.value:"held"===usage.type&&(equipped.value&&(equipped.carryType="held"),equipped.handsHeld=equipped.value?null!==(_f=usage.hands)&&void 0!==_f?_f:1:0),equipped["-=value"]=null,delete equipped.value}}exports.Migration718CarryType=Migration718CarryType,Migration718CarryType.version=.718},55338:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration719ShrugFlanking=void 0;const base_1=__webpack_require__(54310);class Migration719ShrugFlanking extends base_1.MigrationBase{constructor(){super(...arguments),this.npcVariants=new Map([["YsBSkW3aFwU1bl3w",13],["0Kb4z4h8KVqfrIju",8],["B09JfuBZHjcRXztU",4],["aaDiR0EIWRQx8wdy",3],["x4m5ks6Rd8fYzXPm",4],["qKHkamxIPbqxEiwp",6],["lCvJquCqvZJVnafy",8],["vkLhqX5oR1t89puZ",7],["aIT5S2fKgMZ6pVP2",11],["l6EuZR6zCdqyCywW",6],["QKkvnlqrhgLHuP1t",10],["ZY3q7AV1qbwWwNl2",8],["6pPolNZycfDiOl2I",8],["cQMM2Ld0IBM9GcDo",11],["VkG5yl9xcmziwpQD",4],["JrowrtDilEG8dN2s",11],["1lkay2gwgEquq0NF",6],["EMl8hARVJk8SNVyW",4],["j31HXlZiUqQrAHSB",12],["pjnTEh0NVd1DB6jI",4]])}async updateItem(source,actorSource){var _a,_b,_c,_d,_e,_f;const slug=null!==(_a=source.system.slug)&&void 0!==_a?_a:"";switch(source.type){case"action":if("all-around-vision"===slug)source.system.rules=[this.allAroundVision];else if("npc"===(null==actorSource?void 0:actorSource.type)&&"Deny Advantage"===source.name){const sourceId=null===(_b=actorSource.flags.core)||void 0===_b?void 0:_b.sourceId,npcId=null!==(_c=null==sourceId?void 0:sourceId.replace(/^Compendium\.[^.]+\./,""))&&void 0!==_c?_c:actorSource._id;if(this.needsDenyAdvantage(source.system.rules)){const rule=this.npcDenyAvantage(npcId);source.system.rules.push(rule)}}return;case"effect":return void("stance-wolf-stance"===slug&&(source.system.rules=this.wolfStanceRules));case"feat":{source.system.slug=null!==(_e=null===(_d=source.system.slug)||void 0===_d?void 0:_d.replace(/^deny-advantage-level-\d$/,"deny-advantage"))&&void 0!==_e?_e:null;const featSlug=null!==(_f=source.system.slug)&&void 0!==_f?_f:"";if(["constant-gaze","deny-advantage"].includes(featSlug)&&this.needsDenyAdvantage(source.system.rules))source.system.rules.push(this.denyAdvantage);else if("gang-up"===featSlug)source.system.rules=[this.gangUp];else if(featSlug.startsWith("side-by-side")){const sideBySide=this.gangUp;sideBySide.value="animal-companion",source.system.rules=[sideBySide]}else if(["pack-tactics","squad-tactics"].includes(featSlug)){const tactics=this.gangUp;tactics.value=2,source.system.rules=[tactics]}}}}get allAroundVision(){return{key:"ActiveEffectLike",mode:"override",path:"system.attributes.flanking.flankable",value:!1}}get denyAdvantage(){return{key:"ActiveEffectLike",mode:"override",path:"system.attributes.flanking.flatFootable",value:"@actor.level"}}get gangUp(){return{key:"ActiveEffectLike",mode:"add",path:"system.attributes.flanking.canGangUp",value:1}}get wolfStanceRules(){return[{category:"unarmed",damage:{base:{damageType:"piercing",dice:1,die:"d8"}},group:"brawling",key:"Strike",label:"PF2E.SpecificRule.Stance.Attack.WolfJaws",range:null,slug:"wolf-jaws",traits:["agile","backstabber","finesse","unarmed","nonlethal"]},{definition:{all:["weapon:wolf-jaws"]},key:"AdjustStrike",mode:"add",predicate:{all:["self:flanking"]},property:"traits",value:"trip"}]}npcDenyAvantage(npcId=""){var _a;const{denyAdvantage}=this;return denyAdvantage.value=null!==(_a=this.npcVariants.get(npcId))&&void 0!==_a?_a:"@actor.level",denyAdvantage}needsDenyAdvantage(rules){return!rules.some((r=>"ActiveEffectLike"===r.key&&"system.attributes.flanking.flatFootable"===r.path))}}exports.Migration719ShrugFlanking=Migration719ShrugFlanking,Migration719ShrugFlanking.version=.719},74650:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration720UpdateSpellDescriptions=void 0;const base_1=__webpack_require__(54310),_item_1=__webpack_require__(10843),from_uuids_1=__webpack_require__(16539),_util_1=__webpack_require__(6945);class Migration720UpdateSpellDescriptions extends base_1.MigrationBase{constructor(){super(...arguments),this.spellUUIDs=new Set(["Compendium.pf2e.spells-srd.GoKkejPj5yWJPIPK","Compendium.pf2e.spells-srd.1b55SgYTV65JvmQd","Compendium.pf2e.spells-srd.b515AZlB0sridKSq","Compendium.pf2e.spells-srd.NBSBFHxBm88qxQUy","Compendium.pf2e.spells-srd.9TauMFkIsmvKJNzZ","Compendium.pf2e.spells-srd.LoBjvguamA12iyW0","Compendium.pf2e.spells-srd.IWUe32Y5k2QFd7YQ","Compendium.pf2e.spells-srd.WBmvzNDfpwka3qT4"]),this.spells=(0,from_uuids_1.fromUUIDs)([...this.spellUUIDs])}async updateItem(source){var _a;if("spell"!==source.type||!(0,_util_1.setHasElement)(this.spellUUIDs,null===(_a=source.flags.core)||void 0===_a?void 0:_a.sourceId))return;const spell=(await this.spells).find((s=>s instanceof _item_1.SpellPF2e&&s.slug===source.system.slug));spell&&(source.system.description.value=spell.description)}}exports.Migration720UpdateSpellDescriptions=Migration720UpdateSpellDescriptions,Migration720UpdateSpellDescriptions.version=.72},16191:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration721SetReloadValues=void 0;const base_1=__webpack_require__(54310),_util_1=__webpack_require__(6945);class Migration721SetReloadValues extends base_1.MigrationBase{constructor(){super(...arguments),this.toUpdate=new Set(["air-repeater","composite-longbow","composite-shortbow","godsbreath-bow","hunters-bow","long-air-repeater","longbow","oathbow","repeating-crossbow","repeating-hand-crossbow","shortbow","singing-shortbow-greater","singing-shortbow","sky-piercing-bow"])}async updateItem(source){"weapon"===source.type&&(0,_util_1.setHasElement)(this.toUpdate,source.system.slug)&&(source.system.reload.value="0")}}exports.Migration721SetReloadValues=Migration721SetReloadValues,Migration721SetReloadValues.version=.721},47027:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration722CraftingSystemData=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(54310);class Migration722CraftingSystemData extends base_1.MigrationBase{async updateActor(source){if("character"!==source.type)return;(0,_util_1.isObject)(source.system.crafting)||(source.system.crafting={entries:{},formulas:[]});const{crafting}=source.system;(0,_util_1.isObject)(crafting.entries)&&!Array.isArray(crafting.entries)||(crafting.entries={}),Array.isArray(crafting.formulas)||(crafting.formulas=[])}}exports.Migration722CraftingSystemData=Migration722CraftingSystemData,Migration722CraftingSystemData.version=.722},58598:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration723CumulativeItemBonuses=void 0;const _item_1=__webpack_require__(10843),from_uuids_1=__webpack_require__(16539),base_1=__webpack_require__(54310);class Migration723CumulativeItemBonuses extends base_1.MigrationBase{constructor(){super(...arguments),this.stanceFeats=(async()=>(await(0,from_uuids_1.fromUUIDs)(["Compendium.pf2e.feats-srd.ZPclfDmiHzEqblry","Compendium.pf2e.feats-srd.ZL5UU9quCTvcWzfY","Compendium.pf2e.feats-srd.n2hawNmzW7DBn1Lm","Compendium.pf2e.feats-srd.hO4sKslTrSQMLbGx"])).filter((d=>d instanceof _item_1.FeatPF2e&&!!d.slug)).reduce(((record,f)=>({...record,[f.slug]:f})),{}))(),this.mountainPattern=/^mountain-(?:stance|stronghold|quake)$/}async updateActor(source){var _a;if("character"!==source.type)return;const effects=source.items.filter((i=>"effect"===i.type));for(const effect of effects)(null===(_a=effect.system.slug)||void 0===_a?void 0:_a.startsWith("stance-mountain"))&&source.items.findSplice((i=>i===effect))}async updateItem(source){if(source.system.slug)switch(source.type){case"feat":if("animal-skin"===source.system.slug){const feat=(await this.stanceFeats)[source.system.slug];feat&&(source.system.rules=feat.toObject().system.rules)}else if(this.mountainPattern.test(source.system.slug)){const feat=(await this.stanceFeats)[source.system.slug];feat&&(source.system.description.value=feat.description)}return;case"equipment":if(!source.system.slug.startsWith("bracers-of-armor-"))return;for(const rule of source.system.rules)"FlatModifier"===rule.key&&(rule.slug="bracers-of-armor");return;case"effect":if("spell-effect-mage-armor"!==source.system.slug)return;for(const rule of source.system.rules)"FlatModifier"===rule.key&&(rule.slug="mage-armor")}}async updateMacro(source){"script"===source.type&&source.command.includes("Stance: Mountain Stance")&&(source.command=String.raw`const actors = canvas.tokens.controlled.flatMap((token) => token.actor ?? []);
if (actors.length === 0 && game.user.character) actors.push(game.user.character);
if (actors.length === 0) {
    const message = game.i18n.localize("PF2E.ErrorMessage.NoTokenSelected");
    return ui.notifications.error(message);
}

const ITEM_UUID = "Compendium.pf2e.feat-effects.gYpy9XBPScIlY93p"; // Stance: Mountain Stance
const source = (await fromUuid(ITEM_UUID)).toObject();
source.flags = mergeObject(source.flags ?? {}, { core: { sourceId: ITEM_UUID } });

for (const actor of actors) {
    const existing = actor.itemTypes.effect.find((e) => e.flags.core?.sourceId === ITEM_UUID);
    if (existing) {
        await existing.delete();
    } else {
        await actor.createEmbeddedDocuments("Item", [source]);
    }
}`)}}exports.Migration723CumulativeItemBonuses=Migration723CumulativeItemBonuses,Migration723CumulativeItemBonuses.version=.723},61864:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration724CraftingMaxItemLevel=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(54310);class Migration724CraftingMaxItemLevel extends base_1.MigrationBase{constructor(){super(...arguments),this.pathPattern=/^data\.crafting\.entries\.([-a-z]+)\.maxItemLevel$/i}async updateItem(source){var _a,_b,_c;if("feat"!==source.type)return;if("advanced-alchemy"===source.system.slug){const rules=source.system.rules;for(const rule of rules)rule.predicate={all:["self:class:alchemist"]},"CraftingEntry"===rule.key&&(delete rule.name,rule.label="PF2E.TraitAlchemist")}else if((null===(_a=source.system.slug)||void 0===_a?void 0:_a.endsWith("-dedication"))&&"alchemist-dedication"!==source.system.slug){const rules=source.system.rules.filter((r=>"CraftingEntry"===r.key));for(const rule of rules){delete rule.name;const i18nKey=(0,_util_1.sluggify)(source.system.slug.replace(/-dedication$/,""),{camel:"bactrian"});rule.label=`PF2E.SpecificRule.DedicationCraftingEntry.${i18nKey}`}}const aeLikes=source.system.rules.filter((r=>"ActiveEffectLike"===r.key));for(const rule of aeLikes){if("string"!=typeof rule.path)continue;const selector=null!==(_c=null===(_b=this.pathPattern.exec(rule.path))||void 0===_b?void 0:_b[1])&&void 0!==_c?_c:null;if(selector){const predicate=rule.predicate=mergeObject({all:[]},(0,_util_1.isObject)(rule.predicate)?rule.predicate:{}),slug=(0,_util_1.sluggify)(selector);predicate.all=Array.from(new Set([...predicate.all,`crafting:entry:${slug}`]))}}}}exports.Migration724CraftingMaxItemLevel=Migration724CraftingMaxItemLevel,Migration724CraftingMaxItemLevel.version=.724},44532:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration725QuickClimbREs=void 0;const base_1=__webpack_require__(54310);class Migration725QuickClimbREs extends base_1.MigrationBase{constructor(){super(...arguments),this.quickClimb=[{key:"BaseSpeed",predicate:{all:["self:skill:ath:rank:4"]},selector:"climb",value:"@actor.attributes.speed.value"},{key:"Note",predicate:{all:["action:climb"]},selector:"athletics",text:'<p class="compact-text"><strong>{item|name}</strong> You move 5 more feet on a success, and 10 more feet on a critical success.</p>'}]}async updateItem(source){"feat"===source.type&&"quick-climb"===source.system.slug&&(source.system.rules=deepClone(this.quickClimb))}}exports.Migration725QuickClimbREs=Migration725QuickClimbREs,Migration725QuickClimbREs.version=.725},91370:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration726JournalSetting=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(54310);class Migration726JournalSetting extends base_1.MigrationBase{async migrate(){var _a;const sheetClasses=game.settings.get("core","sheetClasses");if((0,_util_1.isObject)(sheetClasses)&&(null===(_a=sheetClasses.JournalEntry)||void 0===_a?void 0:_a.base))return;const theme=game.settings.storage.get("world").getItem("pf2e.journalEntryTheme");if(!theme)return;const base="pf2eTheme"===theme?"pf2e.JournalSheetStyledPF2e":"pf2e.JournalSheetPF2e";DocumentSheetConfig.updateDefaultSheets({JournalEntry:{base}})}}exports.Migration726JournalSetting=Migration726JournalSetting,Migration726JournalSetting.version=.726},25967:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration727TrimSelfRollOptions=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(54310);class Migration727TrimSelfRollOptions extends base_1.MigrationBase{constructor(){super(...arguments),this.optionPattern=/^self:(ability|class|feat(?:ure)?|perception|skill):/,this.optionReplacement="$1:"}trimRollOption(option){return option.replace(this.optionPattern,this.optionReplacement)}trimPredicates(obj){for(const[key,value]of Object.entries(obj))"string"==typeof value?obj[key]=this.trimRollOption(value):Array.isArray(value)?obj[key]=value.map((e=>"string"==typeof e?this.trimRollOption(e):(0,_util_1.isObject)(e)?this.trimPredicates(e):e)):(0,_util_1.isObject)(value)&&(obj[key]=this.trimPredicates(value));return obj}async updateItem(source){source.system.rules=source.system.rules.map((r=>this.trimPredicates(r)))}}exports.Migration727TrimSelfRollOptions=Migration727TrimSelfRollOptions,Migration727TrimSelfRollOptions.version=.727},85357:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration728FlattenPhysicalProperties=void 0;const helpers_1=__webpack_require__(44252),data_1=__webpack_require__(52769),base_1=__webpack_require__(54310);class Migration728FlattenPhysicalProperties extends base_1.MigrationBase{constructor(){super(...arguments),this.booleanKeys=["temporary","collapsed"],this.numericKeys=["quantity","hardness"],this.stringKeys=["stackGroup","containerId"]}async updateItem(source){var _a;if(!(0,helpers_1.isPhysicalData)(source))return;const systemSource=source.system;if(systemSource.currency&&(delete systemSource.currency,systemSource["-=currency"]=null),systemSource.hands&&(delete systemSource.hands,systemSource["-=hands"]=null),systemSource.equipped&&systemSource.invested instanceof Object){const value=systemSource.invested.value;if("boolean"==typeof value||null===value){const shouldBeBoolean=source.system.traits.value.includes("invested")||"armor"===source.type&&(null!==(_a=source.system.potencyRune.value)&&void 0!==_a?_a:0)>0;systemSource.equipped.invested=shouldBeBoolean?Boolean(value):null}}if(delete systemSource.invested,systemSource["-=invested"]=null,systemSource.capacity&&"book"!==source.type&&(delete systemSource.capacity,systemSource["-=capacity"]=null),"backpack"!==source.type&&(delete systemSource.bulkCapacity,systemSource["-=bulkCapacity"]=null,delete systemSource.collapsed,systemSource["-=collapsed"]=null),systemSource.size instanceof Object){const size=data_1.SIZES.includes(systemSource.size.value)?systemSource.size.value:"med";systemSource.size=size}"brokenThreshold"in systemSource&&(systemSource.brokenThreshold instanceof Object&&(systemSource.hp.brokenThreshold=Number(systemSource.brokenThreshold.value)),delete systemSource.brokenThreshold,systemSource["-=brokenThreshold"]=null),systemSource.hp.value=Number(systemSource.hp.value),systemSource.maxHp instanceof Object&&(systemSource.hp.max=Number(systemSource.maxHp.value)||0,delete systemSource.maxHp,systemSource["-=maxHp"]=null);for(const key of this.booleanKeys){const value=systemSource[key];value instanceof Object&&(systemSource[key]=value.value)}for(const key of this.numericKeys){const value=systemSource[key];value instanceof Object&&(systemSource[key]=Number(value.value)||0)}for(const key of this.stringKeys){const value=systemSource[key];value instanceof Object&&(systemSource[key]=String(value.value)||null)}}}exports.Migration728FlattenPhysicalProperties=Migration728FlattenPhysicalProperties,Migration728FlattenPhysicalProperties.version=.728},42995:function(__unused_webpack_module,exports,__webpack_require__){var _Migration729CumulativeItemBonusCleanup_explorersClothingVariants,__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration729CumulativeItemBonusCleanup=void 0;const base_1=__webpack_require__(54310);class Migration729CumulativeItemBonusCleanup extends base_1.MigrationBase{constructor(){super(...arguments),_Migration729CumulativeItemBonusCleanup_explorersClothingVariants.set(this,new Set(["clothing-explorers","robe-of-the-arch-magi","robe-of-the-arch-magi-greater","sarkorian-god-caller-garb"]))}isExplorersClothing(source){var _a;return"armor"===source.type&&__classPrivateFieldGet(this,_Migration729CumulativeItemBonusCleanup_explorersClothingVariants,"f").has(null!==(_a=source.system.slug)&&void 0!==_a?_a:"")}isStanceEffectOrAnimalSkinFeat(source){return"effect"===source.type&&"stance-mountain-stance"===source.system.slug||"feat"===source.type&&"animal-skin"===source.system.slug}async updateItem(source){var _a;if(this.isExplorersClothing(source))source.system.category="unarmored",source.system.group="cloth",source.system.baseItem="explorers-clothing",source.system.traits.value.includes("comfort")||source.system.traits.value.push("comfort");else if(this.isStanceEffectOrAnimalSkinFeat(source)){const rule=source.system.rules.find((r=>"AdjustModifier"===r.key&&"clothing-explorers"===r.slug));rule&&(rule.slug="explorers-clothing")}else if("equipment"===source.type){const isBracers=!!(null===(_a=source.system.slug)||void 0===_a?void 0:_a.startsWith("bracers-of-armor-"));for(const rule of source.system.rules)"FlatModifier"!==rule.key||"bracers-of-armor"!==rule.slug||isBracers||("metuaks-pendant"===source.system.slug?rule.slug="metuaks-pendant":delete rule.slug)}}}exports.Migration729CumulativeItemBonusCleanup=Migration729CumulativeItemBonusCleanup,_Migration729CumulativeItemBonusCleanup_explorersClothingVariants=new WeakMap,Migration729CumulativeItemBonusCleanup.version=.729},26890:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration730DeruneHandwraps=void 0;const base_1=__webpack_require__(54310);class Migration730DeruneHandwraps extends base_1.MigrationBase{async updateItem(source){if("weapon"===source.type&&"handwraps-of-mighty-blows"===source.system.slug){const{rules}=source.system;for(const rule of[...rules])["Striking","WeaponPotency"].includes(String(rule.key))&&source.system.rules.splice(rules.indexOf(rule),1)}}}exports.Migration730DeruneHandwraps=Migration730DeruneHandwraps,Migration730DeruneHandwraps.version=.73},69668:function(__unused_webpack_module,exports,__webpack_require__){var _Migration731TogglePropertyToRollOption_pathPattern,__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration731TogglePropertyToRollOption=void 0;const _util_1=__webpack_require__(6945),_727_trim_self_roll_options_1=__webpack_require__(25967);class Migration731TogglePropertyToRollOption extends _727_trim_self_roll_options_1.Migration727TrimSelfRollOptions{constructor(){super(...arguments),this.optionPattern=/^target:flatFooted$/,this.optionReplacement="target:condition:flat-footed",_Migration731TogglePropertyToRollOption_pathPattern.set(this,/^flags\.pf2e\.rollOptions\.([^.]+)\.([^.]+)$/)}async updateItem(source){var _a,_b,_c;source.system.rules=source.system.rules.map((r=>this.trimPredicates(r)));const rules=source.system.rules;for(const rule of[...rules]){if("ToggleProperty"!==rule.key)continue;const match=__classPrivateFieldGet(this,_Migration731TogglePropertyToRollOption_pathPattern,"f").exec(null!==(_b=null===(_a=rule.property)||void 0===_a?void 0:_a.trim())&&void 0!==_b?_b:"");3===(null==match?void 0:match.length)&&match[1].length>=2&&match[2].length>=1?(rule.key="RollOption",rule.domain=match[1],rule.option=match[2],rule.toggleable=!0,delete rule.property,"boolean"==typeof rule.default&&(rule.value=rule.default,delete rule.default),(0,_util_1.sluggify)(String(null!==(_c=rule.label)&&void 0!==_c?_c:""))===source.system.slug&&delete rule.label):rules.splice(rules.indexOf(rule),1)}}async updateActor(source){var _a,_b;(null===(_b=null===(_a=source.flags.pf2e)||void 0===_a?void 0:_a.rollOptions)||void 0===_b?void 0:_b.all)&&(source.flags.pf2e.rollOptions.all["-=panache"]=!1,source.flags.pf2e.rollOptions.all["-=rage"]=!1,source.flags.pf2e.rollOptions.all["-=target:flatFooted"]=!1)}}exports.Migration731TogglePropertyToRollOption=Migration731TogglePropertyToRollOption,_Migration731TogglePropertyToRollOption_pathPattern=new WeakMap,Migration731TogglePropertyToRollOption.version=.731},98774:function(__unused_webpack_module,exports,__webpack_require__){var _Migration732FixDedicationFeatTypes_instances,_Migration732FixDedicationFeatTypes_hasWellFormedFeatType,__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration732FixDedicationFeatTypes=void 0;const base_1=__webpack_require__(54310);class Migration732FixDedicationFeatTypes extends base_1.MigrationBase{constructor(){super(...arguments),_Migration732FixDedicationFeatTypes_instances.add(this)}async updateItem(source){var _a;if("feat"===source.type){__classPrivateFieldGet(this,_Migration732FixDedicationFeatTypes_instances,"m",_Migration732FixDedicationFeatTypes_hasWellFormedFeatType).call(this,source.system.featType)||(source.system.featType={value:"bonus"});const featType=source.system.featType;("dedication"===featType.value||"class"===featType.value&&(null===(_a=source.system.slug)||void 0===_a?void 0:_a.endsWith("-dedication")))&&(featType.value="archetype")}}}exports.Migration732FixDedicationFeatTypes=Migration732FixDedicationFeatTypes,_Migration732FixDedicationFeatTypes_instances=new WeakSet,_Migration732FixDedicationFeatTypes_hasWellFormedFeatType=function(featType){return featType instanceof Object&&"value"in featType&&"string"==typeof featType.value},Migration732FixDedicationFeatTypes.version=.732},31030:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration733ItemBonusFromEquipment=void 0;const base_1=__webpack_require__(54310);class Migration733ItemBonusFromEquipment extends base_1.MigrationBase{constructor(){super(...arguments),this.slugs=new Set(["animal-skin","stance-mountain-stance","spell-effect-mage-armor"])}async updateItem(source){var _a;const compendiumItem=this.slugs.has(null!==(_a=source.system.slug)&&void 0!==_a?_a:""),homebrewItem=!compendiumItem&&"feat"===source.type;if(!compendiumItem&&!homebrewItem)return;const rules=source.system.rules;for(const rule of rules)"FlatModifier"===rule.key&&"item"===rule.type&&(rule.fromEquipment=!1)}}exports.Migration733ItemBonusFromEquipment=Migration733ItemBonusFromEquipment,Migration733ItemBonusFromEquipment.version=.733},32523:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration734SpellLocationPropsAndSignature=void 0;const base_1=__webpack_require__(54310);class Migration734SpellLocationPropsAndSignature extends base_1.MigrationBase{async updateActor(actor){const entries=actor.items.filter((item=>"spellcastingEntry"===item.type)),spells=actor.items.filter((item=>"spell"===item.type));for(const spellSource of spells){const spellData=spellSource.system,entrySource=entries.find((entry=>entry._id===spellData.location.value));if(!entrySource)continue;const entryData=entrySource.system;if(!entryData.signatureSpells)continue;entryData.signatureSpells.value.includes(spellSource._id)&&(spellData.location.signature=!0)}}async updateItem(source,actor){var _a,_b,_c,_d;if("spellcastingEntry"===source.type){const data=source.system;data.signatureSpells&&(delete data.signatureSpells,"game"in globalThis&&(data["-=signatureSpells"]=null))}if("spell"===source.type){const data=source.system;(data.heightenedLevel||data.autoHeightenLevel)&&(actor&&(data.location.heightenedLevel=null!==(_b=null===(_a=data.heightenedLevel)||void 0===_a?void 0:_a.value)&&void 0!==_b?_b:void 0,data.location.autoHeightenLevel=null!==(_d=null===(_c=data.autoHeightenLevel)||void 0===_c?void 0:_c.value)&&void 0!==_d?_d:void 0),delete data.autoHeightenLevel,delete data.heightenedLevel,"game"in globalThis&&(data["-=autoHeightenLevel"]=null,data["-=heightenedLevel"]=null))}}}exports.Migration734SpellLocationPropsAndSignature=Migration734SpellLocationPropsAndSignature,Migration734SpellLocationPropsAndSignature.version=.734},28968:function(__unused_webpack_module,exports,__webpack_require__){var _Migration735FirearmAmmoAlchemical_instances,_Migration735FirearmAmmoAlchemical_needsTrait,__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration735FirearmAmmoAlchemical=void 0;const base_1=__webpack_require__(54310);class Migration735FirearmAmmoAlchemical extends base_1.MigrationBase{constructor(){super(...arguments),_Migration735FirearmAmmoAlchemical_instances.add(this)}async updateItem(source){"consumable"===source.type&&__classPrivateFieldGet(this,_Migration735FirearmAmmoAlchemical_instances,"m",_Migration735FirearmAmmoAlchemical_needsTrait).call(this,source)&&source.system.traits.value.unshift("alchemical")}}exports.Migration735FirearmAmmoAlchemical=Migration735FirearmAmmoAlchemical,_Migration735FirearmAmmoAlchemical_instances=new WeakSet,_Migration735FirearmAmmoAlchemical_needsTrait=function(source){var _a;return"ammo"===source.system.consumableType.value&&!!(null===(_a=source.system.stackGroup)||void 0===_a?void 0:_a.startsWith("rounds"))&&"cutlery"!==source.system.slug&&!source.system.traits.value.includes("alchemical")},Migration735FirearmAmmoAlchemical.version=.735},84640:function(__unused_webpack_module,exports,__webpack_require__){var _Migration736RemoveBrokenThreshold_instances,_Migration736RemoveBrokenThreshold_hasBrokenThreshold,__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration736RemoveBrokenThreshold=void 0;const helpers_1=__webpack_require__(44252),base_1=__webpack_require__(54310);class Migration736RemoveBrokenThreshold extends base_1.MigrationBase{constructor(){super(...arguments),_Migration736RemoveBrokenThreshold_instances.add(this)}async updateItem(source){__classPrivateFieldGet(this,_Migration736RemoveBrokenThreshold_instances,"m",_Migration736RemoveBrokenThreshold_hasBrokenThreshold).call(this,source)&&(delete source.system.brokenThreshold,source.system["-=brokenThreshold"]=null)}}exports.Migration736RemoveBrokenThreshold=Migration736RemoveBrokenThreshold,_Migration736RemoveBrokenThreshold_instances=new WeakSet,_Migration736RemoveBrokenThreshold_hasBrokenThreshold=function(source){return(0,helpers_1.isPhysicalData)(source)&&"brokenThreshold"in source.system},Migration736RemoveBrokenThreshold.version=.736},96878:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration737NormalizeRuleElementKeys=void 0;const _util_1=__webpack_require__(6945),_731_toggle_property_to_roll_option_1=__webpack_require__(69668);class Migration737NormalizeRuleElementKeys extends _731_toggle_property_to_roll_option_1.Migration731TogglePropertyToRollOption{async updateItem(source){const rules=source.system.rules;for(const rule of[...rules])(0,_util_1.isObject)(rule)&&"string"==typeof rule.key?rule.key=rule.key.trim().replace(/^PF2E\.RuleElement\./,""):rules.splice(rules.indexOf(rule),1);return super.updateItem(source)}}exports.Migration737NormalizeRuleElementKeys=Migration737NormalizeRuleElementKeys,Migration737NormalizeRuleElementKeys.version=.737},77160:function(__unused_webpack_module,exports,__webpack_require__){var _Migration738UpdateLaughingShadow_shadowPromise,_Migration738UpdateLaughingShadow_cascadePromise,__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration738UpdateLaughingShadow=void 0;const _item_1=__webpack_require__(10843),base_1=__webpack_require__(54310);class Migration738UpdateLaughingShadow extends base_1.MigrationBase{constructor(){super(...arguments),_Migration738UpdateLaughingShadow_shadowPromise.set(this,fromUuid("Compendium.pf2e.classfeatures.3gVDqDPSz4fB5T9G")),_Migration738UpdateLaughingShadow_cascadePromise.set(this,fromUuid("Compendium.pf2e.feature-effects.fsjO5oTKttsbpaKl"))}async updateActor(source){var _a,_b;const rollOptionsAll=null===(_b=null===(_a=source.flags.pf2e)||void 0===_a?void 0:_a.rollOptions)||void 0===_b?void 0:_b.all;rollOptionsAll instanceof Object&&"feature:laughing-shadow:damage"in rollOptionsAll&&(rollOptionsAll["-=feature:laughing-shadow:damage"]=!1)}async updateItem(source){if("feat"===source.type&&"laughing-shadow"===source.system.slug){const laughingShadow=await __classPrivateFieldGet(this,_Migration738UpdateLaughingShadow_shadowPromise,"f");if(!(laughingShadow instanceof _item_1.ItemPF2e))return;source.system.rules=deepClone(laughingShadow._source.system.rules)}else if("effect"===source.type&&"stance-arcane-cascade"===source.system.slug){const arcaneCascade=await __classPrivateFieldGet(this,_Migration738UpdateLaughingShadow_cascadePromise,"f");if(!(arcaneCascade instanceof _item_1.ItemPF2e))return;const newRules=deepClone(arcaneCascade._source.system.rules),withSelection=source.system.rules.find((r=>"ChoiceSet"===r.key&&"string"==typeof r.selection));if(withSelection){const unselected=newRules.find((r=>"ChoiceSet"===r.key));unselected&&(unselected.selection=withSelection.selection)}source.system.rules=newRules}}}exports.Migration738UpdateLaughingShadow=Migration738UpdateLaughingShadow,_Migration738UpdateLaughingShadow_shadowPromise=new WeakMap,_Migration738UpdateLaughingShadow_cascadePromise=new WeakMap,Migration738UpdateLaughingShadow.version=.738},86185:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration739RecoveryCheckDC=void 0;const base_1=__webpack_require__(54310);class Migration739RecoveryCheckDC extends base_1.MigrationBase{constructor(){super(...arguments),this.toughness=[{key:"FlatModifier",selector:"hp",value:"@actor.level"},{key:"ActiveEffectLike",mode:"downgrade",path:"system.attributes.dying.recoveryDC",value:9}],this.defyDeath=[{key:"ActiveEffectLike",mode:"downgrade",predicate:{not:["feat:toughness"]},path:"system.attributes.dying.recoveryDC",value:9},{key:"ActiveEffectLike",mode:"downgrade",predicate:{all:["feat:toughness"]},path:"system.attributes.dying.recoveryDC",value:8}],this.mountainsStoutness=[{key:"FlatModifier",selector:"hp",type:"untyped",value:"@actor.level"},{key:"ActiveEffectLike",mode:"downgrade",predicate:{not:["feat:toughness"]},path:"system.attributes.dying.recoveryDC",value:9},{key:"ActiveEffectLike",mode:"downgrade",predicate:{all:["feat:toughness"]},path:"system.attributes.dying.recoveryDC",value:6}]}async updateItem(source){if("feat"!==source.type)return;if("toughness"===source.system.slug)return void(source.system.rules=this.toughness);if("defy-death"===source.system.slug)return void(source.system.rules=this.defyDeath);if("mountains-stoutness"===source.system.slug)return void(source.system.rules=this.mountainsStoutness);const{rules}=source.system;for(const rule of[...rules])"RecoveryCheckDC"===rule.key&&source.system.rules.splice(rules.indexOf(rule),1)}}exports.Migration739RecoveryCheckDC=Migration739RecoveryCheckDC,Migration739RecoveryCheckDC.version=.739},4444:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration740MaxTakable=void 0;const base_1=__webpack_require__(54310);class Migration740MaxTakable extends base_1.MigrationBase{async updateItem(source){if("feat"!==source.type)return;const systemData=source.system;"maxTaken"in systemData&&("number"==typeof systemData.maxTaken&&"number"!=typeof systemData.maxTakable&&(systemData.maxTakable=systemData.maxTaken),delete systemData.maxTaken,systemData["-=maxTaken"]=null),"maxTakable"in systemData&&"number"!=typeof systemData.maxTakable&&(systemData.maxTakable=null)}}exports.Migration740MaxTakable=Migration740MaxTakable,Migration740MaxTakable.version=.74},89941:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration741RollOptionToggleToItem=void 0;const base_1=__webpack_require__(54310);class Migration741RollOptionToggleToItem extends base_1.MigrationBase{async updateActor(source){var _a;if(!((null===(_a=source.flags.pf2e)||void 0===_a?void 0:_a.rollOptions)instanceof Object))return;const rules=source.items.flatMap((i=>i.system.rules)).filter((r=>!!r.toggleable&&"RollOption"===r.key&&"string"==typeof r.domain&&r.domain.length>0&&"string"==typeof r.option&&r.option.length>0)),{rollOptions}=source.flags.pf2e;for(const rule of rules){const domain=rollOptions[rule.domain];domain instanceof Object&&rule.option in domain&&(domain[`-=${rule.option}`]=!1,rule.value=!!domain[rule.option])}}}exports.Migration741RollOptionToggleToItem=Migration741RollOptionToggleToItem,Migration741RollOptionToggleToItem.version=.741},38737:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration742RMAbilityBoostLevels=void 0;const base_1=__webpack_require__(54310);class Migration742RMAbilityBoostLevels extends base_1.MigrationBase{async updateItem(source){if("class"!==source.type)return;const systemData=source.system;"abilityBoostLevels"in source.system&&(delete systemData.abilityBoostLevels,systemData["-=abilityBoostLevels"]=null)}}exports.Migration742RMAbilityBoostLevels=Migration742RMAbilityBoostLevels,Migration742RMAbilityBoostLevels.version=.742},72035:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration743FixWeaknessStructure=void 0;const base_1=__webpack_require__(54310);class Migration743FixWeaknessStructure extends base_1.MigrationBase{async updateActor(source){"character"!==source.type&&"npc"!==source.type||(Array.isArray(source.system.traits.dv)||(source.system.traits.dv=[]),Array.isArray(source.system.traits.dr)||(source.system.traits.dr=[]))}}exports.Migration743FixWeaknessStructure=Migration743FixWeaknessStructure,Migration743FixWeaknessStructure.version=.743},95357:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration744MigrateSpellHeighten=void 0;const base_1=__webpack_require__(54310);class Migration744MigrateSpellHeighten extends base_1.MigrationBase{async updateItem(item){if("spell"!==item.type)return;const system=item.system;system.scaling&&(system.heightening={type:"interval",interval:system.scaling.interval,damage:system.scaling.damage},delete system.scaling,system["-=scaling"]=null)}}exports.Migration744MigrateSpellHeighten=Migration744MigrateSpellHeighten,Migration744MigrateSpellHeighten.version=.744},49180:function(__unused_webpack_module,exports,__webpack_require__){var _Migration745EffectTargetToChoiceSet_instances,_Migration745EffectTargetToChoiceSet_isEffectTargetRE,_Migration745EffectTargetToChoiceSet_toChoiceSet,__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration745EffectTargetToChoiceSet=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(54310);class Migration745EffectTargetToChoiceSet extends base_1.MigrationBase{constructor(){super(...arguments),_Migration745EffectTargetToChoiceSet_instances.add(this)}async updateItem(source,actorSource){var _a;const{rules}=source.system;for(const rule of rules)if(__classPrivateFieldGet(this,_Migration745EffectTargetToChoiceSet_instances,"m",_Migration745EffectTargetToChoiceSet_isEffectTargetRE).call(this,rule)){rules[rules.indexOf(rule)]=__classPrivateFieldGet(this,_Migration745EffectTargetToChoiceSet_instances,"m",_Migration745EffectTargetToChoiceSet_toChoiceSet).call(this,rule,source,null!=actorSource?actorSource:null);const otherRules=rules.filter((r=>"string"==typeof r.selector&&/item\|data\.target/.test(r.selector)));for(const other of otherRules){const flag=(0,_util_1.sluggify)(null!==(_a=source.system.slug)&&void 0!==_a?_a:source.name,{camel:"dromedary"});other.selector=other.selector.replace(/\bdata\.target\b/,`flags.pf2e.rulesSelections.${flag}`)}}}}exports.Migration745EffectTargetToChoiceSet=Migration745EffectTargetToChoiceSet,_Migration745EffectTargetToChoiceSet_instances=new WeakSet,_Migration745EffectTargetToChoiceSet_isEffectTargetRE=function(rule){return"EffectTarget"===rule.key},_Migration745EffectTargetToChoiceSet_toChoiceSet=function(rule,itemSource,actorSource){var _a,_b,_c;const newRE={key:"ChoiceSet",choices:{ownedItems:!0,types:["weapon"]},prompt:"PF2E.SpecificRule.Prompt.Weapon"};if("string"==typeof rule.targetId&&actorSource){const weapon=actorSource.items.find((i=>"weapon"===i.type&&i._id===rule.targetId));weapon&&(newRE.selection=null!==(_a=weapon.system.slug)&&void 0!==_a?_a:(0,_util_1.sluggify)(weapon.name))}return(null===(_b=itemSource.system.slug)||void 0===_b?void 0:_b.includes("blade-ally"))?newRE.choices.includeHandwraps=!0:(null===(_c=itemSource.system.slug)||void 0===_c?void 0:_c.includes("weapon-surge"))?newRE.choices.predicate={all:["item:equipped"]}:"shillelagh"===itemSource.system.slug?(newRE.adjustName=!1,newRE.prompt="PF2E.SpecificRule.Prompt.Shillelagh",newRE.choices.predicate={all:["item:equipped"],any:["item:base:club","item:base:staff"]}):(0,_util_1.isObject)(rule.predicate)&&(newRE.choices.predicate=deepClone(rule.predicate)),newRE},Migration745EffectTargetToChoiceSet.version=.745},42430:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration746StandardizePricing=void 0;const helpers_1=__webpack_require__(44252),helpers_2=__webpack_require__(73715),base_1=__webpack_require__(54310),_util_1=__webpack_require__(6945);class Migration746StandardizePricing extends base_1.MigrationBase{async updateItem(item){var _a,_b,_c,_d;if((0,helpers_1.isPhysicalData)(item)||"kit"===item.type)if((0,_util_1.isObject)(item.system.price)||(item.system.price={value:helpers_2.CoinsPF2e.fromString(String(item.system.price)).strip()}),"treasure"===item.type){const systemData=item.system;if(systemData.denomination||systemData.value){const value=null!==(_b=null===(_a=systemData.value)||void 0===_a?void 0:_a.value)&&void 0!==_b?_b:0,denomination=null!==(_d=null===(_c=systemData.denomination)||void 0===_c?void 0:_c.value)&&void 0!==_d?_d:"gp";systemData.price={value:{[denomination]:value}},systemData["-=denomination"]=null,delete systemData.denomination,systemData["-=value"]=null,delete systemData.value}}else(0,_util_1.isObject)(item.system.price.value)||(item.system.price.value=helpers_2.CoinsPF2e.fromString(String(item.system.price.value)).strip())}}exports.Migration746StandardizePricing=Migration746StandardizePricing,Migration746StandardizePricing.version=.746},62290:function(__unused_webpack_module,exports,__webpack_require__){var _Migration747FixedHeightening_loadedSpells,__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)},__classPrivateFieldSet=this&&this.__classPrivateFieldSet||function(receiver,state,value,kind,f){if("m"===kind)throw new TypeError("Private method is not writable");if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===kind?f.call(receiver,value):f?f.value=value:state.set(receiver,value),value};Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration747FixedHeightening=void 0;const _util_1=__webpack_require__(6945),from_uuids_1=__webpack_require__(16539),base_1=__webpack_require__(54310);class Migration747FixedHeightening extends base_1.MigrationBase{constructor(){super(...arguments),_Migration747FixedHeightening_loadedSpells.set(this,void 0),this.fixedHeightenSpells=new Set(["Compendium.pf2e.spells-srd.0fKHBh5goe2eiFYL","Compendium.pf2e.spells-srd.10VcmSYNBrvBphu1","Compendium.pf2e.spells-srd.2gQYrCPwBmwau26O","Compendium.pf2e.spells-srd.2iQKhCQBijhj5Rf3","Compendium.pf2e.spells-srd.4koZzrnMXhhosn0D","Compendium.pf2e.spells-srd.5WM3WjshXgrkVCg6","Compendium.pf2e.spells-srd.7CUgqHunmHfW2lC5","Compendium.pf2e.spells-srd.7OFKYR1VY6EXDuiR","Compendium.pf2e.spells-srd.9s5tqqXNzcoKamWx","Compendium.pf2e.spells-srd.BCuHKrDeJ4eq53M6","Compendium.pf2e.spells-srd.CxpFy4HJHf4ACbxF","Compendium.pf2e.spells-srd.D2nPKbIS67m9199U","Compendium.pf2e.spells-srd.DCQHaLrYXMI37dvW","Compendium.pf2e.spells-srd.DgcSiOCR1uDXGaEA","Compendium.pf2e.spells-srd.EfFMLVbmkBWmzoLF","Compendium.pf2e.spells-srd.Et8RSCLx8w7uOLvo","Compendium.pf2e.spells-srd.F23T5tHPo3WsFiHW","Compendium.pf2e.spells-srd.FhOaQDTSnsY7tiam","Compendium.pf2e.spells-srd.Fr58LDSrbndgld9n","Compendium.pf2e.spells-srd.GaRQlC9Yw1BGKHfN","Compendium.pf2e.spells-srd.HGmBY8KjgLV97nUp","Compendium.pf2e.spells-srd.HHGUBGle4OjoxvNR","Compendium.pf2e.spells-srd.HTou8cG05yuSkesj","Compendium.pf2e.spells-srd.HWrNMQENi9WSGbnF","Compendium.pf2e.spells-srd.HcIAQZjNXHemoXSU","Compendium.pf2e.spells-srd.Ifc2b6bNVdjKV7Si","Compendium.pf2e.spells-srd.JHntYF0SbaWKq7wR","Compendium.pf2e.spells-srd.LQzlKbYjZSMFQawP","Compendium.pf2e.spells-srd.LiGbewa9pO0yjbsY","Compendium.pf2e.spells-srd.Llx0xKvtu8S4z6TI","Compendium.pf2e.spells-srd.Mkbq9xlAUxHUHyR2","Compendium.pf2e.spells-srd.OAt2ZEns1gIOCgrn","Compendium.pf2e.spells-srd.OhD2Z6rIGGD5ocZA","Compendium.pf2e.spells-srd.PRrZ7anETWPm90YY","Compendium.pf2e.spells-srd.PjhUmyKnq6K5uDby","Compendium.pf2e.spells-srd.Popa5umI3H33levx","Compendium.pf2e.spells-srd.Pwq6T7xpfAJXV5aj","Compendium.pf2e.spells-srd.Q7QQ91vQtyi1Ux36","Compendium.pf2e.spells-srd.Seaah9amXg70RKw2","Compendium.pf2e.spells-srd.U58aQWJ47VrI36yP","Compendium.pf2e.spells-srd.UmXhuKrYZR3W16mQ","Compendium.pf2e.spells-srd.VTb0yI6P1bLkzuRr","Compendium.pf2e.spells-srd.VlNcjmYyu95vOUe8","Compendium.pf2e.spells-srd.W02bHXylIpoXbO4e","Compendium.pf2e.spells-srd.WsUwpfmhKrKwoIe3","Compendium.pf2e.spells-srd.Wt94cw03L77sbud7","Compendium.pf2e.spells-srd.XhgMx9WC6NfXd9RP","Compendium.pf2e.spells-srd.ZAX0OOcKtYMQlquR","Compendium.pf2e.spells-srd.ZqmP9gijBmK7y8Xy","Compendium.pf2e.spells-srd.aIHY2DArKFweIrpf","Compendium.pf2e.spells-srd.atlgGNI1E1Ox3O3a","Compendium.pf2e.spells-srd.bay4AfSu2iIozNNW","Compendium.pf2e.spells-srd.czO0wbT1i320gcu9","Compendium.pf2e.spells-srd.dINQzhqGmIsqGMUY","Compendium.pf2e.spells-srd.drmvQJETA3WZzXyw","Compendium.pf2e.spells-srd.e36Z2t6tLdW3RUzZ","Compendium.pf2e.spells-srd.fprqWKUc0jnMIyGU","Compendium.pf2e.spells-srd.gISYsBFby1TiXfBt","Compendium.pf2e.spells-srd.ivKnEtI1z4UqEKIA","Compendium.pf2e.spells-srd.kuoYff1csM5eAcAP","Compendium.pf2e.spells-srd.lbrWMnS2pecKaSVB","Compendium.pf2e.spells-srd.lsR3RLEdBG4rcSzd","Compendium.pf2e.spells-srd.nXmC2Xx9WmS5NsAo","Compendium.pf2e.spells-srd.o6YCGx4lycsYpww4","Compendium.pf2e.spells-srd.pZTqGY1MLRjgKasV","Compendium.pf2e.spells-srd.pt3gEnzA159uHcJC","Compendium.pf2e.spells-srd.pwzdSlJgYqN7bs2w","Compendium.pf2e.spells-srd.q5qmNn144ZJGxnvJ","Compendium.pf2e.spells-srd.qTr2oCgIXl703Whb","Compendium.pf2e.spells-srd.qwlh6aDgi86U3Q7H","Compendium.pf2e.spells-srd.r4HLQcYwB62bTayl","Compendium.pf2e.spells-srd.sFwoKj0TsacsmoWj","Compendium.pf2e.spells-srd.vLA0q0WOK2YPuJs6","Compendium.pf2e.spells-srd.vLzFcIaSXs7YTIqJ","Compendium.pf2e.spells-srd.vTQvfYu2llKQedmY","Compendium.pf2e.spells-srd.vctIUOOgSmxAF0KG","Compendium.pf2e.spells-srd.wzctak6BxOW8xvFV","Compendium.pf2e.spells-srd.x5rGOmhDRDVQPrnW","Compendium.pf2e.spells-srd.x7SPrsRxGb2Vy2nu","Compendium.pf2e.spells-srd.x9RIFhquazom4p02","Compendium.pf2e.spells-srd.xRgU9rrhmGAgG4Rc","Compendium.pf2e.spells-srd.yH13KXUK2x093NUv","Compendium.pf2e.spells-srd.yM3KTTSAIHhyuP14","Compendium.pf2e.spells-srd.zlnXpME1T2uvn8Lr","Compendium.pf2e.spells-srd.zul5cBTfr7NXHBZf"])}async updateItem(item){var _a,_b,_c,_d;if("spell"!==item.type)return;const isAcidSplash="acid-splash"===(null!==(_a=item.system.slug)&&void 0!==_a?_a:(0,_util_1.sluggify)(item.name));if("fixed"===(null===(_b=item.system.heightening)||void 0===_b?void 0:_b.type)&&!isAcidSplash)return;const sourceId=null===(_c=item.flags.core)||void 0===_c?void 0:_c.sourceId;if(sourceId&&this.fixedHeightenSpells.has(sourceId)){const spell=(await this.loadSpells())[sourceId];spell&&"fixed"===(null===(_d=spell.system.heightening)||void 0===_d?void 0:_d.type)&&(item.system.heightening=spell.system.heightening,this.overwriteDamage(item,spell))}}overwriteDamage(spell,newSpell){const newDamage=newSpell.system.damage,newKeys=new Set(Object.keys(newDamage.value)),diff=Object.keys(spell.system.damage.value).filter((key=>!newKeys.has(key))),damage=spell.system.damage;damage.value=newDamage.value;for(const deleteKey of diff)damage.value[`-=${deleteKey}`]=null}async loadSpells(){if(__classPrivateFieldGet(this,_Migration747FixedHeightening_loadedSpells,"f"))return __classPrivateFieldGet(this,_Migration747FixedHeightening_loadedSpells,"f");const spells=await(0,from_uuids_1.fromUUIDs)([...this.fixedHeightenSpells]);return __classPrivateFieldSet(this,_Migration747FixedHeightening_loadedSpells,spells.reduce(((record,spell)=>({...record,[spell.uuid]:spell})),{}),"f"),__classPrivateFieldGet(this,_Migration747FixedHeightening_loadedSpells,"f")}}exports.Migration747FixedHeightening=Migration747FixedHeightening,_Migration747FixedHeightening_loadedSpells=new WeakMap,Migration747FixedHeightening.version=.747},82272:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration748BatchConsumablePricing=void 0;const helpers_1=__webpack_require__(44252),_util_1=__webpack_require__(6945),base_1=__webpack_require__(54310);class Migration748BatchConsumablePricing extends base_1.MigrationBase{async updateItem(item){var _a;if(!(0,helpers_1.isPhysicalData)(item))return;const slug=null!==(_a=item.system.slug)&&void 0!==_a?_a:(0,_util_1.sluggify)(item.name);batched_5.has(slug)&&(item.system.price.per=5),batched_10.has(slug)&&(item.system.price.per=10)}}exports.Migration748BatchConsumablePricing=Migration748BatchConsumablePricing,Migration748BatchConsumablePricing.version=.748;const batched_5=new Set(["rounds-harmona-gun","rounds-dwarven-scattergun","rounds-flingflenser","rounds-explosive-dogslicer"]),batched_10=new Set(["rounds-three-peaked-tree","rounds-dragon-mouth-pistol","rounds-pepperbox","rounds-fire-lance","rounds-flintlock-pistol","rounds-clan-pistol","bolts","rounds-hand-cannon","sun-shot","rounds-dagger-pistol","rounds-dueling-pistol","rounds-flintlock-musket","rounds-hammer-gun","rounds-black-powder-knuckle-dusters","rounds-slide-pistol","sling-bullets","rounds-double-barreled-musket","rounds-mace-multipistol","rounds-gnome-amalgam-musket","cutlery","rounds-axe-musket","rounds-mithral-tree","wooden-taws","rounds-gun-sword","rounds-blunderbuss","rounds-jezail","rounds-double-barreled-pistol","rounds-arquebus","rounds-cane-pistol","rounds-rapier-pistol","rounds-coat-pistol","rounds-piercing-wind","blowgun-darts","arrows","light-writer-plates","practice-target"])},24653:function(__unused_webpack_module,exports,__webpack_require__){var _Migration749AssuranceREs_instances,_Migration749AssuranceREs_isChoiceSetWithSelection,_Migration749AssuranceREs_newRules,__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration749AssuranceREs=void 0;const values_1=__webpack_require__(8382),_util_1=__webpack_require__(6945),base_1=__webpack_require__(54310);class Migration749AssuranceREs extends base_1.MigrationBase{constructor(){super(...arguments),_Migration749AssuranceREs_instances.add(this)}async updateItem(source){var _a;const{slug,rules}=source.system;if("feat"!==source.type||!(null==slug?void 0:slug.startsWith("assurance")))return;const firstRule=rules.at(0);if("assurance"===slug&&firstRule&&1===rules.length&&__classPrivateFieldGet(this,_Migration749AssuranceREs_instances,"m",_Migration749AssuranceREs_isChoiceSetWithSelection).call(this,firstRule))firstRule.flag="assurance",rules.push(...__classPrivateFieldGet(this,_Migration749AssuranceREs_instances,"m",_Migration749AssuranceREs_newRules).call(this,"choice"));else if(0===rules.length){const skill=null===(_a=/^assurance-([a-z]+)$/.exec(slug))||void 0===_a?void 0:_a.at(1);(0,_util_1.setHasElement)(values_1.SKILL_LONG_FORMS,skill)&&rules.push(...__classPrivateFieldGet(this,_Migration749AssuranceREs_instances,"m",_Migration749AssuranceREs_newRules).call(this,skill))}}}exports.Migration749AssuranceREs=Migration749AssuranceREs,_Migration749AssuranceREs_instances=new WeakSet,_Migration749AssuranceREs_isChoiceSetWithSelection=function(rule){return"ChoiceSet"===rule.key},_Migration749AssuranceREs_newRules=function(skill){const selector="choice"===skill?"{item|flags.pf2e.rulesSelections.assurance}":skill;return[{key:"SubstituteRoll",label:"PF2E.SpecificRule.SubstituteRoll.Assurance",selector,slug:"assurance",value:10},{key:"AdjustModifier",predicate:{all:["substitute:assurance"],not:["bonus:type:proficiency"]},selector,suppress:!0}]},Migration749AssuranceREs.version=.749},77563:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration750FixCorruptedPrice=void 0;const helpers_1=__webpack_require__(44252),helpers_2=__webpack_require__(73715),base_1=__webpack_require__(54310);class Migration750FixCorruptedPrice extends base_1.MigrationBase{async updateItem(item){((0,helpers_1.isPhysicalData)(item)||"kit"===item.type)&&"string"==typeof item.system.price&&(item.system.price={value:helpers_2.CoinsPF2e.fromString(item.system.price).strip()})}}exports.Migration750FixCorruptedPrice=Migration750FixCorruptedPrice,Migration750FixCorruptedPrice.version=.75},16088:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration751ResetRollOptions=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(54310);class Migration751ResetRollOptions extends base_1.MigrationBase{async updateActor(source){(0,_util_1.isObject)(source.flags.pf2e)&&"rollOptions"in source.flags.pf2e&&(source.flags.pf2e["-=rollOptions"]=null)}}exports.Migration751ResetRollOptions=Migration751ResetRollOptions,Migration751ResetRollOptions.version=.751},15889:function(__unused_webpack_module,exports,__webpack_require__){var _Migration752StrikeVsWeaponTraits_toSkip,__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration752StrikeVsWeaponTraits=void 0;const traits_1=__webpack_require__(39713),_util_1=__webpack_require__(6945),base_1=__webpack_require__(54310);class Migration752StrikeVsWeaponTraits extends base_1.MigrationBase{constructor(){super(...arguments),_Migration752StrikeVsWeaponTraits_toSkip.set(this,new Set(["ghost-hunter","stance-arcane-cascade","spirit-strikes"]))}async updateItem(source){var _a;if(__classPrivateFieldGet(this,_Migration752StrikeVsWeaponTraits_toSkip,"f").has(null!==(_a=source.system.slug)&&void 0!==_a?_a:""))return;const rules=source.system.rules.filter((r=>"AdjustStrike"===r.key&&"traits"===r.property));for(const rule of rules)(0,_util_1.objectHasKey)(traits_1.weaponTraits,rule.value)&&(rule.property="weapon-traits")}}exports.Migration752StrikeVsWeaponTraits=Migration752StrikeVsWeaponTraits,_Migration752StrikeVsWeaponTraits_toSkip=new WeakMap,Migration752StrikeVsWeaponTraits.version=.752},38049:function(__unused_webpack_module,exports,__webpack_require__){var _Migration753WeaponReloadTimes_instances,_Migration753WeaponReloadTimes_hasThrownTrait,__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration753WeaponReloadTimes=void 0;const base_1=__webpack_require__(54310);class Migration753WeaponReloadTimes extends base_1.MigrationBase{constructor(){super(...arguments),_Migration753WeaponReloadTimes_instances.add(this)}async updateItem(source){var _a;if("weapon"!==source.type)return;const slug=null!==(_a=source.system.slug)&&void 0!==_a?_a:"";["backpack-catapult","backpack-catapult"].includes(slug)?source.system.reload.value="10":("alchemical-bomb"===source.system.baseItem||__classPrivateFieldGet(this,_Migration753WeaponReloadTimes_instances,"m",_Migration753WeaponReloadTimes_hasThrownTrait).call(this,source))&&(source.system.reload.value="-")}}exports.Migration753WeaponReloadTimes=Migration753WeaponReloadTimes,_Migration753WeaponReloadTimes_instances=new WeakSet,_Migration753WeaponReloadTimes_hasThrownTrait=function(source){return source.system.traits.value.some((t=>t.startsWith("thrown")))},Migration753WeaponReloadTimes.version=.753},95013:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration754MightyBulwarkAdjustModifiers=void 0;const base_1=__webpack_require__(54310);class Migration754MightyBulwarkAdjustModifiers extends base_1.MigrationBase{async updateItem(source){if("feat"!==source.type||"mighty-bulwark"!==source.system.slug)return;source.system.rules=[{key:"FlatModifier",predicate:{all:["self:armor:trait:bulwark"]},selector:"reflex",type:"untyped",value:4},{key:"AdjustModifier",predicate:{all:["self:armor:trait:bulwark"]},selector:"reflex",slug:"dex",suppress:!0},{key:"AdjustModifier",selector:"reflex",slug:"bulwark",suppress:!0}]}}exports.Migration754MightyBulwarkAdjustModifiers=Migration754MightyBulwarkAdjustModifiers,Migration754MightyBulwarkAdjustModifiers.version=.754},25536:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration755GrantIdsToData=void 0;const base_1=__webpack_require__(54310);class Migration755GrantIdsToData extends base_1.MigrationBase{async updateActor(source){for(const item of source.items){if(!item.flags.pf2e)continue;const systemFlags=item.flags.pf2e,{grantedBy,itemGrants}=systemFlags;if("string"==typeof grantedBy){source.items.find((i=>i._id===grantedBy))?systemFlags.grantedBy={id:grantedBy}:systemFlags["-=grantedBy"]=null}Array.isArray(itemGrants)&&(systemFlags.itemGrants=itemGrants.flatMap((grant=>{if("string"==typeof grant){return source.items.find((i=>i._id===grant))?{id:grant}:[]}return grant})))}}}exports.Migration755GrantIdsToData=Migration755GrantIdsToData,Migration755GrantIdsToData.version=.755},33085:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration756RMStoredResourceMaxes=void 0;const base_1=__webpack_require__(54310);class Migration756RMStoredResourceMaxes extends base_1.MigrationBase{async updateActor(source){"character"===source.type&&(source["system.resources.focus.-=max"]=null,source["system.resources.crafting.infusedReagents.-=max"]=null,source["system.resources.-=investiture"]=null)}}exports.Migration756RMStoredResourceMaxes=Migration756RMStoredResourceMaxes,Migration756RMStoredResourceMaxes.version=.756},34186:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration757HillockHalfling=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(54310);class Migration757HillockHalfling extends base_1.MigrationBase{async updateItem(itemSource){var _a;if("heritage"!==itemSource.type)return;if("hillock-halfling"!==(null!==(_a=itemSource.system.slug)&&void 0!==_a?_a:(0,_util_1.sluggify)(itemSource.name)))return;const rules=itemSource.system.rules;if(!rules.some((rule=>"path"in rule&&"system.attributes.hp.recoveryAddend"===rule.path))){const element={key:"ActiveEffectLike",mode:"add",path:"system.attributes.hp.recoveryAddend",value:"@actor.level"};rules.push(element)}}}exports.Migration757HillockHalfling=Migration757HillockHalfling,Migration757HillockHalfling.version=.757},60468:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration758PrunePCAttributes=void 0;const base_1=__webpack_require__(54310);class Migration758PrunePCAttributes extends base_1.MigrationBase{constructor(){super(...arguments),this.toDelete=["-=ac","-=ancestryhp","-=battleForm","-=classDC","-=classOrSpellDC","-=classhp","-=dexCap","-=doomed","-=dying","-=familiarAbilities","-=flanking","-=flatbonushp","-=flatbonussp","-=handsFree","-=hardness","hp.-=breakdown","hp.-=details","hp.-=max","hp.-=name","hp.-=negativeHealing","hp.-=recoveryMultiplier","hp.-=totalModifier","hp.-=tempsource","hp.-=_modifiers","initiative.-=_modifiers","initiative.-=breakdown","initiative.-=label","initiative.-=name","initiative.-=roll","initiative.-=tiebreakPriority","initiative.-=totalModifier","-=levelbonushp","-=levelbonussp","-=perception","-=polymorphed","-=reach","-=shield","speed.-=_modifiers","speed.-=breakdown","speed.-=name","speed.-=total","speed.-=totalModifier","speed.-=type","-=spellDC","-=wounded"]}async updateActor(source){if("character"===source.type)for(const key of this.toDelete)source[`system.attributes.${key}`]=null}}exports.Migration758PrunePCAttributes=Migration758PrunePCAttributes,Migration758PrunePCAttributes.version=.758},22117:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration759CritSpecRE=void 0;const base_1=__webpack_require__(54310);class Migration759CritSpecRE extends base_1.MigrationBase{async updateItem(source){if(!["feat","weapon"].includes(source.type))return;const critSpecKey="CriticalSpecialization";if(!source.system.rules.some((r=>r.key===critSpecKey)))switch(source.system.slug){case"archer-dedication":return void source.system.rules.push({key:critSpecKey,predicate:{all:["weapon:group:bow",{gte:["weapon:proficiency:rank",2]}]}});case"azarketi-weapon-aptitude":return void(source.system.rules=[{key:critSpecKey,predicate:{any:["weapon:trait:azarketi","weapon:base:crossbow","weapon:base:hand-crossbow","weapon:base:longspear","weapon:base:spear","weapon:base:trident"]}}]);case"brawling-focus":return void(source.system.rules=[{key:critSpecKey,predicate:{any:["weapon:group:brawling",{and:["feat:monastic-weaponry","weapon:trait:monk",{not:"weapon:category:unarmed"},{gte:["weapon:proficiency:rank",1]}]}]}}]);case"brutality":return source.system.rules=source.system.rules.filter((r=>"Note"!==r.key)),void source.system.rules.push({key:critSpecKey,predicate:{all:["self:effect:rage","weapon:melee"]}});case"catfolk-weapon-rake":return void(source.system.rules=[{key:"CriticalSpecialization",predicate:{any:["weapon:trait:catfolk","weapon:base:hatchet","weapon:base:kama","weapon:base:kukri","weapon:base:scimitar","weapon:base:sickle"]}}]);case"conrasu-weapon-understanding":return void(source.system.rules=[{key:"CriticalSpecialization",predicate:{any:["weapon:trait:conrasu","weapon:base:glaive","weapon:base:longspear","weapon:base:longsword","weapon:base:shortbow","weapon:base:spear"]}}]);case"dwarven-weapon-cunning":return void(source.system.rules=[{key:"CriticalSpecialization",predicate:{any:["weapon:trait:dwarf","weapon:base:battle-axe","weapon:base:pick","weapon:base:warhammer"]}}]);case"elven-weapon-elegance":return void(source.system.rules=[{key:"CriticalSpecialization",predicate:{any:["weapon:trait:elf","weapon:base:longbow","weapon:base:longsword","weapon:base:rapier","weapon:base:shortbow"]}}]);case"fighter-weapon-mastery":return source.system.rules=source.system.rules.filter((r=>"Note"!==r.key)),void source.system.rules.push({key:critSpecKey,predicate:{all:[{gte:["weapon:proficiency:rank",3]}]}});case"genie-weapon-flourish":return void(source.system.rules=[{key:"CriticalSpecialization",predicate:{any:["weapon:trait:geniekin","weapon:base:falchion","weapon:base:ranseur","weapon:base:scimitar","weapon:base:trident"]}}]);case"gnoll-weapon-practicality":return void(source.system.rules=[{key:"CriticalSpecialization",predicate:{any:["weapon:trait:gnoll","weapon:base:flail","weapon:base:khopesh","weapon:base:mambele","weapon:base:spear","weapon:base:war-flail"]}}]);case"gnome-weapon-innovator":return void(source.system.rules=[{key:"CriticalSpecialization",predicate:{any:["weapon:trait:gnome","weapon:base:glaive","weapon:base:kukri"]}}]);case"goblin-weapon-frenzy":return void(source.system.rules=[{key:"CriticalSpecialization",predicate:{all:["weapon:trait:goblin"]}}]);case"grippli-weapon-innovator":return void(source.system.rules=[{key:"CriticalSpecialization",predicate:{any:["weapon:trait:grippli","weapon:base:blowgun","weapon:base:hatchet","weapon:base:scythe","weapon:base:shortbow"]}}]);case"gunslinger-weapon-mastery":return source.system.rules=source.system.rules.filter((r=>"Note"!==r.key)),void source.system.rules.push({key:critSpecKey,predicate:{any:["weapon:group:firearm","weapon:tag:crossbow"]}});case"halfling-weapon-trickster":return void(source.system.rules=[{key:"CriticalSpecialization",predicate:{any:["weapon:trait:halfling","weapon:base:shortsword","weapon:base:sling"]}}]);case"hobgoblin-weapon-discipline":return void(source.system.rules=[{key:"CriticalSpecialization",predicate:{any:["weapon:group:polearm","weapon:group:spear","weapon:group:sword"]}}]);case"improvised-critical":return void(source.system.rules=[{key:critSpecKey,predicate:{all:["weapon:tag:improvised"]}}]);case"kobold-weapon-innovator":return void(source.system.rules=[{key:"CriticalSpecialization",predicate:{any:["weapon:trait:kobold","weapon:base:crossbow","weapon:base:greatpick","weapon:base:light-pick","weapon:base:pick","weapon:base:spear"]}}]);case"mauler-dedication":return void source.system.rules.push({key:"CriticalSpecialization",predicate:{all:["weapon:melee",{or:["weapon:category:simple","weapon:category:martial"]},{or:["weapon:usage:hands:2","weapon:trait:two-hand-d6","weapon:trait:two-hand-d8","weapon:trait:two-hand-d10","weapon:trait:two-hand-d12"]}]}});case"orc-weapon-carnage":return void(source.system.rules=[{key:"CriticalSpecialization",predicate:{any:["weapon:trait:orc","weapon:base:falchion","weapon:base:greataxe"]}}]);case"ranger-weapon-expertise":return source.system.rules=source.system.rules.filter((r=>"Note"!==r.key)),void source.system.rules.push({key:critSpecKey,predicate:{all:["hunted-prey"],any:["weapon:category:simple","weapon:category:martial"]}});case"spike-launcher":{const rule={key:critSpecKey,alternate:!0,predicate:{all:["weapon:id:{item|_id}"]},text:"PF2E.Item.Weapon.CriticalSpecialization.bow"};return void source.system.rules.push(rule)}case"student-of-the-staff":return source.system.rules=source.system.rules.filter((r=>"Note"!==r.key)),void source.system.rules.unshift({key:critSpecKey,predicate:{all:["weapon:base:staff"]}});case"sun-sling":return void source.system.rules.push({key:critSpecKey,predicate:{all:["weapon:id:{item|_id}","feat:suns-fury"]}});case"suns-fury":return void(source.system.rules=[]);case"third-doctrine-warpriest":return void source.system.rules.push({key:critSpecKey,predicate:{all:["weapon:deity-favored"]}});case"vanths-weapon-execution":return void(source.system.rules=[{key:"CriticalSpecialization",predicate:{any:["weapon:base:bo-staff","weapon:base:longbow","weapon:base:scythe","weapon:base:staff"]}}]);case"weapon-expertise-swashbuckler":return source.system.rules=source.system.rules.filter((r=>"Note"!==r.key)),void source.system.rules.push({key:critSpecKey,predicate:{all:[{gte:["weapon:proficiency:rank",2]}]}});case"weapon-tricks":return source.system.rules=source.system.rules.filter((r=>"Note"!==r.key)),void source.system.rules.push({key:critSpecKey,predicate:{all:["target:condition:flat-footed"],any:[{and:[{or:["weapon:trait:agile","weapon:trait:finesse"]},{or:["weapon:category:simple","weapon:category:unarmed"]}]},"weapon:base:rapier","weapon:base:sap","weapon:base:shortbow","weapon:base:shortsword"]}})}}}exports.Migration759CritSpecRE=Migration759CritSpecRE,Migration759CritSpecRE.version=.759},14728:function(__unused_webpack_module,exports,__webpack_require__){var _Migration760SeparateNoteTitle_instances,_Migration760SeparateNoteTitle_cleanText,__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration760SeparateNoteTitle=void 0;const base_1=__webpack_require__(54310);class Migration760SeparateNoteTitle extends base_1.MigrationBase{constructor(){super(...arguments),_Migration760SeparateNoteTitle_instances.add(this)}async updateItem(source){var _a;const notes=source.system.rules.filter((r=>"Note"===r.key&&"string"==typeof r.text&&!("title"in r)));for(const note of notes){if(note.text=note.text.trim(),!note.text.startsWith("<p"))continue;const pElement=(()=>{const text=note.text.includes("</p>")?note.text:`${note.text}</p>`;try{const fragment=document.createElement("template");fragment.innerHTML=text;const children=Array.from(fragment.content.childNodes);if(1===children.length&&children[0]instanceof HTMLElement)return children[0];if(2===children.length&&children[0]instanceof HTMLParagraphElement&&children[1]instanceof Text){const[first,second]=children;return first.append(second),first}return null}catch(_a){return null}})();if("P"!==(null==pElement?void 0:pElement.nodeName))continue;const children=Array.from(pElement.childNodes);if(1===children.length&&children[0]instanceof Text){note.text=__classPrivateFieldGet(this,_Migration760SeparateNoteTitle_instances,"m",_Migration760SeparateNoteTitle_cleanText).call(this,null!==(_a=children[0].textContent)&&void 0!==_a?_a:""),pElement.dataset.visibility&&["gm","owner"].includes(pElement.dataset.visibility)&&(note.visibility=pElement.dataset.visibility);continue}if(!(2===children.length&&children[0]instanceof HTMLElement&&"STRONG"===children[0].nodeName&&children[1]instanceof Text))continue;const strongElement=children[0];strongElement.remove();const newText=pElement.innerHTML.trim();if(""===newText||note.text.includes("<span"))continue;const newTitle=strongElement.innerHTML.trim();newTitle===source.name?note.title="{item|name}":note.title="Critical Specialization"===newTitle?"PF2E.Actor.Creature.CriticalSpecialization":"Effect"===newTitle?"ITEM.TypeEffect":newTitle,note.text=__classPrivateFieldGet(this,_Migration760SeparateNoteTitle_instances,"m",_Migration760SeparateNoteTitle_cleanText).call(this,newText),pElement.dataset.visibility&&(note.visibility=pElement.dataset.visibility)}}}exports.Migration760SeparateNoteTitle=Migration760SeparateNoteTitle,_Migration760SeparateNoteTitle_instances=new WeakSet,_Migration760SeparateNoteTitle_cleanText=function(text){return text.replace(/^@Localize\[(.+)\]$/,"$1").replace(/^PF2E\.WeaponDescription([A-Z][a-z]+)$/,((substring,group)=>"string"==typeof group?`PF2E.Item.Weapon.CriticalSpecialization.${group.toLowerCase()}`:substring))},Migration760SeparateNoteTitle.version=.76},27305:function(__unused_webpack_module,exports,__webpack_require__){var _Migration761ShotRules_instances,_Migration761ShotRules_updateEffect,_Migration761ShotRules_updateFeat,__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration761ShotRules=void 0;const base_1=__webpack_require__(54310);class Migration761ShotRules extends base_1.MigrationBase{constructor(){super(...arguments),_Migration761ShotRules_instances.add(this)}async updateItem(source){switch(source.type){case"effect":__classPrivateFieldGet(this,_Migration761ShotRules_instances,"m",_Migration761ShotRules_updateEffect).call(this,source);break;case"feat":__classPrivateFieldGet(this,_Migration761ShotRules_instances,"m",_Migration761ShotRules_updateFeat).call(this,source)}}}exports.Migration761ShotRules=Migration761ShotRules,_Migration761ShotRules_instances=new WeakSet,_Migration761ShotRules_updateEffect=function(source){if("stance-multishot-stance"===source.system.slug){const newRules=[{key:"AdjustModifier",mode:"add",predicate:{all:["double-shot"]},relabel:"{item|name}",selector:"ranged-attack-roll",slug:"double-shot",value:1},{key:"AdjustModifier",mode:"add",predicate:{all:["triple-shot"]},relabel:"{item|name}",selector:"ranged-attack-roll",slug:"double-shot",value:1}];source.system.rules=newRules}},_Migration761ShotRules_updateFeat=function(source){switch(source.system.slug){case"double-shot":{const newRules=[{domain:"ranged-attack-roll",key:"RollOption",option:"double-shot",toggleable:!0},{key:"FlatModifier",predicate:{all:["double-shot","weapon:reload:0"]},selector:"ranged-attack-roll",slug:"double-shot",value:-2}];source.system.rules=newRules;break}case"triple-shot":{const newRules=[{domain:"ranged-attack-roll",disabledIf:{not:["double-shot"]},key:"RollOption",option:"triple-shot",priority:51,toggleable:!0},{key:"AdjustModifier",mode:"override",predicate:{all:["double-shot","triple-shot"]},relabel:"{item|name}",selector:"ranged-attack-roll",slug:"double-shot",value:-4}];source.system.rules=newRules;break}}},Migration761ShotRules.version=.761},15335:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration762UpdateBackgroundItems=void 0;const base_1=__webpack_require__(54310);class Migration762UpdateBackgroundItems extends base_1.MigrationBase{async updateItem(source){"background"!==source.type||"amnesiac"!==source.system.slug&&"discarded-duplicate"!==source.system.slug||3!==Object.values(source.system.boosts).length&&(source.system.boosts[2]={value:["cha","con","dex","int","str","wis"],selected:null})}}exports.Migration762UpdateBackgroundItems=Migration762UpdateBackgroundItems,Migration762UpdateBackgroundItems.version=.762},74983:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration763RestoreAnimalStrikeOptions=void 0;const base_1=__webpack_require__(54310);class Migration763RestoreAnimalStrikeOptions extends base_1.MigrationBase{async updateItem(source){var _a;if("feat"!==source.type||!/^[a-z]+-animal-instinct$/.test(null!==(_a=source.system.slug)&&void 0!==_a?_a:""))return;const strikeRE=source.system.rules.find((r=>"Strike"===r.key&&!Array.isArray(r.options)));strikeRE&&(strikeRE.options=["animal-instinct"])}}exports.Migration763RestoreAnimalStrikeOptions=Migration763RestoreAnimalStrikeOptions,Migration763RestoreAnimalStrikeOptions.version=.763},4511:function(__unused_webpack_module,exports,__webpack_require__){var _Migration764PanacheVivaciousREs_instances,_Migration764PanacheVivaciousREs_vivaciousRules_get,__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration764PanacheVivaciousREs=void 0;const base_1=__webpack_require__(54310);class Migration764PanacheVivaciousREs extends base_1.MigrationBase{constructor(){super(...arguments),_Migration764PanacheVivaciousREs_instances.add(this)}async updateItem(source){"feat"===source.type&&("panache"===source.system.slug?source.system.rules=[]:"vivacious-speed"===source.system.slug&&(source.system.rules=__classPrivateFieldGet(this,_Migration764PanacheVivaciousREs_instances,"a",_Migration764PanacheVivaciousREs_vivaciousRules_get)))}}exports.Migration764PanacheVivaciousREs=Migration764PanacheVivaciousREs,_Migration764PanacheVivaciousREs_instances=new WeakSet,_Migration764PanacheVivaciousREs_vivaciousRules_get=function(){return[{key:"FlatModifier",predicate:{all:["self:effect:panache"]},selector:"speed",slug:"vivacious-full",type:"status",value:{brackets:[{end:2,value:5},{end:6,start:3,value:10},{end:10,start:7,value:15},{end:14,start:11,value:20},{end:18,start:15,value:25},{start:19,value:30}]}},{key:"FlatModifier",predicate:{not:["self:effect:panache"]},selector:"speed",slug:"vivacious-half",type:"status",value:{brackets:[{end:10,start:3,value:5},{end:18,start:11,value:10},{start:19,value:15}]}}]},Migration764PanacheVivaciousREs.version=.764},8301:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration765ChoiceOwnedItemTypes=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(54310);class Migration765ChoiceOwnedItemTypes extends base_1.MigrationBase{async updateItem(source){for(const rule of source.system.rules){if("ChoiceSet"!==rule.key)continue;const data=rule;(0,_util_1.isObject)(data.choices)&&data.choices.ownedItems&&!data.choices.types&&(data.choices.types=["weapon"])}}}exports.Migration765ChoiceOwnedItemTypes=Migration765ChoiceOwnedItemTypes,Migration765ChoiceOwnedItemTypes.version=.765},90759:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration766WipeURLSources=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(54310);class Migration766WipeURLSources extends base_1.MigrationBase{async updateItem(source){var _a,_b;(!("game"in globalThis)||(null===(_b=null===(_a=source.flags.core)||void 0===_a?void 0:_a.sourceId)||void 0===_b?void 0:_b.startsWith("Compendium.pf2e.")))&&(0,_util_1.isObject)(source.system.source)&&"string"==typeof source.system.source.value&&source.system.source.value.startsWith("http")&&(source.system.source.value="")}}exports.Migration766WipeURLSources=Migration766WipeURLSources,Migration766WipeURLSources.version=.766},12008:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration767ConvertVoluntaryFlaws=void 0;const base_1=__webpack_require__(54310);class Migration767ConvertVoluntaryFlaws extends base_1.MigrationBase{async updateItem(source){var _a,_b;if("ancestry"!==source.type)return;const system=source.system,oldFlaws=Object.values(null!==(_a=system.voluntaryFlaws)&&void 0!==_a?_a:{}).map((b=>b.selected)).filter((a=>!!a)),oldBoosts=Object.values(null!==(_b=system.voluntaryBoosts)&&void 0!==_b?_b:{}).map((b=>b.selected)).filter((a=>!!a));(oldBoosts.length||oldFlaws.length)&&(system.voluntary={boost:oldBoosts.at(0)||null,flaws:oldFlaws}),system.voluntaryBoosts&&(delete system.voluntaryBoosts,delete system["-=voluntaryBoosts"]),system.voluntaryFlaws&&(delete system.voluntaryFlaws,delete system.voluntaryFlaws)}}exports.Migration767ConvertVoluntaryFlaws=Migration767ConvertVoluntaryFlaws,Migration767ConvertVoluntaryFlaws.version=.767},96896:function(__unused_webpack_module,exports,__webpack_require__){var _Migration768AddNewAuras_auraOfLife,_Migration768AddNewAuras_enlightenedPresence,_Migration768AddNewAuras_eternalBlessing,_Migration768AddNewAuras_marshalsAura,__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration768AddNewAuras=void 0;const base_1=__webpack_require__(54310);class Migration768AddNewAuras extends base_1.MigrationBase{constructor(){super(...arguments),_Migration768AddNewAuras_auraOfLife.set(this,{effects:[{affects:"allies",events:["enter"],uuid:"Compendium.pf2e.feat-effects.FPuICuxBLiDaEbDX"}],key:"Aura",radius:15,slug:"aura-of-life"}),_Migration768AddNewAuras_enlightenedPresence.set(this,{effects:[{affects:"allies",events:["enter"],uuid:"Compendium.pf2e.feat-effects.XM1AA8z5cHm8sJXM"}],key:"Aura",radius:15,slug:"enlightened-presence",traits:["emotion","mental"]}),_Migration768AddNewAuras_eternalBlessing.set(this,[{domain:"all",key:"RollOption",option:"eternal-blessing-active",toggleable:!0,value:!0},{effects:[{affects:"allies",events:["enter"],uuid:"Compendium.pf2e.spell-effects.Gqy7K6FnbLtwGpud"}],key:"Aura",predicate:{all:["eternal-blessing-active"]},radius:15,slug:"eternal-blessing",traits:["enchantment","mental"]}]),_Migration768AddNewAuras_marshalsAura.set(this,{effects:[{affects:"allies",events:["enter"],uuid:"Compendium.pf2e.feat-effects.Ru4BNABCZ0hUbX7S"}],key:"Aura",radius:10,slug:"marshals-aura",traits:["emotion","mental","visual"]})}async updateItem(source){if(!("feat"!==source.type||source.system.rules.length>0))switch(source.system.slug){case"aura-of-life":source.system.rules=[deepClone(__classPrivateFieldGet(this,_Migration768AddNewAuras_auraOfLife,"f"))];break;case"enlightened-presence":source.system.rules=[deepClone(__classPrivateFieldGet(this,_Migration768AddNewAuras_enlightenedPresence,"f"))];break;case"eternal-blessing":source.system.rules=deepClone(__classPrivateFieldGet(this,_Migration768AddNewAuras_eternalBlessing,"f"));break;case"marshal-dedication":source.system.rules=[deepClone(__classPrivateFieldGet(this,_Migration768AddNewAuras_marshalsAura,"f"))]}}}exports.Migration768AddNewAuras=Migration768AddNewAuras,_Migration768AddNewAuras_auraOfLife=new WeakMap,_Migration768AddNewAuras_enlightenedPresence=new WeakMap,_Migration768AddNewAuras_eternalBlessing=new WeakMap,_Migration768AddNewAuras_marshalsAura=new WeakMap,Migration768AddNewAuras.version=.768},80481:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration769NoUniversalistFocusPool=void 0;const base_1=__webpack_require__(54310);class Migration769NoUniversalistFocusPool extends base_1.MigrationBase{async updateItem(source){if("feat"===source.type&&"arcane-school"===source.system.slug){const rule=source.system.rules.find((r=>"ActiveEffectLike"===r.key&&"system.resources.focus.max"===r.path));rule&&(rule.predicate={not:["feature:universalist"]})}}}exports.Migration769NoUniversalistFocusPool=Migration769NoUniversalistFocusPool,Migration769NoUniversalistFocusPool.version=.769},64810:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration770REDataToSystem=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(54310);class Migration770REDataToSystem extends base_1.MigrationBase{async updateActor(source){source.system=(0,_util_1.recursiveReplaceString)(source.system,(value=>value.replace(/@(actor|item)\.data\.data./g,"@$1.system.").replace(/@(actor|item)\.data./g,"@$1.")))}async updateItem(source){source.system=(0,_util_1.recursiveReplaceString)(source.system,(value=>value.replace(/^data\.data\./,"system.").replace(/^data\./,"system.").replace(/"data\.data\./g,'"system.').replace(/"data\./g,'"system.').replace(/@(actor|item)\.data\.data./g,"@$1.system.").replace(/@(actor|item)\.data./g,"@$1.").replace(/\b(actor|item|rule)\|data\.data\./g,"$1|system.").replace(/\b(actor|item|rule)\|data\./g,"$1|system.")))}}exports.Migration770REDataToSystem=Migration770REDataToSystem,Migration770REDataToSystem.version=.77},83652:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration771SpellVariantsToSystem=void 0;const base_1=__webpack_require__(54310);class Migration771SpellVariantsToSystem extends base_1.MigrationBase{async updateItem(source){var _a;if("spell"===source.type)for(const overlayData of Object.values(null!==(_a=source.system.overlays)&&void 0!==_a?_a:{}))if("override"===overlayData.overlayType){const maybeWithData=overlayData;maybeWithData.data&&(delete Object.assign(maybeWithData,{system:maybeWithData.data}).data,maybeWithData["-=data"]=null)}}}exports.Migration771SpellVariantsToSystem=Migration771SpellVariantsToSystem,Migration771SpellVariantsToSystem.version=.771},59914:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration772V10EmbeddedSpellData=void 0;const base_1=__webpack_require__(54310);class Migration772V10EmbeddedSpellData extends base_1.MigrationBase{async preUpdateItem(source){var _a,_b;if("consumable"===source.type&&source.system.spell){const embeddedSpell=source.system.spell;(null===(_a=embeddedSpell.data)||void 0===_a?void 0:_a.data)?(source.system.spell=embeddedSpell.data,source.system.spell.system=embeddedSpell.data.data,source.system.spell.system.location.heightenedLevel=Number(embeddedSpell.data.heightenedLevel)||source.system.spell.system.level.value,embeddedSpell.data["-=data"]=null,delete embeddedSpell.data.data):(null===(_b=embeddedSpell.data)||void 0===_b?void 0:_b.system)?(source.system.spell=embeddedSpell.data,source.system.spell.system.location.heightenedLevel=Number(embeddedSpell.data.heightenedLevel)||source.system.spell.system.level.value):null===embeddedSpell.data&&(source.system.spell=null)}}}exports.Migration772V10EmbeddedSpellData=Migration772V10EmbeddedSpellData,Migration772V10EmbeddedSpellData.version=.772},68957:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration773ReligiousSymbolUsage=void 0;const base_1=__webpack_require__(54310);class Migration773ReligiousSymbolUsage extends base_1.MigrationBase{async updateItem(source){var _a;"equipment"===source.type&&(null===(_a=source.system.slug)||void 0===_a?void 0:_a.startsWith("religious-symbol"))&&(source.system.usage.value="held-in-one-hand")}}exports.Migration773ReligiousSymbolUsage=Migration773ReligiousSymbolUsage,Migration773ReligiousSymbolUsage.version=.773},85522:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration774UnpersistCraftingEntries=void 0;const base_1=__webpack_require__(54310);class Migration774UnpersistCraftingEntries extends base_1.MigrationBase{constructor(){super(...arguments),this.munitionsCrafterPredicate={all:["item:trait:alchemical"],any:["item:trait:bomb","item:subtype:ammo"]}}async updateActor(source){var _a,_b,_c;if("character"===source.type){const craftingData=source.system.crafting,craftingEntries=null!==(_a=craftingData.entries)&&void 0!==_a?_a:{},rules=source.items.flatMap((i=>i.system.rules));for(const rule of rules)"CraftingEntry"===rule.key&&"string"==typeof rule.selector&&0!==rule.selector.length&&rule.requiredTraits&&(rule.preparedFormulas=null!==(_c=null===(_b=craftingEntries[rule.selector])||void 0===_b?void 0:_b.actorPreparedFormulas)&&void 0!==_c?_c:[]);delete craftingData.entries,craftingData["-=entries"]=null}}async updateItem(itemSource){const rules=itemSource.system.rules,craftingEntryRules=rules.filter((r=>"CraftingEntry"===r.key&&Array.isArray(r.requiredTraits))),newCraftingEntryRules=craftingEntryRules.map((craftingEntryRule=>(craftingEntryRule.craftableItems="munitionsCrafter"===craftingEntryRule.selector?this.munitionsCrafterPredicate:this.generatePredicateFromRequiredTraits(craftingEntryRule.requiredTraits||[]),delete craftingEntryRule.requiredTraits,craftingEntryRule)));for(const craftingEntryRule of craftingEntryRules){const index=rules.indexOf(craftingEntryRule);rules.splice(index,1,newCraftingEntryRules.shift()),delete craftingEntryRule.requiredTraits}const craftingEntryAELikes=rules.filter((r=>"ActiveEffectLike"===r.key&&"string"==typeof r.path&&r.path.startsWith("system.crafting.entries."))),newCraftingEntryAELikes=craftingEntryAELikes.map((craftingEntryAELike=>(craftingEntryAELike.phase="beforeDerived",craftingEntryAELike)));for(const craftingEntryAELike of craftingEntryAELikes){const index=rules.indexOf(craftingEntryAELike);rules.splice(index,1,newCraftingEntryAELikes.shift())}}generatePredicateFromRequiredTraits(requiredTraits){return 1===requiredTraits.length?{all:requiredTraits[0].map((trait=>`item:trait:${trait}`))}:{any:requiredTraits.map((traits=>({and:traits.map((trait=>`item:trait:${trait}`))})))}}}exports.Migration774UnpersistCraftingEntries=Migration774UnpersistCraftingEntries,Migration774UnpersistCraftingEntries.version=.774},1635:function(__unused_webpack_module,exports,__webpack_require__){var _Migration775AgileFinesseRanged_instances,_Migration775AgileFinesseRanged_findDamageDiceRE,_Migration775AgileFinesseRanged_athleticStrategist_get,_Migration775AgileFinesseRanged_deviseAStratagem_get,_Migration775AgileFinesseRanged_ruffianPredicate_get,_Migration775AgileFinesseRanged_sneakAttackPredicate_get,__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration775AgileFinesseRanged=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(54310);class Migration775AgileFinesseRanged extends base_1.MigrationBase{constructor(){super(...arguments),_Migration775AgileFinesseRanged_instances.add(this)}async updateItem(source){var _a;switch(source.type){case"action":if("sneak-attack"===source.system.slug){const damageDiceRE=__classPrivateFieldGet(this,_Migration775AgileFinesseRanged_instances,"m",_Migration775AgileFinesseRanged_findDamageDiceRE).call(this,source);(0,_util_1.isObject)(damageDiceRE)&&damageDiceRE.predicate&&Array.isArray(damageDiceRE.predicate.all)&&damageDiceRE.predicate.all.some((s=>s instanceof Object&&"or"in s))&&(damageDiceRE.predicate=__classPrivateFieldGet(this,_Migration775AgileFinesseRanged_instances,"a",_Migration775AgileFinesseRanged_sneakAttackPredicate_get))}break;case"feat":switch(source.system.slug){case"athletic-strategist":{const index=source.system.rules.findIndex((r=>"FlatModifier"===r.key));-1!==index&&(source.system.rules[index]=__classPrivateFieldGet(this,_Migration775AgileFinesseRanged_instances,"a",_Migration775AgileFinesseRanged_athleticStrategist_get));break}case"devise-a-stratagem":{const index=source.system.rules.findIndex((r=>"FlatModifier"===r.key));-1!==index&&(source.system.rules[index]=__classPrivateFieldGet(this,_Migration775AgileFinesseRanged_instances,"a",_Migration775AgileFinesseRanged_deviseAStratagem_get));break}case"ruffian":{const damageDiceRE=__classPrivateFieldGet(this,_Migration775AgileFinesseRanged_instances,"m",_Migration775AgileFinesseRanged_findDamageDiceRE).call(this,source);damageDiceRE&&(damageDiceRE.predicate=__classPrivateFieldGet(this,_Migration775AgileFinesseRanged_instances,"a",_Migration775AgileFinesseRanged_ruffianPredicate_get));break}case"shadow-sneak-attack":case"sneak-attack":case"sneak-attacker":{const damageDiceRE=__classPrivateFieldGet(this,_Migration775AgileFinesseRanged_instances,"m",_Migration775AgileFinesseRanged_findDamageDiceRE).call(this,source);if(damageDiceRE){const predicate=__classPrivateFieldGet(this,_Migration775AgileFinesseRanged_instances,"a",_Migration775AgileFinesseRanged_sneakAttackPredicate_get);"classfeature"===source.system.featType.value&&(null===(_a=predicate.all)||void 0===_a||_a.unshift("class:rogue")),damageDiceRE.predicate=predicate}break}}}}}exports.Migration775AgileFinesseRanged=Migration775AgileFinesseRanged,_Migration775AgileFinesseRanged_instances=new WeakSet,_Migration775AgileFinesseRanged_findDamageDiceRE=function(source){var _a;return null!==(_a=source.system.rules.find((r=>"DamageDice"===r.key)))&&void 0!==_a?_a:null},_Migration775AgileFinesseRanged_athleticStrategist_get=function(){return{ability:"int",key:"FlatModifier",predicate:{all:["class:investigator","devise-a-stratagem",{or:["action:disarm","action:grapple","action:shove","action:trip"]}],any:["weapon:trait:agile","weapon:trait:finesse",{and:["weapon:ranged",{not:"weapon:thrown-melee"}]},"weapon:base:sap"]},selector:"athletics",type:"ability"}},_Migration775AgileFinesseRanged_deviseAStratagem_get=function(){return{ability:"int",key:"FlatModifier",predicate:{all:["class:investigator","devise-a-stratagem"],any:["weapon:trait:agile","weapon:trait:finesse",{and:["weapon:ranged",{not:"weapon:thrown-melee"}]},"weapon:base:sap"]},selector:"attack-roll",type:"ability"}},_Migration775AgileFinesseRanged_ruffianPredicate_get=function(){return{all:["target:condition:flat-footed","weapon:category:simple",{nor:[{and:["weapon:ranged",{not:"weapon:thrown-melee"}]},"weapon:trait:agile","weapon:trait:finesse"]}]}},_Migration775AgileFinesseRanged_sneakAttackPredicate_get=function(){return{all:["target:condition:flat-footed"],any:["weapon:trait:agile","weapon:trait:finesse",{and:["weapon:ranged",{not:"weapon:thrown-melee"}]}]}},Migration775AgileFinesseRanged.version=.775},24366:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration776SlugifyConditionOverrides=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(54310);class Migration776SlugifyConditionOverrides extends base_1.MigrationBase{async updateItem(source){if("condition"!==source.type)return;const{system}=source;Array.isArray(system.overrides)&&system.overrides.every((o=>"string"==typeof o))&&(system.overrides=system.overrides.map((o=>(0,_util_1.sluggify)(o))))}}exports.Migration776SlugifyConditionOverrides=Migration776SlugifyConditionOverrides,Migration776SlugifyConditionOverrides.version=.776},60380:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration777HandOfTheApprentice=void 0;const base_1=__webpack_require__(54310);class Migration777HandOfTheApprentice extends base_1.MigrationBase{async updateItem(source){"feat"===source.type&&"hand-of-the-apprentice"===source.system.slug&&(source.system.rules=[{key:"ActiveEffectLike",mode:"add",path:"system.resources.focus.max",value:1}])}}exports.Migration777HandOfTheApprentice=Migration777HandOfTheApprentice,Migration777HandOfTheApprentice.version=.777},88406:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration778RenameRetiredPackRefs=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(54310);class Migration778RenameRetiredPackRefs extends base_1.MigrationBase{async updateItem(source){const rename=text=>text.replace(/\bpf2e\.consumable-effects\b/g,"pf2e.equipment-effects").replace(/\bpf2e\.exploration-effects\b/g,"pf2e.other-effects").replace(/\bpf2e\.feature-effects\b/g,"pf2e.feat-effects").replace(/\bpf2e\.equipment-effects\.I9lfZUiCwMiGogVi\b/g,"pf2e.other-effects.I9lfZUiCwMiGogVi").replace(/\bpf2e\.equipment-effects\.Cover\b/g,"pf2e.other-effects.Effect: Cover");source.system.rules=(0,_util_1.recursiveReplaceString)(source.system.rules,rename),source.system.description=(0,_util_1.recursiveReplaceString)(source.system.description,rename)}}exports.Migration778RenameRetiredPackRefs=Migration778RenameRetiredPackRefs,Migration778RenameRetiredPackRefs.version=.778},71342:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration779EliteWeak=void 0;const base_1=__webpack_require__(54310);class Migration779EliteWeak extends base_1.MigrationBase{async updateActor(source){var _a;if("npc"!==source.type||!(null===(_a=source.system.traits.traits)||void 0===_a?void 0:_a.value))return;const traits=source.system.traits.traits,adjustment=traits.value.includes("elite")?"elite":traits.value.includes("weak")?"weak":null;adjustment&&(source.system.attributes.adjustment=adjustment,traits.value=traits.value.filter((trait=>"elite"!==trait&&"weak"!==trait)))}}exports.Migration779EliteWeak=Migration779EliteWeak,Migration779EliteWeak.version=.779},86939:function(__unused_webpack_module,exports,__webpack_require__){var _Migration780NumifySpeeds_instances,_Migration780NumifySpeeds_updateSpeed,__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration780NumifySpeeds=void 0;const base_1=__webpack_require__(54310);class Migration780NumifySpeeds extends base_1.MigrationBase{constructor(){super(...arguments),_Migration780NumifySpeeds_instances.add(this)}async updateActor(source){if("npc"!==source.type&&"character"!==source.type)return;const speeds=source.system.attributes.speed;speeds.value=__classPrivateFieldGet(this,_Migration780NumifySpeeds_instances,"m",_Migration780NumifySpeeds_updateSpeed).call(this,speeds.value),Array.isArray(speeds.otherSpeeds)||(speeds.otherSpeeds=[]);for(const movementType of speeds.otherSpeeds)movementType.value=__classPrivateFieldGet(this,_Migration780NumifySpeeds_instances,"m",_Migration780NumifySpeeds_updateSpeed).call(this,movementType.value)}}exports.Migration780NumifySpeeds=Migration780NumifySpeeds,_Migration780NumifySpeeds_instances=new WeakSet,_Migration780NumifySpeeds_updateSpeed=function(speed){const numifiedValue=parseInt(String(speed),10);return Number.isNaN(numifiedValue)?25:numifiedValue},Migration780NumifySpeeds.version=.78},59900:function(__unused_webpack_module,exports,__webpack_require__){var _Migration781SuppressNoCrowbar_instances,_Migration781SuppressNoCrowbar_suppressNoCrowbar_get,__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration781SuppressNoCrowbar=void 0;const base_1=__webpack_require__(54310);class Migration781SuppressNoCrowbar extends base_1.MigrationBase{constructor(){super(...arguments),_Migration781SuppressNoCrowbar_instances.add(this)}async updateItem(source){if(!source.system.slug)return;const isCrowbar="equipment"===source.type&&/^crowbar(?:-levered)?$/.test(source.system.slug),isForcedEntry="feat"===source.type&&"forced-entry"===source.system.slug;(isCrowbar||isForcedEntry)&&!source.system.rules.some((r=>"AdjustModifier"===r.key))&&source.system.rules.push(__classPrivateFieldGet(this,_Migration781SuppressNoCrowbar_instances,"a",_Migration781SuppressNoCrowbar_suppressNoCrowbar_get))}}exports.Migration781SuppressNoCrowbar=Migration781SuppressNoCrowbar,_Migration781SuppressNoCrowbar_instances=new WeakSet,_Migration781SuppressNoCrowbar_suppressNoCrowbar_get=function(){return{key:"AdjustModifier",selector:"athletics",slug:"no-crowbar",suppress:!0}},Migration781SuppressNoCrowbar.version=.781},4065:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration782UnnestActorTraits=void 0;const base_1=__webpack_require__(54310);class Migration782UnnestActorTraits extends base_1.MigrationBase{async updateActor(source){var _a;(null===(_a=source.system.traits)||void 0===_a?void 0:_a.traits)&&Array.isArray(source.system.traits.traits.value)&&(source.system.traits.value=source.system.traits.traits.value,delete source.system.traits.traits,source.system.traits["-=traits"]=null)}}exports.Migration782UnnestActorTraits=Migration782UnnestActorTraits,Migration782UnnestActorTraits.version=.782},49450:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration783RemoveClassSkillAELikes=void 0;const base_1=__webpack_require__(54310);class Migration783RemoveClassSkillAELikes extends base_1.MigrationBase{async updateItem(source){"class"===source.type&&(source.system.rules=source.system.rules.filter((r=>!("ActiveEffectLike"===r.key&&"string"==typeof r.path&&/^system.skills\.[a-z]{3}\.rank$/.test(r.path)&&1===r.value))))}}exports.Migration783RemoveClassSkillAELikes=Migration783RemoveClassSkillAELikes,Migration783RemoveClassSkillAELikes.version=.783},70414:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration784CompBrowserPackSetting=void 0;const base_1=__webpack_require__(54310);class Migration784CompBrowserPackSetting extends base_1.MigrationBase{async migrate(){var _a;const savedSettings=game.settings.get("pf2e","compendiumBrowserPacks");if(savedSettings instanceof String){const settings=JSON.parse(savedSettings.toString());await game.settings.set("pf2e","compendiumBrowserPacks",settings);const browser=null===(_a=null===game||void 0===game?void 0:game.pf2e)||void 0===_a?void 0:_a.compendiumBrowser;browser&&(browser.settings=settings,browser.initCompendiumList())}}}exports.Migration784CompBrowserPackSetting=Migration784CompBrowserPackSetting,Migration784CompBrowserPackSetting.version=.784},5827:function(__unused_webpack_module,exports,__webpack_require__){var _Migration785ABCKitItemUUIDs_instances,_Migration785ABCKitItemUUIDs_convertToUUIDs,__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration785ABCKitItemUUIDs=void 0;const base_1=__webpack_require__(54310);class Migration785ABCKitItemUUIDs extends base_1.MigrationBase{constructor(){super(...arguments),_Migration785ABCKitItemUUIDs_instances.add(this)}async updateItem(source){switch(source.type){case"ancestry":case"background":case"class":case"kit":__classPrivateFieldGet(this,_Migration785ABCKitItemUUIDs_instances,"m",_Migration785ABCKitItemUUIDs_convertToUUIDs).call(this,Object.values(source.system.items))}}}exports.Migration785ABCKitItemUUIDs=Migration785ABCKitItemUUIDs,_Migration785ABCKitItemUUIDs_instances=new WeakSet,_Migration785ABCKitItemUUIDs_convertToUUIDs=function _Migration785ABCKitItemUUIDs_convertToUUIDs(references){for(const reference of references)reference.id&&reference.pack?reference.uuid=`Compendium.${reference.pack}.${reference.id}`:reference.id&&(reference.uuid=`Item.${reference.id}`),delete reference.id,delete reference.pack,reference["-=id"]=null,reference["-=pack"]=null,reference.items&&__classPrivateFieldGet(this,_Migration785ABCKitItemUUIDs_instances,"m",_Migration785ABCKitItemUUIDs_convertToUUIDs).call(this,Object.values(reference.items))},Migration785ABCKitItemUUIDs.version=.785},87627:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration786RemoveIdentifiedData=void 0;const helpers_1=__webpack_require__(44252),base_1=__webpack_require__(54310);class Migration786RemoveIdentifiedData extends base_1.MigrationBase{async updateItem(source){var _a;if(!(0,helpers_1.isPhysicalData)(source))return;const identification=null!==(_a=source.system.identification)&&void 0!==_a?_a:{};identification.identified&&(identification["-=identified"]=null)}}exports.Migration786RemoveIdentifiedData=Migration786RemoveIdentifiedData,Migration786RemoveIdentifiedData.version=.786},38779:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration787ResolvablesToSystem=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(54310);class Migration787ResolvablesToSystem extends base_1.MigrationBase{async updateItem(source){source.system=(0,_util_1.recursiveReplaceString)(source.system,(value=>value.replace(/@(weapon|spell)\.data\.data./g,"@$1.system.").replace(/@(weapon|spell)\.data./g,"@$1.")))}}exports.Migration787ResolvablesToSystem=Migration787ResolvablesToSystem,Migration787ResolvablesToSystem.version=.787},38553:function(__unused_webpack_module,exports,__webpack_require__){var _Migration788UpdateTanglefootBags_instances,_Migration788UpdateTanglefootBags_getRules,__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration788UpdateTanglefootBags=void 0;const base_1=__webpack_require__(54310);class Migration788UpdateTanglefootBags extends base_1.MigrationBase{constructor(){super(...arguments),_Migration788UpdateTanglefootBags_instances.add(this)}async updateItem(source){var _a;if("weapon"===source.type&&(null===(_a=source.system.slug)||void 0===_a?void 0:_a.startsWith("tanglefoot-bag-")))switch(source.system.damage.dice=0,source.system.slug){case"tanglefoot-bag-lesser":return void(source.system.rules=__classPrivateFieldGet(this,_Migration788UpdateTanglefootBags_instances,"m",_Migration788UpdateTanglefootBags_getRules).call(this,"Lesser"));case"tanglefoot-bag-moderate":return void(source.system.rules=__classPrivateFieldGet(this,_Migration788UpdateTanglefootBags_instances,"m",_Migration788UpdateTanglefootBags_getRules).call(this,"Moderate"));case"tanglefoot-bag-greater":return void(source.system.rules=__classPrivateFieldGet(this,_Migration788UpdateTanglefootBags_instances,"m",_Migration788UpdateTanglefootBags_getRules).call(this,"Greater"));case"tanglefoot-bag-major":return void(source.system.rules=__classPrivateFieldGet(this,_Migration788UpdateTanglefootBags_instances,"m",_Migration788UpdateTanglefootBags_getRules).call(this,"Major"))}}}exports.Migration788UpdateTanglefootBags=Migration788UpdateTanglefootBags,_Migration788UpdateTanglefootBags_instances=new WeakSet,_Migration788UpdateTanglefootBags_getRules=function(type){return[{key:"Note",outcome:["success"],selector:"{item|_id}-attack",text:`PF2E.BombNotes.TanglefootBag.${type}.success`,title:"ITEM.TypeEffect"},{key:"Note",outcome:["criticalSuccess"],selector:"{item|_id}-attack",text:`PF2E.BombNotes.TanglefootBag.${type}.criticalSuccess`,title:"ITEM.TypeEffect"}]},Migration788UpdateTanglefootBags.version=.788},67485:function(__unused_webpack_module,exports,__webpack_require__){var _Migration789UpdatePreciseStrike_instances,_Migration789UpdatePreciseStrike_preciseStrikeRules_get,_Migration789UpdatePreciseStrike_finishingPrecisionRules_get,__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration789UpdatePreciseStrike=void 0;const base_1=__webpack_require__(54310);class Migration789UpdatePreciseStrike extends base_1.MigrationBase{constructor(){super(...arguments),_Migration789UpdatePreciseStrike_instances.add(this)}async updateItem(source){if("feat"===source.type)if("precise-strike"===source.system.slug)source.system.rules=__classPrivateFieldGet(this,_Migration789UpdatePreciseStrike_instances,"a",_Migration789UpdatePreciseStrike_preciseStrikeRules_get);else if("finishing-precision"===source.system.slug){const rules=source.system.rules.filter((r=>"GrantItem"===r.key));source.system.rules=[...rules,...__classPrivateFieldGet(this,_Migration789UpdatePreciseStrike_instances,"a",_Migration789UpdatePreciseStrike_finishingPrecisionRules_get)]}}}exports.Migration789UpdatePreciseStrike=Migration789UpdatePreciseStrike,_Migration789UpdatePreciseStrike_instances=new WeakSet,_Migration789UpdatePreciseStrike_preciseStrikeRules_get=function(){return[{domain:"damage-roll",key:"RollOption",label:"PF2E.SpecificRule.PreciseStrike.Finisher",option:"finisher",toggleable:!0},{damageCategory:"precision",key:"FlatModifier",predicate:{all:["class:swashbuckler","self:effect:panache",{or:["weapon:melee",{and:["feat:flying-blade","weapon:thrown","target:range-increment:1"]}]}],any:["weapon:trait:agile","weapon:trait:finesse"],not:["finisher"]},selector:"strike-damage",slug:"precise-strike",value:{brackets:[{end:4,value:2},{end:8,start:5,value:3},{end:12,start:9,value:4},{end:16,start:13,value:5},{start:17,value:6}]}},{category:"precision",dieSize:"d6",key:"DamageDice",predicate:{all:["class:swashbuckler","self:effect:panache","finisher",{or:["weapon:melee",{and:["feat:flying-blade","weapon:thrown","target:range-increment:1"]}]}],any:["weapon:trait:agile","weapon:trait:finesse"]},selector:"strike-damage",slug:"finisher",value:{brackets:[{end:4,value:{diceNumber:2}},{end:8,start:5,value:{diceNumber:3}},{end:12,start:9,value:{diceNumber:4}},{end:16,start:13,value:{diceNumber:5}},{start:17,value:{diceNumber:6}}]}}]},_Migration789UpdatePreciseStrike_finishingPrecisionRules_get=function(){return[{damageCategory:"precision",key:"FlatModifier",predicate:{all:["self:effect:panache",{or:["weapon:melee",{and:["feat:flying-blade","weapon:thrown","target:range-increment:1"]}]}],any:["weapon:trait:agile","weapon:trait:finesse"],not:["finisher"]},selector:"strike-damage",slug:"finishing-precision",value:1},{category:"precision",diceNumber:1,dieSize:"d6",key:"DamageDice",predicate:{all:["self:effect:panache","finisher",{or:["weapon:melee",{and:["feat:flying-blade","weapon:thrown","target:range-increment:1"]}]}],any:["weapon:trait:agile","weapon:trait:finesse"]},selector:"strike-damage",slug:"finishing-precision"}]},Migration789UpdatePreciseStrike.version=.789},52279:function(__unused_webpack_module,exports,__webpack_require__){var _Migration790MultipleClassDCs_otherClassDCs,__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration790MultipleClassDCs=void 0;const base_1=__webpack_require__(54310);class Migration790MultipleClassDCs extends base_1.MigrationBase{constructor(){super(...arguments),_Migration790MultipleClassDCs_otherClassDCs.set(this,new Map([["call-implement","thaumaturge"],["eerie-proclamation","ranger"],["stunning-fist","monk"],["ring-bell","thaumaturge"]]))}async updateActor(source){var _a;if("character"!==source.type)return;const customModifiers=null!==(_a=source.system.customModifiers)&&void 0!==_a?_a:{};(null==customModifiers?void 0:customModifiers.class)&&(customModifiers["-=class"]=null)}async updateItem(source){var _a;if("feat"===source.type&&"classfeature"===source.system.featType.value){const classSlug=source.system.traits.value.at(0);if(!classSlug)return;const aeLikes=source.system.rules.filter((r=>"ActiveEffectLike"===r.key));for(const aeLike of aeLikes)"system.attributes.classDC.rank"===aeLike.path&&(aeLike.path=`system.proficiencies.classDCs.${classSlug}.rank`)}const itemSlug=null!==(_a=source.system.slug)&&void 0!==_a?_a:"";if(__classPrivateFieldGet(this,_Migration790MultipleClassDCs_otherClassDCs,"f").has(itemSlug)){const oldClassDCPattern=/\bsystem\.attributes\.classDC\b/,classSlug=__classPrivateFieldGet(this,_Migration790MultipleClassDCs_otherClassDCs,"f").get(itemSlug),{description}=source.system;description.value=description.value.replace(oldClassDCPattern,`system.proficiencies.classDCs.${classSlug}`);const notes=source.system.rules.filter((r=>"Note"===r.key&&"string"==typeof r.text));for(const note of notes)note.text=note.text.replace(oldClassDCPattern,`system.proficiencies.classDCs.${classSlug}`)}}}exports.Migration790MultipleClassDCs=Migration790MultipleClassDCs,_Migration790MultipleClassDCs_otherClassDCs=new WeakMap,Migration790MultipleClassDCs.version=.79},95600:function(__unused_webpack_module,exports,__webpack_require__){var _Migration791RuffianHands_instances,_Migration791RuffianHands_critSpec_get,_Migration791RuffianHands_hands_get,__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration791RuffianHands=void 0;const base_1=__webpack_require__(54310);class Migration791RuffianHands extends base_1.MigrationBase{constructor(){super(...arguments),_Migration791RuffianHands_instances.add(this)}async updateItem(source){if("feat"===source.type&&source.system.slug)switch(source.system.slug){case"ruffian":source.system.rules.some((r=>"CriticalSpecialization"===r.key))||source.system.rules.push(__classPrivateFieldGet(this,_Migration791RuffianHands_instances,"a",_Migration791RuffianHands_critSpec_get));break;case"healing-hands":{const hands=__classPrivateFieldGet(this,_Migration791RuffianHands_instances,"a",_Migration791RuffianHands_hands_get);hands.predicate={all:["item:slug:heal"]},source.system.rules=[hands];break}case"harming-hands":{const hands=__classPrivateFieldGet(this,_Migration791RuffianHands_instances,"a",_Migration791RuffianHands_hands_get);hands.predicate={all:["item:slug:harm"]},source.system.rules=[hands];break}}}}exports.Migration791RuffianHands=Migration791RuffianHands,_Migration791RuffianHands_instances=new WeakSet,_Migration791RuffianHands_critSpec_get=function(){return{key:"CriticalSpecialization",predicate:{all:["target:condition:flat-footed","weapon:category:simple",{lte:["weapon:damage:die:faces",8]}]}}},_Migration791RuffianHands_hands_get=function(){return{key:"DamageDice",override:{dieSize:"d10"},selector:"spell-damage"}},Migration791RuffianHands.version=.791},19660:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration792RemoveTokenAELikes=void 0;const base_1=__webpack_require__(54310);class Migration792RemoveTokenAELikes extends base_1.MigrationBase{async updateItem(source){const rules=source.system.rules;for(const rule of[...rules])"ActiveEffectLike"===rule.key&&"string"==typeof rule.path&&/^token\./.test(rule.path)&&rules.splice(rules.indexOf(rule),1)}}exports.Migration792RemoveTokenAELikes=Migration792RemoveTokenAELikes,Migration792RemoveTokenAELikes.version=.792},37824:function(__unused_webpack_module,exports,__webpack_require__){var _Migration793MakePredicatesArrays_instances,_Migration793MakePredicatesArrays_isOldRawPredicate,_Migration793MakePredicatesArrays_isArrayChoiceSet,_Migration793MakePredicatesArrays_isObjectChoiceSet,__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration793MakePredicatesArrays=void 0;const predication_1=__webpack_require__(538),_util_1=__webpack_require__(6945),base_1=__webpack_require__(54310);class Migration793MakePredicatesArrays extends base_1.MigrationBase{constructor(){super(...arguments),_Migration793MakePredicatesArrays_instances.add(this)}async updateItem(source){var _a;const rules=source.system.rules;for(const rule of rules){if(__classPrivateFieldGet(this,_Migration793MakePredicatesArrays_instances,"m",_Migration793MakePredicatesArrays_isOldRawPredicate).call(this,rule.predicate)&&(rule.predicate=(0,predication_1.convertLegacyData)(rule.predicate)),__classPrivateFieldGet(this,_Migration793MakePredicatesArrays_instances,"m",_Migration793MakePredicatesArrays_isOldRawPredicate).call(this,rule.definition)&&(rule.definition=(0,predication_1.convertLegacyData)(rule.definition)),__classPrivateFieldGet(this,_Migration793MakePredicatesArrays_instances,"m",_Migration793MakePredicatesArrays_isOldRawPredicate).call(this,rule.allowedDrops)&&(rule.allowedDrops={label:null!==(_a=rule.allowedDrops.label)&&void 0!==_a?_a:void 0,predicate:(0,predication_1.convertLegacyData)(rule.allowedDrops)}),__classPrivateFieldGet(this,_Migration793MakePredicatesArrays_instances,"m",_Migration793MakePredicatesArrays_isOldRawPredicate).call(this,rule.predicate)&&(rule.predicate=(0,predication_1.convertLegacyData)(rule.predicate)),__classPrivateFieldGet(this,_Migration793MakePredicatesArrays_instances,"m",_Migration793MakePredicatesArrays_isArrayChoiceSet).call(this,rule))for(const choice of rule.choices)__classPrivateFieldGet(this,_Migration793MakePredicatesArrays_instances,"m",_Migration793MakePredicatesArrays_isOldRawPredicate).call(this,choice.predicate)&&(choice.predicate=(0,predication_1.convertLegacyData)(choice.predicate));else __classPrivateFieldGet(this,_Migration793MakePredicatesArrays_instances,"m",_Migration793MakePredicatesArrays_isObjectChoiceSet).call(this,rule)?(__classPrivateFieldGet(this,_Migration793MakePredicatesArrays_instances,"m",_Migration793MakePredicatesArrays_isOldRawPredicate).call(this,rule.choices.predicate)&&(rule.choices.predicate=(0,predication_1.convertLegacyData)(rule.choices.predicate)),__classPrivateFieldGet(this,_Migration793MakePredicatesArrays_instances,"m",_Migration793MakePredicatesArrays_isOldRawPredicate).call(this,rule.choices.postFilter)&&(rule.choices.postFilter=(0,predication_1.convertLegacyData)(rule.choices.postFilter))):__classPrivateFieldGet(this,_Migration793MakePredicatesArrays_instances,"m",_Migration793MakePredicatesArrays_isOldRawPredicate).call(this,rule.craftableItems)&&(rule.craftableItems=(0,predication_1.convertLegacyData)(rule.craftableItems));__classPrivateFieldGet(this,_Migration793MakePredicatesArrays_instances,"m",_Migration793MakePredicatesArrays_isOldRawPredicate).call(this,rule.disabledIf)&&(rule.disabledIf=(0,predication_1.convertLegacyData)(rule.disabledIf))}}}exports.Migration793MakePredicatesArrays=Migration793MakePredicatesArrays,_Migration793MakePredicatesArrays_instances=new WeakSet,_Migration793MakePredicatesArrays_isOldRawPredicate=function(predicate){return!(!predicate||Array.isArray(predicate))&&((!(0,_util_1.isObject)(predicate)||!Array.isArray(predicate.predicate))&&predicate instanceof Object)},_Migration793MakePredicatesArrays_isArrayChoiceSet=function(rule){return"ChoiceSet"===rule.key&&Array.isArray(rule.choices)},_Migration793MakePredicatesArrays_isObjectChoiceSet=function(rule){return"ChoiceSet"===rule.key&&(0,_util_1.isObject)(rule.choices)&&!Array.isArray(rule.choices)},Migration793MakePredicatesArrays.version=.793},85918:function(__unused_webpack_module,exports,__webpack_require__){var _Migration794AddWildShapeChoices_shapeFeats,__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration794AddWildShapeChoices=void 0;const _item_1=__webpack_require__(10843),base_1=__webpack_require__(54310);class Migration794AddWildShapeChoices extends base_1.MigrationBase{constructor(){super(...arguments),_Migration794AddWildShapeChoices_shapeFeats.set(this,new Set(["VaIHQzOE5ibmbtqU","OWedlrKGsVZVkSnT","wNHUryoRzlfDCFAd","F0MYBfiyOD8YHq5t","I9rSWQyueWHQyNxe","p0jZhb8PSswUsZaz","Le30algCdKIsxmeK","54JzsYCx3uoj7Wlz"].map((id=>`Compendium.pf2e.feats-srd.${id}`))))}async updateItem(source){var _a;const sourceId=null===(_a=source.flags.core)||void 0===_a?void 0:_a.sourceId;if("feat"===source.type&&sourceId&&__classPrivateFieldGet(this,_Migration794AddWildShapeChoices_shapeFeats,"f").has(sourceId)){const fromPack=await fromUuid(sourceId);fromPack instanceof _item_1.FeatPF2e&&(source.system.rules=fromPack.toObject().system.rules)}}}exports.Migration794AddWildShapeChoices=Migration794AddWildShapeChoices,_Migration794AddWildShapeChoices_shapeFeats=new WeakMap,Migration794AddWildShapeChoices.version=.794},86664:function(__unused_webpack_module,exports,__webpack_require__){var _Migration795CleanupFlatFootedToggle_instances,_Migration795CleanupFlatFootedToggle_flatFootedToggle_get,_Migration795CleanupFlatFootedToggle_isFlatFootedToggle,__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration795CleanupFlatFootedToggle=void 0;const base_1=__webpack_require__(54310);class Migration795CleanupFlatFootedToggle extends base_1.MigrationBase{constructor(){super(...arguments),_Migration795CleanupFlatFootedToggle_instances.add(this)}async updateActor(source){var _a;(null===(_a=source.flags.pf2e)||void 0===_a?void 0:_a.rollOptions)&&(source.flags.pf2e["-=rollOptions"]=null)}async updateItem(source){if("feat"===source.type||"action"===source.type&&"sneak-attack"===source.system.slug)switch(source.system.slug){case"sneak-attack":case"laughing-shadow":case"shadow-sneak-attack":case"butterflys-sting":case"game-hunter-dedication":source.system.rules.some((r=>__classPrivateFieldGet(this,_Migration795CleanupFlatFootedToggle_instances,"m",_Migration795CleanupFlatFootedToggle_isFlatFootedToggle).call(this,r)))||source.system.rules.push(__classPrivateFieldGet(this,_Migration795CleanupFlatFootedToggle_instances,"a",_Migration795CleanupFlatFootedToggle_flatFootedToggle_get))}}}exports.Migration795CleanupFlatFootedToggle=Migration795CleanupFlatFootedToggle,_Migration795CleanupFlatFootedToggle_instances=new WeakSet,_Migration795CleanupFlatFootedToggle_flatFootedToggle_get=function(){return{key:"RollOption",domain:"all",label:"PF2E.SpecificRule.TOTMToggle.FlatFooted",option:"target:condition:flat-footed",toggleable:"totm"}},_Migration795CleanupFlatFootedToggle_isFlatFootedToggle=function(rule){return"RollOption"===rule.key&&"target:condition:flat-footed"===rule.option&&"totm"===rule.toggleable},Migration795CleanupFlatFootedToggle.version=.795},94641:function(__unused_webpack_module,exports,__webpack_require__){var _Migration796ItemGrantsToObjects_instances,_Migration796ItemGrantsToObjects_convertToEntry,_Migration796ItemGrantsToObjects_modifyFlag,__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration796ItemGrantsToObjects=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(54310);class Migration796ItemGrantsToObjects extends base_1.MigrationBase{constructor(){super(...arguments),_Migration796ItemGrantsToObjects_instances.add(this)}async updateActor(source){for(const item of source.items){const systemFlags=item.flags.pf2e;(null==systemFlags?void 0:systemFlags.itemGrants)&&Array.isArray(systemFlags.itemGrants)&&(systemFlags.itemGrants=systemFlags.itemGrants.reduce(((grantsObject,grant)=>{if("string"==typeof grant||grant instanceof Object){const[flag,grantSource]=__classPrivateFieldGet(this,_Migration796ItemGrantsToObjects_instances,"m",_Migration796ItemGrantsToObjects_convertToEntry).call(this,source,item,grant);if(null!==flag){grantsObject[__classPrivateFieldGet(this,_Migration796ItemGrantsToObjects_instances,"m",_Migration796ItemGrantsToObjects_modifyFlag).call(this,grantsObject,flag)]=grantSource}}return grantsObject}),{}))}}}exports.Migration796ItemGrantsToObjects=Migration796ItemGrantsToObjects,_Migration796ItemGrantsToObjects_instances=new WeakSet,_Migration796ItemGrantsToObjects_convertToEntry=function(actor,granter,grantedData){const grantedId=grantedData instanceof Object?grantedData.id:grantedData;return actor.items.some((i=>i._id===grantedId))?[(0,_util_1.sluggify)(granter.name,{camel:"dromedary"}),{id:grantedId}]:[null,null]},_Migration796ItemGrantsToObjects_modifyFlag=function(grantedItems,flag){const pattern=new RegExp(`^${flag}\\d*$`),nthGrant=Object.keys(grantedItems).filter((g=>pattern.test(g))).length;return 0===nthGrant?flag:`${flag}${nthGrant+1}`},Migration796ItemGrantsToObjects.version=.796},83491:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration797MetagameSetting=void 0;const base_1=__webpack_require__(54310);class Migration797MetagameSetting extends base_1.MigrationBase{constructor(){super(...arguments),this.visibilitySettings=["showDC","showResults"],this.settings=[...this.visibilitySettings,"tokenSetsNameVisibility","secretDamage","secretCondition","partyVision"]}async migrate(){var _a,_b;for(const setting of this.settings){const storage=game.settings.storage.get("world"),newKey=`metagame_${setting}`,oldValue=null!==(_a=storage.getItem(`pf2e.metagame.${setting}`))&&void 0!==_a?_a:null,existingValueRaw=null!==(_b=storage.getItem(`pf2e.${newKey}`))&&void 0!==_b?_b:null;if(null!==oldValue&&null!==existingValueRaw){const newValue=this.visibilitySettings.includes(setting)?!["gm","owner"].includes(oldValue):oldValue;game.settings.set("pf2e",newKey,newValue)}}}}exports.Migration797MetagameSetting=Migration797MetagameSetting,Migration797MetagameSetting.version=.797},52912:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration798WeaponToItemStatements=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(54310);class Migration798WeaponToItemStatements extends base_1.MigrationBase{async updateItem(source){const rules=source.system.rules;for(const rule of rules)for(const property of["predicate","definition"]){const predicate=rule[property];Array.isArray(predicate)&&(rule[property]=(0,_util_1.recursiveReplaceString)(predicate,(s=>s.replace(/^weapon:/,"item:"))))}}}exports.Migration798WeaponToItemStatements=Migration798WeaponToItemStatements,Migration798WeaponToItemStatements.version=.798},74178:function(__unused_webpack_module,exports,__webpack_require__){var _Migration799RMRecallKnowledgeDuplicates_oldIdsPattern,__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration799RMRecallKnowledgeDuplicates=void 0;const base_1=__webpack_require__(54310);class Migration799RMRecallKnowledgeDuplicates extends base_1.MigrationBase{constructor(){super(...arguments),_Migration799RMRecallKnowledgeDuplicates_oldIdsPattern.set(this,new RegExp("pf2e\\.actionspf2e\\.(?:".concat(["KygTSeDvsFoSO6HW","B0Eu3EfwIa9kyDEA","SeUolRoPzorFUAaI","eT1jXYvz2YH70Ovp","B2BpIZFHoF9Kjzpx","LZgjpWd0pL3vK9Q1","KUfLlXDWTcAWhl8l"].join("|")).concat(")"),"g"))}async updateItem(source){var _a,_b;null!==(_a=(_b=source.system.description).value)&&void 0!==_a||(_b.value=""),source.system.description.value=source.system.description.value.replace(__classPrivateFieldGet(this,_Migration799RMRecallKnowledgeDuplicates_oldIdsPattern,"f"),"pf2e.actionspf2e.1OagaWtBpVXExToo")}}exports.Migration799RMRecallKnowledgeDuplicates=Migration799RMRecallKnowledgeDuplicates,_Migration799RMRecallKnowledgeDuplicates_oldIdsPattern=new WeakMap,Migration799RMRecallKnowledgeDuplicates.version=.799},19480:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration800SelfEffectPanacheRage=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(54310);class Migration800SelfEffectPanacheRage extends base_1.MigrationBase{async updateItem(source,actorSource){var _a;if("bpTQfx4UixMV3Fja"!==(null==actorSource?void 0:actorSource._id)&&"Compendium.pf2e.extinction-curse-bestiary.bpTQfx4UixMV3Fja"!==(null===(_a=null==actorSource?void 0:actorSource.flags.core)||void 0===_a?void 0:_a.sourceId))for(const rule of source.system.rules)rule.predicate&&Array.isArray(rule.predicate)&&(rule.predicate=(0,_util_1.recursiveReplaceString)(rule.predicate,(s=>s.replace(/^(rage|panache)$/,"self:effect:$1"))))}}exports.Migration800SelfEffectPanacheRage=Migration800SelfEffectPanacheRage,Migration800SelfEffectPanacheRage.version=.8},3733:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Migration651EphemeralFocusPool=exports.Migration650StringifyWeaponProperties=exports.Migration649FocusToActor=exports.Migration648RemoveInvestedProperty=exports.Migration647FixPCSenses=exports.Migration646UpdateInlineLinks=exports.Migration645TokenImageSize=exports.Migration644SpellcastingCategory=exports.Migration643HazardLevel=exports.Migration642TrackSchemaVersion=exports.Migration641SovereignSteelValue=exports.Migration640CantripsAreNotZeroLevel=exports.Migration639NormalizeLevelAndPrice=exports.Migration638SpellComponents=exports.Migration637CleanMeleeItems=exports.Migration636NumifyArmorData=exports.Migration635NumifyACAndQuantity=exports.Migration634PurgeMartialItems=exports.Migration633DeleteUnidentifiedTraits=exports.Migration632DeleteOrphanedSpells=exports.Migration631FixSenseRuleElementSelector=exports.Migration630FixTalismanSpelling=exports.Migration629SetBaseItems=exports.Migration627LowerCaseSpellSaves=exports.Migration626UpdateSpellCategory=exports.Migration625EnsurePresenceOfSaves=exports.Migration624RemoveTokenEffectIconFlags=exports.Migration623NumifyPotencyRunes=exports.Migration621RemoveConfigSpellSchools=exports.Migration620RenameToWebp=exports.Migration619TraditionLowercaseAndRemoveWandScroll=exports.Migration618MigrateItemImagePaths=exports.Migration617FixUserFlags=exports.Migration616MigrateFeatPrerequisites=exports.Migration615RemoveInstinctTrait=exports.Migration614NumifyMeleeBonuses=exports.Migration613RemoveAmmoCharges=exports.Migration612NormalizeRarities=exports.Migration611UpdateToughnessMountainsStoutness=exports.Migration610SetHeritageFeatType=exports.Migration609LootActorTraits=exports.Migration608DeletePersistedKits=exports.Migration607MeleeItemDamageRolls=exports.Migration606SignatureSpells=exports.Migration605CatchUpToTemplateJSON=exports.Migration604FixClassItem=exports.Migration603ResetQuickRollDefault=exports.Migration602UpdateDiehardFeat=exports.Migration601SplitEffectCompendia=exports.Migration600Reach=void 0,exports.Migration700SingleClassFeatures=exports.Migration699ItemDescriptionEmptyString=exports.Migration698RemoveDerivedActorTraits=exports.Migration697WeaponReachTrait=exports.Migration696FlatAbilityModifiers=exports.Migration695SummonToSummoned=exports.Migration694RetireSystemTokenSettings=exports.Migration693ArmorCategoryGroup=exports.Migration692CraftingEntryFeatReplacement=exports.Migration691WeaponRangeAbilityCategoryGroup=exports.Migration690InitiativeTiebreakItems=exports.Migration689EncumberanceActiveEffects=exports.Migration688ClampSpellLevel=exports.Migration687FamiliarityAEsToREs=exports.Migration686HeroPointsToResources=exports.Migration685FixMeleeUsageTraits=exports.Migration684RationsToConsumable=exports.Migration683FlavorTextToPublicNotes=exports.Migration682BiographyFields=exports.Migration681GiantLanguageToJotun=exports.Migration680SetWeaponHands=exports.Migration679TowerShieldSpeedPenalty=exports.Migration678SeparateNPCAttackTraits=exports.Migration677RuleValueDataRefs=exports.Migration676ReplaceItemsWithRELikeAEs=exports.Migration675FlatModifierAEsToREs=exports.Migration674StableHomebrewTagIDs=exports.Migration673RemoveBulwarkREs=exports.Migration672RemoveNPCBaseProperties=exports.Migration671NoPCItemsOnNonPCs=exports.Migration670AncestryVision=exports.Migration670NoCustomTrait=exports.Migration669NPCAttackEffects=exports.Migration668ArmorSpeedPenalty=exports.Migration667HPSubProperties=exports.Migration666UsageAndStowingContainers=exports.Migration665HandwrapsCorrections=exports.Migration664DeleteCUBConditions=exports.Migration663FixSpellDamage=exports.Migration662LinkToActorSizeDefaults=exports.Migration661NumifyVehicleDimensions=exports.Migration660DerivedSpellTraits=exports.Migration659MultipleDamageRows=exports.Migration658MonkUnarmoredProficiency=exports.Migration657RemoveSetProperty=exports.Migration656OtherFocusPoolSources=exports.Migration655CreatureTokenSizes=exports.Migration654ActionTypeAndCount=exports.Migration653AEstoREs=exports.Migration652KillHalcyonTradition=void 0,exports.Migration750FixCorruptedPrice=exports.Migration749AssuranceREs=exports.Migration748BatchConsumablePricing=exports.Migration747FixedHeightening=exports.Migration746StandardizePricing=exports.Migration745EffectTargetToChoiceSet=exports.Migration744MigrateSpellHeighten=exports.Migration743FixWeaknessStructure=exports.Migration742RMAbilityBoostLevels=exports.Migration741RollOptionToggleToItem=exports.Migration740MaxTakable=exports.Migration739RecoveryCheckDC=exports.Migration738UpdateLaughingShadow=exports.Migration737NormalizeRuleElementKeys=exports.Migration736RemoveBrokenThreshold=exports.Migration735FirearmAmmoAlchemical=exports.Migration734SpellLocationPropsAndSignature=exports.Migration733ItemBonusFromEquipment=exports.Migration732FixDedicationFeatTypes=exports.Migration731TogglePropertyToRollOption=exports.Migration730DeruneHandwraps=exports.Migration729CumulativeItemBonusCleanup=exports.Migration728FlattenPhysicalProperties=exports.Migration727TrimSelfRollOptions=exports.Migration726JournalSetting=exports.Migration725QuickClimbREs=exports.Migration724CraftingMaxItemLevel=exports.Migration723CumulativeItemBonuses=exports.Migration722CraftingSystemData=exports.Migration721SetReloadValues=exports.Migration720UpdateSpellDescriptions=exports.Migration719ShrugFlanking=exports.Migration718CarryType=exports.Migration717TakeFeatLimits=exports.Migration716StrikeDamageSelector=exports.Migration715DangerousSorcery=exports.Migration714RangeIncrementREs=exports.Migration713FistToStrikeRE=exports.Migration712ActorShieldStructure=exports.Migration711HeritageItems=exports.Migration710RarityToString=exports.Migration709REFormulasAtInstanceLevelRedux=exports.Migration708SpecificRuleLabel=exports.Migration707BracketedFormulasAtInstanceLevel=exports.Migration706FormulasAtInstanceLevelEverythingElse=exports.Migration705GunslingerCatchUp=exports.Migration704MartialProficiencyRE=exports.Migration703SpellDamageStructure=exports.Migration702REFormulasAtInstanceLevel=exports.Migration701ModifierNameToSlug=void 0,exports.Migration800SelfEffectPanacheRage=exports.Migration799RMRecallKnowledgeDuplicates=exports.Migration798WeaponToItemStatements=exports.Migration797MetagameSetting=exports.Migration796ItemGrantsToObjects=exports.Migration795CleanupFlatFootedToggle=exports.Migration794AddWildShapeChoices=exports.Migration793MakePredicatesArrays=exports.Migration792RemoveTokenAELikes=exports.Migration791RuffianHands=exports.Migration790MultipleClassDCs=exports.Migration789UpdatePreciseStrike=exports.Migration788UpdateTanglefootBags=exports.Migration787ResolvablesToSystem=exports.Migration786RemoveIdentifiedData=exports.Migration785ABCKitItemUUIDs=exports.Migration784CompBrowserPackSetting=exports.Migration783RemoveClassSkillAELikes=exports.Migration782UnnestActorTraits=exports.Migration781SuppressNoCrowbar=exports.Migration780NumifySpeeds=exports.Migration779EliteWeak=exports.Migration778RenameRetiredPackRefs=exports.Migration777HandOfTheApprentice=exports.Migration776SlugifyConditionOverrides=exports.Migration775AgileFinesseRanged=exports.Migration774UnpersistCraftingEntries=exports.Migration773ReligiousSymbolUsage=exports.Migration772V10EmbeddedSpellData=exports.Migration771SpellVariantsToSystem=exports.Migration770REDataToSystem=exports.Migration769NoUniversalistFocusPool=exports.Migration768AddNewAuras=exports.Migration767ConvertVoluntaryFlaws=exports.Migration766WipeURLSources=exports.Migration765ChoiceOwnedItemTypes=exports.Migration764PanacheVivaciousREs=exports.Migration763RestoreAnimalStrikeOptions=exports.Migration762UpdateBackgroundItems=exports.Migration761ShotRules=exports.Migration760SeparateNoteTitle=exports.Migration759CritSpecRE=exports.Migration758PrunePCAttributes=exports.Migration757HillockHalfling=exports.Migration756RMStoredResourceMaxes=exports.Migration755GrantIdsToData=exports.Migration754MightyBulwarkAdjustModifiers=exports.Migration753WeaponReloadTimes=exports.Migration752StrikeVsWeaponTraits=exports.Migration751ResetRollOptions=void 0;var _600_reach_1=__webpack_require__(3731);Object.defineProperty(exports,"Migration600Reach",{enumerable:!0,get:function(){return _600_reach_1.Migration600Reach}});var _601_migrate_effect_compendia_1=__webpack_require__(48324);Object.defineProperty(exports,"Migration601SplitEffectCompendia",{enumerable:!0,get:function(){return _601_migrate_effect_compendia_1.Migration601SplitEffectCompendia}});var _602_update_diehard_feat_1=__webpack_require__(33999);Object.defineProperty(exports,"Migration602UpdateDiehardFeat",{enumerable:!0,get:function(){return _602_update_diehard_feat_1.Migration602UpdateDiehardFeat}});var _603_reset_quick_roll_default_1=__webpack_require__(66171);Object.defineProperty(exports,"Migration603ResetQuickRollDefault",{enumerable:!0,get:function(){return _603_reset_quick_roll_default_1.Migration603ResetQuickRollDefault}});var _604_fix_class_items_1=__webpack_require__(92887);Object.defineProperty(exports,"Migration604FixClassItem",{enumerable:!0,get:function(){return _604_fix_class_items_1.Migration604FixClassItem}});var _605_catch_up_to_template_json_1=__webpack_require__(19032);Object.defineProperty(exports,"Migration605CatchUpToTemplateJSON",{enumerable:!0,get:function(){return _605_catch_up_to_template_json_1.Migration605CatchUpToTemplateJSON}});var _606_signature_spells_1=__webpack_require__(97591);Object.defineProperty(exports,"Migration606SignatureSpells",{enumerable:!0,get:function(){return _606_signature_spells_1.Migration606SignatureSpells}});var _607_melee_item_damage_rolls_1=__webpack_require__(35650);Object.defineProperty(exports,"Migration607MeleeItemDamageRolls",{enumerable:!0,get:function(){return _607_melee_item_damage_rolls_1.Migration607MeleeItemDamageRolls}});var _608_delete_persisted_kits_1=__webpack_require__(88146);Object.defineProperty(exports,"Migration608DeletePersistedKits",{enumerable:!0,get:function(){return _608_delete_persisted_kits_1.Migration608DeletePersistedKits}});var _609_loot_actor_traits_1=__webpack_require__(65596);Object.defineProperty(exports,"Migration609LootActorTraits",{enumerable:!0,get:function(){return _609_loot_actor_traits_1.Migration609LootActorTraits}});var _610_set_heritage_feat_type_1=__webpack_require__(83512);Object.defineProperty(exports,"Migration610SetHeritageFeatType",{enumerable:!0,get:function(){return _610_set_heritage_feat_type_1.Migration610SetHeritageFeatType}});var _611_update_toughness_mountains_stoutness_1=__webpack_require__(39127);Object.defineProperty(exports,"Migration611UpdateToughnessMountainsStoutness",{enumerable:!0,get:function(){return _611_update_toughness_mountains_stoutness_1.Migration611UpdateToughnessMountainsStoutness}});var _612_normalize_rarities_1=__webpack_require__(25483);Object.defineProperty(exports,"Migration612NormalizeRarities",{enumerable:!0,get:function(){return _612_normalize_rarities_1.Migration612NormalizeRarities}});var _613_remove_ammo_charges_1=__webpack_require__(90736);Object.defineProperty(exports,"Migration613RemoveAmmoCharges",{enumerable:!0,get:function(){return _613_remove_ammo_charges_1.Migration613RemoveAmmoCharges}});var _614_numify_melee_bonuses_1=__webpack_require__(34788);Object.defineProperty(exports,"Migration614NumifyMeleeBonuses",{enumerable:!0,get:function(){return _614_numify_melee_bonuses_1.Migration614NumifyMeleeBonuses}});var _615_remove_instinct_trait_1=__webpack_require__(69506);Object.defineProperty(exports,"Migration615RemoveInstinctTrait",{enumerable:!0,get:function(){return _615_remove_instinct_trait_1.Migration615RemoveInstinctTrait}});var _616_migrate_feat_prerequisites_1=__webpack_require__(7115);Object.defineProperty(exports,"Migration616MigrateFeatPrerequisites",{enumerable:!0,get:function(){return _616_migrate_feat_prerequisites_1.Migration616MigrateFeatPrerequisites}});var _617_fix_user_flags_1=__webpack_require__(39281);Object.defineProperty(exports,"Migration617FixUserFlags",{enumerable:!0,get:function(){return _617_fix_user_flags_1.Migration617FixUserFlags}});var _618_migrate_item_img_paths_1=__webpack_require__(14740);Object.defineProperty(exports,"Migration618MigrateItemImagePaths",{enumerable:!0,get:function(){return _618_migrate_item_img_paths_1.Migration618MigrateItemImagePaths}});var _619_remove_wand_and_scroll_tradition_1=__webpack_require__(91944);Object.defineProperty(exports,"Migration619TraditionLowercaseAndRemoveWandScroll",{enumerable:!0,get:function(){return _619_remove_wand_and_scroll_tradition_1.Migration619TraditionLowercaseAndRemoveWandScroll}});var _620_rename_to_webp_1=__webpack_require__(58708);Object.defineProperty(exports,"Migration620RenameToWebp",{enumerable:!0,get:function(){return _620_rename_to_webp_1.Migration620RenameToWebp}});var _621_remove_config_spell_schools_1=__webpack_require__(42712);Object.defineProperty(exports,"Migration621RemoveConfigSpellSchools",{enumerable:!0,get:function(){return _621_remove_config_spell_schools_1.Migration621RemoveConfigSpellSchools}});var _623_numify_potency_runes_1=__webpack_require__(63267);Object.defineProperty(exports,"Migration623NumifyPotencyRunes",{enumerable:!0,get:function(){return _623_numify_potency_runes_1.Migration623NumifyPotencyRunes}});var _624_removed_token_effect_icon_flags_1=__webpack_require__(24636);Object.defineProperty(exports,"Migration624RemoveTokenEffectIconFlags",{enumerable:!0,get:function(){return _624_removed_token_effect_icon_flags_1.Migration624RemoveTokenEffectIconFlags}});var _625_ensure_presence_of_saves_1=__webpack_require__(7715);Object.defineProperty(exports,"Migration625EnsurePresenceOfSaves",{enumerable:!0,get:function(){return _625_ensure_presence_of_saves_1.Migration625EnsurePresenceOfSaves}});var _626_update_spell_category_1=__webpack_require__(4099);Object.defineProperty(exports,"Migration626UpdateSpellCategory",{enumerable:!0,get:function(){return _626_update_spell_category_1.Migration626UpdateSpellCategory}});var _627_lowercase_spell_saves_1=__webpack_require__(63023);Object.defineProperty(exports,"Migration627LowerCaseSpellSaves",{enumerable:!0,get:function(){return _627_lowercase_spell_saves_1.Migration627LowerCaseSpellSaves}});var _629_set_base_items_1=__webpack_require__(19691);Object.defineProperty(exports,"Migration629SetBaseItems",{enumerable:!0,get:function(){return _629_set_base_items_1.Migration629SetBaseItems}});var _630_fix_talisman_spelling_1=__webpack_require__(8004);Object.defineProperty(exports,"Migration630FixTalismanSpelling",{enumerable:!0,get:function(){return _630_fix_talisman_spelling_1.Migration630FixTalismanSpelling}});var _631_fix_sense_rule_element_selector_1=__webpack_require__(21962);Object.defineProperty(exports,"Migration631FixSenseRuleElementSelector",{enumerable:!0,get:function(){return _631_fix_sense_rule_element_selector_1.Migration631FixSenseRuleElementSelector}});var _632_delete_orphaned_spells_1=__webpack_require__(34441);Object.defineProperty(exports,"Migration632DeleteOrphanedSpells",{enumerable:!0,get:function(){return _632_delete_orphaned_spells_1.Migration632DeleteOrphanedSpells}});var _633_delete_unidentified_traits_1=__webpack_require__(76937);Object.defineProperty(exports,"Migration633DeleteUnidentifiedTraits",{enumerable:!0,get:function(){return _633_delete_unidentified_traits_1.Migration633DeleteUnidentifiedTraits}});var _634_purge_martial_items_1=__webpack_require__(98489);Object.defineProperty(exports,"Migration634PurgeMartialItems",{enumerable:!0,get:function(){return _634_purge_martial_items_1.Migration634PurgeMartialItems}});var _635_numify_ac_and_quantity_1=__webpack_require__(69222);Object.defineProperty(exports,"Migration635NumifyACAndQuantity",{enumerable:!0,get:function(){return _635_numify_ac_and_quantity_1.Migration635NumifyACAndQuantity}});var _636_numify_armor_data_1=__webpack_require__(95184);Object.defineProperty(exports,"Migration636NumifyArmorData",{enumerable:!0,get:function(){return _636_numify_armor_data_1.Migration636NumifyArmorData}});var _637_clean_melee_items_1=__webpack_require__(87245);Object.defineProperty(exports,"Migration637CleanMeleeItems",{enumerable:!0,get:function(){return _637_clean_melee_items_1.Migration637CleanMeleeItems}});var _638_spell_components_1=__webpack_require__(75650);Object.defineProperty(exports,"Migration638SpellComponents",{enumerable:!0,get:function(){return _638_spell_components_1.Migration638SpellComponents}});var _639_normalize_level_and_price_1=__webpack_require__(2769);Object.defineProperty(exports,"Migration639NormalizeLevelAndPrice",{enumerable:!0,get:function(){return _639_normalize_level_and_price_1.Migration639NormalizeLevelAndPrice}});var _640_cantrips_are_not_zero_level_1=__webpack_require__(90794);Object.defineProperty(exports,"Migration640CantripsAreNotZeroLevel",{enumerable:!0,get:function(){return _640_cantrips_are_not_zero_level_1.Migration640CantripsAreNotZeroLevel}});var _641_sovereign_steel_value_1=__webpack_require__(26121);Object.defineProperty(exports,"Migration641SovereignSteelValue",{enumerable:!0,get:function(){return _641_sovereign_steel_value_1.Migration641SovereignSteelValue}});var _642_track_schema_version_1=__webpack_require__(4063);Object.defineProperty(exports,"Migration642TrackSchemaVersion",{enumerable:!0,get:function(){return _642_track_schema_version_1.Migration642TrackSchemaVersion}});var _643_hazard_level_1=__webpack_require__(62371);Object.defineProperty(exports,"Migration643HazardLevel",{enumerable:!0,get:function(){return _643_hazard_level_1.Migration643HazardLevel}});var _644_spellcasting_category_1=__webpack_require__(69080);Object.defineProperty(exports,"Migration644SpellcastingCategory",{enumerable:!0,get:function(){return _644_spellcasting_category_1.Migration644SpellcastingCategory}});var _645_token_image_size_1=__webpack_require__(2876);Object.defineProperty(exports,"Migration645TokenImageSize",{enumerable:!0,get:function(){return _645_token_image_size_1.Migration645TokenImageSize}});var _646_update_inline_links_1=__webpack_require__(11338);Object.defineProperty(exports,"Migration646UpdateInlineLinks",{enumerable:!0,get:function(){return _646_update_inline_links_1.Migration646UpdateInlineLinks}});var _647_fix_pc_senses_1=__webpack_require__(30161);Object.defineProperty(exports,"Migration647FixPCSenses",{enumerable:!0,get:function(){return _647_fix_pc_senses_1.Migration647FixPCSenses}});var _648_remove_invested_property_1=__webpack_require__(79483);Object.defineProperty(exports,"Migration648RemoveInvestedProperty",{enumerable:!0,get:function(){return _648_remove_invested_property_1.Migration648RemoveInvestedProperty}});var _649_focus_to_actor_1=__webpack_require__(26888);Object.defineProperty(exports,"Migration649FocusToActor",{enumerable:!0,get:function(){return _649_focus_to_actor_1.Migration649FocusToActor}});var _650_stringify_weapon_properties_1=__webpack_require__(24002);Object.defineProperty(exports,"Migration650StringifyWeaponProperties",{enumerable:!0,get:function(){return _650_stringify_weapon_properties_1.Migration650StringifyWeaponProperties}});var _651_ephemeral_focus_pool_1=__webpack_require__(50813);Object.defineProperty(exports,"Migration651EphemeralFocusPool",{enumerable:!0,get:function(){return _651_ephemeral_focus_pool_1.Migration651EphemeralFocusPool}});var _652_kill_halcyon_tradition_1=__webpack_require__(35673);Object.defineProperty(exports,"Migration652KillHalcyonTradition",{enumerable:!0,get:function(){return _652_kill_halcyon_tradition_1.Migration652KillHalcyonTradition}});var _653_aes_to_res_1=__webpack_require__(67060);Object.defineProperty(exports,"Migration653AEstoREs",{enumerable:!0,get:function(){return _653_aes_to_res_1.Migration653AEstoREs}});var _654_action_type_count_1=__webpack_require__(6029);Object.defineProperty(exports,"Migration654ActionTypeAndCount",{enumerable:!0,get:function(){return _654_action_type_count_1.Migration654ActionTypeAndCount}});var _655_creature_token_sizes_1=__webpack_require__(49198);Object.defineProperty(exports,"Migration655CreatureTokenSizes",{enumerable:!0,get:function(){return _655_creature_token_sizes_1.Migration655CreatureTokenSizes}});var _656_other_focus_pool_sources_1=__webpack_require__(41387);Object.defineProperty(exports,"Migration656OtherFocusPoolSources",{enumerable:!0,get:function(){return _656_other_focus_pool_sources_1.Migration656OtherFocusPoolSources}});var _657_remove_set_property_1=__webpack_require__(43453);Object.defineProperty(exports,"Migration657RemoveSetProperty",{enumerable:!0,get:function(){return _657_remove_set_property_1.Migration657RemoveSetProperty}});var _658_monk_unarmored_proficiency_1=__webpack_require__(50169);Object.defineProperty(exports,"Migration658MonkUnarmoredProficiency",{enumerable:!0,get:function(){return _658_monk_unarmored_proficiency_1.Migration658MonkUnarmoredProficiency}});var _659_multiple_damage_rows_1=__webpack_require__(77636);Object.defineProperty(exports,"Migration659MultipleDamageRows",{enumerable:!0,get:function(){return _659_multiple_damage_rows_1.Migration659MultipleDamageRows}});var _660_derived_spell_traits_1=__webpack_require__(46105);Object.defineProperty(exports,"Migration660DerivedSpellTraits",{enumerable:!0,get:function(){return _660_derived_spell_traits_1.Migration660DerivedSpellTraits}});var _661_numify_vehicle_dimensions_1=__webpack_require__(10335);Object.defineProperty(exports,"Migration661NumifyVehicleDimensions",{enumerable:!0,get:function(){return _661_numify_vehicle_dimensions_1.Migration661NumifyVehicleDimensions}});var _662_link_to_actor_size_defaults_1=__webpack_require__(63724);Object.defineProperty(exports,"Migration662LinkToActorSizeDefaults",{enumerable:!0,get:function(){return _662_link_to_actor_size_defaults_1.Migration662LinkToActorSizeDefaults}});var _663_fix_spell_damage_1=__webpack_require__(47655);Object.defineProperty(exports,"Migration663FixSpellDamage",{enumerable:!0,get:function(){return _663_fix_spell_damage_1.Migration663FixSpellDamage}});var _664_delete_cub_conditions_1=__webpack_require__(69417);Object.defineProperty(exports,"Migration664DeleteCUBConditions",{enumerable:!0,get:function(){return _664_delete_cub_conditions_1.Migration664DeleteCUBConditions}});var _665_handwraps_corrections_1=__webpack_require__(46544);Object.defineProperty(exports,"Migration665HandwrapsCorrections",{enumerable:!0,get:function(){return _665_handwraps_corrections_1.Migration665HandwrapsCorrections}});var _666_usage_and_stowing_containers_1=__webpack_require__(69e3);Object.defineProperty(exports,"Migration666UsageAndStowingContainers",{enumerable:!0,get:function(){return _666_usage_and_stowing_containers_1.Migration666UsageAndStowingContainers}});var _667_hp_subproperties_1=__webpack_require__(91543);Object.defineProperty(exports,"Migration667HPSubProperties",{enumerable:!0,get:function(){return _667_hp_subproperties_1.Migration667HPSubProperties}});var _668_armor_speed_penalty_1=__webpack_require__(25409);Object.defineProperty(exports,"Migration668ArmorSpeedPenalty",{enumerable:!0,get:function(){return _668_armor_speed_penalty_1.Migration668ArmorSpeedPenalty}});var _669_npc_attack_effects_1=__webpack_require__(93322);Object.defineProperty(exports,"Migration669NPCAttackEffects",{enumerable:!0,get:function(){return _669_npc_attack_effects_1.Migration669NPCAttackEffects}});var _670_no_custom_trait_1=__webpack_require__(3725);Object.defineProperty(exports,"Migration670NoCustomTrait",{enumerable:!0,get:function(){return _670_no_custom_trait_1.Migration670NoCustomTrait}});var _670_ancestry_vision_1=__webpack_require__(3892);Object.defineProperty(exports,"Migration670AncestryVision",{enumerable:!0,get:function(){return _670_ancestry_vision_1.Migration670AncestryVision}});var _671_no_pc_items_on_non_pcs_1=__webpack_require__(55986);Object.defineProperty(exports,"Migration671NoPCItemsOnNonPCs",{enumerable:!0,get:function(){return _671_no_pc_items_on_non_pcs_1.Migration671NoPCItemsOnNonPCs}});var _672_remove_npc_base_properties_1=__webpack_require__(83337);Object.defineProperty(exports,"Migration672RemoveNPCBaseProperties",{enumerable:!0,get:function(){return _672_remove_npc_base_properties_1.Migration672RemoveNPCBaseProperties}});var _673_remove_bulwark_res_1=__webpack_require__(97094);Object.defineProperty(exports,"Migration673RemoveBulwarkREs",{enumerable:!0,get:function(){return _673_remove_bulwark_res_1.Migration673RemoveBulwarkREs}});var _674_stable_homebrew_tag_ids_1=__webpack_require__(75141);Object.defineProperty(exports,"Migration674StableHomebrewTagIDs",{enumerable:!0,get:function(){return _674_stable_homebrew_tag_ids_1.Migration674StableHomebrewTagIDs}});var _675_flat_modifier_aes_to_res_1=__webpack_require__(96710);Object.defineProperty(exports,"Migration675FlatModifierAEsToREs",{enumerable:!0,get:function(){return _675_flat_modifier_aes_to_res_1.Migration675FlatModifierAEsToREs}});var _676_replace_items_with_re_like_aes_1=__webpack_require__(85235);Object.defineProperty(exports,"Migration676ReplaceItemsWithRELikeAEs",{enumerable:!0,get:function(){return _676_replace_items_with_re_like_aes_1.Migration676ReplaceItemsWithRELikeAEs}});var _677_rule_value_data_refs_1=__webpack_require__(9838);Object.defineProperty(exports,"Migration677RuleValueDataRefs",{enumerable:!0,get:function(){return _677_rule_value_data_refs_1.Migration677RuleValueDataRefs}});var _678_separate_npc_attack_traits_1=__webpack_require__(45497);Object.defineProperty(exports,"Migration678SeparateNPCAttackTraits",{enumerable:!0,get:function(){return _678_separate_npc_attack_traits_1.Migration678SeparateNPCAttackTraits}});var _679_tower_shield_speed_penalty_1=__webpack_require__(38580);Object.defineProperty(exports,"Migration679TowerShieldSpeedPenalty",{enumerable:!0,get:function(){return _679_tower_shield_speed_penalty_1.Migration679TowerShieldSpeedPenalty}});var _680_set_weapon_hands_1=__webpack_require__(95615);Object.defineProperty(exports,"Migration680SetWeaponHands",{enumerable:!0,get:function(){return _680_set_weapon_hands_1.Migration680SetWeaponHands}});var _681_giant_language_to_jotun_1=__webpack_require__(4720);Object.defineProperty(exports,"Migration681GiantLanguageToJotun",{enumerable:!0,get:function(){return _681_giant_language_to_jotun_1.Migration681GiantLanguageToJotun}});var _682_biography_fields_1=__webpack_require__(97548);Object.defineProperty(exports,"Migration682BiographyFields",{enumerable:!0,get:function(){return _682_biography_fields_1.Migration682BiographyFields}});var _683_flavortext_to_public_notes_1=__webpack_require__(9581);Object.defineProperty(exports,"Migration683FlavorTextToPublicNotes",{enumerable:!0,get:function(){return _683_flavortext_to_public_notes_1.Migration683FlavorTextToPublicNotes}});var _684_rations_to_consumable_1=__webpack_require__(10852);Object.defineProperty(exports,"Migration684RationsToConsumable",{enumerable:!0,get:function(){return _684_rations_to_consumable_1.Migration684RationsToConsumable}});var _685_fix_melee_usage_traits_1=__webpack_require__(26921);Object.defineProperty(exports,"Migration685FixMeleeUsageTraits",{enumerable:!0,get:function(){return _685_fix_melee_usage_traits_1.Migration685FixMeleeUsageTraits}});var _686_hero_points_to_resources_1=__webpack_require__(77882);Object.defineProperty(exports,"Migration686HeroPointsToResources",{enumerable:!0,get:function(){return _686_hero_points_to_resources_1.Migration686HeroPointsToResources}});var _687_familiarity_aes_to_res_1=__webpack_require__(1802);Object.defineProperty(exports,"Migration687FamiliarityAEsToREs",{enumerable:!0,get:function(){return _687_familiarity_aes_to_res_1.Migration687FamiliarityAEsToREs}});var _688_clamp_spell_level_1=__webpack_require__(80450);Object.defineProperty(exports,"Migration688ClampSpellLevel",{enumerable:!0,get:function(){return _688_clamp_spell_level_1.Migration688ClampSpellLevel}});var _689_encumberance_aes_1=__webpack_require__(68850);Object.defineProperty(exports,"Migration689EncumberanceActiveEffects",{enumerable:!0,get:function(){return _689_encumberance_aes_1.Migration689EncumberanceActiveEffects}});var _690_tiebreak_items_1=__webpack_require__(21715);Object.defineProperty(exports,"Migration690InitiativeTiebreakItems",{enumerable:!0,get:function(){return _690_tiebreak_items_1.Migration690InitiativeTiebreakItems}});var _691_weapon_range_ability_category_group_1=__webpack_require__(2741);Object.defineProperty(exports,"Migration691WeaponRangeAbilityCategoryGroup",{enumerable:!0,get:function(){return _691_weapon_range_ability_category_group_1.Migration691WeaponRangeAbilityCategoryGroup}});var _692_crafting_entry_feat_replacement_1=__webpack_require__(64046);Object.defineProperty(exports,"Migration692CraftingEntryFeatReplacement",{enumerable:!0,get:function(){return _692_crafting_entry_feat_replacement_1.Migration692CraftingEntryFeatReplacement}});var _693_armor_category_group_1=__webpack_require__(87780);Object.defineProperty(exports,"Migration693ArmorCategoryGroup",{enumerable:!0,get:function(){return _693_armor_category_group_1.Migration693ArmorCategoryGroup}});var _694_retire_system_token_settings_1=__webpack_require__(35149);Object.defineProperty(exports,"Migration694RetireSystemTokenSettings",{enumerable:!0,get:function(){return _694_retire_system_token_settings_1.Migration694RetireSystemTokenSettings}});var _695_summon_to_summoned_1=__webpack_require__(14887);Object.defineProperty(exports,"Migration695SummonToSummoned",{enumerable:!0,get:function(){return _695_summon_to_summoned_1.Migration695SummonToSummoned}});var _696_flat_ability_modifiers_1=__webpack_require__(55269);Object.defineProperty(exports,"Migration696FlatAbilityModifiers",{enumerable:!0,get:function(){return _696_flat_ability_modifiers_1.Migration696FlatAbilityModifiers}});var _697_weapon_reach_trait_1=__webpack_require__(5299);Object.defineProperty(exports,"Migration697WeaponReachTrait",{enumerable:!0,get:function(){return _697_weapon_reach_trait_1.Migration697WeaponReachTrait}});var _698_remove_derived_actor_traits_1=__webpack_require__(18133);Object.defineProperty(exports,"Migration698RemoveDerivedActorTraits",{enumerable:!0,get:function(){return _698_remove_derived_actor_traits_1.Migration698RemoveDerivedActorTraits}});var _699_item_description_empty_string_1=__webpack_require__(44069);Object.defineProperty(exports,"Migration699ItemDescriptionEmptyString",{enumerable:!0,get:function(){return _699_item_description_empty_string_1.Migration699ItemDescriptionEmptyString}});var _700_single_class_features_1=__webpack_require__(87232);Object.defineProperty(exports,"Migration700SingleClassFeatures",{enumerable:!0,get:function(){return _700_single_class_features_1.Migration700SingleClassFeatures}});var _701_modifier_name_to_slug_1=__webpack_require__(86401);Object.defineProperty(exports,"Migration701ModifierNameToSlug",{enumerable:!0,get:function(){return _701_modifier_name_to_slug_1.Migration701ModifierNameToSlug}});var _702_re_formulas_at_instance_level_1=__webpack_require__(84579);Object.defineProperty(exports,"Migration702REFormulasAtInstanceLevel",{enumerable:!0,get:function(){return _702_re_formulas_at_instance_level_1.Migration702REFormulasAtInstanceLevel}});var _703_spell_damage_structure_1=__webpack_require__(14327);Object.defineProperty(exports,"Migration703SpellDamageStructure",{enumerable:!0,get:function(){return _703_spell_damage_structure_1.Migration703SpellDamageStructure}});var _704_martial_proficiency_re_1=__webpack_require__(27220);Object.defineProperty(exports,"Migration704MartialProficiencyRE",{enumerable:!0,get:function(){return _704_martial_proficiency_re_1.Migration704MartialProficiencyRE}});var _705_gunslinger_catch_up_1=__webpack_require__(64131);Object.defineProperty(exports,"Migration705GunslingerCatchUp",{enumerable:!0,get:function(){return _705_gunslinger_catch_up_1.Migration705GunslingerCatchUp}});var _706_formulas_at_instance_level_everything_else_1=__webpack_require__(99488);Object.defineProperty(exports,"Migration706FormulasAtInstanceLevelEverythingElse",{enumerable:!0,get:function(){return _706_formulas_at_instance_level_everything_else_1.Migration706FormulasAtInstanceLevelEverythingElse}});var _707_bracketed_formulas_at_instance_level_1=__webpack_require__(66857);Object.defineProperty(exports,"Migration707BracketedFormulasAtInstanceLevel",{enumerable:!0,get:function(){return _707_bracketed_formulas_at_instance_level_1.Migration707BracketedFormulasAtInstanceLevel}});var _708_specific_rule_label_1=__webpack_require__(68028);Object.defineProperty(exports,"Migration708SpecificRuleLabel",{enumerable:!0,get:function(){return _708_specific_rule_label_1.Migration708SpecificRuleLabel}});var _709_re_formulas_at_instance_level_redux_1=__webpack_require__(7116);Object.defineProperty(exports,"Migration709REFormulasAtInstanceLevelRedux",{enumerable:!0,get:function(){return _709_re_formulas_at_instance_level_redux_1.Migration709REFormulasAtInstanceLevelRedux}});var _710_rarity_to_string_1=__webpack_require__(26183);Object.defineProperty(exports,"Migration710RarityToString",{enumerable:!0,get:function(){return _710_rarity_to_string_1.Migration710RarityToString}});var _711_heritage_items_1=__webpack_require__(96902);Object.defineProperty(exports,"Migration711HeritageItems",{enumerable:!0,get:function(){return _711_heritage_items_1.Migration711HeritageItems}});var _712_actor_shield_structure_1=__webpack_require__(75992);Object.defineProperty(exports,"Migration712ActorShieldStructure",{enumerable:!0,get:function(){return _712_actor_shield_structure_1.Migration712ActorShieldStructure}});var _713_fist_to_strike_re_1=__webpack_require__(94697);Object.defineProperty(exports,"Migration713FistToStrikeRE",{enumerable:!0,get:function(){return _713_fist_to_strike_re_1.Migration713FistToStrikeRE}});var _714_range_increment_res_1=__webpack_require__(2923);Object.defineProperty(exports,"Migration714RangeIncrementREs",{enumerable:!0,get:function(){return _714_range_increment_res_1.Migration714RangeIncrementREs}});var _715_dangerous_sorcery_1=__webpack_require__(91984);Object.defineProperty(exports,"Migration715DangerousSorcery",{enumerable:!0,get:function(){return _715_dangerous_sorcery_1.Migration715DangerousSorcery}});var _716_strike_damage_selector_1=__webpack_require__(67683);Object.defineProperty(exports,"Migration716StrikeDamageSelector",{enumerable:!0,get:function(){return _716_strike_damage_selector_1.Migration716StrikeDamageSelector}});var _717_take_feat_limits_1=__webpack_require__(9553);Object.defineProperty(exports,"Migration717TakeFeatLimits",{enumerable:!0,get:function(){return _717_take_feat_limits_1.Migration717TakeFeatLimits}});var _718_carry_type_1=__webpack_require__(22290);Object.defineProperty(exports,"Migration718CarryType",{enumerable:!0,get:function(){return _718_carry_type_1.Migration718CarryType}});var _719_shrug_flanking_1=__webpack_require__(55338);Object.defineProperty(exports,"Migration719ShrugFlanking",{enumerable:!0,get:function(){return _719_shrug_flanking_1.Migration719ShrugFlanking}});var _720_update_spell_descriptions_1=__webpack_require__(74650);Object.defineProperty(exports,"Migration720UpdateSpellDescriptions",{enumerable:!0,get:function(){return _720_update_spell_descriptions_1.Migration720UpdateSpellDescriptions}});var _721_set_reload_values_1=__webpack_require__(16191);Object.defineProperty(exports,"Migration721SetReloadValues",{enumerable:!0,get:function(){return _721_set_reload_values_1.Migration721SetReloadValues}});var _722_crafting_system_data_1=__webpack_require__(47027);Object.defineProperty(exports,"Migration722CraftingSystemData",{enumerable:!0,get:function(){return _722_crafting_system_data_1.Migration722CraftingSystemData}});var _723_cumulative_item_bonuses_1=__webpack_require__(58598);Object.defineProperty(exports,"Migration723CumulativeItemBonuses",{enumerable:!0,get:function(){return _723_cumulative_item_bonuses_1.Migration723CumulativeItemBonuses}});var _724_crafting_max_item_level_1=__webpack_require__(61864);Object.defineProperty(exports,"Migration724CraftingMaxItemLevel",{enumerable:!0,get:function(){return _724_crafting_max_item_level_1.Migration724CraftingMaxItemLevel}});var _725_quick_climb_rule_elements_1=__webpack_require__(44532);Object.defineProperty(exports,"Migration725QuickClimbREs",{enumerable:!0,get:function(){return _725_quick_climb_rule_elements_1.Migration725QuickClimbREs}});var _726_journal_setting_1=__webpack_require__(91370);Object.defineProperty(exports,"Migration726JournalSetting",{enumerable:!0,get:function(){return _726_journal_setting_1.Migration726JournalSetting}});var _727_trim_self_roll_options_1=__webpack_require__(25967);Object.defineProperty(exports,"Migration727TrimSelfRollOptions",{enumerable:!0,get:function(){return _727_trim_self_roll_options_1.Migration727TrimSelfRollOptions}});var _728_flatten_physical_properties_1=__webpack_require__(85357);Object.defineProperty(exports,"Migration728FlattenPhysicalProperties",{enumerable:!0,get:function(){return _728_flatten_physical_properties_1.Migration728FlattenPhysicalProperties}});var _729_cumulative_item_bonus_cleanup_1=__webpack_require__(42995);Object.defineProperty(exports,"Migration729CumulativeItemBonusCleanup",{enumerable:!0,get:function(){return _729_cumulative_item_bonus_cleanup_1.Migration729CumulativeItemBonusCleanup}});var _730_derune_handwraps_1=__webpack_require__(26890);Object.defineProperty(exports,"Migration730DeruneHandwraps",{enumerable:!0,get:function(){return _730_derune_handwraps_1.Migration730DeruneHandwraps}});var _731_toggle_property_to_roll_option_1=__webpack_require__(69668);Object.defineProperty(exports,"Migration731TogglePropertyToRollOption",{enumerable:!0,get:function(){return _731_toggle_property_to_roll_option_1.Migration731TogglePropertyToRollOption}});var _732_fix_dedication_feat_types_1=__webpack_require__(98774);Object.defineProperty(exports,"Migration732FixDedicationFeatTypes",{enumerable:!0,get:function(){return _732_fix_dedication_feat_types_1.Migration732FixDedicationFeatTypes}});var _733_item_bonus_from_equipment_1=__webpack_require__(31030);Object.defineProperty(exports,"Migration733ItemBonusFromEquipment",{enumerable:!0,get:function(){return _733_item_bonus_from_equipment_1.Migration733ItemBonusFromEquipment}});var _734_spell_location_props_and_signature_1=__webpack_require__(32523);Object.defineProperty(exports,"Migration734SpellLocationPropsAndSignature",{enumerable:!0,get:function(){return _734_spell_location_props_and_signature_1.Migration734SpellLocationPropsAndSignature}});var _735_firearm_ammo_alchemical_1=__webpack_require__(28968);Object.defineProperty(exports,"Migration735FirearmAmmoAlchemical",{enumerable:!0,get:function(){return _735_firearm_ammo_alchemical_1.Migration735FirearmAmmoAlchemical}});var _736_remove_broken_threshold_1=__webpack_require__(84640);Object.defineProperty(exports,"Migration736RemoveBrokenThreshold",{enumerable:!0,get:function(){return _736_remove_broken_threshold_1.Migration736RemoveBrokenThreshold}});var _737_normalize_re_keys_1=__webpack_require__(96878);Object.defineProperty(exports,"Migration737NormalizeRuleElementKeys",{enumerable:!0,get:function(){return _737_normalize_re_keys_1.Migration737NormalizeRuleElementKeys}});var _738_update_laughing_shadow_1=__webpack_require__(77160);Object.defineProperty(exports,"Migration738UpdateLaughingShadow",{enumerable:!0,get:function(){return _738_update_laughing_shadow_1.Migration738UpdateLaughingShadow}});var _739_recovery_check_dc_1=__webpack_require__(86185);Object.defineProperty(exports,"Migration739RecoveryCheckDC",{enumerable:!0,get:function(){return _739_recovery_check_dc_1.Migration739RecoveryCheckDC}});var _740_fix_max_takable_1=__webpack_require__(4444);Object.defineProperty(exports,"Migration740MaxTakable",{enumerable:!0,get:function(){return _740_fix_max_takable_1.Migration740MaxTakable}});var _741_roll_option_toggle_to_item_1=__webpack_require__(89941);Object.defineProperty(exports,"Migration741RollOptionToggleToItem",{enumerable:!0,get:function(){return _741_roll_option_toggle_to_item_1.Migration741RollOptionToggleToItem}});var _742_rm_class_ability_boost_levels_1=__webpack_require__(38737);Object.defineProperty(exports,"Migration742RMAbilityBoostLevels",{enumerable:!0,get:function(){return _742_rm_class_ability_boost_levels_1.Migration742RMAbilityBoostLevels}});var _743_fix_weakness_structure_1=__webpack_require__(72035);Object.defineProperty(exports,"Migration743FixWeaknessStructure",{enumerable:!0,get:function(){return _743_fix_weakness_structure_1.Migration743FixWeaknessStructure}});var _744_migrate_spell_heighten_1=__webpack_require__(95357);Object.defineProperty(exports,"Migration744MigrateSpellHeighten",{enumerable:!0,get:function(){return _744_migrate_spell_heighten_1.Migration744MigrateSpellHeighten}});var _745_effect_target_to_choice_set_1=__webpack_require__(49180);Object.defineProperty(exports,"Migration745EffectTargetToChoiceSet",{enumerable:!0,get:function(){return _745_effect_target_to_choice_set_1.Migration745EffectTargetToChoiceSet}});var _746_standardize_pricing_1=__webpack_require__(42430);Object.defineProperty(exports,"Migration746StandardizePricing",{enumerable:!0,get:function(){return _746_standardize_pricing_1.Migration746StandardizePricing}});var _747_fixed_heightening_1=__webpack_require__(62290);Object.defineProperty(exports,"Migration747FixedHeightening",{enumerable:!0,get:function(){return _747_fixed_heightening_1.Migration747FixedHeightening}});var _748_batch_consumable_pricing_1=__webpack_require__(82272);Object.defineProperty(exports,"Migration748BatchConsumablePricing",{enumerable:!0,get:function(){return _748_batch_consumable_pricing_1.Migration748BatchConsumablePricing}});var _749_assurance_res_1=__webpack_require__(24653);Object.defineProperty(exports,"Migration749AssuranceREs",{enumerable:!0,get:function(){return _749_assurance_res_1.Migration749AssuranceREs}});var _750_fix_corrupted_price_1=__webpack_require__(77563);Object.defineProperty(exports,"Migration750FixCorruptedPrice",{enumerable:!0,get:function(){return _750_fix_corrupted_price_1.Migration750FixCorruptedPrice}});var _751_reset_roll_options_1=__webpack_require__(16088);Object.defineProperty(exports,"Migration751ResetRollOptions",{enumerable:!0,get:function(){return _751_reset_roll_options_1.Migration751ResetRollOptions}});var _752_strike_vs_weapon_traits_1=__webpack_require__(15889);Object.defineProperty(exports,"Migration752StrikeVsWeaponTraits",{enumerable:!0,get:function(){return _752_strike_vs_weapon_traits_1.Migration752StrikeVsWeaponTraits}});var _753_weapon_reload_times_1=__webpack_require__(38049);Object.defineProperty(exports,"Migration753WeaponReloadTimes",{enumerable:!0,get:function(){return _753_weapon_reload_times_1.Migration753WeaponReloadTimes}});var _754_mighty_bulwark_adjust_modifiers_1=__webpack_require__(95013);Object.defineProperty(exports,"Migration754MightyBulwarkAdjustModifiers",{enumerable:!0,get:function(){return _754_mighty_bulwark_adjust_modifiers_1.Migration754MightyBulwarkAdjustModifiers}});var _755_grant_ids_to_data_1=__webpack_require__(25536);Object.defineProperty(exports,"Migration755GrantIdsToData",{enumerable:!0,get:function(){return _755_grant_ids_to_data_1.Migration755GrantIdsToData}});var _756_rm_stored_resource_maxes_1=__webpack_require__(33085);Object.defineProperty(exports,"Migration756RMStoredResourceMaxes",{enumerable:!0,get:function(){return _756_rm_stored_resource_maxes_1.Migration756RMStoredResourceMaxes}});var _757_hillock_halfling_1=__webpack_require__(34186);Object.defineProperty(exports,"Migration757HillockHalfling",{enumerable:!0,get:function(){return _757_hillock_halfling_1.Migration757HillockHalfling}});var _758_prune_pc_attributes_1=__webpack_require__(60468);Object.defineProperty(exports,"Migration758PrunePCAttributes",{enumerable:!0,get:function(){return _758_prune_pc_attributes_1.Migration758PrunePCAttributes}});var _759_crit_spec_re_1=__webpack_require__(22117);Object.defineProperty(exports,"Migration759CritSpecRE",{enumerable:!0,get:function(){return _759_crit_spec_re_1.Migration759CritSpecRE}});var _760_separate_note_title_1=__webpack_require__(14728);Object.defineProperty(exports,"Migration760SeparateNoteTitle",{enumerable:!0,get:function(){return _760_separate_note_title_1.Migration760SeparateNoteTitle}});var _761_update_shot_rules_1=__webpack_require__(27305);Object.defineProperty(exports,"Migration761ShotRules",{enumerable:!0,get:function(){return _761_update_shot_rules_1.Migration761ShotRules}});var _762_update_background_items_1=__webpack_require__(15335);Object.defineProperty(exports,"Migration762UpdateBackgroundItems",{enumerable:!0,get:function(){return _762_update_background_items_1.Migration762UpdateBackgroundItems}});var _763_restore_animal_strike_options_1=__webpack_require__(74983);Object.defineProperty(exports,"Migration763RestoreAnimalStrikeOptions",{enumerable:!0,get:function(){return _763_restore_animal_strike_options_1.Migration763RestoreAnimalStrikeOptions}});var _764_panache_vivacious_res_1=__webpack_require__(4511);Object.defineProperty(exports,"Migration764PanacheVivaciousREs",{enumerable:!0,get:function(){return _764_panache_vivacious_res_1.Migration764PanacheVivaciousREs}});var _765_choice_owned_item_types_1=__webpack_require__(8301);Object.defineProperty(exports,"Migration765ChoiceOwnedItemTypes",{enumerable:!0,get:function(){return _765_choice_owned_item_types_1.Migration765ChoiceOwnedItemTypes}});var _766_wipe_url_sources_1=__webpack_require__(90759);Object.defineProperty(exports,"Migration766WipeURLSources",{enumerable:!0,get:function(){return _766_wipe_url_sources_1.Migration766WipeURLSources}});var _767_convert_voluntary_flaws_1=__webpack_require__(12008);Object.defineProperty(exports,"Migration767ConvertVoluntaryFlaws",{enumerable:!0,get:function(){return _767_convert_voluntary_flaws_1.Migration767ConvertVoluntaryFlaws}});var _768_add_new_auras_1=__webpack_require__(96896);Object.defineProperty(exports,"Migration768AddNewAuras",{enumerable:!0,get:function(){return _768_add_new_auras_1.Migration768AddNewAuras}});var _769_no_universalist_focus_pool_1=__webpack_require__(80481);Object.defineProperty(exports,"Migration769NoUniversalistFocusPool",{enumerable:!0,get:function(){return _769_no_universalist_focus_pool_1.Migration769NoUniversalistFocusPool}});var _770_re_data_to_system_1=__webpack_require__(64810);Object.defineProperty(exports,"Migration770REDataToSystem",{enumerable:!0,get:function(){return _770_re_data_to_system_1.Migration770REDataToSystem}});var _771_spell_variants_to_system_1=__webpack_require__(83652);Object.defineProperty(exports,"Migration771SpellVariantsToSystem",{enumerable:!0,get:function(){return _771_spell_variants_to_system_1.Migration771SpellVariantsToSystem}});var _772_v10_embedded_spell_data_1=__webpack_require__(59914);Object.defineProperty(exports,"Migration772V10EmbeddedSpellData",{enumerable:!0,get:function(){return _772_v10_embedded_spell_data_1.Migration772V10EmbeddedSpellData}});var _773_religious_symbol_usage_1=__webpack_require__(68957);Object.defineProperty(exports,"Migration773ReligiousSymbolUsage",{enumerable:!0,get:function(){return _773_religious_symbol_usage_1.Migration773ReligiousSymbolUsage}});var _774_unpersist_crafting_entries_1=__webpack_require__(85522);Object.defineProperty(exports,"Migration774UnpersistCraftingEntries",{enumerable:!0,get:function(){return _774_unpersist_crafting_entries_1.Migration774UnpersistCraftingEntries}});var _775_agile_finesse_ranged_1=__webpack_require__(1635);Object.defineProperty(exports,"Migration775AgileFinesseRanged",{enumerable:!0,get:function(){return _775_agile_finesse_ranged_1.Migration775AgileFinesseRanged}});var _776_sluggify_condition_overrides_1=__webpack_require__(24366);Object.defineProperty(exports,"Migration776SlugifyConditionOverrides",{enumerable:!0,get:function(){return _776_sluggify_condition_overrides_1.Migration776SlugifyConditionOverrides}});var _777_hand_of_the_apprentice_1=__webpack_require__(60380);Object.defineProperty(exports,"Migration777HandOfTheApprentice",{enumerable:!0,get:function(){return _777_hand_of_the_apprentice_1.Migration777HandOfTheApprentice}});var _778_rename_feature_effects_refs_1=__webpack_require__(88406);Object.defineProperty(exports,"Migration778RenameRetiredPackRefs",{enumerable:!0,get:function(){return _778_rename_feature_effects_refs_1.Migration778RenameRetiredPackRefs}});var _779_elite_weak_1=__webpack_require__(71342);Object.defineProperty(exports,"Migration779EliteWeak",{enumerable:!0,get:function(){return _779_elite_weak_1.Migration779EliteWeak}});var _780_numify_speeds_1=__webpack_require__(86939);Object.defineProperty(exports,"Migration780NumifySpeeds",{enumerable:!0,get:function(){return _780_numify_speeds_1.Migration780NumifySpeeds}});var _781_suppress_no_crowbar_1=__webpack_require__(59900);Object.defineProperty(exports,"Migration781SuppressNoCrowbar",{enumerable:!0,get:function(){return _781_suppress_no_crowbar_1.Migration781SuppressNoCrowbar}});var _782_unnest_actor_traits_1=__webpack_require__(4065);Object.defineProperty(exports,"Migration782UnnestActorTraits",{enumerable:!0,get:function(){return _782_unnest_actor_traits_1.Migration782UnnestActorTraits}});var _783_remove_class_skill_ae_likes_1=__webpack_require__(49450);Object.defineProperty(exports,"Migration783RemoveClassSkillAELikes",{enumerable:!0,get:function(){return _783_remove_class_skill_ae_likes_1.Migration783RemoveClassSkillAELikes}});var _784_comp_browser_pack_setting_1=__webpack_require__(70414);Object.defineProperty(exports,"Migration784CompBrowserPackSetting",{enumerable:!0,get:function(){return _784_comp_browser_pack_setting_1.Migration784CompBrowserPackSetting}});var _785_abc_kit_items_1=__webpack_require__(5827);Object.defineProperty(exports,"Migration785ABCKitItemUUIDs",{enumerable:!0,get:function(){return _785_abc_kit_items_1.Migration785ABCKitItemUUIDs}});var _786_remove_identified_data_1=__webpack_require__(87627);Object.defineProperty(exports,"Migration786RemoveIdentifiedData",{enumerable:!0,get:function(){return _786_remove_identified_data_1.Migration786RemoveIdentifiedData}});var _787_resolvables_to_system_1=__webpack_require__(38779);Object.defineProperty(exports,"Migration787ResolvablesToSystem",{enumerable:!0,get:function(){return _787_resolvables_to_system_1.Migration787ResolvablesToSystem}});var _788_update_tanglefoot_bags_1=__webpack_require__(38553);Object.defineProperty(exports,"Migration788UpdateTanglefootBags",{enumerable:!0,get:function(){return _788_update_tanglefoot_bags_1.Migration788UpdateTanglefootBags}});var _789_update_precise_strike_1=__webpack_require__(67485);Object.defineProperty(exports,"Migration789UpdatePreciseStrike",{enumerable:!0,get:function(){return _789_update_precise_strike_1.Migration789UpdatePreciseStrike}});var _790_multiple_class_dcs_1=__webpack_require__(52279);Object.defineProperty(exports,"Migration790MultipleClassDCs",{enumerable:!0,get:function(){return _790_multiple_class_dcs_1.Migration790MultipleClassDCs}});var _791_ruffian_hands_1=__webpack_require__(95600);Object.defineProperty(exports,"Migration791RuffianHands",{enumerable:!0,get:function(){return _791_ruffian_hands_1.Migration791RuffianHands}});var _792_remove_token_ae_likes_1=__webpack_require__(19660);Object.defineProperty(exports,"Migration792RemoveTokenAELikes",{enumerable:!0,get:function(){return _792_remove_token_ae_likes_1.Migration792RemoveTokenAELikes}});var _793_make_predicates_arrays_1=__webpack_require__(37824);Object.defineProperty(exports,"Migration793MakePredicatesArrays",{enumerable:!0,get:function(){return _793_make_predicates_arrays_1.Migration793MakePredicatesArrays}});var _794_add_wild_shape_choices_1=__webpack_require__(85918);Object.defineProperty(exports,"Migration794AddWildShapeChoices",{enumerable:!0,get:function(){return _794_add_wild_shape_choices_1.Migration794AddWildShapeChoices}});var _795_cleanup_flat_footed_toggle_1=__webpack_require__(86664);Object.defineProperty(exports,"Migration795CleanupFlatFootedToggle",{enumerable:!0,get:function(){return _795_cleanup_flat_footed_toggle_1.Migration795CleanupFlatFootedToggle}});var _796_item_grants_to_objects_1=__webpack_require__(94641);Object.defineProperty(exports,"Migration796ItemGrantsToObjects",{enumerable:!0,get:function(){return _796_item_grants_to_objects_1.Migration796ItemGrantsToObjects}});var _797_metagame_settings_1=__webpack_require__(83491);Object.defineProperty(exports,"Migration797MetagameSetting",{enumerable:!0,get:function(){return _797_metagame_settings_1.Migration797MetagameSetting}});var _798_weapon_to_item_statements_1=__webpack_require__(52912);Object.defineProperty(exports,"Migration798WeaponToItemStatements",{enumerable:!0,get:function(){return _798_weapon_to_item_statements_1.Migration798WeaponToItemStatements}});var _799_rm_recall_knowledge_duplicates_1=__webpack_require__(74178);Object.defineProperty(exports,"Migration799RMRecallKnowledgeDuplicates",{enumerable:!0,get:function(){return _799_rm_recall_knowledge_duplicates_1.Migration799RMRecallKnowledgeDuplicates}});var _800_self_effect_panache_rage_1=__webpack_require__(19480);Object.defineProperty(exports,"Migration800SelfEffectPanacheRage",{enumerable:!0,get:function(){return _800_self_effect_panache_rage_1.Migration800SelfEffectPanacheRage}})},27981:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.MigrationRunnerBase=void 0;const luxon_1=__webpack_require__(87883);class MigrationRunnerBase{constructor(migrations=[]){this.migrations=migrations.sort(((a,b)=>a.version-b.version))}needsMigration(currentVersion){return currentVersion<this.constructor.LATEST_SCHEMA_VERSION}diffCollection(orig,updated){const ret={inserted:[],deleted:[],updated:[]},origSources=new Map;for(const source of orig)origSources.set(source._id,source);for(const source of updated){const origSource=origSources.get(source._id);origSource?(JSON.stringify(origSource)!==JSON.stringify(source)&&ret.updated.push(source),origSources.delete(source._id)):ret.inserted.push(source)}for(const source of origSources.values())ret.deleted.push(source._id);return ret}async getUpdatedActor(actor,migrations){var _a,_b,_c,_d,_e,_f,_g,_h,_j;const currentActor=deepClone(actor);for(const migration of migrations)for(const currentItem of currentActor.items)await(null===(_a=migration.preUpdateItem)||void 0===_a?void 0:_a.call(migration,currentItem,currentActor)),"consumable"===currentItem.type&&currentItem.system.spell&&await(null===(_b=migration.preUpdateItem)||void 0===_b?void 0:_b.call(migration,currentItem.system.spell));for(const migration of migrations){await(null===(_c=migration.updateActor)||void 0===_c?void 0:_c.call(migration,currentActor));for(const currentItem of currentActor.items)await(null===(_d=migration.updateItem)||void 0===_d?void 0:_d.call(migration,currentItem,currentActor)),"consumable"===currentItem.type&&currentItem.system.spell&&await(null===(_e=migration.updateItem)||void 0===_e?void 0:_e.call(migration,currentItem.system.spell,currentActor))}if("game"in globalThis){const latestMigration=migrations.slice(-1)[0];null!==(_f=(_h=currentActor.system).schema)&&void 0!==_f||(_h.schema={version:null,lastMigration:null}),this.updateSchemaRecord(currentActor.system.schema,latestMigration);for(const itemSource of currentActor.items)null!==(_g=(_j=itemSource.system).schema)&&void 0!==_g||(_j.schema={version:null,lastMigration:null}),this.updateSchemaRecord(itemSource.system.schema,latestMigration)}return currentActor}async getUpdatedItem(item,migrations){var _a,_b,_c,_d;const current=deepClone(item);for(const migration of migrations)await(null===(_a=migration.preUpdateItem)||void 0===_a?void 0:_a.call(migration,current)),"consumable"===current.type&&current.system.spell&&await(null===(_b=migration.preUpdateItem)||void 0===_b?void 0:_b.call(migration,current.system.spell));for(const migration of migrations)await(null===(_c=migration.updateItem)||void 0===_c?void 0:_c.call(migration,current)),"consumable"===current.type&&current.system.spell&&await(null===(_d=migration.updateItem)||void 0===_d?void 0:_d.call(migration,current.system.spell));return migrations.length>0&&this.updateSchemaRecord(current.system.schema,migrations.slice(-1)[0]),current}updateSchemaRecord(schema,latestMigration){if(!("game"in globalThis)||!latestMigration)return;const fromVersion="number"==typeof schema.version?schema.version:null;schema.version=latestMigration.version,schema.lastMigration={datetime:luxon_1.DateTime.now().toISO(),version:{schema:fromVersion,foundry:"game"in globalThis?game.version:void 0,system:"game"in globalThis?game.system.version:void 0}}}async getUpdatedMacro(macroSource,migrations){var _a;const current=deepClone(macroSource);for(const migration of migrations)try{await(null===(_a=migration.updateMacro)||void 0===_a?void 0:_a.call(migration,current))}catch(err){console.error(err)}return current}async getUpdatedTable(tableSource,migrations){var _a;const current=deepClone(tableSource);for(const migration of migrations)try{await(null===(_a=migration.updateTable)||void 0===_a?void 0:_a.call(migration,current))}catch(err){console.error(err)}return current}async getUpdatedToken(token,migrations){var _a;const current=token.toObject();for(const migration of migrations)await(null===(_a=migration.updateToken)||void 0===_a?void 0:_a.call(migration,current,token.actor,token.scene));return current}async getUpdatedUser(userData,migrations){var _a;const current=deepClone(userData);for(const migration of migrations)try{await(null===(_a=migration.updateUser)||void 0===_a?void 0:_a.call(migration,current))}catch(err){console.error(err)}return current}}exports.MigrationRunnerBase=MigrationRunnerBase,MigrationRunnerBase.LATEST_SCHEMA_VERSION=.8,MigrationRunnerBase.MINIMUM_SAFE_VERSION=.618,MigrationRunnerBase.RECOMMENDED_SAFE_VERSION=.634},46842:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.MigrationRunner=void 0;const base_1=__webpack_require__(27981);class MigrationRunner extends base_1.MigrationRunnerBase{needsMigration(){return super.needsMigration(game.settings.get("pf2e","worldSchemaVersion"))}static async ensureSchemaVersion(document,migrations){if(0===migrations.length)return;const currentVersion=this.LATEST_SCHEMA_VERSION;if((Number(document.schemaVersion)||0)<currentVersion){const runner=new this(migrations),source=document._source,updated=await(async()=>{try{return"items"in source?await runner.getUpdatedActor(source,runner.migrations):await runner.getUpdatedItem(source,runner.migrations)}catch(_a){return null}})();updated&&document.updateSource(updated)}if(document.updateSource({"system.schema.version":currentVersion}),"items"in document&&"token"in document)for(const item of document.items)item.schemaVersion||item.updateSource({"system.schema.version":currentVersion})}async migrateWorldDocuments(collection,migrations){const DocumentClass=collection.documentClass,updateGroup=[];for(const document of collection.contents.sort((a=>"familiar"===a.type?1:-1))){if(50===updateGroup.length)try{await DocumentClass.updateDocuments(updateGroup,{noHook:!0})}catch(error){console.warn(error)}finally{updateGroup.length=0}const updated="items"in document?await this.migrateWorldActor(migrations,document):await this.migrateWorldItem(migrations,document);updated&&updateGroup.push(updated)}if(updateGroup.length>0)try{await DocumentClass.updateDocuments(updateGroup,{noHook:!0})}catch(error){console.warn(error)}}async migrateWorldItem(migrations,item){var _a;const baseItem=item.toObject(),updatedItem=await(()=>{try{return this.getUpdatedItem(baseItem,migrations)}catch(error){return console.error(error),null}})();if(!updatedItem)return null;const baseAEs=[...baseItem.effects],updatedAEs=[...updatedItem.effects],aeDiff=this.diffCollection(baseAEs,updatedAEs);if(aeDiff.deleted.length>0)try{const finalDeleted=aeDiff.deleted.filter((deletedId=>item.effects.some((effect=>effect.id===deletedId))));await item.deleteEmbeddedDocuments("ActiveEffect",finalDeleted,{noHook:!0})}catch(error){console.warn(error)}return updatedItem.effects=(null===(_a=item.actor)||void 0===_a?void 0:_a.isToken)?updatedAEs:aeDiff.updated,updatedItem}async migrateWorldActor(migrations,actor){const baseActor=actor.toObject(),updatedActor=await(()=>{try{return this.getUpdatedActor(baseActor,migrations)}catch(error){return console.error(error),null}})();if(!updatedActor)return null;const baseItems=[...baseActor.items],baseAEs=[...baseActor.effects],updatedItems=[...updatedActor.items],updatedAEs=[...updatedActor.effects],itemDiff=this.diffCollection(baseItems,updatedItems);if(itemDiff.deleted.length>0)try{const finalDeleted=itemDiff.deleted.filter((deletedId=>actor.items.some((item=>item.id===deletedId))));await actor.deleteEmbeddedDocuments("Item",finalDeleted,{noHook:!0})}catch(error){console.warn(error)}const aeDiff=this.diffCollection(baseAEs,updatedAEs);if(aeDiff.deleted.length>0)try{const finalDeleted=aeDiff.deleted.filter((deletedId=>actor.effects.some((effect=>effect.id===deletedId))));await actor.deleteEmbeddedDocuments("ActiveEffect",finalDeleted,{noHook:!0})}catch(error){console.warn(error)}if(itemDiff.inserted.length>0)try{await actor.createEmbeddedDocuments("Item",itemDiff.inserted,{noHook:!0})}catch(error){console.warn(error)}for(const updated of updatedItems){const original=baseActor.items.find((i=>i._id===updated._id));if(!original)continue;if(this.diffCollection(original.effects,updated.effects).deleted.length>0)try{await Item.updateDocuments([updated],{parent:actor,diff:!1,recursive:!1})}catch(error){console.warn(error)}}return updatedActor.items=actor.isToken?updatedItems:itemDiff.updated,updatedActor}async migrateWorldMacro(migrations,macro){if(migrations.some((migration=>!!migration.updateMacro)))try{const updatedMacro=await this.getUpdatedMacro(macro.toObject(),migrations),changes=diffObject(macro.toObject(),updatedMacro);Object.keys(changes).length>0&&await macro.update(changes,{noHook:!0})}catch(error){console.warn(error)}}async migrateWorldTable(migrations,table){if(migrations.some((migration=>!!migration.updateTable)))try{const updatedMacro=await this.getUpdatedTable(table.toObject(),migrations),changes=diffObject(table.toObject(),updatedMacro);Object.keys(changes).length>0&&table.update(changes,{noHook:!0})}catch(error){console.warn(error)}}async migrateSceneToken(migrations,token){if(!migrations.some((migration=>!!migration.updateToken)))return token.toObject();try{const updatedToken=await this.getUpdatedToken(token,migrations),changes=diffObject(token.toObject(),updatedToken);if(Object.keys(changes).length>0)try{await token.update(changes,{noHook:!0})}catch(error){console.warn(error)}return updatedToken}catch(error){return console.error(error),null}}async migrateUser(migrations,user){if(migrations.some((migration=>!!migration.updateUser)))try{const baseUser=user.toObject(),updatedUser=await this.getUpdatedUser(baseUser,migrations),changes=diffObject(user.toObject(),updatedUser);Object.keys(changes).length>0&&await user.update(changes,{noHook:!0})}catch(error){console.error(error)}}async runMigrations(migrations){if(0===migrations.length)return;await this.migrateWorldDocuments(game.actors,migrations),await this.migrateWorldDocuments(game.items,migrations);const promises=[];for(const macro of game.macros)promises.push(this.migrateWorldMacro(migrations,macro));for(const table of game.tables)promises.push(this.migrateWorldTable(migrations,table));for(const user of game.users)promises.push(this.migrateUser(migrations,user));for(const migration of migrations)migration.migrate&&promises.push(migration.migrate());await Promise.allSettled(promises);for(const scene of game.scenes)for(const token of scene.tokens){const actor=token.actor;if(actor){if(!!!await this.migrateSceneToken(migrations,token))continue;if(actor.isToken){const updated=await this.migrateWorldActor(migrations,actor);if(updated)try{await actor.update(updated)}catch(error){console.warn(error)}}}}}async runMigration(force=!1){const schemaVersion={latest:MigrationRunner.LATEST_SCHEMA_VERSION,current:game.settings.get("pf2e","worldSchemaVersion")},systemVersion=game.system.version;ui.notifications.info(game.i18n.format("PF2E.Migrations.Starting",{version:systemVersion}),{permanent:!0});const migrationsToRun=force?this.migrations:this.migrations.filter((x=>schemaVersion.current<x.version)),migrationPhases=[[]];for(const migration of migrationsToRun)migrationPhases[migrationPhases.length-1].push(migration),migration.requiresFlush&&migrationPhases.push([]);for(const migrationPhase of migrationPhases)migrationPhase.length>0&&await this.runMigrations(migrationPhase);await game.settings.set("pf2e","worldSchemaVersion",schemaVersion.latest)}}exports.MigrationRunner=MigrationRunner},46379:function(__unused_webpack_module,exports,__webpack_require__){var _RollNotePF2e_title,_RollNotePF2e_text,__classPrivateFieldSet=this&&this.__classPrivateFieldSet||function(receiver,state,value,kind,f){if("m"===kind)throw new TypeError("Private method is not writable");if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===kind?f.call(receiver,value):f?f.value=value:state.set(receiver,value),value},__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.RollNotePF2e=void 0;const predication_1=__webpack_require__(538);class RollNotePF2e{constructor(params){var _a,_b,_c,_d;_RollNotePF2e_title.set(this,void 0),_RollNotePF2e_text.set(this,void 0),this.selector=params.selector,this.predicate=predication_1.PredicatePF2e.create(null!==(_a=params.predicate)&&void 0!==_a?_a:[]),this.outcome=[...null!==(_b=params.outcome)&&void 0!==_b?_b:[]],this.visibility=null!==(_c=params.visibility)&&void 0!==_c?_c:null,__classPrivateFieldSet(this,_RollNotePF2e_title,null!==(_d=params.title)&&void 0!==_d?_d:null,"f"),__classPrivateFieldSet(this,_RollNotePF2e_text,params.text,"f")}get text(){const section=document.createElement("section");section.innerHTML=game.i18n.localize(__classPrivateFieldGet(this,_RollNotePF2e_text,"f"));const{firstChild}=section;if(1===section.childNodes.length&&firstChild instanceof HTMLElement&&(section.innerHTML=firstChild.innerHTML),section.classList.add("roll-note"),this.visibility&&(section.dataset.visibility=this.visibility),__classPrivateFieldGet(this,_RollNotePF2e_title,"f")){const strong=document.createElement("strong");strong.innerHTML=game.i18n.localize(__classPrivateFieldGet(this,_RollNotePF2e_title,"f")),section.prepend(strong," ")}return section.outerHTML}clone(){return new RollNotePF2e(this.toObject())}toObject(){return{selector:this.selector,title:__classPrivateFieldGet(this,_RollNotePF2e_title,"f"),text:__classPrivateFieldGet(this,_RollNotePF2e_text,"f"),predicate:this.predicate,outcome:this.outcome,visibility:this.visibility}}}exports.RollNotePF2e=RollNotePF2e,_RollNotePF2e_title=new WeakMap,_RollNotePF2e_text=new WeakMap},25306:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.identifyCreature=void 0;const dc_1=__webpack_require__(84372),identifySkills=new Map;function toKnowledgeDC(dc,rarity,loreAdjustment="normal"){const rarityAdjustment=(0,dc_1.rarityToDCAdjustment)(rarity),start=(0,dc_1.combineDCAdjustments)(rarityAdjustment,loreAdjustment),progression=(0,dc_1.createDifficultyScale)(dc,start);return{dc:(0,dc_1.adjustDC)(dc,start),progression,start}}identifySkills.set("aberration",["occultism"]),identifySkills.set("animal",["nature"]),identifySkills.set("astral",["occultism"]),identifySkills.set("beast",["arcana","nature"]),identifySkills.set("celestial",["religion"]),identifySkills.set("construct",["arcana","crafting"]),identifySkills.set("dragon",["arcana"]),identifySkills.set("elemental",["arcana","nature"]),identifySkills.set("ethereal",["occultism"]),identifySkills.set("fey",["nature"]),identifySkills.set("fiend",["religion"]),identifySkills.set("fungus",["nature"]),identifySkills.set("humanoid",["society"]),identifySkills.set("monitor",["religion"]),identifySkills.set("ooze",["occultism"]),identifySkills.set("plant",["nature"]),identifySkills.set("spirit",["occultism"]),identifySkills.set("undead",["religion"]),exports.identifyCreature=function(creature,{proficiencyWithoutLevel=!1}={}){var _a,_b;const rarity=null!==(_a=creature.system.traits.rarity)&&void 0!==_a?_a:"common",level=Number(null===(_b=creature.system.details.level)||void 0===_b?void 0:_b.value)||0,dc=(0,dc_1.calculateDC)(level,{proficiencyWithoutLevel}),traits=creature.system.traits.value,skills=new Set(traits.flatMap((t=>{var _a;return null!==(_a=identifySkills.get(t))&&void 0!==_a?_a:[]})));return{specificLoreDC:toKnowledgeDC(dc,rarity,"very easy"),unspecificLoreDC:toKnowledgeDC(dc,rarity,"easy"),skill:toKnowledgeDC(dc,rarity,"normal"),skills}}},37434:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.RuleElementOptions=exports.RuleElementData=exports.RuleElementSource=exports.RuleElementPF2e=exports.RuleElements=exports.RuleElementSynthetics=void 0;const rule_element_1=__webpack_require__(36244);Object.defineProperty(exports,"RuleElementData",{enumerable:!0,get:function(){return rule_element_1.RuleElementData}}),Object.defineProperty(exports,"RuleElementOptions",{enumerable:!0,get:function(){return rule_element_1.RuleElementOptions}}),Object.defineProperty(exports,"RuleElementPF2e",{enumerable:!0,get:function(){return rule_element_1.RuleElementPF2e}}),Object.defineProperty(exports,"RuleElementSource",{enumerable:!0,get:function(){return rule_element_1.RuleElementSource}});const actor_traits_1=__webpack_require__(67390),adjust_degree_of_success_1=__webpack_require__(44946),adjust_modifier_1=__webpack_require__(50161),adjust_strike_1=__webpack_require__(64115),ae_like_1=__webpack_require__(9480),aura_1=__webpack_require__(31856),base_speed_1=__webpack_require__(23472),rule_element_2=__webpack_require__(6746),rule_element_3=__webpack_require__(47383),entry_1=__webpack_require__(72576),formula_1=__webpack_require__(39073),creature_size_1=__webpack_require__(97717),crit_spec_1=__webpack_require__(30596),damage_dice_1=__webpack_require__(71341),dexterity_modifier_cap_1=__webpack_require__(23614),fast_healing_1=__webpack_require__(18125),fixed_proficiency_1=__webpack_require__(71932),flat_modifier_1=__webpack_require__(74880),grant_item_1=__webpack_require__(15492),immunity_1=__webpack_require__(49865),resistance_1=__webpack_require__(47876),weakness_1=__webpack_require__(68285),lose_hit_points_1=__webpack_require__(3549),rule_element_4=__webpack_require__(94362),martial_proficiency_1=__webpack_require__(58580),multiple_attack_penalty_1=__webpack_require__(85322),roll_note_1=__webpack_require__(20531),roll_option_1=__webpack_require__(33767),roll_twice_1=__webpack_require__(34335),sense_1=__webpack_require__(23885),strike_1=__webpack_require__(3972),striking_1=__webpack_require__(17812),substitute_roll_1=__webpack_require__(59517),temp_hp_1=__webpack_require__(87061),token_effect_icon_1=__webpack_require__(31288),token_image_1=__webpack_require__(75299),token_light_1=__webpack_require__(7975),token_name_1=__webpack_require__(58030),weapon_potency_1=__webpack_require__(35917);var synthetics_1=__webpack_require__(83781);Object.defineProperty(exports,"RuleElementSynthetics",{enumerable:!0,get:function(){return synthetics_1.RuleElementSynthetics}});class RuleElements{static get all(){return{...this.builtin,...this.custom}}static fromOwnedItem(item,options){var _a,_b;const rules=[];for(const[sourceIndex,data]of item.system.rules.entries()){if("string"!=typeof data.key){console.error(`PF2e System | Missing key in rule element ${data.key} on item ${item.name} (${item.uuid})`);continue}const key=data.key.replace(/^PF2E\.RuleElement\./,""),REConstructor=null!==(_b=null!==(_a=this.custom[key])&&void 0!==_a?_a:this.custom[data.key])&&void 0!==_b?_b:this.builtin[key];if(REConstructor){const rule=(()=>{try{return new REConstructor(data,item,{...null!=options?options:{},sourceIndex})}catch(error){return(null==options?void 0:options.suppressWarnings)||(console.warn(`PF2e System | Failed to construct rule element ${data.key} on item ${item.name}`,`(${item.uuid})`),console.warn(error)),null}})();rule&&rules.push(rule)}else{const{name,uuid}=item;console.warn(`PF2e System | Unrecognized rule element ${data.key} on item ${name} (${uuid})`)}}return rules}}exports.RuleElements=RuleElements,RuleElements.builtin={ActiveEffectLike:ae_like_1.AELikeRuleElement,ActorTraits:actor_traits_1.ActorTraitsRuleElement,AdjustDegreeOfSuccess:adjust_degree_of_success_1.AdjustDegreeOfSuccessRuleElement,AdjustModifier:adjust_modifier_1.AdjustModifierRuleElement,AdjustStrike:adjust_strike_1.AdjustStrikeRuleElement,Aura:aura_1.AuraRuleElement,BaseSpeed:base_speed_1.BaseSpeedRuleElement,BattleForm:rule_element_2.BattleFormRuleElement,ChoiceSet:rule_element_3.ChoiceSetRuleElement,CraftingEntry:entry_1.CraftingEntryRuleElement,CraftingFormula:formula_1.CraftingFormulaRuleElement,CreatureSize:creature_size_1.CreatureSizeRuleElement,CriticalSpecialization:crit_spec_1.CritSpecRuleElement,DamageDice:damage_dice_1.DamageDiceRuleElement,DexterityModifierCap:dexterity_modifier_cap_1.DexterityModifierCapRuleElement,FastHealing:fast_healing_1.HealingRuleElement,FixedProficiency:fixed_proficiency_1.FixedProficiencyRuleElement,FlatModifier:flat_modifier_1.FlatModifierRuleElement,GrantItem:grant_item_1.GrantItemRuleElement,Immunity:immunity_1.ImmunityRuleElement,LoseHitPoints:lose_hit_points_1.LoseHitPointsRuleElement,MarkToken:rule_element_4.MarkTokenRuleElement,MartialProficiency:martial_proficiency_1.MartialProficiencyRuleElement,MultipleAttackPenalty:multiple_attack_penalty_1.MultipleAttackPenaltyRuleElement,Note:roll_note_1.RollNoteRuleElement,Resistance:resistance_1.ResistanceRuleElement,RollOption:roll_option_1.RollOptionRuleElement,RollTwice:roll_twice_1.RollTwiceRuleElement,Sense:sense_1.SenseRuleElement,Strike:strike_1.StrikeRuleElement,Striking:striking_1.StrikingRuleElement,SubstituteRoll:substitute_roll_1.SubstituteRollRuleElement,TempHP:temp_hp_1.TempHPRuleElement,TokenEffectIcon:token_effect_icon_1.TokenEffectIconRuleElement,TokenImage:token_image_1.TokenImageRuleElement,TokenLight:token_light_1.TokenLightRuleElement,TokenName:token_name_1.TokenNameRuleElement,Weakness:weakness_1.WeaknessRuleElement,WeaponPotency:weapon_potency_1.WeaponPotencyRuleElement},RuleElements.custom={}},67390:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.ActorTraitsRuleElement=void 0;const _1=__webpack_require__(36244);class ActorTraitsRuleElement extends _1.RuleElementPF2e{constructor(data,item,options){var _a,_b;if(super({...data,priority:99},item,options),this.add=[],this.remove=[],null!==(_a=data.add)&&void 0!==_a||(data.add=[]),null!==(_b=data.remove)&&void 0!==_b||(data.remove=[]),Array.isArray(data.add)&&Array.isArray(data.remove))if(0!==data.add.length||0!==data.remove.length){for(const array of[data.add,data.remove])if(!array.every((t=>"string"==typeof t)))return void this.failValidation("Actor traits must consist only of strings");this.add=data.add,this.remove=data.remove}else this.failValidation("At least one non-empty `add` or `remove` array is required");else this.failValidation("`add` and `remove` properties must be arrays or omitted")}beforePrepareData(){if(this.ignored)return;const traits=this.actor.system.traits,newTraits=this.resolveInjectedProperties(this.add).filter((t=>!traits.value.includes(t)));for(const trait of newTraits)traits.value.push(trait),this.actor.rollOptions.all[`self:trait:${trait}`]=!0;const toRemoves=this.resolveInjectedProperties(this.remove);for(const trait of toRemoves)traits.value=traits.value.filter((t=>t!==trait)),delete this.actor.rollOptions.all[`self:trait:${trait}`]}}exports.ActorTraitsRuleElement=ActorTraitsRuleElement},44946:function(__unused_webpack_module,exports,__webpack_require__){var _AdjustDegreeOfSuccessRuleElement_instances,_AdjustDegreeOfSuccessRuleElement_isAdjustmentData,__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.AdjustDegreeOfSuccessRuleElement=void 0;const _1=__webpack_require__(36244);class AdjustDegreeOfSuccessRuleElement extends _1.RuleElementPF2e{constructor(data,item,options){super(data,item,options),_AdjustDegreeOfSuccessRuleElement_instances.add(this),"string"==typeof data.selector?this.selector=data.selector:(this.failValidation("Missing string selector property"),this.selector="")}beforePrepareData(){var _a,_b;if(this.ignored)return;const selector=this.resolveInjectedProperties(this.selector),adjustment=this.data.adjustment;if(!(selector&&adjustment&&"object"==typeof adjustment))return this.failValidation("Degree of success adjustment requires a selector field, a type field and an adjustment object.");if(!__classPrivateFieldGet(this,_AdjustDegreeOfSuccessRuleElement_instances,"m",_AdjustDegreeOfSuccessRuleElement_isAdjustmentData).call(this,adjustment))return this.failValidation("Degree of success adjustment does not have the correct format");(null!==(_a=(_b=this.actor.synthetics.degreeOfSuccessAdjustments)[selector])&&void 0!==_a?_a:_b[selector]=[]).push({modifiers:adjustment,predicate:this.predicate})}}exports.AdjustDegreeOfSuccessRuleElement=AdjustDegreeOfSuccessRuleElement,_AdjustDegreeOfSuccessRuleElement_instances=new WeakSet,_AdjustDegreeOfSuccessRuleElement_isAdjustmentData=function(adjustment){const adjusts=["criticalFailure","failure","success","criticalSuccess","all"],modifiers=["one-degree-better","one-degree-worse"];return Object.entries(adjustment).every((([key,value])=>adjusts.includes(key)&&modifiers.includes(value)))}},50161:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.AdjustModifierRuleElement=void 0;const values_1=__webpack_require__(6089),_util_1=__webpack_require__(6945),ae_like_1=__webpack_require__(9480);class AdjustModifierRuleElement extends ae_like_1.AELikeRuleElement{constructor(data,item,options){var _a;data.suppress&&(data.mode="override",data.value=0),null!==(_a=data.priority)&&void 0!==_a||(data.priority=90),super({...data,phase:"beforeDerived"},item,options),"string"==typeof data.relabel&&(this.relabel=data.relabel),this.selectors="string"==typeof data.selector?[data.selector]:Array.isArray(data.selectors)&&data.selectors.every((s=>"string"==typeof s))?data.selectors:[],this.damageType="string"==typeof data.damageType?data.damageType:null,this.suppress=!!data.suppress}validateData(){if(this.ignored)return;const tests={selectors:Array.isArray(this.selectors)&&this.selectors.length>0&&this.selectors.every((s=>"string"==typeof s)),slug:"string"==typeof this.slug||null===this.slug,predicate:this.predicate.isValid,mode:(0,_util_1.tupleHasValue)(ae_like_1.AELikeRuleElement.CHANGE_MODES,this.data.mode),value:["string","number"].includes(typeof this.value)||(0,_util_1.isObject)(this.value)};for(const[key,result]of Object.entries(tests))result||this.warn(key)}applyAELike(){var _a,_b;if(this.validateData(),this.ignored)return;const adjustment={slug:this.slug,predicate:this.predicate,suppress:this.suppress,getNewValue:current=>{const change=this.resolveValue();return"number"!=typeof change?(this.failValidation("value does not resolve to a number"),current):this.getNewValue(current,change)},getDamageType:current=>{if(!this.damageType)return current;const damageType=this.resolveInjectedProperties(this.damageType);return(0,_util_1.setHasElement)(values_1.DAMAGE_TYPES,damageType)?damageType:(this.failValidation(`${damageType} is an unrecognized damage type.`),current)}};this.relabel&&(adjustment.relabel=this.resolveInjectedProperties(this.relabel).replace(/^[^:]+:\s*|\s*\([^)]+\)$/g,""));for(const selector of this.selectors.map((s=>this.resolveInjectedProperties(s)))){(null!==(_a=(_b=this.actor.synthetics.modifierAdjustments)[selector])&&void 0!==_a?_a:_b[selector]=[]).push(adjustment)}}}exports.AdjustModifierRuleElement=AdjustModifierRuleElement,AdjustModifierRuleElement.validActorTypes=["character","familiar","npc"]},64115:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.AdjustStrikeRuleElement=void 0;const values_1=__webpack_require__(16585),predication_1=__webpack_require__(538),_util_1=__webpack_require__(6945),ae_like_1=__webpack_require__(9480);class AdjustStrikeRuleElement extends ae_like_1.AELikeRuleElement{constructor(data,item,options){var _a;super({...data,predicate:null!==(_a=data.predicate)&&void 0!==_a?_a:{},phase:"beforeDerived",priority:110},item,options),this.property=(0,_util_1.setHasElement)(AdjustStrikeRuleElement.VALID_PROPERTIES,data.property)?data.property:null,this.definition=new predication_1.PredicatePF2e(Array.isArray(data.definition)?data.definition:[])}validateData(){const tests={property:(0,_util_1.setHasElement)(AdjustStrikeRuleElement.VALID_PROPERTIES,this.property),predicate:this.predicate.isValid,definition:this.definition.isValid,mode:(0,_util_1.tupleHasValue)(ae_like_1.AELikeRuleElement.CHANGE_MODES,this.data.mode),value:["string","number"].includes(typeof this.value)};for(const[key,result]of Object.entries(tests))result||this.warn(key)}applyAELike(){if(this.validateData(),!this.test())return;const change=this.resolveValue(),adjustment=(()=>{if(!this.property)throw(0,_util_1.ErrorPF2e)("Unexpected error applying adjustment");const definition=this.resolveInjectedProperties(this.definition);switch(this.property){case"materials":return{adjustDamageRoll:(weapon,{materials})=>"add"!==this.mode?this.failValidation('A strike adjustment of material effects must be used with "add" mode.'):definition.test(weapon.getRollOptions("item"))?(0,_util_1.setHasElement)(values_1.WEAPON_MATERIAL_EFFECTS,change)?void(null==materials||materials.add(change)):this.failValidation(`"${change} is not a supported weapon material effect.`):void 0};case"range-increment":return{adjustWeapon:weapon=>{if("number"!=typeof change)return this.failValidation("Change value is not a number.");if(!definition.test(weapon.getRollOptions("item")))return;const rangeIncrement=weapon.rangeIncrement;if("number"!=typeof rangeIncrement)return this.failValidation("A weapon that meets the definition lacks a range increment.");const newRangeIncrement=this.getNewValue(rangeIncrement,change);weapon.system.range=newRangeIncrement}};case"traits":return{adjustTraits:(weapon,traits)=>"add"!==this.mode?this.failValidation('A Strike Adjustment of traits must be used with "add" mode.'):(0,_util_1.objectHasKey)(CONFIG.PF2E.actionTraits,change)?void(definition.test(weapon.getRollOptions("item"))&&(traits.includes(change)||traits.push(change))):this.failValidation(`"${change} is not a recognized action trait.`)};case"weapon-traits":return{adjustWeapon:weapon=>{if("add"!==this.mode)return this.failValidation('A Strike Adjustment of weapons traits must be used with "add" mode.');if(!(0,_util_1.objectHasKey)(CONFIG.PF2E.weaponTraits,change))return this.failValidation(`"${change} is not a recognized weapon trait.`);if(!definition.test(weapon.getRollOptions("item")))return;const{traits}=weapon.system;if(traits.value.includes(change))return;const match=change.match(/^([-a-z]*)-(\d*d?\d+)$/);if(null!==match){const changeBaseTrait=match[1],changeValue=match[2],traitRegex=new RegExp(`${changeBaseTrait}-(\\d*d?\\d*)`),existingTraitMatch=traits.value.map((trait=>trait.match(traitRegex))).find((match=>!!match));if(existingTraitMatch){const existingTraitScore=getTraitScore(existingTraitMatch[1]);if(!(getTraitScore(changeValue)>existingTraitScore))return;traits.value.findSplice((trait=>trait===existingTraitMatch[0]))}}traits.value.push(change)}}}})();this.actor.synthetics.strikeAdjustments.push(adjustment)}}function getTraitScore(traitValue){const traitValueMatch=traitValue.match(/(\d*)d(\d+)/);return traitValueMatch?Number(traitValueMatch[1]||1)*((Number(traitValueMatch[2])+1)/2):Number(traitValue)}exports.AdjustStrikeRuleElement=AdjustStrikeRuleElement,AdjustStrikeRuleElement.validActorTypes=["character","familiar","npc"],AdjustStrikeRuleElement.VALID_PROPERTIES=new Set(["materials","range-increment","traits","weapon-traits"])},9480:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.AELikeRuleElement=void 0;const values_1=__webpack_require__(8382),_item_1=__webpack_require__(10843),_util_1=__webpack_require__(6945),_1=__webpack_require__(36244);class AELikeRuleElement extends _1.RuleElementPF2e{constructor(data,item,options){var _a,_b;null!==(_a=data.priority)&&void 0!==_a||(data.priority=(0,_util_1.tupleHasValue)(AELikeRuleElement.CHANGE_MODES,data.mode)?10*AELikeRuleElement.CHANGE_MODES.indexOf(data.mode)+10:NaN),null!==(_b=data.phase)&&void 0!==_b||(data.phase="applyAEs"),super(data,item,options),this.mode=(0,_util_1.tupleHasValue)(AELikeRuleElement.CHANGE_MODES,data.mode)?data.mode:"override",this.path="string"==typeof data.path?data.path.replace(/^data\./,"system."):"",this.phase=(0,_util_1.tupleHasValue)(AELikeRuleElement.PHASES,data.phase)?data.phase:"applyAEs"}validateData(){if(!(0,_util_1.tupleHasValue)(AELikeRuleElement.CHANGE_MODES,this.data.mode))return this.warn("mode");if(Number.isNaN(this.data.priority))return this.warn("priority");const actor=this.item.actor;if(!("string"==typeof this.path&&this.path.length>0&&[this.path,this.path.replace(/\.\w+$/,""),this.path.replace(/\.?\w+\.\w+$/,"")].some((path=>void 0!==typeof getProperty(actor,path)))))return this.warn("path");["number","string","boolean","object"].includes(typeof this.value)||this.warn("value")}get value(){return this.data.value}onApplyActiveEffects(){this.ignored||"applyAEs"!==this.phase||this.applyAELike()}beforePrepareData(){this.ignored||"beforeDerived"!==this.phase||this.applyAELike()}afterPrepareData(){this.ignored||"afterDerived"!==this.phase||this.applyAELike()}beforeRoll(_domains,rollOptions){this.ignored||"beforeRoll"!==this.phase||this.applyAELike(rollOptions)}applyAELike(rollOptions=new Set(this.actor.getRollOptions())){if(this.validateData(),!this.test(rollOptions))return;const path=this.resolveInjectedProperties(this.path).replace(AELikeRuleElement.SKILL_LONG_FORM_PATH,((match,group)=>(0,_util_1.objectHasKey)(values_1.SKILL_EXPANDED,group)?`system.skills.${values_1.SKILL_EXPANDED[group].shortform}`:match));if(/\bundefined\b/.test(path))return;const{actor}=this,current=getProperty(actor,path),change=this.resolveValue(this.value),newValue=this.getNewValue(current,change);if(!this.ignored)if("add"===this.mode&&Array.isArray(current))current.push(newValue);else try{setProperty(actor,path,newValue),this.logChange(change)}catch(error){console.warn(error)}}getNewValue(current,change){switch(this.mode){case"multiply":return"number"!=typeof change||"number"!=typeof current&&void 0!==current?(this.warn("path"),null):Math.trunc((null!=current?current:0)*change);case"add":{const isNumericAdd="number"==typeof change&&("number"==typeof current||null==current),isArrayAdd=Array.isArray(current)&&current.every((e=>typeof e==typeof change));return isNumericAdd?(null!=current?current:0)+change:isArrayAdd?change:(this.warn("path"),null)}case"downgrade":return"number"!=typeof change||"number"!=typeof current&&void 0!==current?(this.warn("path"),null):Math.min(null!=current?current:0,change);case"upgrade":return"number"!=typeof change||"number"!=typeof current&&void 0!==current?this.warn("path"):Math.max(null!=current?current:0,change);case"override":if((0,_util_1.isObject)(change))for(const[key,value]of Object.entries(change))"string"==typeof value&&(change[key]=this.resolveInjectedProperties(value));return change;default:return null}}logChange(value){var _a,_b,_c,_d;const{item,mode}=this;if(!(!("number"==typeof value||"string"==typeof value)&&"string"==typeof value&&"override"!==mode))return;const level=item instanceof _item_1.FeatPF2e?Number(null===(_b=/-(\d+)$/.exec(null!==(_a=item.system.location)&&void 0!==_a?_a:""))||void 0===_b?void 0:_b[1])||item.level:"level"in item&&"number"==typeof item.level?item.level:null,{autoChanges}=this.actor.system;(null!==(_c=autoChanges[_d=this.path])&&void 0!==_c?_c:autoChanges[_d]=[]).push({mode,level,value,source:this.item.name})}warn(property){this.failValidation(`"${property}" property is missing or invalid`)}}exports.AELikeRuleElement=AELikeRuleElement,AELikeRuleElement.CHANGE_MODES=["multiply","add","downgrade","upgrade","override"],AELikeRuleElement.PHASES=["applyAEs","beforeDerived","afterDerived","beforeRoll"],AELikeRuleElement.SKILL_LONG_FORM_PATH=(()=>{const skillLongForms=Array.from(values_1.SKILL_LONG_FORMS).join("|");return new RegExp(String.raw`^system\.skills\.(${skillLongForms})\b`)})()},31856:function(__unused_webpack_module,exports,__webpack_require__){var _AuraRuleElement_instances,_AuraRuleElement_isValid,_AuraRuleElement_isAuraColors,_AuraRuleElement_isEffectData,_AuraRuleElement_processEffects,__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.AuraRuleElement=void 0;const predication_1=__webpack_require__(538),_util_1=__webpack_require__(6945),_1=__webpack_require__(36244);class AuraRuleElement extends _1.RuleElementPF2e{constructor(data,item,options){var _a,_b,_c,_d;super(data,item,options),_AuraRuleElement_instances.add(this),null!==(_a=data.effects)&&void 0!==_a||(data.effects=[]),null!==(_b=data.traits)&&void 0!==_b||(data.traits=[]),null!==(_c=data.colors)&&void 0!==_c||(data.colors=null),this.slug="string"==typeof data.slug?(0,_util_1.sluggify)(data.slug):null!==(_d=this.item.slug)&&void 0!==_d?_d:(0,_util_1.sluggify)(this.item.name),__classPrivateFieldGet(this,_AuraRuleElement_instances,"m",_AuraRuleElement_isValid).call(this,data)?(this.radius=data.radius,this.effects=deepClone(data.effects),this.traits=deepClone(data.traits),this.colors=data.colors):(this.radius=0,this.effects=[],this.traits=[],this.colors=null)}afterPrepareData(){if(!this.test())return;const radius=Math.clamped(Number(this.resolveValue(this.radius)),5,240);if(Number.isInteger(radius),radius>0&&radius%5==0){const data={slug:this.slug,radius,effects:__classPrivateFieldGet(this,_AuraRuleElement_instances,"m",_AuraRuleElement_processEffects).call(this),traits:this.traits,colors:this.colors};this.actor.auras.set(this.slug,data)}}}exports.AuraRuleElement=AuraRuleElement,_AuraRuleElement_instances=new WeakSet,_AuraRuleElement_isValid=function(data){var _a;const validations={predicate:predication_1.PredicatePF2e.isValid(null!==(_a=data.predicate)&&void 0!==_a?_a:[]),radius:["number","string"].includes(typeof data.radius),effects:Array.isArray(data.effects)&&data.effects.every(__classPrivateFieldGet(this,_AuraRuleElement_instances,"m",_AuraRuleElement_isEffectData)),colors:null===data.colors||__classPrivateFieldGet(this,_AuraRuleElement_instances,"m",_AuraRuleElement_isAuraColors).call(this,data.colors)},properties=["predicate","radius","effects","colors"];for(const property of properties)validations[property]||this.failValidation(`"${property}" property is invalid.`);return properties.every((p=>validations[p]))},_AuraRuleElement_isAuraColors=function(colors){return(0,_util_1.isObject)(colors)&&["border","fill"].every((p=>{const color=colors[p];return"string"==typeof color&&/#[a-f0-9]{6}/.test(color.toLowerCase())}))},_AuraRuleElement_isEffectData=function(effect){var _a,_b,_c;return!!(0,_util_1.isObject)(effect)&&(null!==(_a=effect.affects)&&void 0!==_a||(effect.affects="all"),null!==(_b=effect.removeOnExit)&&void 0!==_b||(effect.removeOnExit=!!Array.isArray(effect.events)&&effect.events.includes("enter")),null!==(_c=effect.save)&&void 0!==_c||(effect.save=null),"string"==typeof effect.uuid&&(!("level"in effect)||["string","number"].includes(typeof effect.level))&&"string"==typeof effect.affects&&["allies","enemies","all"].includes(effect.affects)&&Array.isArray(effect.events)&&effect.events.every((e=>"string"==typeof e&&["enter","turn-start","turn-end"].includes(e)))&&"boolean"==typeof effect.removeOnExit)},_AuraRuleElement_processEffects=function(){return this.effects.map((e=>({...e,level:Number(this.resolveValue(e.level))||null})))}},23472:function(__unused_webpack_module,exports,__webpack_require__){var _BaseSpeedRuleElement_instances,_BaseSpeedRuleElement_createMovementType,__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.BaseSpeedRuleElement=void 0;const values_1=__webpack_require__(8382),_util_1=__webpack_require__(6945),_1=__webpack_require__(36244);class BaseSpeedRuleElement extends _1.RuleElementPF2e{constructor(data,item,options){super(data,item,options),_BaseSpeedRuleElement_instances.add(this),this.value=0;const speedType=String(data.selector).trim().replace(/-speed$/,"");(0,_util_1.tupleHasValue)(values_1.MOVEMENT_TYPES,speedType)?this.selector=speedType:(this.failValidation("Unrecognized or missing selector"),this.selector="land"),"string"==typeof data.value||"number"==typeof data.value||this.isBracketedValue(data.value)?this.value=data.value:this.failValidation("A value must be a number, string, or bracketed value")}beforePrepareData(){var _a,_b,_c;if(this.ignored)return;const speed=__classPrivateFieldGet(this,_BaseSpeedRuleElement_instances,"m",_BaseSpeedRuleElement_createMovementType).call(this);(null!==(_a=(_b=this.actor.synthetics.movementTypes)[_c=this.selector])&&void 0!==_a?_a:_b[_c]=[]).push(speed)}}exports.BaseSpeedRuleElement=BaseSpeedRuleElement,_BaseSpeedRuleElement_instances=new WeakSet,_BaseSpeedRuleElement_createMovementType=function(){return()=>{if(!this.test())return null;const value=Math.trunc(Number(this.resolveValue(this.value)));return Number.isInteger(value)?value>0?{type:this.selector,value,source:this.item.name}:null:(this.failValidation("Failed to resolve value"),null)}},BaseSpeedRuleElement.validActorTypes=["character","familiar","npc"]},50852:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.RuleElementPF2e=void 0;const _item_1=__webpack_require__(10843),predication_1=__webpack_require__(538),_util_1=__webpack_require__(6945);class RuleElementPF2e{constructor(data,item,options={}){var _a,_b,_c,_d,_e,_f,_g;this.item=item,this.requiresEquipped=null,this.requiresInvestment=null,this.key=String(data.key),this.slug="string"==typeof data.slug?(0,_util_1.sluggify)(data.slug):null,this.suppressWarnings=null!==(_a=options.suppressWarnings)&&void 0!==_a&&_a,this.sourceIndex=null!==(_b=options.sourceIndex)&&void 0!==_b?_b:null;if(!(0,_util_1.tupleHasValue)(this.constructor.validActorTypes,item.actor.type)){const ruleName=game.i18n.localize(`PF2E.RuleElement.${this.key}`),actorType=game.i18n.localize(`ACTOR.Type${item.actor.type.titleCase()}`);console.warn(`PF2e System | A ${ruleName} rules element may not be applied to a ${actorType}`),data.ignored=!0}const label="string"==typeof data.label?data.label:item.name;this.data={priority:100,...data,key:this.key,predicate:Array.isArray(data.predicate)?data.predicate:void 0,label:game.i18n.localize(this.resolveInjectedProperties(label)),ignored:Boolean(null!==(_c=data.ignored)&&void 0!==_c&&_c),removeUponCreate:Boolean(null!==(_d=data.removeUponCreate)&&void 0!==_d&&_d)},this.predicate=new predication_1.PredicatePF2e(...null!==(_e=this.data.predicate)&&void 0!==_e?_e:[]),this.predicate.isValid||this.failValidation("Malformed predicate: must be an array of predication statements"),item instanceof _item_1.PhysicalItemPF2e&&(this.requiresEquipped=!(null!==(_f=data.requiresEquipped)&&void 0!==_f&&!_f),this.requiresInvestment=null===item.isInvested?null:!!(null!==(_g=data.requiresInvestment)&&void 0!==_g?_g:this.requiresEquipped))}get actor(){return this.item.actor}get token(){var _a,_b,_c;const actor=this.actor;if(actor.token)return actor.token;const tokens=actor.getActiveTokens(),controlled=tokens.find((token=>token.controlled));return null!==(_c=null!==(_a=null==controlled?void 0:controlled.document)&&void 0!==_a?_a:null===(_b=tokens.shift())||void 0===_b?void 0:_b.document)&&void 0!==_c?_c:null}get label(){return this.data.label}get priority(){return this.data.priority}get ignored(){if(this.data.ignored)return!0;const{item}=this;return item instanceof _item_1.PhysicalItemPF2e?this.data.ignored=!!this.requiresEquipped&&!item.isEquipped||!!this.requiresInvestment&&!item.isInvested:this.data.ignored=!1}set ignored(value){this.data.ignored=value}test(rollOptions){if(this.ignored)return!1;if(0===this.predicate.length)return!0;const optionSet=rollOptions instanceof Set?rollOptions:new Set(null!=rollOptions?rollOptions:this.actor.getRollOptions());return this.resolveInjectedProperties(this.predicate).test(optionSet)}failValidation(...message){const fullMessage=message.join(" "),{name,uuid}=this.item;if(!this.suppressWarnings){const ruleName=game.i18n.localize(`PF2E.RuleElement.${this.key}`);this.actor.synthetics.preparationWarnings.add(`PF2e System | ${ruleName} rules element on item ${name} (${uuid}) failed to validate: ${fullMessage}`)}this.ignored=!0}resolveInjectedProperties(source){if(null===source||"number"==typeof source||"string"==typeof source&&!source.includes("{"))return source;if(Array.isArray(source))for(let i=0;i<source.length;i++)source[i]=this.resolveInjectedProperties(source[i]);else{if((0,_util_1.isObject)(source)){for(const[key,value]of Object.entries(source))("string"==typeof value||(0,_util_1.isObject)(value))&&(source[key]=this.resolveInjectedProperties(value));return source}if("string"==typeof source)return source.replace(/{(actor|item|rule)\|(.*?)}/g,((_match,key,prop)=>{const data="rule"===key?this.data:"actor"===key||"item"===key?this[key]:this.item,value=getProperty(data,prop);return void 0===value&&this.failValidation("Failed to resolve injected property"),String(value)}))}return source}resolveValue(valueData=this.data.value,defaultValue=0,{evaluate=!0,resolvables={}}={}){var _a,_b,_c,_d;let value=null!==(_a=null!=valueData?valueData:defaultValue)&&void 0!==_a?_a:null;if("string"==typeof value&&(value=this.resolveInjectedProperties(value)),this.isBracketedValue(valueData)){const bracketNumber=(()=>{if(!(null==valueData?void 0:valueData.field))return this.actor.level;const field=String(valueData.field),separator=field.indexOf("|"),source=field.substring(0,separator),{actor,item}=this;switch(source){case"actor":return Number(getProperty({...actor,data:actor.system},field.substring(separator+1)))||0;case"item":return Number(getProperty({...item,data:item.system},field.substring(separator+1)))||0;case"rule":return Number(getProperty(this.data,field.substring(separator+1)))||0;default:return Number(getProperty({...actor,data:actor.system},field.substring(0)))||0}})(),brackets=null!==(_b=null==valueData?void 0:valueData.brackets)&&void 0!==_b?_b:[],bracketFallthrough=(()=>{switch(typeof defaultValue){case"number":case"boolean":case"object":return defaultValue;case"string":return Number.isNaN(Number(defaultValue))?defaultValue:Number(defaultValue);default:return null}})();value=null!==(_d=null===(_c=brackets.find((bracket=>{var _a,_b;const start=null!==(_a=bracket.start)&&void 0!==_a?_a:0,end=null!==(_b=bracket.end)&&void 0!==_b?_b:1/0;return start<=bracketNumber&&end>=bracketNumber})))||void 0===_c?void 0:_c.value)&&void 0!==_d?_d:bracketFallthrough}return value instanceof Object&&defaultValue instanceof Object?mergeObject(defaultValue,value,{inplace:!1}):"string"==typeof value&&value.includes("@")&&evaluate?(formula=>{var _a;try{const unresolved=null!==(_a=/@[a-z]+/i.exec(formula))&&void 0!==_a?_a:[];for(const resolvable of unresolved)"@target"!==resolvable&&this.failValidation(`This rule element requires a "${resolvable}" object, but none was provided.`);return 0===unresolved.length?Roll.safeEval(formula):0}catch(_b){return this.failValidation(`Error thrown while attempting to evaluate formula, "${formula}"`),0}})(Roll.replaceFormulaData(value,{actor:this.actor,item:this.item,...resolvables})):value}isBracketedValue(value){return(0,_util_1.isObject)(value)&&Array.isArray(value.brackets)&&("string"==typeof value.field||!("fields"in value))}}exports.RuleElementPF2e=RuleElementPF2e,RuleElementPF2e.validActorTypes=["character","npc","familiar","hazard","loot","vehicle"]},6746:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.BattleFormRuleElement=void 0;const __1=__webpack_require__(36244),creature_size_1=__webpack_require__(97717),immunity_1=__webpack_require__(49865),resistance_1=__webpack_require__(47876),weakness_1=__webpack_require__(68285),sense_1=__webpack_require__(23885),strike_1=__webpack_require__(3972),temp_hp_1=__webpack_require__(87061),sense_2=__webpack_require__(82280),values_1=__webpack_require__(8382),_item_1=__webpack_require__(10843),modifiers_1=__webpack_require__(92823),predication_1=__webpack_require__(538),_util_1=__webpack_require__(6945);class BattleFormRuleElement extends __1.RuleElementPF2e{constructor(data,item,options){var _a,_b;null!==(_a=data.value)&&void 0!==_a||(data.value={}),null!==(_b=data.overrides)&&void 0!==_b||(data.overrides={}),super(data,item,options),this.initialize(this.data),this.overrides=this.resolveValue(this.data.value,this.data.overrides),this.modifierLabel=this.label.replace(/^[^:]+:\s*|\s*\([^)]+\)$/g,""),this.ownUnarmed=this.data.ownUnarmed}initialize(data){var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l,_m,_o,_p,_q,_r,_s,_t,_u,_v;if(this.ignored)return;const{value}=data;if(!(data.overrides instanceof Object&&(value instanceof Object||void 0===value)))return this.failValidation("Battle Form rule element failed to validate");null!==(_a=data.canCast)&&void 0!==_a||(data.canCast=!1),null!==(_b=data.canSpeak)&&void 0!==_b||(data.canSpeak=!1),null!==(_c=data.hasHands)&&void 0!==_c||(data.hasHands=!1),null!==(_d=data.ownUnarmed)&&void 0!==_d||(data.ownUnarmed=!1);const overrides=null!==(_e=data.overrides)&&void 0!==_e?_e:data.overrides={};null!==(_f=overrides.tempHP)&&void 0!==_f||(overrides.tempHP=null),null!==(_g=overrides.traits)&&void 0!==_g||(overrides.traits=[]),null!==(_h=overrides.senses)&&void 0!==_h||(overrides.senses={}),null!==(_j=overrides.size)&&void 0!==_j||(overrides.size=null),null!==(_k=overrides.speeds)&&void 0!==_k||(overrides.speeds={}),overrides.armorClass=mergeObject({modifier:0,ignoreCheckPenalty:!0,ignoreSpeedPenalty:!0},null!==(_l=overrides.armorClass)&&void 0!==_l?_l:{});const skills=null!==(_m=overrides.skills)&&void 0!==_m?_m:overrides.skills={};for(const skillData of Object.values(skills))null!==(_o=skillData.ownIfHigher)&&void 0!==_o||(skillData.ownIfHigher=!0);const strikes=null!==(_p=overrides.strikes)&&void 0!==_p?_p:overrides.strikes={};for(const[key,strikeData]of Object.entries(strikes))strikeData.label=game.i18n.localize(strikeData.label),null!==(_q=strikeData.img)&&void 0!==_q||(strikeData.img=null!==(_r=BattleFormRuleElement.defaultIcons[key])&&void 0!==_r?_r:this.item.img),null!==(_s=strikeData.ownIfHigher)&&void 0!==_s||(strikeData.ownIfHigher=!0);null!==(_t=overrides.immunities)&&void 0!==_t||(overrides.immunities=[]),null!==(_u=overrides.weaknesses)&&void 0!==_u||(overrides.weaknesses=[]),null!==(_v=overrides.resistances)&&void 0!==_v||(overrides.resistances=[]),this.actor.flags.pf2e.disableABP=!0}async preCreate({itemSource,ruleSource}){var _a,_b,_c;if(!this.test())return void(ruleSource.ignored=!0);const rules=null!==(_b=null===(_a=itemSource.system)||void 0===_a?void 0:_a.rules)&&void 0!==_b?_b:[];for(const rule of rules)if(["DamageDice","FlatModifier","Note"].includes(String(rule.key))){const predicate=null!==(_c=rule.predicate)&&void 0!==_c?_c:rule.predicate=[];Array.isArray(predicate)&&predicate.push("battle-form")}await this.resolveStrikeQueries(ruleSource)}onCreate(actorUpdates){if(this.ignored)return;const tempHP=this.overrides.tempHP;tempHP&&new temp_hp_1.TempHPRuleElement({key:"TempHP",label:this.data.label,value:tempHP},this.item).onCreate(actorUpdates)}beforePrepareData(){var _a,_b;if(this.ignored)return;const{actor}=this,{attributes}=actor;if(attributes.polymorphed)return actor.synthetics.preparationWarnings.add("PF2e System | You are already under a polymorph effect"),void(this.ignored=!0);attributes.polymorphed=!0,attributes.battleForm=!0,this.setRollOptions(),this.prepareSenses();for(const trait of this.overrides.traits){const currentTraits=actor.system.traits;currentTraits.value.includes(trait)||currentTraits.value.push(trait)}if(this.overrides.armorClass.ignoreSpeedPenalty){(null!==(_a=(_b=actor.rollOptions).speed)&&void 0!==_a?_a:_b.speed={})["armor:ignore-speed-penalty"]=!0}}afterPrepareData(){this.ignored||(this.prepareAC(),this.prepareSize(),this.prepareSkills(),this.prepareSpeeds(),this.prepareStrikes(),this.prepareIWR())}onDelete(actorUpdates){if(this.ignored)return;const tempHP=this.overrides.tempHP;tempHP&&new temp_hp_1.TempHPRuleElement({key:"TempHP",label:this.data.label,value:tempHP},this.item).onDelete(actorUpdates)}setRollOptions(){var _a,_b;const{attributes,rollOptions}=this.actor;if(rollOptions.all.polymorph=!0,rollOptions.all["battle-form"]=!0,rollOptions.all["armor:ignore-check-penalty"]=this.overrides.armorClass.ignoreCheckPenalty,rollOptions.all["armor:ignore-speed-penalty"]=this.overrides.armorClass.ignoreSpeedPenalty,this.overrides.armorClass.ignoreSpeedPenalty){(null!==(_a=rollOptions.speed)&&void 0!==_a?_a:rollOptions.speed={})["armor:ignore-speed-penalty"]=!0}for(const key of values_1.SKILL_ABBREVIATIONS){if(!(key in this.overrides.skills))continue;const longForm=values_1.SKILL_DICTIONARY[key];rollOptions.all[`battle-form:${longForm}`]=!0}attributes.handsFree=Math.max(Object.values(null!==(_b=this.overrides.strikes)&&void 0!==_b?_b:{}).reduce(((count,s)=>"unarmed"===s.category?count:count-1),2),0);for(const num of[0,1,2])attributes.handsFree===num?rollOptions.all[`hands-free:${num}`]=!0:delete rollOptions.all[`hands-free:${num}`]}prepareAC(){const overrides=this.overrides,armorClass=this.actor.system.attributes.ac;if(!(Number(this.resolveValue(overrides.armorClass.modifier,armorClass.totalModifier))||0))return;this.suppressModifiers(armorClass);const newModifier=Number(this.resolveValue(overrides.armorClass.modifier))||0;armorClass.unshift(new modifiers_1.ModifierPF2e(this.modifierLabel,newModifier,"untyped")),armorClass.value=armorClass.totalModifier}prepareSenses(){var _a;for(const senseType of sense_2.SENSE_TYPES){const newSense=this.overrides.senses[senseType];if(!newSense)continue;null!==(_a=newSense.acuity)&&void 0!==_a||(newSense.acuity="precise");const ruleData={key:"Sense",selector:senseType,force:!0,...newSense};new sense_1.SenseRuleElement(ruleData,this.item).beforePrepareData()}}prepareSize(){if(!this.overrides.size)return;const ruleData={key:"CreatureSize",label:this.label,value:this.overrides.size};new creature_size_1.CreatureSizeRuleElement(ruleData,this.item).beforePrepareData()}prepareSpeeds(){const{attributes}=this.actor,currentSpeeds=attributes.speed;for(const movementType of values_1.MOVEMENT_TYPES){const speedOverride=this.overrides.speeds[movementType];if("number"==typeof speedOverride)if("land"===movementType){const landSpeed=attributes.speed;this.suppressModifiers(attributes.speed),attributes.speed.totalModifier=landSpeed.total=speedOverride+landSpeed.totalModifier;const label=game.i18n.format("PF2E.SpeedBaseLabel",{type:game.i18n.localize("PF2E.SpeedTypesLand")});attributes.speed.breakdown=[`${label} ${speedOverride}`].concat(landSpeed.modifiers.filter((m=>m.enabled)).map((modifier=>`${game.i18n.localize(modifier.slug)} ${modifier.modifier<0?"":"+"}${modifier.modifier}`))).join(", ")}else{const{otherSpeeds}=currentSpeeds,label=game.i18n.localize(CONFIG.PF2E.speedTypes[movementType]);otherSpeeds.findSplice((speed=>speed.type===movementType)),otherSpeeds.push({type:movementType,label,value:speedOverride});const newSpeed=this.actor.prepareSpeed(movementType);if(!newSpeed)throw(0,_util_1.ErrorPF2e)("Unexpected failure retrieving movement type");this.suppressModifiers(newSpeed),newSpeed.totalModifier=newSpeed.total=speedOverride+newSpeed.totalModifier,newSpeed.breakdown=[`${label} ${speedOverride}`].concat(newSpeed.modifiers.filter((modifier=>modifier.enabled)).map((modifier=>{const sign=modifier.modifier<0?"":"+",value=modifier.modifier;return`${this.modifierLabel} ${sign}${value}`}))).join(", "),otherSpeeds.findSplice((speed=>speed.type===movementType)),otherSpeeds.push(newSpeed)}}}prepareSkills(){for(const key of values_1.SKILL_ABBREVIATIONS){const newSkill=this.overrides.skills[key];if(!newSkill)continue;const currentSkill=this.actor.system.skills[key],newModifier=Number(this.resolveValue(newSkill.modifier))||0;currentSkill.totalModifier>newModifier&&newSkill.ownIfHigher||(this.suppressModifiers(currentSkill),currentSkill.unshift(new modifiers_1.ModifierPF2e(this.modifierLabel,newModifier,"untyped")),currentSkill.value=currentSkill.totalModifier)}}prepareStrikes(){var _a,_b,_c;const{synthetics}=this.actor,ruleData=Object.entries(this.overrides.strikes).map((([slug,strikeData])=>{var _a;return{key:"Strike",label:null!==(_a=strikeData.label)&&void 0!==_a?_a:`PF2E.BattleForm.Attack.${(0,_util_1.sluggify)(slug,{camel:"bactrian"})}`,slug,img:strikeData.img,category:strikeData.category,group:strikeData.group,baseItem:strikeData.baseType,options:[slug],damage:{base:strikeData.damage},range:null,traits:strikeData.traits}}));if(this.ownUnarmed){for(const[slug,weapon]of synthetics.strikes.entries())"unarmed"!==weapon.category&&synthetics.strikes.delete(slug);this.actor.rollOptions.all["battle-form:own-attack-modifier"]=!0}else{synthetics.strikes.clear();for(const striking of Object.values(synthetics.striking).flat()){(null!==(_a=striking.predicate)&&void 0!==_a?_a:striking.predicate=new predication_1.PredicatePF2e).push({not:"battle-form"})}for(const datum of ruleData)datum.traits.includes("magical")||datum.traits.push("magical"),new strike_1.StrikeRuleElement(datum,this.item).beforePrepareData()}this.actor.system.actions=this.actor.prepareStrikes({includeBasicUnarmed:this.ownUnarmed}).filter((a=>a.slug&&a.slug in this.overrides.strikes||this.ownUnarmed&&"unarmed"===a.item.category));const strikeActions=this.actor.system.actions.flatMap((s=>[s,...s.altUsages]));for(const action of strikeActions){const strike=null!==(_c=this.overrides.strikes[null!==(_b=action.slug)&&void 0!==_b?_b:""])&&void 0!==_c?_c:null;if(!this.ownUnarmed&&strike&&(strike.modifier>=action.totalModifier||!strike.ownIfHigher)){this.suppressModifiers(action),this.suppressNotes(Object.entries(synthetics.rollNotes).flatMap((([key,note])=>/\bdamage\b/.test(key)?note:[])));const baseModifier=Number(this.resolveValue(strike.modifier))||0;action.unshift(new modifiers_1.ModifierPF2e(this.modifierLabel,baseModifier,"untyped"));const title=game.i18n.localize("PF2E.RuleElement.Strike"),sign=action.totalModifier<0?"":"+";action.variants[0].label=`${title} ${sign}${action.totalModifier}`}else this.actor.rollOptions.all["battle-form:own-attack-modifier"]=!0}}prepareIWR(){for(const immunity of this.overrides.immunities)new immunity_1.ImmunityRuleElement({key:"Immunity",...immunity},this.item).beforePrepareData();for(const weakness of this.overrides.weaknesses)new weakness_1.WeaknessRuleElement({key:"Weakness",...weakness,override:!0},this.item).beforePrepareData();for(const resistance of this.overrides.resistances)new resistance_1.ResistanceRuleElement({key:"Resistance",...resistance,override:!0},this.item).beforePrepareData()}suppressModifiers(statistic){for(const modifier of statistic.modifiers)(!["status","circumstance"].includes(modifier.type)&&modifier.modifier>=0||"ability"===modifier.type)&&(modifier.adjustments.push({slug:null,predicate:new predication_1.PredicatePF2e,suppress:!0}),modifier.ignored=!0);statistic.calculateTotal()}suppressNotes(notes){for(const note of notes)note.predicate.includes("battle-form")||(note.predicate=note.predicate instanceof predication_1.PredicatePF2e?note.predicate:new predication_1.PredicatePF2e(note.predicate),note.predicate.push({not:"battle-form"}))}applyDamageExclusion(weapon,modifiers){var _a,_b,_c;if(!this.ownUnarmed)for(const modifier of modifiers){if(modifier.predicate.some((s=>s instanceof Object&&"not"in s&&"battle-form"===s.not)))continue;const isNumericBonus=modifier instanceof modifiers_1.ModifierPF2e&&modifier.modifier>=0,isAbilityModifier=modifier instanceof modifiers_1.ModifierPF2e&&"ability"===modifier.type,isExtraDice=modifier instanceof modifiers_1.DiceModifierPF2e,isStatusOrCircumstance=isNumericBonus&&["status","circumstance"].includes(modifier.type),isDamageTrait=isExtraDice&&/^(?:deadly|fatal)-\d?d\d{1,2}$/.test(modifier.slug)&&(0,_util_1.tupleHasValue)(null!==(_c=null===(_b=this.overrides.strikes[null!==(_a=weapon.slug)&&void 0!==_a?_a:""])||void 0===_b?void 0:_b.traits)&&void 0!==_c?_c:[],modifier.slug),isBattleFormModifier=!!(modifier.predicate.includes("battle-form")||modifier.predicate.some((s=>s instanceof Object&&"or"in s&&s.or.includes("battle-form")))||isDamageTrait);!(isNumericBonus||isAbilityModifier||isExtraDice)||isStatusOrCircumstance||isBattleFormModifier||(modifier.enabled=!1,modifier.ignored=!0,modifier.predicate.push({not:"battle-form"}))}}async resolveStrikeQueries(ruleSource){var _a,_b,_c,_d,_e;const value=ruleSource.overrides?ruleSource.overrides:null!==(_a=ruleSource.value)&&void 0!==_a?_a:ruleSource.value={};if(v=value,!(0,_util_1.isObject)(v)||!(0,_util_1.isObject)(v.strikes))return;var v;for(const[slug,strike]of Object.entries(value.strikes)){if(maybeQuery=strike,!(0,_util_1.isObject)(maybeQuery)||"string"!=typeof maybeQuery.query||"number"!=typeof maybeQuery.modifier)continue;strike.pack=String(null!==(_b=strike.pack)&&void 0!==_b?_b:"pf2e.equipment-srd"),strike.ownIfHigher=!(null!==(_c=strike.ownIfHigher)&&void 0!==_c&&!_c);const queryObject=(()=>{try{const parsed=JSON.parse(String(this.resolveInjectedProperties(strike.query)));if(!(0,_util_1.isObject)(parsed)||Array.isArray(parsed))throw Error("A strike query must be an NeDB query object");return parsed}catch(error){return error instanceof Error&&this.failValidation(error.message),ruleSource.ignored=!0,null}})();if(!queryObject){this.failValidation("Malformed query object");break}const weapon=null===(_e=await(null===(_d=game.packs.get(strike.pack))||void 0===_d?void 0:_d.getDocuments(queryObject)))||void 0===_e?void 0:_e[0];if(!(weapon instanceof _item_1.WeaponPF2e)){this.failValidation("Failed to retrieve queried weapon");break}const resolved={label:weapon.name,img:weapon.img,ability:weapon.isRanged||weapon.traits.has("finesse")?"dex":"str",category:weapon.category,group:weapon.group,baseType:weapon.baseType,traits:deepClone(weapon.system.traits.value),modifier:strike.modifier,damage:deepClone(weapon.system.damage),ownIfHigher:strike.ownIfHigher};value.strikes[slug]=resolved}var maybeQuery}}exports.BattleFormRuleElement=BattleFormRuleElement,BattleFormRuleElement.validActorTypes=["character"],BattleFormRuleElement.defaultIcons=["antler","beak","body","bone-shard","branch","claw","cube-face","fangs","fire-mote","fist","foot","foreleg","gust","horn","jaws","lighting-lash","mandibles","piercing-hymn","pincer","pseudopod","rock","spikes","stinger","tail","talon","tendril","tentacle","tongue","trunk","tusk","vine","water-spout","wave","wing"].reduce(((accumulated,strike)=>({...accumulated,[strike]:`systems/pf2e/icons/unarmed-attacks/${strike}.webp`})),{})},1080:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.ChoiceSetPrompt=void 0;const _item_1=__webpack_require__(10843),pick_a_thing_prompt_1=__webpack_require__(54046),_util_1=__webpack_require__(6945);class ChoiceSetPrompt extends pick_a_thing_prompt_1.PickAThingPrompt{constructor(data){var _a;super(data),this.prompt=data.prompt,this.choices=null!==(_a=data.choices)&&void 0!==_a?_a:[],this.allowedDrops=data.allowedDrops,this.containsUUIDs=data.containsUUIDs}static get defaultOptions(){return{...super.defaultOptions,classes:["choice-set-prompt"],dragDrop:[{dropSelector:".drop-zone"}]}}get template(){return"systems/pf2e/templates/system/rules-elements/choice-set-prompt.html"}async getData(options={}){return{...await super.getData(options),prompt:this.prompt,containsUUIDs:this.containsUUIDs,allowNoSelection:this.allowNoSelection,selectMenu:this.choices.length>9}}getChoices(){return this.choices}activateListeners($html){super.activateListeners($html),$html.find("button[data-action=close]").on("click",(()=>{this.close()})),$html.find("i.fas").tooltipster({theme:"crb-hover"})}async resolveSelection(){const firstChoice=this.choices.at(0);return!this.containsUUIDs&&firstChoice&&1===this.choices.length?this.selection=firstChoice:0!==this.choices.length||this.containsUUIDs?super.resolveSelection():(await this.close({force:!0}),null)}async _onDrop(event){var _a,_b;event.preventDefault();const dataString=null===(_a=event.dataTransfer)||void 0===_a?void 0:_a.getData("text/plain"),dropData=JSON.parse(null!=dataString?dataString:"");if("Item"!==(null==dropData?void 0:dropData.type))return void ui.notifications.error("Only an item can be dropped here.");const droppedItem=await _item_1.ItemPF2e.fromDropData(dropData);if(!droppedItem)throw(0,_util_1.ErrorPF2e)("Unexpected error resolving drop");if(!this.allowedDrops.predicate.test(droppedItem.getRollOptions("item")))return void ui.notifications.error(game.i18n.format("PF2E.Item.ABC.InvalidDrop",{badType:droppedItem.name,goodType:game.i18n.localize(null!==(_b=this.allowedDrops.label)&&void 0!==_b?_b:"")}));const newChoice={value:droppedItem.uuid,label:droppedItem.name},choicesLength=this.choices.push(newChoice),prompt=document.querySelector(`#${this.id}`),dropZone=null==prompt?void 0:prompt.querySelector(".drop-zone");if(!prompt)throw(0,_util_1.ErrorPF2e)("Unexpected error retrieving ChoiceSet dialog");if(prompt.style.height="unset",this.selectMenu){const{whitelist}=this.selectMenu.settings,menuChoice={value:String(choicesLength-1),label:newChoice.label};null==whitelist||whitelist.push(menuChoice.value),this.selectMenu.setPersistedData(whitelist,"whitelist"),this.selectMenu.addTags([menuChoice],!0,!0),this.selectMenu.setReadonly(!0),null==dropZone||dropZone.remove()}else{const $newButton=$("<button>").attr({type:"button"}).addClass("with-image").val(choicesLength-1).append($("<img>").attr({src:droppedItem.img}),$("<span>").text(droppedItem.name));$newButton.on("click",(event=>{var _a;this.selection=null!==(_a=this.getSelection(event.originalEvent))&&void 0!==_a?_a:null,this.close()})),dropZone&&$(dropZone).replaceWith($newButton)}}_canDragDrop(){return this.actor.isOwner}}exports.ChoiceSetPrompt=ChoiceSetPrompt},47383:function(__unused_webpack_module,exports,__webpack_require__){var _ChoiceSetRuleElement_instances,_ChoiceSetRuleElement_setRollOption,__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.ChoiceSetRuleElement=void 0;const __1=__webpack_require__(36244),_item_1=__webpack_require__(10843),predication_1=__webpack_require__(538),_util_1=__webpack_require__(6945),from_uuids_1=__webpack_require__(16539),prompt_1=__webpack_require__(1080);class ChoiceSetRuleElement extends __1.RuleElementPF2e{constructor(data,item,options){var _a,_b;super(data,item,options),_ChoiceSetRuleElement_instances.add(this),this.setDefaultFlag(this.data),this.prompt="string"==typeof data.prompt?data.prompt:"PF2E.UI.RuleElements.ChoiceSet.Prompt",this.adjustName=!(null!==(_a=data.adjustName)&&void 0!==_a&&!_a),this.recordSlug=!!data.recordSlug,this.allowedDrops=(0,_util_1.isObject)(data.allowedDrops)?{label:"string"==typeof data.allowedDrops.label?data.allowedDrops.label:null,predicate:new predication_1.PredicatePF2e(Array.isArray(data.allowedDrops.predicate)?data.allowedDrops.predicate:[])}:{label:null,predicate:new predication_1.PredicatePF2e},this.allowNoSelection=!!data.allowNoSelection,this.rollOption="string"==typeof data.rollOption&&data.rollOption?data.rollOption:null,(0,_util_1.isObject)(this.data.choices)&&"predicate"in this.data.choices&&(this.data.choices.predicate=new predication_1.PredicatePF2e(null!==(_b=this.data.choices.predicate)&&void 0!==_b?_b:[]));const{selection}=this.data;if("string"==typeof this.data.flag&&("string"==typeof selection||"number"==typeof selection||(0,_util_1.isObject)(selection)))item.flags.pf2e.rulesSelections[this.data.flag]=selection,__classPrivateFieldGet(this,_ChoiceSetRuleElement_instances,"m",_ChoiceSetRuleElement_setRollOption).call(this,selection.toString());else if(!this.allowNoSelection){this.ignored=!0;for(const ruleData of this.item.system.rules)ruleData.ignored=!0}}async preCreate({ruleSource}){var _a,_b,_c;const rollOptions=[this.actor.getRollOptions(),this.item.getRollOptions("item")].flat();if(!this.resolveInjectedProperties(this.predicate).test(rollOptions))return;if((0,_util_1.isObject)(this.data.choices)){const choices=this.data.choices;if("ownedItems"in choices&&choices.ownedItems&&!(null===(_a=choices.types)||void 0===_a?void 0:_a.length))return console.warn("PF2E System | Failure during ChoiceSet preCreate, types is required if ownedItems is set"),void(ruleSource.ignored=!0)}this.setDefaultFlag(ruleSource);const selection=null!==(_b=this.getPreselection())&&void 0!==_b?_b:await new prompt_1.ChoiceSetPrompt({prompt:this.prompt,item:this.item,title:this.label,choices:(await this.inflateChoices()).filter((c=>!c.predicate||c.predicate.test(rollOptions))),containsUUIDs:this.data.containsUUIDs,allowedDrops:this.allowedDrops,allowNoSelection:this.allowNoSelection}).resolveSelection();if(selection){if(ruleSource.selection=await(async()=>{var _a;if((0,from_uuids_1.isItemUUID)(selection.value)&&this.recordSlug){const item=await fromUuid(selection.value);return item instanceof _item_1.ItemPF2e?null!==(_a=item.slug)&&void 0!==_a?_a:(0,_util_1.sluggify)(item.name):null}return selection.value})(),this.adjustName){const effectName=this.item._source.name,label=game.i18n.localize(selection.label),name=`${effectName} (${label})`,pattern=(()=>{const escaped=RegExp.escape(label);return new RegExp(`\\(${escaped}\\) \\(${escaped}\\)$`)})();this.item._source.name=name.replace(pattern,`(${label})`)}this.item.flags.pf2e.rulesSelections[this.data.flag]=selection.value,__classPrivateFieldGet(this,_ChoiceSetRuleElement_instances,"m",_ChoiceSetRuleElement_setRollOption).call(this,String(ruleSource.selection));for(const rule of this.item.rules)rule.ignored=!1,null===(_c=rule.onApplyActiveEffects)||void 0===_c||_c.call(rule)}else ruleSource.ignored=!0}setDefaultFlag(source=this.data){var _a,_b;null!==(_a=source.flag)&&void 0!==_a||(source.flag=(0,_util_1.sluggify)(null!==(_b=this.item.slug)&&void 0!==_b?_b:this.item.name,{camel:"dromedary"}))}async inflateChoices(){var _a,_b,_c,_d;const choices=Array.isArray(this.data.choices)?this.data.choices:(0,_util_1.isObject)(this.data.choices)?this.data.choices.ownedItems?this.choicesFromOwnedItems(this.data.choices):this.data.choices.unarmedAttacks?this.choicesFromUnarmedAttacks(this.data.choices.predicate):"query"in this.data.choices&&"string"==typeof this.data.choices.query?await this.queryCompendium(this.data.choices):[]:"string"==typeof this.data.choices?this.choicesFromPath(this.data.choices):[];if(choices.every((c=>(0,from_uuids_1.isItemUUID)(c.value)))){const itemChoices=await(0,from_uuids_1.fromUUIDs)(choices.map((c=>c.value)));for(let i=0;i<choices.length;i++){const item=itemChoices[i];item instanceof _item_1.ItemPF2e&&(null!==(_a=(_c=choices[i]).label)&&void 0!==_a||(_c.label=item.name),null!==(_b=(_d=choices[i]).img)&&void 0!==_b||(_d.img=item.img))}this.data.containsUUIDs=!0}else this.data.containsUUIDs=!1;try{const choiceData=choices.map((c=>({value:c.value,label:game.i18n.localize(c.label),img:c.img,predicate:c.predicate?new predication_1.PredicatePF2e(c.predicate):void 0})));return Array.isArray(this.data.choices)||choiceData.sort(((a,b)=>a.label.localeCompare(b.label))),choiceData}catch(_e){return[]}}choicesFromPath(path){var _a,_b;const choiceObject=null!==(_b=null!==(_a=getProperty(CONFIG.PF2E,path))&&void 0!==_a?_a:getProperty(this.actor,path))&&void 0!==_b?_b:{};return Array.isArray(choiceObject)&&choiceObject.every((c=>(0,_util_1.isObject)(c)&&"string"==typeof c.value))?choiceObject:(0,_util_1.isObject)(choiceObject)&&Object.values(choiceObject).every((c=>"string"==typeof c))?Object.entries(choiceObject).map((([value,label])=>({value,label:String(label)}))):[]}choicesFromOwnedItems(options){var _a;const predicate=null!==(_a=options.predicate)&&void 0!==_a?_a:new predication_1.PredicatePF2e,{includeHandwraps,types}=options,choices=this.actor.items.filter((i=>i.isOfType(...types)&&predicate.test(i.getRollOptions("item")))).filter((i=>!i.isOfType("weapon")||"unarmed"!==i.category)).map((i=>({img:i.img,label:i.name,value:i.id})));return includeHandwraps&&choices.push(...this.actor.itemTypes.weapon.filter((i=>"handwraps-of-mighty-blows"===i.slug)).map((h=>({img:h.img,label:h.name,value:"unarmed"})))),choices}choicesFromUnarmedAttacks(predicate=new predication_1.PredicatePF2e){return this.actor.isOfType("character")?this.actor.system.actions.filter((a=>a.item.isOfType("weapon")&&"unarmed"===a.item.category&&predicate.test(a.item.getRollOptions("item")))).map((a=>{var _a;return{img:a.item.img,label:a.item.name,value:null!==(_a=a.item.slug)&&void 0!==_a?_a:(0,_util_1.sluggify)(a.item.name)}})):[]}async queryCompendium(choices){var _a,_b,_c,_d;const pack=game.packs.get(null!==(_a=choices.pack)&&void 0!==_a?_a:"pf2e.feats-srd");choices.postFilter&&(choices.postFilter=new predication_1.PredicatePF2e(choices.postFilter));try{const resolveProperties=obj=>{for(const[key,value]of Object.entries(obj))"string"==typeof value?obj[key]=this.resolveInjectedProperties(value):Array.isArray(value)?obj[key]=value.map((e=>"string"==typeof e?this.resolveInjectedProperties(e):(0,_util_1.isObject)(e)?resolveProperties(e):e)):(0,_util_1.isObject)(value)&&(obj[key]=resolveProperties(value));return obj},itemType=(0,_util_1.objectHasKey)(CONFIG.PF2E.Item.documentClasses,choices.itemType)?choices.itemType:"feat",query={...resolveProperties(JSON.parse(choices.query)),type:itemType},items=null!==(_b=await(null==pack?void 0:pack.getDocuments(query)))&&void 0!==_b?_b:[];if(!items.every((i=>i instanceof _item_1.ItemPF2e)))return[];const actorRollOptions=this.actor.getRollOptions(),filtered=choices.postFilter?items.filter((i=>choices.postFilter.test([...actorRollOptions,...i.getRollOptions("item")]))):items,existing=new Map;for(const feat of this.actor.itemTypes.feat){const slug=null!==(_c=feat.slug)&&void 0!==_c?_c:(0,_util_1.sluggify)(feat.name);existing.set(slug,(null!==(_d=existing.get(slug))&&void 0!==_d?_d:0)+1)}return filtered.filter((i=>{var _a,_b;return!(i instanceof _item_1.FeatPF2e)||(null!==(_b=existing.get(null!==(_a=i.slug)&&void 0!==_a?_a:(0,_util_1.sluggify)(i.name)))&&void 0!==_b?_b:0)<i.maxTakeable})).map((f=>({value:f.uuid,label:f.name,img:f.img})))}catch(error){return console.warn(`Error thrown (${error}) while attempting NeDB query`),[]}}getPreselection(){const{selection}=this.data,choice=Array.isArray(this.data.choices)?this.data.choices.find((c=>c.value===selection)):null;return null!=choice?choice:null}}exports.ChoiceSetRuleElement=ChoiceSetRuleElement,_ChoiceSetRuleElement_instances=new WeakSet,_ChoiceSetRuleElement_setRollOption=function(selection){this.rollOption&&(this.actor.rollOptions.all[`${this.rollOption}:${selection}`]=!0)}},72576:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.CraftingEntryRuleElement=void 0;const __1=__webpack_require__(36244),_util_1=__webpack_require__(6945),predication_1=__webpack_require__(538);class CraftingEntryRuleElement extends __1.RuleElementPF2e{constructor(data,item,options){super(data,item,options),this.data.priority=19,this.name=String(data.name||this.data.label),data.selector&&"string"==typeof data.selector?this.selector=data.selector:(this.failValidation("Required selector not found"),this.selector="")}beforePrepareData(){var _a;if(this.ignored)return;const selector=this.resolveInjectedProperties(this.selector),craftableItems=new predication_1.PredicatePF2e(null!==(_a=this.data.craftableItems)&&void 0!==_a?_a:[]);craftableItems.isValid||this.failValidation("Malformed craftableItems predicate"),this.actor.system.crafting.entries[this.selector]={selector,name:this.name,isAlchemical:this.data.isAlchemical,isDailyPrep:this.data.isDailyPrep,isPrepared:this.data.isPrepared,craftableItems,maxItemLevel:this.data.maxItemLevel,maxSlots:this.data.maxSlots,parentItem:this.item.id,preparedFormulaData:this.data.preparedFormulas};const option=(0,_util_1.sluggify)(this.selector);this.actor.rollOptions.all[`crafting:entry:${option}`]=!0}}exports.CraftingEntryRuleElement=CraftingEntryRuleElement,CraftingEntryRuleElement.validActorTypes=["character"]},39073:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.CraftingFormulaRuleElement=void 0;const __1=__webpack_require__(36244);class CraftingFormulaRuleElement extends __1.RuleElementPF2e{constructor(data,item,options){super(data,item,options),"string"==typeof data.uuid&&/^(?:Compendium|Item)\..*[a-z0-9]{16}$/i.test(data.uuid)||this.failValidation(`Crafting formula rule element on ${item.name} (${item.uuid}) has a malformed UUID`)}beforePrepareData(){this.ignored||this.actor.system.crafting.formulas.find((f=>f.uuid===this.data.uuid))||this.actor.system.crafting.formulas.push({uuid:this.data.uuid})}}exports.CraftingFormulaRuleElement=CraftingFormulaRuleElement,CraftingFormulaRuleElement.validActorTypes=["character"]},97717:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.CreatureSizeRuleElement=void 0;const size_1=__webpack_require__(43270),_item_1=__webpack_require__(10843),data_1=__webpack_require__(52769),_util_1=__webpack_require__(6945),_1=__webpack_require__(36244);class CreatureSizeRuleElement extends _1.RuleElementPF2e{constructor(data,item,options){super(data,item,options),this.resizeEquipment=!!data.resizeEquipment}incrementSize(size,amount){return 0===amount?size:this.incrementSize(CreatureSizeRuleElement.incrementMap[size],amount-1)}decrementSize(size,amount){return 0===amount?size:this.decrementSize(CreatureSizeRuleElement.decrementMap[size],amount-1)}beforePrepareData(){var _a;if(!this.test())return;const value=this.resolveValue();if("string"!=typeof value&&"number"!=typeof value)return void this.failValidation(`CreatureSize Rule Element on actor ${this.actor.id} (${this.actor.name})`,"has a non-string, non-numeric value");const size=null!==(_a=CreatureSizeRuleElement.wordToAbbreviation[value])&&void 0!==_a?_a:value;if("string"==typeof size&&!(0,_util_1.tupleHasValue)(data_1.SIZES,size))return void this.failValidation(`"${size}" is not a recognized size`);const originalSize=new size_1.ActorSizePF2e({value:this.actor.size});if(1===value){if(this.data.maximumSize&&!originalSize.isSmallerThan(this.data.maximumSize))return;this.actor.system.traits.size.increment()}else if(-1===value){if(this.data.minimumSize&&!originalSize.isLargerThan(this.data.minimumSize))return;this.actor.system.traits.size.decrement()}else{if(!(0,_util_1.tupleHasValue)(data_1.SIZES,size)){const validValues=Array.from(new Set(Object.entries(CreatureSizeRuleElement.wordToAbbreviation).flat())).join('", "');return void this.failValidation(`CreatureSize Rule Element on actor ${this.actor.id} (${this.actor.name})`,`has an invalid value: must be one of "${validValues}", +1, or -1`)}this.actor.system.traits.size=new size_1.ActorSizePF2e({value:size})}if(this.resizeEquipment){const sizeDifference=originalSize.difference(this.actor.system.traits.size);for(const item of this.actor.inventory.filter((i=>!(i instanceof _item_1.TreasurePF2e&&i.isCoinage))))sizeDifference<0?item.system.size=this.incrementSize(item.size,Math.abs(sizeDifference)):sizeDifference>0&&(item.system.size=this.decrementSize(item.size,Math.abs(sizeDifference)))}}}exports.CreatureSizeRuleElement=CreatureSizeRuleElement,CreatureSizeRuleElement.validActorTypes=["character","npc","familiar"],CreatureSizeRuleElement.wordToAbbreviation={tiny:"tiny",small:"sm",medium:"med",large:"lg",huge:"huge",gargantuan:"grg"},CreatureSizeRuleElement.incrementMap={tiny:"sm",sm:"med",med:"lg",lg:"huge",huge:"grg",grg:"grg"},CreatureSizeRuleElement.decrementMap={tiny:"tiny",sm:"tiny",med:"sm",lg:"med",huge:"lg",grg:"huge"}},30596:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.CritSpecRuleElement=void 0;const notes_1=__webpack_require__(46379),predication_1=__webpack_require__(538),_1=__webpack_require__(36244);class CritSpecRuleElement extends _1.RuleElementPF2e{constructor(data,item,options){var _a,_b,_c;null!==(_a=data.predicate)&&void 0!==_a||(data.predicate=[]),super(data,item,options),null!==(_b=data.text)&&void 0!==_b||(data.text=null),null!==(_c=data.alternate)&&void 0!==_c||(data.alternate=!1),this.isValid(data)?(this.alternate=data.alternate,this.text=data.text):(this.alternate=!1,this.text=null)}isValid(data){const validations={predicate:predication_1.PredicatePF2e.isValid(data.predicate),alternate:"boolean"==typeof data.alternate,text:null===data.text||"string"==typeof data.text&&data.text.trim().length>0},properties=["predicate","alternate","text"];for(const property of properties)validations[property]||this.failValidation(`${property} is invalid.`);return data.alternate&&!data.text?(this.failValidation("An alternate critical specialization must include substitute text"),!1):properties.every((p=>validations[p]))}beforePrepareData(){if(this.ignored)return;this.actor.synthetics.criticalSpecalizations[this.alternate?"alternate":"standard"].push(((weapon,options)=>{if(!this.resolveInjectedProperties(this.predicate).test(options))return null;const text=this.text?this.resolveInjectedProperties(this.text.trim()):null;return weapon.group||text?new notes_1.RollNotePF2e({selector:"strike-damage",title:"PF2E.Actor.Creature.CriticalSpecialization",text:null!=text?text:`PF2E.Item.Weapon.CriticalSpecialization.${weapon.group}`,outcome:["criticalSuccess"]}):null}))}}exports.CritSpecRuleElement=CritSpecRuleElement,CritSpecRuleElement.validActorTypes=["character"]},71341:function(__unused_webpack_module,exports,__webpack_require__){var _DamageDiceRuleElement_instances,_DamageDiceRuleElement_isValidOverride,_DamageDiceRuleElement_resolvedBracketsIsValid,__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.DamageDiceRuleElement=void 0;const modifiers_1=__webpack_require__(92823),values_1=__webpack_require__(6089),_util_1=__webpack_require__(6945),_1=__webpack_require__(36244);class DamageDiceRuleElement extends _1.RuleElementPF2e{constructor(data,item){var _a,_b,_c,_d,_e;super(data,item),_DamageDiceRuleElement_instances.add(this),"string"==typeof data.selector&&data.selector.length>0?this.selector=data.selector:(this.failValidation("Missing selector property"),this.selector=""),this.slug=(0,_util_1.sluggify)("string"==typeof data.slug&&data.slug.length>0?data.slug:this.item.name),"string"==typeof data.diceNumber||"number"==typeof data.diceNumber?this.diceNumber=data.diceNumber:"diceNumber"in data&&this.failValidation("diceNumber must be a string, number, or omitted"),null!==(_a=this.diceNumber)&&void 0!==_a||(this.diceNumber=0),(0,_util_1.setHasElement)(values_1.DAMAGE_DIE_FACES,data.dieSize)?this.dieSize=data.dieSize:"dieSize"in data&&this.failValidation("dieSize must be a string or omitted"),null!==(_b=this.dieSize)&&void 0!==_b||(this.dieSize=null),"string"==typeof data.damageType?this.damageType=data.damageType:"damageType"in data&&this.failValidation("damageType must be a string or omitted"),null!==(_c=this.damageType)&&void 0!==_c||(this.damageType=null),this.critical="boolean"==typeof data.critical?data.critical:null;const category=null!==(_d=data.category)&&void 0!==_d?_d:data.damageCategory;this.precision="precision"===category,category&&"precision"!==category&&this.failValidation('category must be "precision" or omitted'),this.brackets=this.isBracketedValue(data.value)?data.value:null,__classPrivateFieldGet(this,_DamageDiceRuleElement_instances,"m",_DamageDiceRuleElement_isValidOverride).call(this,data.override)?this.override=null!==(_e=data.override)&&void 0!==_e?_e:null:(this.failValidation("The override property must be an object with one property of `upgrade` (boolean),","`downgrade (boolean)`, `dieSize` (d6-d12), or `damageType` (recognized damage type)"),this.override=null)}beforePrepareData(){var _a,_b;if(this.ignored)return;const selector=this.resolveInjectedProperties(this.selector);(null!==(_a=(_b=this.actor.synthetics.damageDice)[selector])&&void 0!==_a?_a:_b[selector]=[]).push(((params={})=>{var _a,_b,_c,_d;if(!this.test(null!==(_a=params.test)&&void 0!==_a?_a:this.actor.getRollOptions(["damage"])))return null;const label=this.label.replace(/^[^:]+:\s*|\s*\([^)]+\)$/g,""),diceNumber="string"==typeof this.diceNumber?Number(this.resolveValue(this.diceNumber))||0:this.diceNumber,resolvedBrackets=this.resolveValue(this.brackets,{});if(!__classPrivateFieldGet(this,_DamageDiceRuleElement_instances,"m",_DamageDiceRuleElement_resolvedBracketsIsValid).call(this,resolvedBrackets))return this.failValidation("Brackets failed to validate"),null;const damageType=this.resolveInjectedProperties(this.damageType);if(this.override){if((_c=this.override).damageType&&(_c.damageType=this.resolveInjectedProperties(this.override.damageType)),"damageType"in this.override&&!(0,_util_1.setHasElement)(values_1.DAMAGE_TYPES,this.override.damageType))return this.failValidation("Unrecognized damage type in override"),null;if((_d=this.override).dieSize&&(_d.dieSize=this.resolveInjectedProperties(this.override.dieSize)),"dieSize"in this.override&&!(0,_util_1.setHasElement)(values_1.DAMAGE_DIE_FACES,this.override.dieSize))return this.failValidation("Unrecognized die size in override"),null}return this.ignored?null:new modifiers_1.DamageDicePF2e({selector,slug:this.slug,label,dieSize:this.dieSize,diceNumber,critical:this.critical,category:this.precision?"precision":null,damageType,predicate:null!==(_b=this.predicate)&&void 0!==_b?_b:{},override:deepClone(this.override),...resolvedBrackets})}))}}exports.DamageDiceRuleElement=DamageDiceRuleElement,_DamageDiceRuleElement_instances=new WeakSet,_DamageDiceRuleElement_isValidOverride=function(override){return void 0===override||(0,_util_1.isObject)(override)&&("boolean"==typeof override.upgrade&&!("downgrade"in override)||"boolean"==typeof override.downgrade&&!("upgrade"in override)||"string"==typeof override.damageType||"string"==typeof override.dieSize||"number"==typeof override.diceNumber&&Number.isInteger(override.diceNumber)&&override.diceNumber>0&&override.diceNumber<=10)},_DamageDiceRuleElement_resolvedBracketsIsValid=function(value){if(!(0,_util_1.isObject)(value))return!1;const keysAreValid=Object.keys(value).every((k=>["diceNumber","dieSize","override"].includes(k))),diceNumberIsValid=!("diceNumber"in value)||"number"==typeof value.diceNumber,dieSizeIsValid=!("dieSize"in value)||(0,_util_1.setHasElement)(values_1.DAMAGE_DIE_FACES,value.dieSize),overrideIsValid=!("override"in value)||__classPrivateFieldGet(this,_DamageDiceRuleElement_instances,"m",_DamageDiceRuleElement_isValidOverride).call(this,value.override);return keysAreValid&&diceNumberIsValid&&dieSizeIsValid&&overrideIsValid}},22721:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0})},23614:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.DexterityModifierCapRuleElement=void 0;const _1=__webpack_require__(36244);class DexterityModifierCapRuleElement extends _1.RuleElementPF2e{beforePrepareData(){if(!this.test())return;const value=this.resolveValue(this.data.value);"number"==typeof value?this.actor.synthetics.dexterityModifierCaps.push({value,source:this.label}):console.warn("PF2E | Dexterity modifier cap requires at least a label field or item name, and a value")}}exports.DexterityModifierCapRuleElement=DexterityModifierCapRuleElement,DexterityModifierCapRuleElement.validActorTypes=["character","npc"]},18125:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.HealingRuleElement=void 0;const chat_message_1=__webpack_require__(40405),localize_1=__webpack_require__(41332),_util_1=__webpack_require__(6945),_1=__webpack_require__(36244);class FastHealingRuleElement extends _1.RuleElementPF2e{constructor(data,item,options){var _a;super(data,item,options),this.data.deactivatedBy=null!==(_a=data.deactivatedBy)&&void 0!==_a?_a:[];const type=this.resolveInjectedProperties(data.type)||"fast-healing";if(!(0,_util_1.tupleHasValue)(["fast-healing","regeneration"],type))return this.ignored=!0,void this.failValidation("FastHealing only supports fast-healing or regeneration types");this.data.type=type}get details(){if(this.data.details)return game.i18n.localize(this.data.details);if(this.data.deactivatedBy.length){const typesArr=this.data.deactivatedBy.map((type=>(0,_util_1.objectHasKey)(CONFIG.PF2E.weaknessTypes,type)?game.i18n.localize(CONFIG.PF2E.weaknessTypes[type]):type)),types=(0,_util_1.localizeList)(typesArr);return game.i18n.format("PF2E.Encounter.Broadcast.FastHealing.DeactivatedBy",{types})}return null}async onTurnStart(){if(!this.test())return;const value=this.resolveValue(this.data.value);if("number"!=typeof value)return this.failValidation("Healing requires a non-zero value field or a formula field");const roll=(await new Roll(`${value}`).evaluate({async:!0})).toJSON(),{FastHealingLabel,RegenerationLabel}=localize_1.LocalizePF2e.translations.PF2E.Encounter.Broadcast.FastHealing,preFlavor=game.i18n.localize("fast-healing"===this.data.type?FastHealingLabel:RegenerationLabel),details=this.details,flavor=`${preFlavor}${details?`<div data-visibility="owner">${details}</div>`:""}`,rollMode=this.actor.hasPlayerOwner?"publicroll":"gmroll",speaker=chat_message_1.ChatMessagePF2e.getSpeaker({actor:this.actor,token:this.token});chat_message_1.ChatMessagePF2e.create({flavor,speaker,type:CONST.CHAT_MESSAGE_TYPES.ROLL,roll},{rollMode})}}exports.HealingRuleElement=FastHealingRuleElement,FastHealingRuleElement.validActorTypes=["character","npc","familiar"]},71932:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.FixedProficiencyRuleElement=void 0;const modifiers_1=__webpack_require__(92823),values_1=__webpack_require__(8382),predication_1=__webpack_require__(538),_util_1=__webpack_require__(6945),_1=__webpack_require__(36244);class FixedProficiencyRuleElement extends _1.RuleElementPF2e{constructor(data,item,options){super(data,item,options),"string"==typeof data.selector?this.selector=data.selector:(this.failValidation("Missing string selector property"),this.selector=""),this.slug=(0,_util_1.sluggify)("string"==typeof data.slug?data.slug:this.label),this.ability=null===data.ability?null:(0,_util_1.setHasElement)(values_1.ABILITY_ABBREVIATIONS,data.ability)?data.ability:"ac"===data.selector?"dex":null}beforePrepareData(){var _a,_b,_c;const selector=this.resolveInjectedProperties(this.selector),proficiencyBonus=Number(this.resolveValue(this.data.value))||0,abilityModifier=this.ability?this.actor.system.abilities[this.ability].mod:0,modifier=new modifiers_1.ModifierPF2e({type:modifiers_1.MODIFIER_TYPE.PROFICIENCY,slug:null!==(_a=this.slug)&&void 0!==_a?_a:(0,_util_1.sluggify)(this.label),label:this.label,modifier:proficiencyBonus+abilityModifier});(null!==(_b=(_c=this.actor.synthetics.statisticsModifiers)[selector])&&void 0!==_b?_b:_c[selector]=[]).push((()=>modifier))}afterPrepareData(){var _a,_b;const selector=this.resolveInjectedProperties(this.selector),systemData=this.actor.system,proficiency=null!==(_b=null===(_a=values_1.SKILL_EXPANDED[selector])||void 0===_a?void 0:_a.shortform)&&void 0!==_b?_b:selector,statistic=(0,_util_1.setHasElement)(values_1.SKILL_ABBREVIATIONS,proficiency)?this.actor.skills[proficiency]:"ac"===proficiency?systemData.attributes.ac:null;if(statistic){const toIgnore=statistic.modifiers.filter((m=>"proficiency"===m.type&&m.slug!==this.slug));for(const modifier of toIgnore)modifier.predicate=new predication_1.PredicatePF2e(`overridden-by-${this.slug}`);if(statistic instanceof modifiers_1.StatisticModifier){const rollOptions=new Set(this.actor.getRollOptions(["ac",`${this.ability}-based`]));statistic.calculateTotal(rollOptions),statistic.value=10+statistic.totalModifier}}}}exports.FixedProficiencyRuleElement=FixedProficiencyRuleElement,FixedProficiencyRuleElement.validActorTypes=["character"]},74880:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.FlatModifierRuleElement=void 0;const modifiers_1=__webpack_require__(92823),values_1=__webpack_require__(8382),_item_1=__webpack_require__(10843),_util_1=__webpack_require__(6945),_1=__webpack_require__(36244);class FlatModifierRuleElement extends _1.RuleElementPF2e{constructor(data,item,options){var _a,_b,_c,_d;if(super(data,item,options),this.type=modifiers_1.MODIFIER_TYPE.UNTYPED,this.ability=null,null!==(_a=data.type)&&void 0!==_a||(data.type=modifiers_1.MODIFIER_TYPE.UNTYPED),this.hideIfDisabled=!!data.hideIfDisabled,(0,_util_1.setHasElement)(modifiers_1.MODIFIER_TYPES,data.type))this.type=data.type;else{const validTypes=Array.from(modifiers_1.MODIFIER_TYPES).join(", ");this.failValidation(`A flat modifier must have one of the following types: ${validTypes}`)}this.force=!!data.force,this.selectors="string"==typeof data.selector?[data.selector]:Array.isArray(data.selector)&&data.selector.every((s=>"string"==typeof s))?data.selector:[],this.fromEquipment=this.item instanceof _item_1.PhysicalItemPF2e||"item"===this.type&&!(null!==(_b=data.fromEquipment)&&void 0!==_b&&!_b),"ability"===this.type&&((0,_util_1.setHasElement)(values_1.ABILITY_ABBREVIATIONS,data.ability)?(this.ability=data.ability,this.data.label="string"==typeof data.label?data.label:CONFIG.PF2E.abilities[this.ability],null!==(_c=(_d=this.data).value)&&void 0!==_c||(_d.value=`@actor.abilities.${this.ability}.mod`)):this.failValidation('A flat modifier of type "ability" must also have an "ability" property with an ability abbreviation')),this.critical="boolean"==typeof data.critical&&this.selectors.some((s=>s.includes("damage")))?data.critical:null,this.force&&"untyped"===this.type&&this.failValidation("A forced bonus or penalty must have a type"),data.damageCategory&&"precision"!==data.damageCategory&&this.failValidation('category must be "precision" or omitted')}beforePrepareData(){var _a,_b,_c;if(this.ignored)return;const label=this.data.label.includes(":")?this.label.replace(/^[^:]+:\s*|\s*\([^)]+\)$/g,""):this.data.label,slug=null!==(_a=this.slug)&&void 0!==_a?_a:"ability"===this.type&&this.ability?this.ability:(0,_util_1.sluggify)(label),selectors=this.selectors.map((s=>this.resolveInjectedProperties(s))).filter((s=>!!s));if(0!==selectors.length&&this.data.value)for(const selector of selectors){const construct=(options={})=>{var _a,_b;const resolvedValue=Number(this.resolveValue(this.data.value,void 0,options))||0;if(this.ignored)return null;const finalValue=Math.clamped(resolvedValue,null!==(_a=this.data.min)&&void 0!==_a?_a:resolvedValue,null!==(_b=this.data.max)&&void 0!==_b?_b:resolvedValue);if(game.pf2e.variantRules.AutomaticBonusProgression.suppressRuleElement(this,finalValue))return null;const modifier=new modifiers_1.ModifierPF2e({slug,label,modifier:finalValue,type:this.type,ability:"ability"===this.type?this.ability:null,predicate:this.resolveInjectedProperties(this.predicate),force:this.force,damageType:this.resolveInjectedProperties(this.data.damageType)||void 0,damageCategory:this.data.damageCategory||void 0,critical:this.critical,hideIfDisabled:this.hideIfDisabled,source:this.item.uuid});return options.test&&modifier.test(options.test),modifier};(null!==(_b=(_c=this.actor.synthetics.statisticsModifiers)[selector])&&void 0!==_b?_b:_c[selector]=[]).push(construct)}else this.failValidation("Flat modifier requires selector and value properties")}}exports.FlatModifierRuleElement=FlatModifierRuleElement,FlatModifierRuleElement.validActorTypes=["character","familiar","npc"]},73855:function(__unused_webpack_module,exports,__webpack_require__){var _GrantItemRuleElement_instances,_GrantItemRuleElement_getOnDeleteActions,_GrantItemRuleElement_applyChoiceSelections,_GrantItemRuleElement_setGrantFlags,__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.GrantItemRuleElement=void 0;const _item_1=__webpack_require__(10843),migration_1=__webpack_require__(63051),_util_1=__webpack_require__(6945),__1=__webpack_require__(36244),rule_element_1=__webpack_require__(47383);class GrantItemRuleElement extends __1.RuleElementPF2e{constructor(data,item,options){var _a;super(data,item,options),_GrantItemRuleElement_instances.add(this),this.uuid=String(data.uuid),this.replaceSelf=!!data.replaceSelf,this.reevaluateOnUpdate=!!data.reevaluateOnUpdate,this.allowDuplicate=!(null!==(_a=data.allowDuplicate)&&void 0!==_a&&!_a),this.onDeleteActions=__classPrivateFieldGet(this,_GrantItemRuleElement_instances,"m",_GrantItemRuleElement_getOnDeleteActions).call(this,data),this.grantedId="string"==typeof data.grantedId&&16===data.grantedId.length?data.grantedId:null;var p;this.preselectChoices=(0,_util_1.isObject)(data.preselectChoices)&&(p=data.preselectChoices,Object.values(p).every((v=>["string","number"].includes(typeof v))))?deepClone(data.preselectChoices):{},this.flag="string"==typeof data.flag&&data.flag.length>0?(0,_util_1.sluggify)(data.flag,{camel:"dromedary"}):(0,_util_1.sluggify)(item.name,{camel:"dromedary"})}async preCreate(args){var _a,_b,_c,_d,_e,_f,_g;if(!this.test())return;const{itemSource,pendingItems,context}=args,ruleSource=args.ruleSource,uuid=this.resolveInjectedProperties(this.uuid),grantedItem=await(async()=>{var _a,_b;try{return null!==(_b=null===(_a=await fromUuid(uuid))||void 0===_a?void 0:_a.clone())&&void 0!==_b?_b:null}catch(error){return console.error(error),null}})();if(!(grantedItem instanceof _item_1.ItemPF2e))return;const migrations=migration_1.MigrationList.constructFromVersion(grantedItem.schemaVersion);migrations.length>0&&await migration_1.MigrationRunner.ensureSchemaVersion(grantedItem,migrations);const existingItem=this.actor.items.find((i=>i.sourceId===uuid));if(!this.allowDuplicate&&existingItem)return this.replaceSelf&&pendingItems.splice(pendingItems.indexOf(itemSource),1),ruleSource.grantedId=existingItem.id,__classPrivateFieldGet(this,_GrantItemRuleElement_instances,"m",_GrantItemRuleElement_setGrantFlags).call(this,itemSource,existingItem),ui.notifications.info(game.i18n.format("PF2E.UI.RuleElements.GrantItem.AlreadyHasItem",{actor:this.actor.name,item:grantedItem.name}));null!==(_a=itemSource._id)&&void 0!==_a||(itemSource._id=randomID());const grantedSource=grantedItem.toObject();grantedSource._id=ruleSource.grantedId=randomID(),this.flag=ruleSource.flag="string"==typeof ruleSource.flag&&ruleSource.flag.length>0?(0,_util_1.sluggify)(ruleSource.flag,{camel:"dromedary"}):(()=>{var _a,_b,_c;const defaultFlag=(0,_util_1.sluggify)(this.item.name,{camel:"dromedary"}),flagPattern=new RegExp(`^${defaultFlag}\\d*$`),itemGrants=null!==(_c=null===(_b=null===(_a=itemSource.flags)||void 0===_a?void 0:_a.pf2e)||void 0===_b?void 0:_b.itemGrants)&&void 0!==_c?_c:{},nthGrant=Object.keys(itemGrants).filter((g=>flagPattern.test(g))).length;return nthGrant>0?`${defaultFlag}${nthGrant+1}`:defaultFlag})(),"effect"===itemSource.type&&"effect"===grantedSource.type&&(grantedSource.system.level.value=null!==(_d=null===(_c=null===(_b=itemSource.system)||void 0===_b?void 0:_b.level)||void 0===_c?void 0:_c.value)&&void 0!==_d?_d:grantedSource.system.level.value),grantedSource.flags=mergeObject(grantedSource.flags,{core:{sourceId:uuid}});const tempGranted=new _item_1.ItemPF2e(deepClone(grantedSource),{parent:this.actor});null===(_e=tempGranted.prepareActorData)||void 0===_e||_e.call(tempGranted);for(const rule of tempGranted.prepareRuleElements({suppressWarnings:!0}))null===(_f=rule.onApplyActiveEffects)||void 0===_f||_f.call(rule);__classPrivateFieldGet(this,_GrantItemRuleElement_instances,"m",_GrantItemRuleElement_applyChoiceSelections).call(this,tempGranted);for(const item of[this.item,tempGranted])if(item.isOfType("class","feat")){const prefix=item.isOfType("class")||!item.isFeature?item.type:"feature",slug=null!==(_g=item.slug)&&void 0!==_g?_g:(0,_util_1.sluggify)(item.name);this.actor.rollOptions.all[`self:${prefix}:${slug}`]=!0}if(this.replaceSelf)return pendingItems.findSplice((i=>i===itemSource),grantedSource),void await this.runGrantedItemPreCreates(args,tempGranted,grantedSource,context);context.keepId=!0,__classPrivateFieldGet(this,_GrantItemRuleElement_instances,"m",_GrantItemRuleElement_setGrantFlags).call(this,itemSource,grantedSource),args.reevaluation||await this.runGrantedItemPreCreates(args,tempGranted,grantedSource,context),pendingItems.push(grantedSource)}async preUpdateActor(){var _a,_b,_c;if(!this.reevaluateOnUpdate)return;if(this.grantedId)return;this.replaceSelf=!1;const itemSource=this.item.toObject(),ruleSource=itemSource.system.rules[null!==(_a=this.sourceIndex)&&void 0!==_a?_a:-1];if(!ruleSource)return;const pendingItems=[],context={parent:this.actor,render:!1};if(await this.preCreate({itemSource,pendingItems,ruleSource,context,reevaluation:!0}),pendingItems.length>0){const updatedGrants=null!==(_c=null===(_b=itemSource.flags.pf2e)||void 0===_b?void 0:_b.itemGrants)&&void 0!==_c?_c:{};await this.item.update({"system.rules":itemSource.system.rules,"flags.pf2e.itemGrants":updatedGrants},{render:!1}),await this.actor.createEmbeddedDocuments("Item",pendingItems,context)}}async runGrantedItemPreCreates(originalArgs,grantedItem,grantedSource,context){var _a;for(const rule of grantedItem.rules){const ruleSource=grantedSource.system.rules[grantedItem.rules.indexOf(rule)];await(null===(_a=rule.preCreate)||void 0===_a?void 0:_a.call(rule,{...originalArgs,itemSource:grantedSource,ruleSource,context}))}}}exports.GrantItemRuleElement=GrantItemRuleElement,_GrantItemRuleElement_instances=new WeakSet,_GrantItemRuleElement_getOnDeleteActions=function(data){const actions=data.onDeleteActions;if((0,_util_1.isObject)(actions)){const ACTIONS=GrantItemRuleElement.ON_DELETE_ACTIONS;return(0,_util_1.tupleHasValue)(ACTIONS,actions.granter)||(0,_util_1.tupleHasValue)(ACTIONS,actions.grantee)?(0,_util_1.pick)(actions,[actions.granter?"granter":[],actions.grantee?"grantee":[]].flat()):null}return null},_GrantItemRuleElement_applyChoiceSelections=function(grantedItem){var _a;const source=grantedItem._source;for(const[flag,selection]of Object.entries(null!==(_a=this.preselectChoices)&&void 0!==_a?_a:{})){const rule=grantedItem.rules.find((rule=>rule instanceof rule_element_1.ChoiceSetRuleElement&&rule.data.flag===flag));if(rule){const ruleSource=source.system.rules[grantedItem.rules.indexOf(rule)],resolvedSelection=this.resolveInjectedProperties(selection);rule.data.selection=ruleSource.selection=resolvedSelection}}},_GrantItemRuleElement_setGrantFlags=function(granter,grantee){var _a,_b,_c,_d,_e,_f;mergeObject(null!==(_a=granter.flags)&&void 0!==_a?_a:{},{pf2e:{itemGrants:{}}}).pf2e.itemGrants[this.flag]={id:grantee instanceof _item_1.ItemPF2e?grantee.id:grantee._id,onDelete:null!==(_c=null===(_b=this.onDeleteActions)||void 0===_b?void 0:_b.grantee)&&void 0!==_c?_c:"detach"};const grantedBy={id:granter._id,onDelete:(null!==(_e=null===(_d=this.onDeleteActions)||void 0===_d?void 0:_d.granter)&&void 0!==_e?_e:(0,_util_1.setHasElement)(_item_1.PHYSICAL_ITEM_TYPES,grantee.type))?"detach":"cascade"};grantee instanceof _item_1.ItemPF2e?grantee.update({"flags.pf2e.grantedBy":grantedBy},{render:!1}):grantee.flags=mergeObject(null!==(_f=grantee.flags)&&void 0!==_f?_f:{},{pf2e:{grantedBy}})},GrantItemRuleElement.validActorTypes=["character","npc","familiar"],GrantItemRuleElement.ON_DELETE_ACTIONS=["cascade","detach","restrict"]},69543:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.processGrantDeletions=void 0,exports.processGrantDeletions=async function processGrantDeletions(item,pendingItems){var _a,_b,_c,_d;const{actor}=item;for(const grant of Object.values(item.flags.pf2e.itemGrants)){const grantee=actor.items.get(grant.id);if((null===(_a=null==grantee?void 0:grantee.flags.pf2e.grantedBy)||void 0===_a?void 0:_a.id)===item.id)switch(grantee.flags.pf2e.grantedBy.onDelete){case"restrict":pendingItems.includes(grantee)||(ui.notifications.warn(game.i18n.format("PF2E.Item.RemovalPrevented",{item:item.name,preventer:grantee.name})),pendingItems.splice(pendingItems.indexOf(item),1));break;case"cascade":pendingItems.includes(grantee)||(pendingItems.push(grantee),await processGrantDeletions(grantee,pendingItems));break;default:await grantee.update({"flags.pf2e.-=grantedBy":null},{render:!1})}}const granter=actor.items.get(null!==(_c=null===(_b=item.flags.pf2e.grantedBy)||void 0===_b?void 0:_b.id)&&void 0!==_c?_c:""),grant=Object.values(null!==(_d=null==granter?void 0:granter.flags.pf2e.itemGrants)&&void 0!==_d?_d:{}).find((g=>g.id===item.id));if(granter&&grant)switch(grant.onDelete){case"restrict":pendingItems.includes(granter)||(ui.notifications.warn(game.i18n.format("PF2E.Item.RemovalPrevented",{item:item.name,preventer:granter.name})),pendingItems.splice(pendingItems.indexOf(item),1));break;case"cascade":pendingItems.includes(granter)||(pendingItems.push(granter),await processGrantDeletions(granter,pendingItems));break;default:{const itemGrants=Object.values(granter.flags.pf2e.itemGrants).filter((g=>g.id!==item.id));await granter.update({"flags.pf2e.itemGrants":itemGrants},{render:!1});break}}}},15492:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.GrantItemRuleElement=void 0;var base_1=__webpack_require__(73855);Object.defineProperty(exports,"GrantItemRuleElement",{enumerable:!0,get:function(){return base_1.GrantItemRuleElement}})},36244:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.BracketedValue=exports.RuleValue=exports.RuleElementData=exports.RuleElementSource=exports.RuleElementOptions=exports.RuleElementPF2e=void 0;var base_1=__webpack_require__(50852);Object.defineProperty(exports,"RuleElementPF2e",{enumerable:!0,get:function(){return base_1.RuleElementPF2e}}),Object.defineProperty(exports,"RuleElementOptions",{enumerable:!0,get:function(){return base_1.RuleElementOptions}});var data_1=__webpack_require__(22721);Object.defineProperty(exports,"RuleElementSource",{enumerable:!0,get:function(){return data_1.RuleElementSource}}),Object.defineProperty(exports,"RuleElementData",{enumerable:!0,get:function(){return data_1.RuleElementData}}),Object.defineProperty(exports,"RuleValue",{enumerable:!0,get:function(){return data_1.RuleValue}}),Object.defineProperty(exports,"BracketedValue",{enumerable:!0,get:function(){return data_1.BracketedValue}})},80884:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.IWRRuleElement=void 0;const __1=__webpack_require__(36244);class IWRRuleElement extends __1.RuleElementPF2e{constructor(data,item,options){super(data,item,options),this.type=Array.isArray(data.type)&&data.type.every((t=>"string"==typeof t))?[...data.type]:"string"==typeof data.type?[data.type]:[],0===this.type.length&&this.failValidation("type must be a string or array of strings")}validate(value){return this.type.every((t=>t in this.dictionary))&&("number"==typeof value&&Number.isInteger(value)&&value>0||"string"==typeof value)&&(!this.data.except||"string"==typeof this.data.except)}beforePrepareData(){if(!this.test())return;this.type=this.resolveInjectedProperties(this.type);const value=this.resolveValue();this.validate(value)?this.property.push(...this.getIWR(value)):this.ignored=!0}}exports.IWRRuleElement=IWRRuleElement},49865:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.ImmunityRuleElement=void 0;const base_1=__webpack_require__(80884);class ImmunityRuleElement extends base_1.IWRRuleElement{constructor(){super(...arguments),this.dictionary=CONFIG.PF2E.immunityTypes}get property(){return this.actor.system.traits.di.value}validate(){return this.type.every((t=>t in this.dictionary))}getIWR(){return this.type}}exports.ImmunityRuleElement=ImmunityRuleElement},47876:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.ResistanceRuleElement=void 0;const base_1=__webpack_require__(80884);class ResistanceRuleElement extends base_1.IWRRuleElement{constructor(){super(...arguments),this.dictionary=CONFIG.PF2E.resistanceTypes}get property(){return this.actor.system.traits.dr}getIWR(value){const resistances=this.property;for(const resistanceType of[...this.type]){const current=resistances.find((r=>r.type===resistanceType));current&&(this.data.override?resistances.splice(resistances.indexOf(current),1):(current.value=Math.max(current.value,value),this.type.splice(this.type.indexOf(resistanceType),1)))}return this.type.map((t=>({label:this.dictionary[t],type:t,value,exceptions:this.data.except?game.i18n.localize(this.data.except):void 0})))}}exports.ResistanceRuleElement=ResistanceRuleElement},68285:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.WeaknessRuleElement=void 0;const base_1=__webpack_require__(80884);class WeaknessRuleElement extends base_1.IWRRuleElement{constructor(){super(...arguments),this.dictionary=CONFIG.PF2E.weaknessTypes}get property(){return this.actor.system.traits.dv}getIWR(value){const weaknesses=this.property;for(const weaknessType of[...this.type]){const current=weaknesses.find((w=>w.type===weaknessType));current&&(this.data.override?weaknesses.splice(weaknesses.indexOf(current),1):(current.value=Math.max(current.value,value),this.type.splice(this.type.indexOf(weaknessType),1)))}return this.type.map((t=>({label:this.dictionary[t],type:t,value,exceptions:this.data.except?game.i18n.localize(this.data.except):void 0})))}}exports.WeaknessRuleElement=WeaknessRuleElement},3549:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.LoseHitPointsRuleElement=void 0;const _1=__webpack_require__(36244);class LoseHitPointsRuleElement extends _1.RuleElementPF2e{constructor(data,item,options){super(data,item,options);"number"==typeof data.value||"string"==typeof data.value||this.failValidation("Missing numeric or string value"),this.reevaluateOnUpdate=!!data.reevaluateOnUpdate}onCreate(actorUpdates){if(this.ignored)return;const value=Math.abs(Number(this.resolveValue())||0),currentHP=this.actor._source.system.attributes.hp.value;actorUpdates["system.attributes.hp.value"]=Math.max(currentHP-value,0)}async preUpdate(changes){if(!this.reevaluateOnUpdate||this.ignored)return;const previousValue=Math.abs(Number(this.resolveValue())||0),newItem=this.item.clone(changes),rule=newItem.system.rules.find((r=>r.key===this.key)),valueChange=Math.abs(Number(this.resolveValue(String(null==rule?void 0:rule.value),0,{resolvables:{item:newItem}})))-previousValue;if(valueChange>0){const currentHP=this.actor._source.system.attributes.hp.value;await this.actor.update({"system.attributes.hp.value":Math.max(currentHP-valueChange,0)},{render:!1})}}}exports.LoseHitPointsRuleElement=LoseHitPointsRuleElement,LoseHitPointsRuleElement.validActorTypes=["character","familiar","npc"]},43141:function(__unused_webpack_module,exports,__webpack_require__){var _MarkTargetPrompt_instances,_MarkTargetPrompt_target,_MarkTargetPrompt_resolve,_MarkTargetPrompt_cancelHandler,__classPrivateFieldSet=this&&this.__classPrivateFieldSet||function(receiver,state,value,kind,f){if("m"===kind)throw new TypeError("Private method is not writable");if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===kind?f.call(receiver,value):f?f.value=value:state.set(receiver,value),value},__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.MarkTargetPrompt=void 0;const canvas_1=__webpack_require__(85336);exports.MarkTargetPrompt=class MarkTargetPrompt{constructor(params){var _a;_MarkTargetPrompt_instances.add(this),_MarkTargetPrompt_target.set(this,void 0),_MarkTargetPrompt_resolve.set(this,void 0),this.prompt=null!==(_a=params.prompt)&&void 0!==_a?_a:"PF2E.UI.RuleElements.MarkTarget.TargetToken",this.requirements=params.requirements}async resolveTarget(){return game.user.targets.clear(),this.activateListeners(),ui.notifications.info(this.prompt,{localize:!0}),new Promise((resolve=>{__classPrivateFieldSet(this,_MarkTargetPrompt_resolve,resolve,"f")}))}activateListeners(){document.activeElement instanceof HTMLElement&&document.activeElement.blur();const hookParams=["targetToken",(_user,token,targeted)=>{var _a;__classPrivateFieldSet(this,_MarkTargetPrompt_target,targeted&&token instanceof canvas_1.TokenPF2e?token.document:null,"f"),null===(_a=__classPrivateFieldGet(this,_MarkTargetPrompt_resolve,"f"))||void 0===_a||_a.call(this,__classPrivateFieldGet(this,_MarkTargetPrompt_target,"f"))}];Hooks.once(...hookParams);const cancelHandler=__classPrivateFieldGet(this,_MarkTargetPrompt_instances,"m",_MarkTargetPrompt_cancelHandler).call(this,hookParams);document.addEventListener("keyup",cancelHandler),window.setTimeout((()=>{var _a;Hooks.off(...hookParams),document.removeEventListener("keyup",cancelHandler),void 0===__classPrivateFieldGet(this,_MarkTargetPrompt_target,"f")&&(null===(_a=__classPrivateFieldGet(this,_MarkTargetPrompt_resolve,"f"))||void 0===_a||_a.call(this,null))}),15e3)}},_MarkTargetPrompt_target=new WeakMap,_MarkTargetPrompt_resolve=new WeakMap,_MarkTargetPrompt_instances=new WeakSet,_MarkTargetPrompt_cancelHandler=function(hookParams){const handler=event=>{"Escape"===event.key&&(event.stopPropagation(),ui.notifications.info("PF2E.UI.RuleElements.MarkTarget.Timeout"),Hooks.off(...hookParams),document.removeEventListener("keyup",handler))};return handler}},94362:function(__unused_webpack_module,exports,__webpack_require__){var _MarkTokenRuleElement_instances,_MarkTokenRuleElement_checkRuleSource,__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.MarkTokenRuleElement=void 0;const _scene_1=__webpack_require__(12789),_util_1=__webpack_require__(6945),from_uuids_1=__webpack_require__(16539),__1=__webpack_require__(36244),prompt_1=__webpack_require__(43141);class MarkTokenRuleElement extends __1.RuleElementPF2e{constructor(data,item,options){super(data,item,options),_MarkTokenRuleElement_instances.add(this),"string"==typeof data.slug&&data.slug.length>0?this.slug=(0,_util_1.sluggify)(data.slug):(this.failValidation("slug must be a non-empty string"),this.slug=""),this.tokenUUID="string"==typeof data.tokenUUID?data.tokenUUID:null}async preCreate({ruleSource,itemSource,pendingItems}){var _a,_b;if(this.ignored)return;this.tokenUUID&&(this.tokenUUID=this.resolveInjectedProperties(this.tokenUUID));const token=null!==(_b=fromUuidSync(null!==(_a=this.tokenUUID)&&void 0!==_a?_a:""))&&void 0!==_b?_b:1===game.user.targets.size?Array.from(game.user.targets)[0].document:await new prompt_1.MarkTargetPrompt({prompt:null,requirements:null}).resolveTarget();token instanceof _scene_1.TokenDocumentPF2e?(__classPrivateFieldGet(this,_MarkTokenRuleElement_instances,"m",_MarkTokenRuleElement_checkRuleSource).call(this,ruleSource),this.tokenUUID=ruleSource.tokenUUID=token.uuid,itemSource.name=`${itemSource.name} (${token.name})`):pendingItems.splice(pendingItems.indexOf(itemSource),1)}beforePrepareData(){(0,from_uuids_1.isTokenUUID)(this.tokenUUID)&&this.test()&&this.actor.synthetics.targetMarks.set(this.tokenUUID,this.slug)}}exports.MarkTokenRuleElement=MarkTokenRuleElement,_MarkTokenRuleElement_instances=new WeakSet,_MarkTokenRuleElement_checkRuleSource=function(source){if("MarkToken"!==source.key||source.slug!==this.slug)throw(0,_util_1.ErrorPF2e)("Expected incorrect rule element passed")}},58580:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.MartialProficiencyRuleElement=void 0;const _1=__webpack_require__(36244),data_1=__webpack_require__(52769),predication_1=__webpack_require__(538);class MartialProficiencyRuleElement extends _1.RuleElementPF2e{constructor(data,item,options){var _a,_b;data.priority=9,data.immutable=Boolean(null===(_a=data.immutable)||void 0===_a||_a),null!==(_b=data.value)&&void 0!==_b||(data.value=1),super(data,item,options),this.definition=new predication_1.PredicatePF2e(Array.isArray(data.definition)?data.definition:[])}validateData(){const data=this.data;if("string"!=typeof data.slug&&this.failValidation("A martial proficiency must have a slug"),Array.isArray(data.definition)||this.failValidation("A martial proficiency must have a definition"),"sameAs"in data&&("string"==typeof data.sameAs&&data.sameAs in CONFIG.PF2E.weaponCategories||this.failValidation('The "sameAs" property is invalid')),"maxRank"in data){const validRanks=data_1.PROFICIENCY_RANKS.filter((rank=>"untrained"!==rank));"string"==typeof data.maxRank&&validRanks.includes(data.maxRank)||this.failValidation('The "maxRank" property is invalid')}}onApplyActiveEffects(){this.validateData(),this.test()&&(this.actor.system.martial[this.data.slug]=this.createValue())}createValue(){var _a;const rank=Math.clamped(Number(this.resolveValue()),1,4),proficiency={definition:this.resolveInjectedProperties(this.definition),immutable:null===(_a=this.data.immutable)||void 0===_a||_a,label:this.label,rank,value:0,breakdown:""};return this.data.sameAs&&(proficiency.sameAs=this.data.sameAs),this.data.maxRank&&(proficiency.maxRank=this.data.maxRank),proficiency}}exports.MartialProficiencyRuleElement=MartialProficiencyRuleElement,MartialProficiencyRuleElement.validActorTypes=["character"]},85322:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.MultipleAttackPenaltyRuleElement=void 0;const _1=__webpack_require__(36244);class MultipleAttackPenaltyRuleElement extends _1.RuleElementPF2e{constructor(data,item,options){super(data,item,options),"string"==typeof data.selector?this.selector=data.selector:(this.failValidation("Missing string selector property"),this.selector="")}beforePrepareData(){var _a,_b;if(this.ignored)return;const selector=this.resolveInjectedProperties(this.selector),label=this.resolveInjectedProperties(this.label),value=Number(this.resolveValue(this.data.value))||0;if(selector&&label&&value){const map={label,penalty:value,predicate:this.predicate};(null!==(_a=(_b=this.actor.synthetics.multipleAttackPenalties)[selector])&&void 0!==_a?_a:_b[selector]=[]).push(map)}else console.warn("PF2E | Multiple attack penalty requires at least a selector field and a non-empty value field")}}exports.MultipleAttackPenaltyRuleElement=MultipleAttackPenaltyRuleElement},20531:function(__unused_webpack_module,exports,__webpack_require__){var _RollNoteRuleElement_instances,_RollNoteRuleElement_isValid,__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.RollNoteRuleElement=void 0;const notes_1=__webpack_require__(46379),degree_of_success_1=__webpack_require__(54870),_util_1=__webpack_require__(6945),_1=__webpack_require__(36244);class RollNoteRuleElement extends _1.RuleElementPF2e{constructor(data,item,options){var _a,_b,_c;super(data,item,options),_RollNoteRuleElement_instances.add(this),null!==(_a=data.title)&&void 0!==_a||(data.title=null),null!==(_b=data.outcome)&&void 0!==_b||(data.outcome=[]),null!==(_c=data.visibility)&&void 0!==_c||(data.visibility=null),__classPrivateFieldGet(this,_RollNoteRuleElement_instances,"m",_RollNoteRuleElement_isValid).call(this,data)?(this.selector=data.selector,this.title=data.title,this.text=data.text,this.outcomes=data.outcome,this.visibility=data.visibility):(this.selector="",this.title=null,this.text="",this.outcomes=[],this.visibility=null)}beforePrepareData(){var _a,_b;if(this.ignored)return;const selector=this.resolveInjectedProperties(this.selector),title=this.title?this.resolveInjectedProperties(this.title):null,text=this.resolveInjectedProperties(String(this.resolveValue(this.text,"",{evaluate:!1})));if(selector&&text){const note=new notes_1.RollNotePF2e({selector,title,text,predicate:this.predicate,outcome:this.outcomes,visibility:this.visibility});(null!==(_a=(_b=this.actor.synthetics.rollNotes)[selector])&&void 0!==_a?_a:_b[selector]=[]).push(note)}else console.warn("PF2E | Roll note requires at least a selector field and a non-empty text field")}}exports.RollNoteRuleElement=RollNoteRuleElement,_RollNoteRuleElement_instances=new WeakSet,_RollNoteRuleElement_isValid=function(data){const textIsValidBracket=(0,_util_1.isObject)(data.text)&&Array.isArray(data.text.brackets),tests={title:null===data.title||"string"==typeof data.title&&data.title.length>0,text:textIsValidBracket||"string"==typeof data.text&&data.text.length>0,visibility:null===data.visibility||"string"==typeof data.visibility&&["owner","gm"].includes(data.visibility),outcome:Array.isArray(data.outcome)&&data.outcome.every((o=>(0,_util_1.tupleHasValue)(degree_of_success_1.DEGREE_OF_SUCCESS_STRINGS,o)))};for(const[property,result]of Object.entries(tests))result||this.failValidation(`"${property}" property is missing or invalid`);return Object.values(tests).every((t=>t))}},33767:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.RollOptionRuleElement=void 0;const predication_1=__webpack_require__(538),_util_1=__webpack_require__(6945),base_1=__webpack_require__(50852);class RollOptionRuleElement extends base_1.RuleElementPF2e{constructor(data,item,options){var _a,_b,_c;null!==(_a=data.priority)&&void 0!==_a||(data.priority=10*CONST.ACTIVE_EFFECT_MODES.OVERRIDE),super({...data,label:null!==(_b=data.label)&&void 0!==_b?_b:item.name},item,options),this.domain=String(data.domain).trim(),this.option=String(data.option).trim(),this.toggleable="totm"===data.toggleable?"totm":!!data.toggleable,this.value="string"==typeof data.value?data.value:!!(null!==(_c=data.value)&&void 0!==_c?_c:!this.toggleable),this.toggleable&&Array.isArray(data.disabledIf)&&(this.disabledIf=new predication_1.PredicatePF2e(...data.disabledIf),this.disabledValue=(null===data.disabledValue||"boolean"==typeof data.disabledValue)&&data.disabledValue),this.count=!!data.count,this.removeAfterRoll=this.item.isOfType("effect")&&!!data.removeAfterRoll,"string"==typeof data.domain&&/^[-a-z0-9]+$/.test(data.domain)&&/[a-z]/.test(data.domain)||this.failValidation('The "domain" property must be a string consisting of only lowercase letters, numbers, and hyphens.'),"value"in data&&!["boolean","string"].includes(typeof data.value)&&this.failValidation('The "value" property must be a boolean, string, or otherwise omitted.'),"toggleable"in data&&"boolean"!=typeof data.toggleable&&"totm"!==data.toggleable&&this.failValidation('The "togglable" property must be a boolean, the string "totm", or otherwise omitted.'),"disabledIf"in data&&(data.disabledIf instanceof Object?this.toggleable||this.failValidation('The "disabledIf" property may only be included if "toggeable" is true.'):this.failValidation('The "disabledIf" property must be a predicate.')),"disabledValue"in data&&("boolean"!=typeof data.disabledValue&&null!==data.disabledValue?this.failValidation('The "falseIfDisabled" property must be a boolean or null.'):this.toggleable&&data.disabledIf||this.failValidation('The "disabledValue" property may only be included if "toggeable" is true and','there is an "disabledIf" predicate.')),"count"in data&&(data.toggleable?this.failValidation('The "count" property may not be included if "toggleable" is true.'):"boolean"!=typeof data.count&&this.failValidation('The "count" property must be a boolean or otherwise omitted.'))}resolveOption(){return this.resolveInjectedProperties(this.option).replace(/[^-:\w]/g,"").replace(/:+/g,":").replace(/-+/g,"-").trim()}onApplyActiveEffects(){var _a,_b;if(!this.test(this.actor.getRollOptions([this.domain])))return;const{rollOptions}=this.actor,domainRecord=null!==(_a=rollOptions[_b=this.domain])&&void 0!==_a?_a:rollOptions[_b]={},option=this.resolveOption();if(option)if(this.count){const existing=Object.keys(domainRecord).flatMap((key=>{var _a;return{key,count:Number(null===(_a=new RegExp(`^${option}:(\\d+)$`).exec(key))||void 0===_a?void 0:_a[1])}})).find((keyAndCount=>!!keyAndCount.count));existing?(delete domainRecord[existing.key],domainRecord[`${option}:${existing.count+1}`]=!0):domainRecord[`${option}:1`]=!0}else{const value=this.resolveValue(this.value);value&&(domainRecord[option]=value);const label=this.label.includes(":")?this.label.replace(/^[^:]+:\s*|\s*\([^)]+\)$/g,""):this.label;if(!0===this.toggleable||"totm"===this.toggleable&&game.settings.get("pf2e","totmToggles")){const toggle={itemId:this.item.id,label,domain:this.domain,option,checked:value,enabled:!0};if(this.disabledIf){const rollOptions=this.actor.getRollOptions([this.domain]);toggle.enabled=!this.disabledIf.test(rollOptions),toggle.enabled||"boolean"!=typeof this.disabledValue||(toggle.checked=this.disabledValue,this.disabledValue||delete domainRecord[option])}this.actor.system.toggles.push(toggle)}}else this.failValidation('The "option" property must be a string consisting of only letters, numbers, colons, and hyphens')}resolveValue(value){return!("totm"===this.toggleable&&!game.settings.get("pf2e","totmToggles"))&&!!super.resolveValue(value)}static async toggleOption(_a){var _b,{domain,option,actor,itemId,value=!(null===(_b=actor.rollOptions[domain])||void 0===_b?void 0:_b[option])}=_a;if(domain=domain.replace(/[^-\w]/g,""),option=option.replace(/[^-:\w]/g,""),!itemId)return null;const item=actor.items.get(itemId,{strict:!0}),rules=item.toObject().system.rules,rule=rules.find((r=>"RollOption"===r.key&&(0,_util_1.tupleHasValue)([!0,"totm"],r.toggleable)&&r.domain===domain&&r.option===option&&r.value!==value));if(rule){rule.value=value;return 1===(await actor.updateEmbeddedDocuments("Item",[{_id:item.id,"system.rules":rules}])).length?value:null}return null}beforeRoll(domains,rollOptions){this.test(rollOptions)&&domains.includes(this.domain)&&(this.option=this.resolveOption(),this.value=!!this.resolveValue(this.value),this.value?rollOptions.add(this.option):rollOptions.delete(this.option))}async afterRoll({domains,rollOptions}){!this.ignored&&this.removeAfterRoll&&this.value&&this.actor.items.has(this.item.id)&&domains.includes(this.domain)&&rollOptions.has(this.option)&&(game.settings.get("pf2e","automation.removeExpiredEffects")?await this.item.delete():game.settings.get("pf2e","automation.effectExpiration")&&await this.item.update({"system.duration.value":-1,"system.expired":!0}))}}exports.RollOptionRuleElement=RollOptionRuleElement},34335:function(__unused_webpack_module,exports,__webpack_require__){var _RollTwiceRuleElement_instances,_RollTwiceRuleElement_isValid,__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.RollTwiceRuleElement=void 0;const base_1=__webpack_require__(50852);class RollTwiceRuleElement extends base_1.RuleElementPF2e{constructor(data,item,options){var _a;if(super(data,item,options),_RollTwiceRuleElement_instances.add(this),this.selector="",this.keep="higher",this.removeAfterRoll=this.item.isOfType("effect"),__classPrivateFieldGet(this,_RollTwiceRuleElement_instances,"m",_RollTwiceRuleElement_isValid).call(this,data)){this.selector=data.selector,this.keep=data.keep;const expireEffects=game.settings.get("pf2e","automation.effectExpiration"),removeExpired=game.settings.get("pf2e","automation.removeExpiredEffects");this.removeAfterRoll=!(!expireEffects&&!removeExpired||!item.isOfType("effect"))&&Boolean(null===(_a=data.removeAfterRoll)||void 0===_a||_a)}}beforePrepareData(){var _a,_b,_c;if(this.ignored)return;const synthetic={keep:this.keep};this.predicate&&(synthetic.predicate=this.predicate);(null!==(_a=(_b=this.actor.synthetics.rollTwice)[_c=this.selector])&&void 0!==_a?_a:_b[_c]=[]).push(synthetic)}async afterRoll({selectors,roll,rollOptions}){var _a;if(!this.actor.items.has(this.item.id))return;if(null!==(_a=null==roll?void 0:roll.dice.some((d=>["kh","kl"].some((m=>d.modifiers.includes(m))))))&&void 0!==_a&&_a&&this.removeAfterRoll&&selectors.includes(this.selector)&&this.test(rollOptions)){for(const rule of this.item.rules)rule.ignored=!0;game.settings.get("pf2e","automation.removeExpiredEffects")?await this.item.delete():game.settings.get("pf2e","automation.effectExpiration")&&await this.item.update({"system.duration.value":-1,"system.expired":!0})}}}exports.RollTwiceRuleElement=RollTwiceRuleElement,_RollTwiceRuleElement_instances=new WeakSet,_RollTwiceRuleElement_isValid=function(data){return"string"==typeof data.selector&&data.selector?!("string"!=typeof data.keep||!["higher","lower"].includes(data.keep))||(this.failValidation('A Roll Twice rule element requires a "keep" property of either "higher" or "lower"'),!1):(this.failValidation("A Roll Twice rule element requires selector"),!1)}},23885:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.SenseRuleElement=void 0;const _1=__webpack_require__(36244),sense_1=__webpack_require__(82280),_util_1=__webpack_require__(6945);class SenseRuleElement extends _1.RuleElementPF2e{constructor(data,item,options){var _a,_b,_c,_d,_e;null!==(_a=data.force)&&void 0!==_a||(data.force=!1),null!==(_b=data.range)&&void 0!==_b||(data.range=""),null!==(_c=data.acuity)&&void 0!==_c||(data.acuity="precise");const defaultLabels=CONFIG.PF2E.senses;null!==(_d=data.label)&&void 0!==_d||(data.label=defaultLabels[null!==(_e=String(data.selector))&&void 0!==_e?_e:""]),super(data,item,options),(0,_util_1.setHasElement)(sense_1.SENSE_TYPES,data.selector)?this.selector=data.selector:(this.failValidation("Missing or unrecognized string selector property"),this.selector="scent"),(0,_util_1.tupleHasValue)(sense_1.SENSE_ACUITIES,data.acuity)?this.acuity=data.acuity:(this.failValidation('Unrecognized acuity property: must be one of "precise", "imprecise", "vague", or omitted.'),this.acuity="vague")}beforePrepareData(){if(this.ignored)return;const range=this.resolveValue(this.data.range,"");if(this.selector){const newSense=new sense_1.CreatureSensePF2e({type:this.selector,acuity:this.acuity,value:String(range),source:this.item.name});this.actor.synthetics.senses.push({sense:newSense,predicate:this.predicate,force:this.data.force})}else this.failValidation("Sense requires at least a selector field and a label field or item name")}}exports.SenseRuleElement=SenseRuleElement,SenseRuleElement.validActorTypes=["character","familiar"]},3972:function(__unused_webpack_module,exports,__webpack_require__){var _StrikeRuleElement_instances,_StrikeRuleElement_isValidRange,__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.StrikeRuleElement=void 0;const _item_1=__webpack_require__(10843),values_1=__webpack_require__(16585),_util_1=__webpack_require__(6945),_1=__webpack_require__(36244);class StrikeRuleElement extends _1.RuleElementPF2e{constructor(data,item,options){var _a,_b,_c,_d,_e;super(data,item,options),_StrikeRuleElement_instances.add(this),this.category=(0,_util_1.setHasElement)(values_1.WEAPON_CATEGORIES,data.category)?data.category:"unarmed",this.group=(0,_util_1.setHasElement)(values_1.WEAPON_GROUPS,data.group)?data.group:"brawling",this.baseType=(0,_util_1.objectHasKey)(CONFIG.PF2E.baseWeaponTypes,data.baseType)?data.baseType:null,null!==(_a=(_e=this.data).traits)&&void 0!==_a||(_e.traits=[]),this.range=__classPrivateFieldGet(this,_StrikeRuleElement_instances,"m",_StrikeRuleElement_isValidRange).call(this,data.range)?{increment:data.range,max:__classPrivateFieldGet(this,_StrikeRuleElement_instances,"m",_StrikeRuleElement_isValidRange).call(this,data.maxRange)?data.maxRange:null}:null,this.data.replaceAll=!(null===(_b=this.data.replaceAll)||void 0===_b||!_b),this.data.replaceBasicUnarmed=!(null===(_c=this.data.replaceBasicUnarmed)||void 0===_c||!_c),null!==(_d=this.slug)&&void 0!==_d||(this.slug=(0,_util_1.sluggify)(this.label))}beforePrepareData(){var _a;if(0===this.predicate.length||(()=>{const rollOptions=new Set(this.actor.getRollOptions(["attack","attack-roll","strike-attack-roll"]));return this.resolveInjectedProperties(this.predicate).test(rollOptions)})()){const weapon=this.constructWeapon(),slug=null!==(_a=weapon.slug)&&void 0!==_a?_a:(0,_util_1.sluggify)(weapon.name);this.actor.synthetics.strikes.set(slug,weapon)}}afterPrepareData(){if(this.actor.isOfType("character"))if(this.data.replaceAll){const systemData=this.actor.system;systemData.actions=systemData.actions.filter((a=>a.item.id===this.item.id&&a.item.name===this.label&&a.item.group===this.group))}else if(this.data.replaceBasicUnarmed){this.actor.system.actions.findSplice((a=>{var _a;return"basic-unarmed"===(null===(_a=a.item)||void 0===_a?void 0:_a.slug)}))}}constructWeapon(){var _a,_b,_c,_d,_e,_f,_g,_h,_j;const damage=null!==(_b=null===(_a=this.data.damage)||void 0===_a?void 0:_a.base)&&void 0!==_b?_b:{damageType:"bludgeoning",dice:1,die:"d4"};damage.damageType=this.resolveInjectedProperties(null!==(_c=damage.damageType)&&void 0!==_c?_c:"bludgeoning");const source={_id:this.item.id,name:this.label,type:"weapon",img:null!==(_d=this.data.img)&&void 0!==_d?_d:this.item.img,system:{slug:this.slug,description:{value:""},category:this.category,group:this.group,baseItem:this.baseType,damage,range:null!==(_f=null===(_e=this.range)||void 0===_e?void 0:_e.increment)&&void 0!==_f?_f:null,maxRange:null!==(_h=null===(_g=this.range)||void 0===_g?void 0:_g.max)&&void 0!==_h?_h:null,traits:{value:this.data.traits,rarity:"common",custom:""},options:{value:null!==(_j=this.data.options)&&void 0!==_j?_j:[]},usage:{value:"held-in-one-hand"},equipped:{carryType:"held",handsHeld:1}}};return new _item_1.WeaponPF2e(source,{parent:this.actor,pf2e:{ready:!0}})}}exports.StrikeRuleElement=StrikeRuleElement,_StrikeRuleElement_instances=new WeakSet,_StrikeRuleElement_isValidRange=function(range){return"number"==typeof range&&Number.isInteger(range)&&range>0},StrikeRuleElement.validActorTypes=["character","npc"]},17812:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.StrikingRuleElement=void 0;const _item_1=__webpack_require__(10843),runes_1=__webpack_require__(31862),_1=__webpack_require__(36244);class StrikingRuleElement extends _1.RuleElementPF2e{constructor(data,item,options){super(data,item,options),"string"==typeof data.selector?this.selector=data.selector:(this.failValidation("Missing string selector property"),this.selector="")}beforePrepareData(){var _a,_b;if(this.ignored)return;const selector=this.resolveInjectedProperties(this.selector),strikingValue="value"in this.data?this.data.value:this.item instanceof _item_1.WeaponPF2e?(0,runes_1.getStrikingDice)(this.item.system):0,value=this.resolveValue(strikingValue);if(selector&&"number"==typeof value){const striking={label:this.data.label.includes(":")?this.label.replace(/^[^:]+:\s*|\s*\([^)]+\)$/g,""):this.data.label,bonus:value,predicate:this.predicate};(null!==(_a=(_b=this.actor.synthetics.striking)[selector])&&void 0!==_a?_a:_b[selector]=[]).push(striking)}else console.warn("PF2E | Striking requires at least a selector field and a non-empty value field")}}exports.StrikingRuleElement=StrikingRuleElement,StrikingRuleElement.validActorTypes=["character","npc"]},59517:function(__unused_webpack_module,exports,__webpack_require__){var _SubstituteRollRuleElement_instances,_SubstituteRollRuleElement_isValid,__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.SubstituteRollRuleElement=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(50852);class SubstituteRollRuleElement extends base_1.RuleElementPF2e{constructor(data,item,options){var _a;super(data,item,options),_SubstituteRollRuleElement_instances.add(this),this.selector="check",this.required=!1,null!==(_a=data.required)&&void 0!==_a||(data.required=!1),__classPrivateFieldGet(this,_SubstituteRollRuleElement_instances,"m",_SubstituteRollRuleElement_isValid).call(this,data)&&(this.selector=data.selector,this.required=data.required),this.slug="string"==typeof data.slug?data.slug:(0,_util_1.sluggify)(this.item.name),this.effectType=(0,_util_1.tupleHasValue)(["fortune","misfortune"],data.effectType)?data.effectType:"fortune"}beforePrepareData(){var _a,_b,_c;const value=Math.clamped(Math.trunc(Number(this.resolveValue())),1,20);if(Number.isNaN(value))return void(this.ignored=!0);const selector=this.resolveInjectedProperties(this.selector);(null!==(_a=(_c=this.actor.synthetics.rollSubstitutions)[selector])&&void 0!==_a?_a:_c[selector]=[]).push({slug:this.slug,label:this.label,value,predicate:null!==(_b=this.predicate)&&void 0!==_b?_b:null,ignored:!this.required,effectType:this.effectType})}}exports.SubstituteRollRuleElement=SubstituteRollRuleElement,_SubstituteRollRuleElement_instances=new WeakSet,_SubstituteRollRuleElement_isValid=function(data){return"string"==typeof data.selector&&"boolean"==typeof data.required}},87061:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.TempHPRuleElement=void 0;const chat_message_1=__webpack_require__(40405),_util_1=__webpack_require__(6945),_1=__webpack_require__(36244);class TempHPRuleElement extends _1.RuleElementPF2e{constructor(data,item,options){var _a;super(data,item,options),this.data.onCreate=Boolean(null===(_a=this.data.onCreate)||void 0===_a||_a),this.data.onTurnStart=Boolean(this.data.onTurnStart)}onCreate(actorUpdates){if(this.ignored||!this.data.onCreate)return;const updatedActorData=mergeObject(this.actor._source,actorUpdates,{inplace:!1}),value=this.resolveValue(this.data.value),rollOptions=Array.from(new Set([...this.actor.getRollOptions(),...this.actor.itemTypes.weapon.flatMap((w=>w.isEquipped?w.getRollOptions("self:weapon"):[]))]));if(!this.predicate.test(rollOptions))return;if("number"!=typeof value)return this.failValidation("Temporary HP requires a non-zero value field or a formula field");const currentTempHP=Number(getProperty(updatedActorData,"system.attributes.hp.temp"))||0;value>currentTempHP&&(mergeObject(actorUpdates,{"system.attributes.hp.temp":value,"system.attributes.hp.tempsource":this.item.id}),this.broadcast(value,currentTempHP))}onTurnStart(actorUpdates){if(this.ignored||!this.data.onTurnStart)return;const rollOptions=Array.from(new Set([...this.actor.getRollOptions(["all"]),...this.actor.itemTypes.weapon.flatMap((w=>w.isEquipped?w.getRollOptions("self:weapon"):[]))]));if(!this.predicate.test(rollOptions))return;const value=this.resolveValue(this.data.value);if("number"!=typeof value)return void this.failValidation("Temporary HP requires a non-zero value field or a formula field");const updatedActorData=mergeObject(this.actor._source,actorUpdates,{inplace:!1}),currentTempHP=Number(getProperty(updatedActorData,"system.attributes.hp.temp"))||0;value>currentTempHP&&(actorUpdates["system.attributes.hp.temp"]=value,this.broadcast(value,currentTempHP))}onDelete(actorUpdates){const updatedActorData=mergeObject(this.actor._source,actorUpdates,{inplace:!1});if(getProperty(updatedActorData,"system.attributes.hp.tempsource")===this.item.id){mergeObject(actorUpdates,{"system.attributes.hp.temp":0});const hpData=getProperty(actorUpdates,"system.attributes.hp");(0,_util_1.isObject)(hpData)&&(hpData["-=tempsource"]=null)}}broadcast(newQuantity,oldQuantity){const singularOrPlural=1===newQuantity?"PF2E.Encounter.Broadcast.TempHP.SingleNew":"PF2E.Encounter.Broadcast.TempHP.PluralNew",wasAt=oldQuantity>0?game.i18n.format("PF2E.Encounter.Broadcast.TempHP.WasAt",{oldQuantity}):"",[actor,item]=[this.actor.name,this.item.name],content=game.i18n.format(singularOrPlural,{actor,newQuantity,wasAt,item}),recipients=game.users.filter((u=>this.actor.testUserPermission(u,"OWNER"))).map((u=>u.id)),speaker=chat_message_1.ChatMessagePF2e.getSpeaker({actor:this.actor,token:this.token});chat_message_1.ChatMessagePF2e.create({content,speaker,whisper:recipients})}}exports.TempHPRuleElement=TempHPRuleElement,TempHPRuleElement.validActorTypes=["character","npc","familiar"]},31288:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.TokenEffectIconRuleElement=void 0;const token_effect_1=__webpack_require__(21075),_1=__webpack_require__(36244);class TokenEffectIconRuleElement extends _1.RuleElementPF2e{afterPrepareData(){if(!this.test())return;const path="string"==typeof this.data.value?this.resolveInjectedProperties(this.data.value):this.item.img;this.actor.system.tokenEffects.push(new token_effect_1.TokenEffect(path.trim()))}}exports.TokenEffectIconRuleElement=TokenEffectIconRuleElement},75299:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.TokenImageRuleElement=void 0;const _1=__webpack_require__(36244);class TokenImageRuleElement extends _1.RuleElementPF2e{afterPrepareData(){const src=this.resolveValue();if("string"!=typeof src)return this.failValidation("Missing value field");this.test()&&(this.actor.synthetics.tokenOverrides.texture={src})}}exports.TokenImageRuleElement=TokenImageRuleElement},7975:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.TokenLightRuleElement=void 0;const _util_1=__webpack_require__(6945),_1=__webpack_require__(36244);class TokenLightRuleElement extends _1.RuleElementPF2e{constructor(data,item,options){super(data,item,options),this.validateData()}validateData(){const light=this.data.value;if((0,_util_1.isObject)(light)){for(const key of["dim","bright"])if(void 0!==light[key]){const resolvedValue=this.resolveValue(light[key]);"number"==typeof resolvedValue&&(light[key]=resolvedValue)}try{new foundry.data.LightData(light)}catch(error){error instanceof Error&&this.failValidation(error.message)}}}afterPrepareData(){this.test()&&(this.actor.synthetics.tokenOverrides.light=deepClone(this.data.value))}}exports.TokenLightRuleElement=TokenLightRuleElement},58030:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.TokenNameRuleElement=void 0;const _1=__webpack_require__(36244);class TokenNameRuleElement extends _1.RuleElementPF2e{afterPrepareData(){const name=this.resolveValue();if("string"!=typeof name)return this.failValidation("Missing value field");this.test()&&(this.actor.synthetics.tokenOverrides.name=name)}}exports.TokenNameRuleElement=TokenNameRuleElement},35917:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.WeaponPotencyRuleElement=void 0;const modifiers_1=__webpack_require__(92823),_item_1=__webpack_require__(10843),_1=__webpack_require__(36244);class WeaponPotencyRuleElement extends _1.RuleElementPF2e{constructor(data,item,options){super(data,item,options),this.selector=String(data.selector)}beforePrepareData(){var _a,_b;if(this.ignored)return;const{weaponPotency}=this.actor.synthetics,selector=this.resolveInjectedProperties(this.selector),{item}=this,potencyValue=null!==(_a=this.data.value)&&void 0!==_a?_a:item instanceof _item_1.WeaponPF2e?item.system.potencyRune.value:0,value=this.resolveValue(potencyValue);if(selector&&"number"==typeof value){const bonusType="noABP"===game.settings.get("pf2e","automaticBonusVariant")?modifiers_1.MODIFIER_TYPE.ITEM:modifiers_1.MODIFIER_TYPE.POTENCY,potency={label:this.data.label.includes(":")?this.label.replace(/^[^:]+:\s*|\s*\([^)]+\)$/g,""):this.data.label,bonus:value,type:bonusType,predicate:this.predicate};(null!==(_b=weaponPotency[selector])&&void 0!==_b?_b:weaponPotency[selector]=[]).push(potency)}else this.failValidation("Weapon potency requires at least a selector field and a non-empty value field")}}exports.WeaponPotencyRuleElement=WeaponPotencyRuleElement,WeaponPotencyRuleElement.validActorTypes=["character","npc"]},83781:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0})},58903:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.isBracketedValue=exports.extractRollTwice=exports.extractRollSubstitutions=exports.extractNotes=exports.extractModifiers=exports.extractModifierAdjustments=exports.extractDegreeOfSuccessAdjustments=exports.extractDamageDice=void 0;const _util_1=__webpack_require__(6945);function extractModifierAdjustments(adjustmentsRecord,selectors,slug){return Array.from(new Set(selectors.flatMap((s=>{var _a;return null!==(_a=adjustmentsRecord[s])&&void 0!==_a?_a:[]})))).filter((a=>[slug,null].includes(a.slug)))}exports.extractModifiers=function(synthetics,selectors,options={}){const{modifierAdjustments,statisticsModifiers}=synthetics,modifiers=Array.from(new Set(selectors)).flatMap((s=>{var _a;return null!==(_a=statisticsModifiers[s])&&void 0!==_a?_a:[]})).flatMap((d=>{var _a;return null!==(_a=d(options))&&void 0!==_a?_a:[]}));for(const modifier of modifiers)modifier.adjustments=extractModifierAdjustments(modifierAdjustments,selectors,modifier.slug);return modifiers},exports.extractModifierAdjustments=extractModifierAdjustments,exports.extractNotes=function(rollNotes,selectors){return selectors.flatMap((s=>{var _a;return(null!==(_a=rollNotes[s])&&void 0!==_a?_a:[]).map((n=>n.clone()))}))},exports.extractDamageDice=function(deferredDice,selectors,options={}){return selectors.flatMap((s=>{var _a;return null!==(_a=deferredDice[s])&&void 0!==_a?_a:[]})).flatMap((d=>{var _a;return null!==(_a=d(options))&&void 0!==_a?_a:[]}))},exports.extractRollTwice=function(rollTwices,selectors,options){var _a;const twices=selectors.flatMap((s=>{var _a;return null!==(_a=rollTwices[s])&&void 0!==_a?_a:[]})).filter((rt=>{var _a,_b;return null===(_b=null===(_a=rt.predicate)||void 0===_a?void 0:_a.test(options))||void 0===_b||_b}));return 0!==twices.length&&((!twices.some((rt=>"higher"===rt.keep))||!twices.some((rt=>"lower"===rt.keep)))&&("higher"===(null===(_a=twices.at(0))||void 0===_a?void 0:_a.keep)?"keep-higher":"keep-lower"))},exports.extractRollSubstitutions=function(substitutions,domains,rollOptions){return domains.flatMap((d=>{var _a;return deepClone(null!==(_a=substitutions[d])&&void 0!==_a?_a:[])})).filter((s=>{var _a,_b;return null===(_b=null===(_a=s.predicate)||void 0===_a?void 0:_a.test(rollOptions))||void 0===_b||_b}))},exports.extractDegreeOfSuccessAdjustments=function(synthetics,selectors){return Object.values((0,_util_1.pick)(synthetics.degreeOfSuccessAdjustments,selectors)).flat()},exports.isBracketedValue=function(value){return(0,_util_1.isObject)(value)&&Array.isArray(value.brackets)}},89163:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.AmbientLightDocumentPF2e=void 0;class AmbientLightDocumentPF2e extends AmbientLightDocument{get isDarkness(){return this.object.source.isDarkness}}exports.AmbientLightDocumentPF2e=AmbientLightDocumentPF2e},54096:(__unused_webpack_module,exports)=>{var LightLevels;Object.defineProperty(exports,"__esModule",{value:!0}),exports.LightLevels=void 0,function(LightLevels){LightLevels[LightLevels.DARKNESS=.25]="DARKNESS",LightLevels[LightLevels.BRIGHT_LIGHT=.75]="BRIGHT_LIGHT"}(LightLevels||(LightLevels={})),exports.LightLevels=LightLevels},96724:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.ScenePF2e=void 0;const data_1=__webpack_require__(54096);class ScenePF2e extends Scene{get rulesBasedVision(){const settingEnabled=game.settings.get("pf2e","automation.rulesBasedVision");return this.tokenVision&&settingEnabled}get darknessSyncedToTime(){return"enabled"===this.flags.pf2e.syncDarkness||"default"===this.flags.pf2e.syncDarkness&&game.settings.get("pf2e","worldClock.syncDarkness")}get lightLevel(){return 1-this.darkness}get isBright(){return this.lightLevel>=data_1.LightLevels.BRIGHT_LIGHT}get isDimlyLit(){return!this.isBright&&!this.isDark}get isDark(){return this.lightLevel<=data_1.LightLevels.DARKNESS}get hasHexGrid(){return![CONST.GRID_TYPES.GRIDLESS,CONST.GRID_TYPES.SQUARE].includes(this.grid.type)}async checkAuras(){var _a;if(!canvas.ready||!this.active||this.grid.type!==CONST.GRID_TYPES.SQUARE)return;await this.auraCheckLock;const lock={release:()=>{}};this.auraCheckLock=new Promise((resolve=>{lock.release=resolve}));const tokens=this.tokens.reduce(((list,token)=>(token.isLinked&&list.some((t=>t.actor===token.actor))||list.push(token),list)),[]);for(const token of tokens)await(null===(_a=token.object)||void 0===_a?void 0:_a._animation);const auras=tokens.flatMap((t=>Array.from(t.auras.values())));for(const aura of auras){const auradTokens=tokens.filter((t=>aura.containsToken(t)));await aura.notifyActors(auradTokens);const nonAuradTokens=tokens.filter((t=>!auradTokens.includes(t))),nonAuradActors=new Set(nonAuradTokens.flatMap((t=>{var _a;return null!==(_a=t.actor)&&void 0!==_a?_a:[]})));for(const actor of nonAuradActors)await actor.checkAreaEffects()}const sceneActors=new Set(tokens.flatMap((t=>{var _a;return(null===(_a=t.actor)||void 0===_a?void 0:_a.canUserModify(game.user,"update"))?t.actor:[]})));for(const actor of sceneActors)await actor.checkAreaEffects();lock.release()}prepareData(){super.prepareData(),Promise.resolve().then((()=>{this.checkAuras()}))}prepareBaseData(){var _a,_b,_c,_d;super.prepareBaseData(),this.rulesBasedVision&&(this.globalLight=!0,this.hasGlobalThreshold=!0,this.globalLightThreshold=1-(data_1.LightLevels.DARKNESS+.001)),null!==(_a=(_c=this.flags).pf2e)&&void 0!==_a||(_c.pf2e={syncDarkness:"default"}),null!==(_b=(_d=this.flags.pf2e).syncDarkness)&&void 0!==_b||(_d.syncDarkness="default")}_onUpdate(changed,options,userId){if(super._onUpdate(changed,options,userId),changed.active&&canvas.scene===this)for(const token of canvas.tokens.placeables)token.auras.draw()}}exports.ScenePF2e=ScenePF2e},12789:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.MeasuredTemplateDocumentPF2e=exports.TokenDocumentPF2e=exports.TokenConfigPF2e=exports.TileDocumentPF2e=exports.AmbientLightDocumentPF2e=exports.ScenePF2e=void 0;var document_1=__webpack_require__(96724);Object.defineProperty(exports,"ScenePF2e",{enumerable:!0,get:function(){return document_1.ScenePF2e}});var ambient_light_document_1=__webpack_require__(89163);Object.defineProperty(exports,"AmbientLightDocumentPF2e",{enumerable:!0,get:function(){return ambient_light_document_1.AmbientLightDocumentPF2e}});var tile_document_1=__webpack_require__(29695);Object.defineProperty(exports,"TileDocumentPF2e",{enumerable:!0,get:function(){return tile_document_1.TileDocumentPF2e}});var token_document_1=__webpack_require__(53574);Object.defineProperty(exports,"TokenConfigPF2e",{enumerable:!0,get:function(){return token_document_1.TokenConfigPF2e}}),Object.defineProperty(exports,"TokenDocumentPF2e",{enumerable:!0,get:function(){return token_document_1.TokenDocumentPF2e}});var measured_template_document_1=__webpack_require__(85504);Object.defineProperty(exports,"MeasuredTemplateDocumentPF2e",{enumerable:!0,get:function(){return measured_template_document_1.MeasuredTemplateDocumentPF2e}})},85504:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.MeasuredTemplateDocumentPF2e=void 0;class MeasuredTemplateDocumentPF2e extends MeasuredTemplateDocument{}exports.MeasuredTemplateDocumentPF2e=MeasuredTemplateDocumentPF2e},77664:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.SceneConfigPF2e=void 0;const world_clock_1=__webpack_require__(53959),_util_1=__webpack_require__(6945);class SceneConfigPF2e extends SceneConfig{activateListeners($html){var _a,_b,_c,_d,_e,_f,_g;if(super.activateListeners($html),game.settings.get("pf2e","automation.rulesBasedVision")&&this.document.tokenVision){const html=$html[0],globalLight=html.querySelector("input[name^=globalLight]"),hasglobalThreshold=html.querySelector("input[name=hasGlobalThreshold]"),globalLightThreshold=html.querySelector("input[name=globalLightThreshold]");if(!(globalLight&&hasglobalThreshold&&globalLightThreshold))throw(0,_util_1.ErrorPF2e)("");globalLight.disabled=!0,hasglobalThreshold.disabled=!0,globalLightThreshold.disabled=!0,null===(_a=globalLightThreshold.nextElementSibling)||void 0===_a||_a.classList.add("disabled");for(const input of[globalLight,globalLightThreshold]){const managedBy=document.createElement("span");managedBy.classList.add("managed"),managedBy.innerHTML=" ".concat(game.i18n.localize("PF2E.SETTINGS.Automation.RulesBasedVision.ManagedBy"));const rbvLink=managedBy.querySelector("rbv"),anchor=document.createElement("a");anchor.innerText=null!==(_b=null==rbvLink?void 0:rbvLink.innerHTML)&&void 0!==_b?_b:"",anchor.setAttribute("href",""),anchor.addEventListener("click",(event=>{event.preventDefault(),event.stopPropagation();const menu=game.settings.menus.get("pf2e.automation");if(!menu)throw(0,_util_1.ErrorPF2e)("Automation Settings application not found");(new menu.type).render(!0)})),null==rbvLink||rbvLink.replaceWith(anchor),null===(_d=null===(_c=input.closest(".form-group"))||void 0===_c?void 0:_c.querySelector("p.notes"))||void 0===_d||_d.append(managedBy)}if(this.document.darknessSyncedToTime){const darknessInput=html.querySelector("input[name=darkness]");if(darknessInput){darknessInput.disabled=!0,null===(_e=darknessInput.nextElementSibling)||void 0===_e||_e.classList.add("disabled");const managedBy=world_clock_1.WorldClock.createSyncedMessage();null===(_g=null===(_f=darknessInput.closest(".form-group"))||void 0===_f?void 0:_f.querySelector("p.notes"))||void 0===_g||_g.append(managedBy)}}}}}exports.SceneConfigPF2e=SceneConfigPF2e},29695:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.TileDocumentPF2e=void 0;class TileDocumentPF2e extends TileDocument{}exports.TileDocumentPF2e=TileDocumentPF2e},547:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.TokenAuraData=exports.TokenAura=void 0;const util_1=__webpack_require__(60162),types_1=__webpack_require__(94593);Object.defineProperty(exports,"TokenAuraData",{enumerable:!0,get:function(){return types_1.TokenAuraData}});const canvas_1=__webpack_require__(85336);exports.TokenAura=class TokenAura{constructor(args){var _a;this.slug=args.slug,this.token=args.token,this.radius=args.radius,this.traits=args.traits,this.colors=null!==(_a=args.colors)&&void 0!==_a?_a:null,this.includesSelf=args.includesSelf}get radiusPixels(){const gridSize=this.scene.grid.distance,gridSizePixels=this.scene.grid.size;return.5*(this.token.width*gridSizePixels)+this.radius/gridSize*gridSizePixels}get scene(){return this.token.scene}get bounds(){const{token,radiusPixels}=this,tokenWidth=token.width*this.scene.grid.size,tokenBounds=token.bounds;return new PIXI.Rectangle(tokenBounds.x-(radiusPixels-tokenWidth/2),tokenBounds.y-(radiusPixels-tokenWidth/2),2*radiusPixels,2*radiusPixels)}get center(){return this.token.center}get squares(){return(0,util_1.getAreaSquares)(this)}containsToken(token){return token===this.token?this.includesSelf:!(this.token.object.distanceTo(token.object)>this.radius)&&this.squares.some((s=>s.active&&0===(0,canvas_1.measureDistanceRect)(s,token.bounds)))}async notifyActors(specific){var _a,_b,_c,_d,_e,_f,_g;const auraActor=this.token.actor,sceneOfFocus=null!==(_e=null!==(_d=null===(_c=null===(_b=null===(_a=game.combats.active)||void 0===_a?void 0:_a.combatant)||void 0===_b?void 0:_b.token)||void 0===_c?void 0:_c.scene)&&void 0!==_d?_d:game.scenes.active)&&void 0!==_e?_e:null;if(!auraActor||!sceneOfFocus||this.scene!==sceneOfFocus)return;const tokensToCheck=(specific||(null!==(_g=null===(_f=this.token.scene)||void 0===_f?void 0:_f.tokens.contents)&&void 0!==_g?_g:[])).filter((t=>{var _a;return!!(null===(_a=t.actor)||void 0===_a?void 0:_a.canUserModify(game.user,"update"))})),auraData=auraActor.auras.get(this.slug);if(!auraData)return;const containedTokens=tokensToCheck.filter((t=>(this.includesSelf||t!==this.token)&&this.containsToken(t))),affectedActors=new Set(containedTokens.map((t=>t.actor)));for(const actor of affectedActors)await actor.applyAreaEffects(auraData,{origin:auraActor})}}},94593:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0})},87330:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0})},59931:function(__unused_webpack_module,exports,__webpack_require__){var _TokenDocumentPF2e_instances,_TokenDocumentPF2e_prepareDerivedPerception,__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.TokenDocumentPF2e=void 0;const _actor_1=__webpack_require__(85530),chat_message_1=__webpack_require__(40405),aura_1=__webpack_require__(547),_util_1=__webpack_require__(6945),data_1=__webpack_require__(54096);class TokenDocumentPF2e extends TokenDocument{constructor(){super(...arguments),_TokenDocumentPF2e_instances.add(this)}hasStatusEffect(statusId){if("dead"===statusId)return this.overlayEffect===CONFIG.controlIcons.defeated;const{actor}=this;if(!actor||!game.settings.get("pf2e","automation.rulesBasedVision"))return!1;return(0,_util_1.objectHasKey)(CONFIG.PF2E.conditionTypes,statusId)&&actor.hasCondition(statusId)||actor.itemTypes.effect.some((e=>{var _a;return(null!==(_a=e.slug)&&void 0!==_a?_a:(0,_util_1.sluggify)(e.name))===statusId}))}static getTrackedAttributes(data={},_path=[]){if(0===_path.length&&0===Object.keys(data).length)for(const[type,model]of Object.entries(game.system.model.Actor))["character","npc"].includes(type)&&foundry.utils.mergeObject(data,model);if(_path.length>0)return super.getTrackedAttributes(data,_path);const patterns={positive:/^(?:attributes|resources)\./,negative:/\b(?:rank|_?modifiers|item|classdc|dexcap|familiar|\w+hp\b)|bonus/i},prunedData=expandObject(Object.fromEntries(Object.entries(flattenObject(data)).filter((([k,v])=>patterns.positive.test(k)&&!patterns.negative.test(k)&&!["boolean","string"].includes(typeof v)))));return super.getTrackedAttributes(prunedData,_path)}get scene(){return this.parent}_initialize(){this.auras=new Map,super._initialize(),this.initialized=!0}get emitsDarkness(){return this.data.brightLight<0}get rulesBasedVision(){var _a,_b;return!!(this.sight.enabled&&(null===(_a=this.actor)||void 0===_a?void 0:_a.isOfType("character","familiar"))&&(null===(_b=this.scene)||void 0===_b?void 0:_b.rulesBasedVision))}get hasLowLightVision(){var _a;return!!(this.rulesBasedVision&&(null===(_a=this.actor)||void 0===_a?void 0:_a.isOfType("creature"))&&this.actor.hasLowLightVision)}get hasDarkvision(){var _a;return!!(this.rulesBasedVision&&(null===(_a=this.actor)||void 0===_a?void 0:_a.isOfType("creature"))&&this.actor.hasDarkvision)}get linkToActorSize(){return this.flags.pf2e.linkToActorSize}get autoscale(){return this.flags.pf2e.autoscale}get playersCanSeeName(){var _a;const anyoneCanSee=[CONST.TOKEN_DISPLAY_MODES.ALWAYS,CONST.TOKEN_DISPLAY_MODES.HOVER],nameDisplayMode=this.displayName;return anyoneCanSee.includes(nameDisplayMode)||"party"===(null===(_a=this.actor)||void 0===_a?void 0:_a.alliance)}get bounds(){var _a,_b;const gridSize=null!==(_b=null===(_a=this.scene)||void 0===_a?void 0:_a.grid.size)&&void 0!==_b?_b:100;return new PIXI.Rectangle(this._source.x,this._source.y,this.width*gridSize,this.height*gridSize)}get center(){const{bounds}=this;return{x:bounds.x+bounds.width/2,y:bounds.y+bounds.height/2}}prepareBaseData(){var _a,_b,_c,_d,_e,_f;if(super.prepareBaseData(),this.auras.clear(),!this.actor||!this.isEmbedded)return;[_actor_1.ActorPF2e.DEFAULT_ICON,`systems/pf2e/icons/default-icons/${this.actor.type}.svg`].includes(this.texture.src)&&(this.texture.src=this.actor._source.img);for(const[key,data]of this.actor.auras.entries())this.auras.set(key,new aura_1.TokenAura({slug:key,radius:data.radius,token:this,traits:new Set(data.traits),colors:data.colors,includesSelf:!0}));if(!this.initialized)return;const linkDefault=!["hazard","loot"].includes(null!==(_a=this.actor.type)&&void 0!==_a?_a:""),linkToActorSize=null!==(_c=null===(_b=this.flags.pf2e)||void 0===_b?void 0:_b.linkToActorSize)&&void 0!==_c?_c:linkDefault,autoscaleDefault=game.settings.get("pf2e","tokens.autoscale"),autoscale=!!linkToActorSize&&(null!==(_e=null===(_d=this.flags.pf2e)||void 0===_d?void 0:_d.autoscale)&&void 0!==_e?_e:autoscaleDefault);this.flags.pf2e=mergeObject(null!==(_f=this.flags.pf2e)&&void 0!==_f?_f:{},{linkToActorSize,autoscale});const defaultIcons=[_actor_1.ActorPF2e.DEFAULT_ICON,`systems/pf2e/icons/default-icons/${this.actor.type}.svg`];game.settings.get("pf2e","nathMode")&&defaultIcons.includes(this.texture.src)&&(this.texture.src=(()=>{switch(this.actor.alliance){case"party":return"systems/pf2e/icons/default-icons/alternatives/nath/ally.webp";case"opposition":return"systems/pf2e/icons/default-icons/alternatives/nath/enemy.webp";default:return this.texture.src}})());const{alliance}=this.actor.system.details;this.disposition=alliance?{party:CONST.TOKEN_DISPOSITIONS.FRIENDLY,opposition:CONST.TOKEN_DISPOSITIONS.HOSTILE}[alliance]:CONST.TOKEN_DISPOSITIONS.NEUTRAL}_prepareDetectionModes(){if(!(this.initialized&&this.actor&&this.rulesBasedVision))return super._prepareDetectionModes();this.detectionModes=[{id:"basicSight",enabled:!0,range:null}],["character","familiar"].includes(this.actor.type)&&(this.sight.attenuation=.1,this.sight.brightness=0,this.sight.contrast=0,this.sight.range=null,this.sight.saturation=0,this.sight.visionMode="basic")}prepareDerivedData(){var _a,_b,_c;if(super.prepareDerivedData(),!(this.initialized&&this.actor&&this.scene))return;const{tokenOverrides}=this.actor.synthetics;this.name=null!==(_a=tokenOverrides.name)&&void 0!==_a?_a:this.name,this.texture.src=null!==(_c=null===(_b=tokenOverrides.texture)||void 0===_b?void 0:_b.src)&&void 0!==_c?_c:this.texture.src,tokenOverrides.light&&(this.light=new foundry.data.LightData(tokenOverrides.light,{parent:this})),TokenDocumentPF2e.prepareSize(this,this.actor),__classPrivateFieldGet(this,_TokenDocumentPF2e_instances,"m",_TokenDocumentPF2e_prepareDerivedPerception).call(this)}static prepareSize(token,actor){if(!actor||!token.flags.pf2e.linkToActorSize)return;const size={tiny:.5,sm:1,med:1,lg:2,huge:3,grg:Math.max(token.width,4)}[actor.size];if(actor.isOfType("vehicle")){const{width,height}=actor.getTokenDimensions();token.width=width,token.height=height}else if(token.width=size,token.height=size,game.settings.get("pf2e","tokens.autoscale")&&!1!==token.flags.pf2e.autoscale){const absoluteScale="sm"===actor.size?.8:1,mirrorX=token.texture.scaleX<0?-1:1;token.texture.scaleX=mirrorX*absoluteScale;const mirrorY=token.texture.scaleY<0?-1:1;token.texture.scaleY=mirrorY*absoluteScale}}async setInitiative({initiative,sendMessage=!0}){var _a,_b,_c;if(!game.combat)return void ui.notifications.error("PF2E.Encounter.NoActiveEncounter");const currentId=null===(_a=game.combat.combatant)||void 0===_a?void 0:_a.id;this.combatant&&game.combat.combatants.has(this.combatant.id)?await game.combat.setInitiative(this.combatant.id,initiative):await game.combat.createEmbeddedDocuments("Combatant",[{tokenId:this.id,initiative}]),await this.update({turn:game.combat.turns.findIndex((c=>c.id===currentId))}),sendMessage&&await chat_message_1.ChatMessagePF2e.createDocuments([{speaker:{scene:null===(_b=this.scene)||void 0===_b?void 0:_b.id,token:this.id},whisper:(null===(_c=this.actor)||void 0===_c?void 0:_c.hasPlayerOwner)?[]:game.users.contents.flatMap((user=>user.isGM?user.id:[])),content:game.i18n.format("PF2E.InitativeIsNow",{name:this.name,value:initiative})}])}_onCreate(data,options,userId){var _a;super._onCreate(data,options,userId),(null===(_a=this.actor)||void 0===_a?void 0:_a.isOfType("loot"))&&this.actor.toggleTokenHiding()}_onUpdate(changed,options,userId){var _a;const tokenSetsNameVisibility=game.settings.get("pf2e","metagame_tokenSetsNameVisibility");if("displayName"in changed&&tokenSetsNameVisibility&&this.combatant&&ui.combat.render(),!1===changed.actorLink&&this.rendered&&this.object.controlled&&this.object.release(),!this.actorLink&&this.parent&&changed.actorData){const preUpdateIcon=this.texture.src;this._onUpdateTokenActor(changed.actorData,options,userId),this.reset(),changed.light={},preUpdateIcon!==this.texture.src&&(changed.texture=mergeObject(null!==(_a=changed.texture)&&void 0!==_a?_a:{},{src:this.texture.src})),delete changed.actorData}return super._onUpdate(changed,options,userId)}_onUpdateBaseActor(update,options){super._onUpdateBaseActor(update,options),this.isLinked&&Object.keys(flattenObject(null!=update?update:{})).some((k=>k.startsWith("system.traits.senses")))&&(this.reset(),canvas.effects.visionSources.some((s=>s.object===this.object))&&canvas.perception.update({initializeVision:!0},!0))}_onDelete(options,userId){var _a;if(super._onDelete(options,userId),this.actor)if(this.isLinked)(null===(_a=this.scene)||void 0===_a?void 0:_a.tokens.some((t=>t.actor===this.actor)))||this.actor.checkAreaEffects();else for(const effect of this.actor.itemTypes.effect)game.pf2e.effectTracker.unregister(effect)}onActorEmbeddedItemChange(){this.isLinked&&this.rendered&&this.object.visible&&(this.object.drawEffects().then((()=>{var _a,_b;const preUpdate=this.toObject(!1),preUpdateAuras=Array.from(this.auras.values()).map((a=>duplicate(a)));this.reset();const postUpdate=this.toObject(!1),postUpdateAuras=Array.from(this.auras.values()).map((a=>duplicate(a))),changes=diffObject(preUpdate,postUpdate),aurasChanged=(()=>{const preToPost=diffObject(preUpdateAuras,postUpdateAuras),postToPre=diffObject(postUpdateAuras,preUpdateAuras);return Object.keys(preToPost).length>0||Object.keys(postToPre).length>0})();aurasChanged&&(changes.effects=[]),Object.keys(changes).length>0&&this._onUpdate(changes,{},game.user.id),(aurasChanged||"width"in changes||"height"in changes)&&(null===(_a=this.scene)||void 0===_a||_a.checkAuras()),(null===(_b=this.combatant)||void 0===_b?void 0:_b.parent.active)&&ui.combat.render()})),this.object.drawBars())}}exports.TokenDocumentPF2e=TokenDocumentPF2e,_TokenDocumentPF2e_instances=new WeakSet,_TokenDocumentPF2e_prepareDerivedPerception=function(){var _a,_b,_c,_d;if(!(this.rulesBasedVision&&this.actor&&this.scene&&this.sight.enabled))return;const visionMode=this.hasDarkvision?"darkvision":"basic";this.sight.visionMode=visionMode;const{defaults}=CONFIG.Canvas.visionModes[visionMode].vision;if(this.sight.brightness=null!==(_a=defaults.brightness)&&void 0!==_a?_a:0,this.sight.saturation=null!==(_b=defaults.saturation)&&void 0!==_b?_b:0,"darkvision"===visionMode||this.scene.lightLevel>data_1.LightLevels.DARKNESS){const basicDetection=this.detectionModes.at(0);if(!basicDetection)return;this.sight.range=basicDetection.range=null!==(_c=defaults.range)&&void 0!==_c?_c:null,this.actor.isOfType("character")&&"fetchling"===(null===(_d=this.actor.ancestry)||void 0===_d?void 0:_d.slug)?this.sight.saturation=1:game.user.settings.monochromeDarkvision||(this.sight.saturation=0)}this.actor.isOfType("character","familiar")&&this.actor.system.traits.senses.some((s=>"seeInvisibility"===s.type))&&this.detectionModes.push({id:"seeInvisibility",enabled:!0,range:1e3});const tremorsense=this.actor.isOfType("character")?this.actor.system.traits.senses.find((s=>"tremorsense"===s.type&&"vague"!==s.acuity)):null;tremorsense&&this.detectionModes.push({id:"feelTremor",enabled:!0,range:tremorsense.range}),this.actor.hasCondition("deafened")||this.detectionModes.push({id:"hearing",enabled:!0,range:1/0})}},53574:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.TokenDocumentPF2e=exports.TokenDataPF2e=exports.TokenConfigPF2e=void 0;var sheet_1=__webpack_require__(70285);Object.defineProperty(exports,"TokenConfigPF2e",{enumerable:!0,get:function(){return sheet_1.TokenConfigPF2e}});var data_1=__webpack_require__(87330);Object.defineProperty(exports,"TokenDataPF2e",{enumerable:!0,get:function(){return data_1.TokenDataPF2e}});var document_1=__webpack_require__(59931);Object.defineProperty(exports,"TokenDocumentPF2e",{enumerable:!0,get:function(){return document_1.TokenDocumentPF2e}})},70285:function(__unused_webpack_module,exports,__webpack_require__){var _TokenConfigPF2e_instances,_TokenConfigPF2e_disableScale,_TokenConfigPF2e_enableScale,_TokenConfigPF2e_disableVisionInputs,__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.TokenConfigPF2e=void 0;const _actor_1=__webpack_require__(85530),_util_1=__webpack_require__(6945);class TokenConfigPF2e extends TokenConfig{constructor(){super(...arguments),_TokenConfigPF2e_instances.add(this)}get template(){return"systems/pf2e/templates/scene/token/sheet.html"}get dimensionsFromActorSize(){var _a,_b;return{tiny:.5,sm:1,med:1,lg:2,huge:3,grg:4}[null!==(_b=null===(_a=this.actor)||void 0===_a?void 0:_a.size)&&void 0!==_b?_b:"med"]}activateListeners($html){super.activateListeners($html);const html=$html[0],linkToActorSize=html.querySelector('input[name="flags.pf2e.linkToActorSize"]');if(!linkToActorSize)throw(0,_util_1.ErrorPF2e)("");linkToActorSize.checked&&__classPrivateFieldGet(this,_TokenConfigPF2e_instances,"m",_TokenConfigPF2e_disableScale).call(this,html),linkToActorSize.addEventListener("change",(event=>{var _a,_b,_c;if(!(event.currentTarget instanceof HTMLInputElement))throw(0,_util_1.ErrorPF2e)("Input element not found");const sizeInputs=Array.from(null!==(_b=null===(_a=event.currentTarget.closest("fieldset"))||void 0===_a?void 0:_a.querySelectorAll("input[type=number], input[type=range]"))&&void 0!==_b?_b:[]);for(const input of sizeInputs)input.disabled=linkToActorSize.checked;const dimensionInputs=sizeInputs.filter((i=>["width","height"].includes(i.name))),autoscale=game.settings.get("pf2e","tokens.autoscale")&&!1!==(null===(_c=this.token._source.flags.pf2e)||void 0===_c?void 0:_c.autoscale);if(linkToActorSize.checked&&autoscale){if(this.actor instanceof _actor_1.VehiclePF2e){const{dimensions}=this.actor,dimensionValues={width:Math.max(Math.round(dimensions.width/5),1),height:Math.max(Math.round(dimensions.length/5),1)};for(const input of dimensionInputs)input.value=dimensionValues[input.name].toString()}else for(const input of dimensionInputs)input.value=this.dimensionsFromActorSize.toString();__classPrivateFieldGet(this,_TokenConfigPF2e_instances,"m",_TokenConfigPF2e_disableScale).call(this,html)}else{const source=this.token._source,nameToValue={width:source.width,height:source.height,scale:source.texture.scaleX};for(const input of sizeInputs)(0,_util_1.objectHasKey)(nameToValue,input.name)&&(input.value=nameToValue[input.name].toString());__classPrivateFieldGet(this,_TokenConfigPF2e_instances,"m",_TokenConfigPF2e_enableScale).call(this,html)}})),__classPrivateFieldGet(this,_TokenConfigPF2e_instances,"m",_TokenConfigPF2e_disableVisionInputs).call(this,html)}_getSubmitData(updateData={}){var _a;const changes=null!=updateData?updateData:{};return(null===(_a=this.form.querySelector("input[name=scale]"))||void 0===_a?void 0:_a.disabled)&&(changes.scale=Math.abs(this.object._source.texture.scaleX)),super._getSubmitData(changes)}async _updateObject(event,formData){if(!0===formData["flags.pf2e.linkToActorSize"])if(this.actor instanceof _actor_1.VehiclePF2e){const{dimensions}=this.actor,width=Math.max(Math.round(dimensions.width/5),1),length=Math.max(Math.round(dimensions.length/5),1);formData.width=width,formData.height=length}else formData.width=formData.height=this.dimensionsFromActorSize;return super._updateObject(event,formData)}}exports.TokenConfigPF2e=TokenConfigPF2e,_TokenConfigPF2e_instances=new WeakSet,_TokenConfigPF2e_disableScale=function(html){var _a;if(!game.settings.get("pf2e","tokens.autoscale"))return;const scale=html.querySelector(".form-group.scale");if(!scale)throw(0,_util_1.ErrorPF2e)("Scale form group missing");scale.classList.add("children-disabled");const constrainedScale=String("sm"===(null===(_a=this.actor)||void 0===_a?void 0:_a.size)?.8:1),rangeInput=scale.querySelector("input[type=range]");if(rangeInput){rangeInput.disabled=!0,rangeInput.value=constrainedScale;const rangeDisplayValue=scale.querySelector(".range-value");rangeDisplayValue&&(rangeDisplayValue.innerHTML=constrainedScale)}},_TokenConfigPF2e_enableScale=function(html){const scale=html.querySelector(".form-group.scale");if(!scale)throw(0,_util_1.ErrorPF2e)("Scale form group missing");scale.classList.remove("children-disabled");const rangeInput=scale.querySelector("input[type=range]");if(rangeInput){rangeInput.disabled=!1;const rangeDisplayValue=scale.querySelector(".range-value");rangeDisplayValue&&(rangeDisplayValue.innerHTML=rangeInput.value)}},_TokenConfigPF2e_disableVisionInputs=function(html){var _a,_b,_c,_d,_e;if(!(["character","familiar"].includes(null!==(_b=null===(_a=this.actor)||void 0===_a?void 0:_a.type)&&void 0!==_b?_b:"")&&(this.token.rulesBasedVision||this.isPrototype&&game.settings.get("pf2e","automation.rulesBasedVision"))))return;const sightInputNames=["angle","brightness","range","saturation","visionMode"].map((n=>`sight.${n}`)),sightInputs=Array.from(html.querySelectorAll(sightInputNames.map((n=>`[name="${n}"]`)).join(", "))),sightEnabledInput=html.querySelector('input[name="sight.enabled"]');if(!sightEnabledInput)throw(0,_util_1.ErrorPF2e)("sight.enabled input not found");sightEnabledInput.addEventListener("change",(()=>{var _a,_b,_c;for(const input of sightInputs)if(input.disabled=!sightEnabledInput.checked,"range"===input.type)sightEnabledInput.checked?null===(_b=input.closest(".form-group"))||void 0===_b||_b.classList.remove("children-disabled"):null===(_a=input.closest(".form-group"))||void 0===_a||_a.classList.add("children-disabled");else if("sight.color"===input.name){const colorInput=null===(_c=input.parentElement)||void 0===_c?void 0:_c.querySelector("input[type=color]");colorInput&&(colorInput.disabled=!sightEnabledInput.checked)}}));for(const input of sightInputs)input.disabled=!0,"range"===input.type&&(null===(_c=input.closest(".form-group"))||void 0===_c||_c.classList.add("children-disabled"));null===(_d=html.querySelector("a.item[data-tab=detection]"))||void 0===_d||_d.classList.add("disabled");const managedBy=document.createElement("a");managedBy.className="managed-by-rbv",managedBy.append((0,_util_1.fontAwesomeIcon)("robot")),managedBy.title=game.i18n.localize("PF2E.SETTINGS.Automation.RulesBasedVision.ManagedBy").replace(/<\/?rbv>/g,"");for(const sightInput of sightInputs){const anchor=managedBy.cloneNode(!0);anchor.addEventListener("click",(()=>{const menu=game.settings.menus.get("pf2e.automation");if(!menu)throw(0,_util_1.ErrorPF2e)("Automation Settings application not found");(new menu.type).render(!0)}));const label=null===(_e=sightInput.closest(".form-group"))||void 0===_e?void 0:_e.querySelector("label");null==label||label.append(anchor)}}},69554:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.processTagifyInSubmitData=exports.maintainTagifyFocusInRender=exports.createSheetTags=exports.createSheetOptions=void 0;const _util_1=__webpack_require__(6945);function createSheetOptions(options,selections=[],{selected=!1}={}){const sheetOptions=Object.entries(options).reduce(((compiledOptions,[stringKey,label])=>{const selectionList=Array.isArray(selections)?selections:selections.value,key="number"==typeof selectionList[0]?Number(stringKey):stringKey,isSelected=selectionList.includes(key);return!isSelected&&selected||(compiledOptions[key]={label:game.i18n.localize(label),value:stringKey,selected:isSelected}),compiledOptions}),{});return selections.custom&&(sheetOptions.custom={label:selections.custom,value:"",selected:!0}),(0,_util_1.sortLabeledRecord)(sheetOptions)}exports.createSheetOptions=createSheetOptions,exports.createSheetTags=function(options,selections){return createSheetOptions(options,selections,{selected:!0})},exports.processTagifyInSubmitData=function(form,data){const tagifyInputElements=form.querySelectorAll("tags.tagify ~ input");for(const inputEl of tagifyInputElements.values()){const path=inputEl.name,inputValue=data[path],selections=inputValue&&"string"==typeof inputValue?JSON.parse(inputValue):inputValue;Array.isArray(selections)&&(data[path]=selections.filter((s=>!s.readonly)).map((s=>{var _a;return null!==(_a=s.id)&&void 0!==_a?_a:s.value})))}},exports.maintainTagifyFocusInRender=async function(sheet,renderLogic){var _a,_b;const element=sheet.element[0],active=document.activeElement,activeWasHere=null==element?void 0:element.contains(active);if(await renderLogic(),activeWasHere&&(null==active?void 0:active.classList.contains("tagify__input"))){const name=null===(_a=(0,_util_1.htmlClosest)(active,"tags"))||void 0===_a?void 0:_a.dataset.name;name&&sheet.element[0]&&(null===(_b=(0,_util_1.htmlQuery)(element,`tags[data-name="${name}"] span[contenteditable]`))||void 0===_b||_b.focus())}}},55458:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.balance=void 0;const __1=__webpack_require__(2604);exports.balance=function(options){var _a,_b;const{checkType,property,stat,subtitle}=__1.ActionMacroHelpers.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"acrobatics");__1.ActionMacroHelpers.simpleRollActionCheck({actors:options.actors,statName:property,actionGlyph:null!==(_b=options.glyph)&&void 0!==_b?_b:"A",title:"PF2E.Actions.Balance.Title",subtitle,modifiers:options.modifiers,rollOptions:["all",checkType,stat,"action:balance"],extraOptions:["action:balance"],traits:["move"],checkType,event:options.event,callback:options.callback,difficultyClass:options.difficultyClass,extraNotes:selector=>[__1.ActionMacroHelpers.note(selector,"PF2E.Actions.Balance","criticalSuccess"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.Balance","success"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.Balance","failure"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.Balance","criticalFailure")]})}},97198:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.maneuverInFlight=void 0;const __1=__webpack_require__(2604);exports.maneuverInFlight=function(options){var _a,_b;const{checkType,property,stat,subtitle}=__1.ActionMacroHelpers.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"acrobatics");__1.ActionMacroHelpers.simpleRollActionCheck({actors:options.actors,statName:property,actionGlyph:null!==(_b=options.glyph)&&void 0!==_b?_b:"A",title:"PF2E.Actions.ManeuverInFlight.Title",subtitle,modifiers:options.modifiers,rollOptions:["all",checkType,stat,"action:maneuver-in-flight"],extraOptions:["action:maneuver-in-flight"],traits:["move"],checkType,event:options.event,callback:options.callback,difficultyClass:options.difficultyClass,extraNotes:selector=>[__1.ActionMacroHelpers.note(selector,"PF2E.Actions.ManeuverInFlight","criticalSuccess"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.ManeuverInFlight","success"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.ManeuverInFlight","failure"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.ManeuverInFlight","criticalFailure")]})}},19561:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.squeeze=void 0;const __1=__webpack_require__(2604);exports.squeeze=function(options){var _a;const{checkType,property,stat,subtitle}=__1.ActionMacroHelpers.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"acrobatics");__1.ActionMacroHelpers.simpleRollActionCheck({actors:options.actors,statName:property,actionGlyph:options.glyph,title:"PF2E.Actions.Squeeze.Title",subtitle,modifiers:options.modifiers,rollOptions:["all",checkType,stat,"action:squeeze"],extraOptions:["action:squeeze"],traits:["exploration","move"],checkType,event:options.event,callback:options.callback,difficultyClass:options.difficultyClass,extraNotes:selector=>[__1.ActionMacroHelpers.note(selector,"PF2E.Actions.Squeeze","criticalSuccess"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.Squeeze","success"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.Squeeze","criticalFailure")]})}},89458:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.tumbleThrough=void 0;const __1=__webpack_require__(2604);exports.tumbleThrough=function(options){var _a,_b;const{checkType,property,stat,subtitle}=__1.ActionMacroHelpers.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"acrobatics");__1.ActionMacroHelpers.simpleRollActionCheck({actors:options.actors,statName:property,actionGlyph:null!==(_b=options.glyph)&&void 0!==_b?_b:"A",title:"PF2E.Actions.TumbleThrough.Title",subtitle,modifiers:options.modifiers,rollOptions:["all",checkType,stat,"action:tumble-through"],extraOptions:["action:tumble-through"],traits:["move"],checkType,event:options.event,callback:options.callback,difficultyClass:options.difficultyClass,difficultyClassStatistic:target=>target.saves.reflex,extraNotes:selector=>[__1.ActionMacroHelpers.note(selector,"PF2E.Actions.TumbleThrough","criticalSuccess"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.TumbleThrough","success"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.TumbleThrough","failure"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.TumbleThrough","criticalFailure")]})}},20573:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.arcaneSlam=void 0;const __1=__webpack_require__(2604),notes_1=__webpack_require__(46379),predication_1=__webpack_require__(538),_actor_1=__webpack_require__(85530),modifiers_1=__webpack_require__(92823);exports.arcaneSlam=function(options){var _a,_b;const{checkType,property,stat,subtitle}=__1.ActionMacroHelpers.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"athletics"),{actor,token}=__1.ActionMacroHelpers.target();__1.ActionMacroHelpers.simpleRollActionCheck({actors:options.actors,statName:property,actionGlyph:null!==(_b=options.glyph)&&void 0!==_b?_b:"D",title:"PF2E.Actions.ArcaneSlam.Title",subtitle,modifiers:roller=>{var _a;const modifiers=(null===(_a=options.modifiers)||void 0===_a?void 0:_a.length)?[...options.modifiers]:[];if(roller instanceof _actor_1.CreaturePF2e&&actor instanceof _actor_1.CreaturePF2e){const attackerSize=roller.system.traits.size,targetSize=actor.system.traits.size,sizeDifference=attackerSize.difference(targetSize),sizeModifier=new modifiers_1.ModifierPF2e("PF2E.Actions.ArcaneSlam.Modifier.SizeDifference",Math.clamped(2*sizeDifference,-4,4),modifiers_1.MODIFIER_TYPE.CIRCUMSTANCE);sizeModifier.modifier&&modifiers.push(sizeModifier)}return modifiers},rollOptions:["all",checkType,stat,"action:arcane-slam"],extraOptions:["action:arcane-slam"],traits:["automaton"],checkType,event:options.event,callback:options.callback,difficultyClass:options.difficultyClass,difficultyClassStatistic:target=>target.saves.fortitude,extraNotes:selector=>{const notes=[__1.ActionMacroHelpers.note(selector,"PF2E.Actions.ArcaneSlam","criticalSuccess"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.ArcaneSlam","success"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.ArcaneSlam","failure"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.ArcaneSlam","criticalFailure")];if(!actor){const translated=game.i18n.localize("PF2E.Actions.ArcaneSlam.Notes.NoTarget");notes.unshift(new notes_1.RollNotePF2e({selector,text:`<p class="compact-text">${translated}</p>`,predicate:new predication_1.PredicatePF2e,outcome:[]}))}return notes},target:()=>actor&&token?{actor,token}:null})}},88865:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.climb=void 0;const __1=__webpack_require__(2604);exports.climb=function(options){var _a,_b;const{checkType,property,stat,subtitle}=__1.ActionMacroHelpers.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"athletics");__1.ActionMacroHelpers.simpleRollActionCheck({actors:options.actors,statName:property,actionGlyph:null!==(_b=options.glyph)&&void 0!==_b?_b:"A",title:"PF2E.Actions.Climb.Title",subtitle,modifiers:options.modifiers,rollOptions:["all",checkType,stat,"action:climb"],extraOptions:["action:climb"],traits:["move"],checkType,event:options.event,callback:options.callback,difficultyClass:options.difficultyClass,extraNotes:selector=>[__1.ActionMacroHelpers.note(selector,"PF2E.Actions.Climb","criticalSuccess"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.Climb","success"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.Climb","criticalFailure")]})}},45713:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.disarm=void 0;const __1=__webpack_require__(2604);exports.disarm=function(options){var _a,_b;const{checkType,property,stat,subtitle}=__1.ActionMacroHelpers.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"athletics");__1.ActionMacroHelpers.simpleRollActionCheck({actors:options.actors,statName:property,actionGlyph:null!==(_b=options.glyph)&&void 0!==_b?_b:"A",title:"PF2E.Actions.Disarm.Title",subtitle,modifiers:options.modifiers,rollOptions:["all",checkType,stat,"action:disarm"],extraOptions:["action:disarm"],traits:["attack"],checkType,event:options.event,callback:options.callback,difficultyClass:options.difficultyClass,difficultyClassStatistic:target=>target.saves.reflex,extraNotes:selector=>[__1.ActionMacroHelpers.note(selector,"PF2E.Actions.Disarm","criticalSuccess"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.Disarm","success"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.Disarm","criticalFailure")],weaponTrait:"disarm"})}},2974:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.forceOpen=void 0;const __1=__webpack_require__(2604);exports.forceOpen=function(options){var _a,_b;const{checkType,property,stat,subtitle}=__1.ActionMacroHelpers.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"athletics");__1.ActionMacroHelpers.simpleRollActionCheck({actors:options.actors,statName:property,actionGlyph:null!==(_b=options.glyph)&&void 0!==_b?_b:"A",title:"PF2E.Actions.ForceOpen.Title",subtitle,modifiers:options.modifiers,rollOptions:["all",checkType,stat,"action:force-open"],extraOptions:["action:force-open"],traits:["attack"],checkType,event:options.event,callback:options.callback,difficultyClass:options.difficultyClass,extraNotes:selector=>[__1.ActionMacroHelpers.note(selector,"PF2E.Actions.ForceOpen","criticalSuccess"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.ForceOpen","success"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.ForceOpen","criticalFailure")]})}},96632:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.grapple=void 0;const __1=__webpack_require__(2604);exports.grapple=function(options){var _a,_b;const{checkType,property,stat,subtitle}=__1.ActionMacroHelpers.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"athletics");__1.ActionMacroHelpers.simpleRollActionCheck({actors:options.actors,statName:property,actionGlyph:null!==(_b=options.glyph)&&void 0!==_b?_b:"A",title:"PF2E.Actions.Grapple.Title",subtitle,modifiers:options.modifiers,rollOptions:["all",checkType,stat,"action:grapple"],extraOptions:["action:grapple"],traits:["attack"],checkType,event:options.event,callback:options.callback,difficultyClass:options.difficultyClass,difficultyClassStatistic:target=>target.saves.fortitude,extraNotes:selector=>[__1.ActionMacroHelpers.note(selector,"PF2E.Actions.Grapple","criticalSuccess"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.Grapple","success"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.Grapple","failure"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.Grapple","criticalFailure")],weaponTrait:"grapple"})}},21695:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.highJump=void 0;const __1=__webpack_require__(2604);exports.highJump=function(options){var _a,_b;const{checkType,property,stat,subtitle}=__1.ActionMacroHelpers.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"athletics");__1.ActionMacroHelpers.simpleRollActionCheck({actors:options.actors,statName:property,actionGlyph:null!==(_b=options.glyph)&&void 0!==_b?_b:"D",title:"PF2E.Actions.HighJump.Title",subtitle,modifiers:options.modifiers,rollOptions:["all",checkType,stat,"action:stride","action:leap","action:high-jump"],extraOptions:["action:stride","action:leap","action:high-jump"],traits:["move"],checkType,event:options.event,callback:options.callback,difficultyClass:options.difficultyClass,extraNotes:selector=>[__1.ActionMacroHelpers.note(selector,"PF2E.Actions.HighJump","criticalSuccess"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.HighJump","success"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.HighJump","failure"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.HighJump","criticalFailure")]})}},64363:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.longJump=void 0;const __1=__webpack_require__(2604);exports.longJump=function(options){var _a,_b;const{checkType,property,stat,subtitle}=__1.ActionMacroHelpers.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"athletics");__1.ActionMacroHelpers.simpleRollActionCheck({actors:options.actors,statName:property,actionGlyph:null!==(_b=options.glyph)&&void 0!==_b?_b:"D",title:"PF2E.Actions.LongJump.Title",subtitle,modifiers:options.modifiers,rollOptions:["all",checkType,stat,"action:stride","action:leap","action:long-jump"],extraOptions:["action:stride","action:leap","action:long-jump"],traits:["move"],checkType,event:options.event,callback:options.callback,difficultyClass:options.difficultyClass,extraNotes:selector=>[__1.ActionMacroHelpers.note(selector,"PF2E.Actions.LongJump","criticalSuccess"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.LongJump","success"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.LongJump","failure"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.LongJump","criticalFailure")]})}},37897:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.shove=void 0;const __1=__webpack_require__(2604);exports.shove=function(options){var _a,_b;const{checkType,property,stat,subtitle}=__1.ActionMacroHelpers.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"athletics");__1.ActionMacroHelpers.simpleRollActionCheck({actors:options.actors,statName:property,actionGlyph:null!==(_b=options.glyph)&&void 0!==_b?_b:"A",title:"PF2E.Actions.Shove.Title",subtitle,modifiers:options.modifiers,rollOptions:["all",checkType,stat,"action:shove"],extraOptions:["action:shove"],traits:["attack"],checkType,event:options.event,callback:options.callback,difficultyClass:options.difficultyClass,difficultyClassStatistic:target=>target.saves.fortitude,extraNotes:selector=>[__1.ActionMacroHelpers.note(selector,"PF2E.Actions.Shove","criticalSuccess"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.Shove","success"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.Shove","criticalFailure")],weaponTrait:"shove"})}},32152:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.swim=void 0;const __1=__webpack_require__(2604);exports.swim=function(options){var _a,_b;const{checkType,property,stat,subtitle}=__1.ActionMacroHelpers.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"athletics");__1.ActionMacroHelpers.simpleRollActionCheck({actors:options.actors,statName:property,actionGlyph:null!==(_b=options.glyph)&&void 0!==_b?_b:"A",title:"PF2E.Actions.Swim.Title",subtitle,modifiers:options.modifiers,rollOptions:["all",checkType,stat,"action:swim"],extraOptions:["action:swim"],traits:["move"],checkType,event:options.event,callback:options.callback,difficultyClass:options.difficultyClass,extraNotes:selector=>[__1.ActionMacroHelpers.note(selector,"PF2E.Actions.Swim","criticalSuccess"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.Swim","success"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.Swim","criticalFailure")]})}},54758:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.trip=void 0;const __1=__webpack_require__(2604);exports.trip=function(options){var _a,_b;const{checkType,property,stat,subtitle}=__1.ActionMacroHelpers.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"athletics");__1.ActionMacroHelpers.simpleRollActionCheck({actors:options.actors,statName:property,actionGlyph:null!==(_b=options.glyph)&&void 0!==_b?_b:"A",title:"PF2E.Actions.Trip.Title",subtitle,modifiers:options.modifiers,rollOptions:["all",checkType,stat,"action:trip"],extraOptions:["action:trip"],traits:["attack"],checkType,event:options.event,callback:options.callback,difficultyClass:options.difficultyClass,difficultyClassStatistic:target=>target.saves.reflex,extraNotes:selector=>[__1.ActionMacroHelpers.note(selector,"PF2E.Actions.Trip","criticalSuccess"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.Trip","success"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.Trip","criticalFailure")],weaponTrait:"trip",weaponTraitWithPenalty:"ranged-trip"})}},94133:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.whirlingThrow=void 0;const __1=__webpack_require__(2604),modifiers_1=__webpack_require__(92823),_actor_1=__webpack_require__(85530);exports.whirlingThrow=function(options){var _a,_b;const{checkType,property,stat,subtitle}=__1.ActionMacroHelpers.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"athletics"),actor=canvas.tokens.controlled.map((token=>token.actor))[0],target=Array.from(game.user.targets).filter((token=>token.actor instanceof _actor_1.CreaturePF2e))[0].actor;if(options.modifiers||(options.modifiers=[]),target instanceof _actor_1.CreaturePF2e&&actor instanceof _actor_1.CreaturePF2e){const actorSize=actor.system.traits.size,targetSize=target.system.traits.size,sizeModifier=new modifiers_1.ModifierPF2e("Size Modifier",function(actorSize,targetSize){const sizeDifference=actorSize.difference(targetSize);return Math.clamped(2*sizeDifference,-4,4)}(actorSize,targetSize),modifiers_1.MODIFIER_TYPE.CIRCUMSTANCE);sizeModifier.modifier&&options.modifiers.push(sizeModifier)}__1.ActionMacroHelpers.simpleRollActionCheck({actors:options.actors,statName:property,actionGlyph:null!==(_b=options.glyph)&&void 0!==_b?_b:"A",title:"PF2E.Actions.WhirlingThrow.Title",subtitle,modifiers:options.modifiers,rollOptions:["all",checkType,stat,"action:whirling-throw"],extraOptions:["action:whirling-throw"],traits:["monk"],checkType,event:options.event,callback:options.callback,difficultyClass:options.difficultyClass,difficultyClassStatistic:target=>target.saves.fortitude,extraNotes:selector=>[__1.ActionMacroHelpers.note(selector,"PF2E.Actions.WhirlingThrow","criticalSuccess"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.WhirlingThrow","success"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.WhirlingThrow","failure"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.WhirlingThrow","criticalFailure")]})}},49630:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.seek=void 0;const __1=__webpack_require__(2604);exports.seek=function(options){var _a,_b;const{checkType,property,stat,subtitle}=__1.ActionMacroHelpers.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"perception");__1.ActionMacroHelpers.simpleRollActionCheck({actors:options.actors,statName:property,actionGlyph:null!==(_b=options.glyph)&&void 0!==_b?_b:"A",title:"PF2E.Actions.Seek.Title",subtitle,modifiers:options.modifiers,rollOptions:["all",checkType,stat,"action:seek"],extraOptions:["action:seek"],traits:["concentrate","secret"],checkType,event:options.event,callback:options.callback,difficultyClass:options.difficultyClass,extraNotes:selector=>[__1.ActionMacroHelpers.note(selector,"PF2E.Actions.Seek","criticalSuccess"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.Seek","success")]})}},35965:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.senseMotive=void 0;const __1=__webpack_require__(2604);exports.senseMotive=function(options){var _a,_b;const{checkType,property,stat,subtitle}=__1.ActionMacroHelpers.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"perception");__1.ActionMacroHelpers.simpleRollActionCheck({actors:options.actors,statName:property,actionGlyph:null!==(_b=options.glyph)&&void 0!==_b?_b:"A",title:"PF2E.Actions.SenseMotive.Title",subtitle,modifiers:options.modifiers,rollOptions:["all",checkType,stat,"action:sense-motive"],extraOptions:["action:sense-motive"],traits:["concentrate","secret"],checkType,event:options.event,callback:options.callback,difficultyClass:options.difficultyClass,difficultyClassStatistic:target=>target.skills.deception,extraNotes:selector=>[__1.ActionMacroHelpers.note(selector,"PF2E.Actions.SenseMotive","criticalSuccess"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.SenseMotive","success"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.SenseMotive","failure"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.SenseMotive","criticalFailure")]})}},82099:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.tamper=void 0;const __1=__webpack_require__(2604);exports.tamper=function(options){var _a,_b;const{checkType,property,stat,subtitle}=__1.ActionMacroHelpers.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"crafting");__1.ActionMacroHelpers.simpleRollActionCheck({actors:options.actors,statName:property,actionGlyph:null!==(_b=options.glyph)&&void 0!==_b?_b:"A",title:"PF2E.Actions.Tamper.Title",subtitle,modifiers:options.modifiers,rollOptions:["all",checkType,stat,"action:tamper"],extraOptions:["action:tamper"],traits:["inventor","manipulate"],checkType,event:options.event,callback:options.callback,difficultyClass:options.difficultyClass,difficultyClassStatistic:target=>target.saves.reflex,extraNotes:selector=>[__1.ActionMacroHelpers.note(selector,"PF2E.Actions.Tamper","criticalSuccess"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.Tamper","success"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.Tamper","criticalFailure")]})}},61297:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.craft=void 0;const helpers_1=__webpack_require__(79911),_item_1=__webpack_require__(10843),chat_message_1=__webpack_require__(40405),dc_1=__webpack_require__(84372),helpers_2=__webpack_require__(87363);exports.craft=async function(options){var _a,_b,_c,_d;const{checkType,property,stat,subtitle}=helpers_2.ActionMacroHelpers.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"crafting"),item=null!==(_b=options.item)&&void 0!==_b?_b:options.uuid?await fromUuid(options.uuid):await SelectItemDialog.getItem();if(!item)return void console.warn("PF2e System | No item selected to craft: aborting");if(!(item instanceof _item_1.PhysicalItemPF2e))return void ui.notifications.warn(game.i18n.format("PF2E.Actions.Craft.Warning.NotPhysicalItem",{item:item.name}));const quantity=null!==(_c=options.quantity)&&void 0!==_c?_c:1,proficiencyWithoutLevel="ProficiencyWithoutLevel"===game.settings.get("pf2e","proficiencyVariant"),dc=null!==(_d=options.difficultyClass)&&void 0!==_d?_d:{value:(0,dc_1.calculateDC)(item.level,{proficiencyWithoutLevel}),visible:!0},free=!!options.free;helpers_2.ActionMacroHelpers.simpleRollActionCheck({actors:options.actors,statName:property,actionGlyph:options.glyph,title:"PF2E.Actions.Craft.Title",subtitle,modifiers:options.modifiers,rollOptions:["all",checkType,stat,"action:craft"],extraOptions:["action:craft"],traits:["downtime","manipulate"],checkType,event:options.event,difficultyClass:dc,extraNotes:selector=>[helpers_2.ActionMacroHelpers.note(selector,"PF2E.Actions.Craft","criticalSuccess"),helpers_2.ActionMacroHelpers.note(selector,"PF2E.Actions.Craft","success"),helpers_2.ActionMacroHelpers.note(selector,"PF2E.Actions.Craft","failure"),helpers_2.ActionMacroHelpers.note(selector,"PF2E.Actions.Craft","criticalFailure")],createMessage:!1,callback:async result=>{var _a;if(result.message instanceof chat_message_1.ChatMessagePF2e){const message=result.message,flavor=await(async()=>{var _a;return["criticalSuccess","success","criticalFailure"].includes(null!==(_a=result.outcome)&&void 0!==_a?_a:"")?await(0,helpers_1.renderCraftingInline)(item,result.roll,quantity,result.actor,free):""})();flavor&&message.updateSource({flavor:message.flavor+flavor}),ChatMessage.create(message.toObject())}else console.error("PF2E | Unable to amend chat message with craft result.",result.message);null===(_a=options.callback)||void 0===_a||_a.call(options,result)}})};class SelectItemDialog extends Application{constructor(resolve){super({classes:["select-craft-item-dialog"],template:"systems/pf2e/templates/system/actions/craft-target-item.html",title:"PF2E.Actions.Craft.SelectItemDialog.Title",width:270}),this.resolve=resolve,this.item=null}async getData(){const data=await super.getData();return data.item=this.item,data}activateListeners($html){super.activateListeners($html),$html.on("drop",(async event=>{var _a,_b;const json=null===(_b=null===(_a=event.originalEvent)||void 0===_a?void 0:_a.dataTransfer)||void 0===_b?void 0:_b.getData("text/plain");if(!(null==json?void 0:json.startsWith("{"))||!json.endsWith("}"))return;const data=JSON.parse(json),item=await(async()=>"Item"===data.type&&data.pack&&data.id?await fromUuid(`Compendium.${data.pack}.${data.id}`):"Item"===data.type&&data.id?await fromUuid(`Item.${data.id}`):null)();item instanceof _item_1.PhysicalItemPF2e?(this.item=item,this.render()):ui.notifications.error(game.i18n.localize("PF2E.Actions.Craft.Error.ItemReferenceMismatch"))})),$html.find("[data-event-handler=craft]").on("click",(()=>{this.close()})),$html.find("[data-event-handler=cancel]").on("click",(()=>{this.item=null,this.close()}))}close(options){return this.resolve(this.item),super.close(options)}static async getItem(){return new Promise((resolve=>{new SelectItemDialog(resolve).render(!0)}))}}},41549:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.repair=exports.craft=void 0;var craft_1=__webpack_require__(61297);Object.defineProperty(exports,"craft",{enumerable:!0,get:function(){return craft_1.craft}});var repair_1=__webpack_require__(10428);Object.defineProperty(exports,"repair",{enumerable:!0,get:function(){return repair_1.repair}})},10428:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.repair=exports.onRepairChatCardEvent=void 0;const _item_1=__webpack_require__(10843),chat_message_1=__webpack_require__(40405),dc_1=__webpack_require__(84372),helpers_1=__webpack_require__(87363),_actor_1=__webpack_require__(85530);exports.repair=async function(options){var _a,_b,_c,_d;const{checkType,property,stat,subtitle}=helpers_1.ActionMacroHelpers.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"crafting"),item=null!==(_b=options.item)&&void 0!==_b?_b:options.uuid?await fromUuid(options.uuid):await SelectItemDialog.getItem();if(item&&!(item instanceof _item_1.PhysicalItemPF2e))return void ui.notifications.warn(game.i18n.format("PF2E.Actions.Repair.Warning.NotPhysicalItem",{item:item.name}));const dc=null!==(_c=options.difficultyClass)&&void 0!==_c?_c:(()=>{if(item){const proficiencyWithoutLevel="ProficiencyWithoutLevel"===game.settings.get("pf2e","proficiencyVariant");return{label:game.i18n.format("PF2E.Actions.Repair.Labels.ItemLevelRepairDC",{level:item.level}),value:(0,dc_1.calculateDC)(item.level,{proficiencyWithoutLevel}),visibility:"all"}}})(),targetItemOptions=Array.from(null!==(_d=null==item?void 0:item.traits)&&void 0!==_d?_d:[]).map((trait=>`target:trait:${trait}`));helpers_1.ActionMacroHelpers.simpleRollActionCheck({actors:options.actors,statName:property,actionGlyph:options.glyph,title:"PF2E.Actions.Repair.Title",subtitle,content:async title=>{if(item){const templatePath="systems/pf2e/templates/system/actions/repair/item-heading-partial.html",templateData={item};return title+await renderTemplate(templatePath,templateData)}},modifiers:options.modifiers,rollOptions:["all",checkType,stat,"action:repair"],extraOptions:["action:repair",...targetItemOptions],traits:["exploration","manipulate"],checkType,event:options.event,difficultyClass:dc,extraNotes:selector=>[helpers_1.ActionMacroHelpers.note(selector,"PF2E.Actions.Repair","criticalSuccess"),helpers_1.ActionMacroHelpers.note(selector,"PF2E.Actions.Repair","success"),helpers_1.ActionMacroHelpers.note(selector,"PF2E.Actions.Repair","criticalFailure")],createMessage:!1,callback:async result=>{if(item&&result.message instanceof chat_message_1.ChatMessagePF2e){const messageSource=result.message.toObject(),flavor=await(async()=>{const proficiencyRank=result.actor instanceof _actor_1.CharacterPF2e?result.actor.skills.crafting.rank:0;if("criticalSuccess"===result.outcome){const label="PF2E.Actions.Repair.Labels.RestoreItemHitPoints",restored=String(10+10*proficiencyRank);return renderRepairResult(item,"restore",label,restored)}if("success"===result.outcome){const label="PF2E.Actions.Repair.Labels.RestoreItemHitPoints",restored=String(5+5*proficiencyRank);return renderRepairResult(item,"restore",label,restored)}if("criticalFailure"===result.outcome){return renderRepairResult(item,"roll-damage","PF2E.Actions.Repair.Labels.RollItemDamage","2d6")}return""})();flavor&&(messageSource.flavor+=flavor),await ChatMessage.create(messageSource)}}})};class SelectItemDialog extends Application{constructor(resolve){super({classes:["select-repair-item-dialog"],template:"systems/pf2e/templates/system/actions/repair/select-item-dialog.html",title:"PF2E.Actions.Repair.SelectItemDialog.Title",width:270}),this.resolve=resolve,this.item=null}async getData(){const data=await super.getData();return data.item=this.item,data}activateListeners($html){super.activateListeners($html),$html.on("drop",(async event=>{var _a,_b,_c;const json=null===(_c=null===(_b=null===(_a=event.originalEvent)||void 0===_a?void 0:_a.dataTransfer)||void 0===_b?void 0:_b.getData("text/plain"))||void 0===_c?void 0:_c.trim();if(!(null==json?void 0:json.startsWith("{"))||!json.endsWith("}"))return;const data=JSON.parse(json),item=await(async()=>{var _a;return"Item"===data.type&&data.actorId&&(null===(_a=data.data)||void 0===_a?void 0:_a._id)?await fromUuid(`Actor.${data.actorId}.Item.${data.data._id}`):null})();item instanceof _item_1.PhysicalItemPF2e?(this.item=item,this.render()):ui.notifications.error(game.i18n.localize("PF2E.Actions.Repair.Error.ItemReferenceMismatch"))})),$html.find("[data-event-handler=repair]").on("click",(()=>{this.close()})),$html.find("[data-event-handler=cancel]").on("click",(()=>{this.item=null,this.close()}))}close(options){return this.resolve(this.item),super.close(options)}static async getItem(){return new Promise((resolve=>{new SelectItemDialog(resolve).render(!0)}))}}async function renderRepairResult(item,result,buttonLabel,value){const label=game.i18n.format(buttonLabel,{value});return renderTemplate("systems/pf2e/templates/system/actions/repair/repair-result-partial.html",{item,label,result,value})}exports.onRepairChatCardEvent=async function(event,message,$card){var _a,_b,_c,_d,_e;const itemUuid=$card.attr("data-item-uuid"),item=await fromUuid(null!=itemUuid?itemUuid:"");if(!(item instanceof _item_1.PhysicalItemPF2e))return;const $button=$(event.currentTarget),repair=$button.attr("data-repair"),speaker=message&&chat_message_1.ChatMessagePF2e.getSpeaker({actor:message.actor,alias:message.alias,token:message.token});if("restore"===repair){const value=Number(null!==(_a=$button.attr("data-repair-value"))&&void 0!==_a?_a:"0"),beforeRepair=item.system.hp.value,afterRepair=Math.min(item.system.hp.max,beforeRepair+value);await item.update({"system.hp.value":afterRepair});const content=game.i18n.format("PF2E.Actions.Repair.Chat.ItemRepaired",{itemName:item.name,repairedDamage:afterRepair-beforeRepair,afterRepairHitPoints:afterRepair,maximumHitPoints:item.system.hp.max});await ChatMessage.create({content,speaker})}else if("roll-damage"===repair){const roll=await Roll.create("2d6").evaluate({async:!0}),templatePath="systems/pf2e/templates/system/actions/repair/roll-damage-chat-message.html",flavor=await renderTemplate(templatePath,{damage:{dealt:Math.max(0,roll.total-item.system.hardness),rolled:roll.total},item});await roll.toMessage({flags:{pf2e:{suppressDamageButtons:!0}},flavor,speaker})}else if("damage"===repair){const hardness=Math.max(0,item.system.hardness),damage=(null!==(_c=null===(_b=null==message?void 0:message.rolls.at(0))||void 0===_b?void 0:_b.total)&&void 0!==_c?_c:0)-hardness;if(damage>0){const beforeDamage=item.system.hp.value,afterDamage=Math.max(0,item.system.hp.value-damage);await item.update({"system.hp.value":afterDamage});const content=game.i18n.format("PF2E.Actions.Repair.Chat.ItemDamaged",{itemName:item.name,damageDealt:beforeDamage-afterDamage,afterDamageHitPoints:afterDamage,maximumHitPoints:item.system.hp.max});await ChatMessage.create({content,speaker})}else{const templatePath="systems/pf2e/templates/system/actions/repair/roll-damage-chat-message.html",content=await renderTemplate(templatePath,{damage:{dealt:0,rolled:null!==(_e=null===(_d=null==message?void 0:message.rolls.at(0))||void 0===_d?void 0:_d.total)&&void 0!==_e?_e:0},item});await ChatMessage.create({content,speaker})}}}},13613:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.createADiversion=void 0;const __1=__webpack_require__(2604);exports.createADiversion=function(options){var _a,_b;const{checkType,property,stat,subtitle}=__1.ActionMacroHelpers.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"deception");let title="PF2E.Actions.CreateADiversion.";const traits=["mental"];switch(options.variant){case"distracting-words":title+="DistractingWords",traits.push("auditory","linguistic");break;case"gesture":title+="Gesture",traits.push("manipulate");break;case"trick":title+="Trick",traits.push("manipulate");break;default:{const msg=game.i18n.format("PF2E.ActionsWarning.DeceptionUnknownVariant",{variant:options.variant});return void ui.notifications.error(msg)}}__1.ActionMacroHelpers.simpleRollActionCheck({actors:options.actors,statName:property,actionGlyph:null!==(_b=options.glyph)&&void 0!==_b?_b:"A",title,subtitle,modifiers:options.modifiers,rollOptions:["all",checkType,stat,"action:create-a-diversion"],extraOptions:["action:create-a-diversion",options.variant],traits:traits.sort(),checkType,event:options.event,callback:options.callback,difficultyClass:options.difficultyClass,difficultyClassStatistic:target=>target.perception,extraNotes:selector=>[__1.ActionMacroHelpers.note(selector,"PF2E.Actions.CreateADiversion","criticalSuccess"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.CreateADiversion","success"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.CreateADiversion","failure"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.CreateADiversion","criticalFailure")]})}},60607:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.feint=void 0;const __1=__webpack_require__(2604);exports.feint=function(options){var _a,_b;const{checkType,property,stat,subtitle}=__1.ActionMacroHelpers.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"deception");__1.ActionMacroHelpers.simpleRollActionCheck({actors:options.actors,statName:property,actionGlyph:null!==(_b=options.glyph)&&void 0!==_b?_b:"A",title:"PF2E.Actions.Feint.Title",subtitle,modifiers:options.modifiers,rollOptions:["all",checkType,stat,"action:feint"],extraOptions:["action:feint"],traits:["mental"],checkType,event:options.event,callback:options.callback,difficultyClass:options.difficultyClass,difficultyClassStatistic:target=>target.perception,extraNotes:selector=>[__1.ActionMacroHelpers.note(selector,"PF2E.Actions.Feint","criticalSuccess"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.Feint","success"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.Feint","criticalFailure")]})}},44903:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.impersonate=void 0;const __1=__webpack_require__(2604);exports.impersonate=function(options){var _a;const{checkType,property,stat,subtitle}=__1.ActionMacroHelpers.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"deception");__1.ActionMacroHelpers.simpleRollActionCheck({actors:options.actors,statName:property,actionGlyph:options.glyph,title:"PF2E.Actions.Impersonate.Title",subtitle,modifiers:options.modifiers,rollOptions:["all",checkType,stat,"action:impersonate"],extraOptions:["action:impersonate"],traits:["concentrate","exploration","manipulate","secret"],checkType,event:options.event,callback:options.callback,difficultyClass:options.difficultyClass,difficultyClassStatistic:target=>target.perception,extraNotes:selector=>[__1.ActionMacroHelpers.note(selector,"PF2E.Actions.Impersonate","criticalSuccess"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.Impersonate","success"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.Impersonate","failure"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.Impersonate","criticalFailure")]})}},49602:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.lie=void 0;const __1=__webpack_require__(2604);exports.lie=function(options){var _a;const{checkType,property,stat,subtitle}=__1.ActionMacroHelpers.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"deception");__1.ActionMacroHelpers.simpleRollActionCheck({actors:options.actors,statName:property,actionGlyph:options.glyph,title:"PF2E.Actions.Lie.Title",subtitle,modifiers:options.modifiers,rollOptions:["all",checkType,stat,"action:lie"],extraOptions:["action:lie"],traits:["auditory","concentrate","linguistic","mental","secret"],checkType,event:options.event,callback:options.callback,difficultyClass:options.difficultyClass,difficultyClassStatistic:target=>target.perception,extraNotes:selector=>[__1.ActionMacroHelpers.note(selector,"PF2E.Actions.Lie","criticalSuccess"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.Lie","success"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.Lie","failure"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.Lie","criticalFailure")]})}},55648:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.bonMot=void 0;const __1=__webpack_require__(2604);exports.bonMot=function(options){var _a,_b;const{checkType,property,stat,subtitle}=__1.ActionMacroHelpers.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"diplomacy");__1.ActionMacroHelpers.simpleRollActionCheck({actors:options.actors,statName:property,actionGlyph:null!==(_b=options.glyph)&&void 0!==_b?_b:"A",title:"PF2E.Actions.BonMot.Title",subtitle,modifiers:options.modifiers,rollOptions:["all",checkType,stat,"action:bon-mot"],extraOptions:["action:bon-mot"],traits:["auditory","concentrate","emotion","linguistic","mental"],checkType,event:options.event,callback:options.callback,difficultyClass:options.difficultyClass,difficultyClassStatistic:target=>target.saves.will,extraNotes:selector=>[__1.ActionMacroHelpers.note(selector,"PF2E.Actions.BonMot","criticalSuccess"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.BonMot","success"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.BonMot","criticalFailure")]})}},94971:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.gatherInformation=void 0;const __1=__webpack_require__(2604);exports.gatherInformation=function(options){var _a;const{checkType,property,stat,subtitle}=__1.ActionMacroHelpers.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"diplomacy");__1.ActionMacroHelpers.simpleRollActionCheck({actors:options.actors,statName:property,actionGlyph:options.glyph,title:"PF2E.Actions.GatherInformation.Title",subtitle,modifiers:options.modifiers,rollOptions:["all",checkType,stat,"action:gather-information"],extraOptions:["action:gather-information"],traits:["exploration","secret"],checkType,event:options.event,callback:options.callback,difficultyClass:options.difficultyClass,extraNotes:selector=>[__1.ActionMacroHelpers.note(selector,"PF2E.Actions.GatherInformation","criticalSuccess"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.GatherInformation","success"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.GatherInformation","criticalFailure")]})}},51261:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.makeAnImpression=void 0;const __1=__webpack_require__(2604);exports.makeAnImpression=function(options){var _a;const{checkType,property,stat,subtitle}=__1.ActionMacroHelpers.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"diplomacy");__1.ActionMacroHelpers.simpleRollActionCheck({actors:options.actors,statName:property,actionGlyph:options.glyph,title:"PF2E.Actions.MakeAnImpression.Title",subtitle,modifiers:options.modifiers,rollOptions:["all",checkType,stat,"action:make-an-impression"],extraOptions:["action:make-an-impression"],traits:["auditory","concentrate","exploration","linguistic","mental"],checkType,event:options.event,callback:options.callback,difficultyClass:options.difficultyClass,difficultyClassStatistic:target=>target.saves.will,extraNotes:selector=>[__1.ActionMacroHelpers.note(selector,"PF2E.Actions.MakeAnImpression","criticalSuccess"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.MakeAnImpression","success"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.MakeAnImpression","criticalFailure")]})}},78325:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.request=void 0;const __1=__webpack_require__(2604);exports.request=function(options){var _a,_b;const{checkType,property,stat,subtitle}=__1.ActionMacroHelpers.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"diplomacy");__1.ActionMacroHelpers.simpleRollActionCheck({actors:options.actors,statName:property,actionGlyph:null!==(_b=options.glyph)&&void 0!==_b?_b:"A",title:"PF2E.Actions.Request.Title",subtitle,modifiers:options.modifiers,rollOptions:["all",checkType,stat,"action:request"],extraOptions:["action:request"],traits:["auditory","concentrate","linguistic","mental"],checkType,event:options.event,callback:options.callback,difficultyClass:options.difficultyClass,extraNotes:selector=>[__1.ActionMacroHelpers.note(selector,"PF2E.Actions.Request","criticalSuccess"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.Request","success"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.Request","failure"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.Request","criticalFailure")]})}},17202:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.avoidNotice=void 0;const __1=__webpack_require__(2604);exports.avoidNotice=function(options){var _a;const{checkType,property,stat,subtitle}=__1.ActionMacroHelpers.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"stealth");__1.ActionMacroHelpers.simpleRollActionCheck({actors:options.actors,statName:property,actionGlyph:options.glyph,title:"PF2E.Actions.AvoidNotice.Title",subtitle,modifiers:options.modifiers,rollOptions:["all",checkType,stat,"action:avoid-notice"],extraOptions:["action:avoid-notice"],traits:["exploration"],checkType,event:options.event,callback:options.callback,difficultyClass:options.difficultyClass,extraNotes:selector=>[__1.ActionMacroHelpers.note(selector,"PF2E.Actions.AvoidNotice","criticalSuccess"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.AvoidNotice","success")]})}},23935:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.senseDirection=void 0;const __1=__webpack_require__(2604),modifiers_1=__webpack_require__(92823);exports.senseDirection=function(options){var _a,_b;const{checkType,property,stat,subtitle}=__1.ActionMacroHelpers.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"survival"),modifiers=(null!==(_b=options.modifiers)&&void 0!==_b?_b:[]).concat(new modifiers_1.ModifierPF2e({label:"PF2E.Actions.SenseDirection.Modifier.NoCompass",modifier:-2,predicate:[{not:"compass-in-possession"}]}));__1.ActionMacroHelpers.simpleRollActionCheck({actors:options.actors,statName:property,actionGlyph:options.glyph,title:"PF2E.Actions.SenseDirection.Title",subtitle,modifiers,rollOptions:["all",checkType,stat,"action:sense-direction"],extraOptions:["action:sense-direction"],traits:["exploration","secret"],checkType,event:options.event,callback:options.callback,difficultyClass:options.difficultyClass,extraNotes:selector=>[__1.ActionMacroHelpers.note(selector,"PF2E.Actions.SenseDirection","criticalSuccess"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.SenseDirection","success")]})}},25491:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.track=void 0;const __1=__webpack_require__(2604);exports.track=function(options){var _a;const{checkType,property,stat,subtitle}=__1.ActionMacroHelpers.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"survival");__1.ActionMacroHelpers.simpleRollActionCheck({actors:options.actors,statName:property,actionGlyph:options.glyph,title:"PF2E.Actions.Track.Title",subtitle,modifiers:options.modifiers,rollOptions:["all",checkType,stat,"action:track"],extraOptions:["action:track"],traits:["concentrate","exploration","move"],checkType,event:options.event,callback:options.callback,difficultyClass:options.difficultyClass,extraNotes:selector=>[__1.ActionMacroHelpers.note(selector,"PF2E.Actions.Track","criticalSuccess"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.Track","success"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.Track","failure"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.Track","criticalFailure")]})}},87363:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.ActionMacroHelpers=void 0;const _actor_1=__webpack_require__(85530),values_1=__webpack_require__(8382),modifiers_1=__webpack_require__(92823),notes_1=__webpack_require__(46379),util_1=__webpack_require__(58903),_util_1=__webpack_require__(6945),token_actor_utils_1=__webpack_require__(35442),helpers_1=__webpack_require__(89503),check_1=__webpack_require__(11848);exports.ActionMacroHelpers=class ActionMacroHelpers{static resolveStat(stat){if("perception"===stat)return{checkType:"perception-check",property:"system.attributes.perception",stat,subtitle:"PF2E.ActionsCheck.perception"};{const slug=(0,_util_1.sluggify)(stat);return{checkType:"skill-check",property:`system.skills.${(0,_util_1.setHasElement)(values_1.SKILL_LONG_FORMS,slug)?values_1.SKILL_EXPANDED[slug].shortform:slug}`,stat,subtitle:`PF2E.ActionsCheck.${stat}`}}}static note(selector,translationPrefix,outcome,translationKey){const outcomes=game.settings.get("pf2e","metagame_showResults")?[outcome]:[];return new notes_1.RollNotePF2e({selector,text:game.i18n.localize(null!=translationKey?translationKey:`${translationPrefix}.Notes.${outcome}`),outcome:outcomes})}static async simpleRollActionCheck(options){var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l;const rollers=[];Array.isArray(options.actors)?rollers.push(...options.actors):options.actors?rollers.push(options.actors):rollers.push(...(0,token_actor_utils_1.getSelectedOrOwnActors)());const{token:target,actor:targetActor}=null!==(_b=null===(_a=options.target)||void 0===_a?void 0:_a.call(options))&&void 0!==_b?_b:this.target();if(0===rollers.length)return ui.notifications.warn(game.i18n.localize("PF2E.ActionsWarning.NoActor"));for(const actor of rollers){let title="";options.actionGlyph&&(title+=`<span class="pf2-icon">${options.actionGlyph}</span> `),title+=`<b>${game.i18n.localize(options.title)}</b>`,title+=` <p class="compact-text">(${game.i18n.localize(options.subtitle)})</p>`;const content=null!==(_d=await(null===(_c=options.content)||void 0===_c?void 0:_c.call(options,title)))&&void 0!==_d?_d:title,targetOptions=null!==(_e=null==targetActor?void 0:targetActor.getSelfRollOptions("target"))&&void 0!==_e?_e:[],selfToken=actor.getActiveTokens(!1,!0).shift(),combinedOptions=[actor.getRollOptions(options.rollOptions),options.extraOptions,options.traits,targetOptions,(null==target?void 0:target.object)&&(null==selfToken?void 0:selfToken.object.isFlanking(target.object,{reach:actor.getReach({action:"attack"})}))?"self:flanking":[]].flat(),selfActor=actor.getContextualClone(combinedOptions.filter((o=>o.startsWith("self:")))),weapon=(()=>{var _a;return options.traits.includes("attack")&&null!==(_a=[...options.weaponTrait?this.getApplicableEquippedWeapons(selfActor,options.weaponTrait):[],...options.weaponTraitWithPenalty?this.getApplicableEquippedWeapons(selfActor,options.weaponTraitWithPenalty):[]].shift())&&void 0!==_a?_a:null})();combinedOptions.push(...null!==(_f=null==weapon?void 0:weapon.getRollOptions("item"))&&void 0!==_f?_f:[]);const stat=getProperty(selfActor,options.statName),itemBonus=weapon&&"basic-unarmed"!==weapon.slug?this.getWeaponPotencyModifier(weapon,stat.slug):null,modifiers=null!==(_g="function"==typeof options.modifiers?options.modifiers(selfActor):options.modifiers)&&void 0!==_g?_g:[];itemBonus&&modifiers.push(itemBonus);const check=new modifiers_1.CheckModifier(content,stat,modifiers),domains=options.rollOptions,weaponTraits=null==weapon?void 0:weapon.traits;if("ranged-trip"===options.weaponTraitWithPenalty&&(null==weaponTraits?void 0:weaponTraits.has("ranged-trip"))){const slug="ranged-trip",syntheticAdjustments=selfActor.synthetics.modifierAdjustments;check.push(new modifiers_1.ModifierPF2e({slug,adjustments:(0,util_1.extractModifierAdjustments)(syntheticAdjustments,domains,slug),type:modifiers_1.MODIFIER_TYPE.CIRCUMSTANCE,label:CONFIG.PF2E.weaponTraits["ranged-trip"],modifier:-2}))}const dc=(()=>{var _a,_b;if(options.difficultyClass)return options.difficultyClass;if(targetActor instanceof _actor_1.CreaturePF2e){const dcStat=null===(_a=options.difficultyClassStatistic)||void 0===_a?void 0:_a.call(options,targetActor);if(dcStat){const extraRollOptions=combinedOptions.concat(targetOptions),{dc}=dcStat.withRollOptions({extraRollOptions}),dcData={value:dc.value,adjustments:null!==(_b=stat.adjustments)&&void 0!==_b?_b:[]};return(0,_util_1.setHasElement)(values_1.DC_SLUGS,dcStat.slug)&&(dcData.slug=dcStat.slug),dcData}}return null})(),finalOptions=new Set(combinedOptions);(0,modifiers_1.ensureProficiencyOption)(finalOptions,null!==(_h=stat.rank)&&void 0!==_h?_h:-1),check.calculateTotal(finalOptions);const actionTraits=CONFIG.PF2E.actionTraits,traitDescriptions=CONFIG.PF2E.traitsDescriptions,traitObjects=options.traits.map((trait=>{var _a;return{description:traitDescriptions[trait],name:trait,label:null!==(_a=actionTraits[trait])&&void 0!==_a?_a:trait}})),distance=(()=>{var _a;const reach=selfActor instanceof _actor_1.CreaturePF2e&&null!==(_a=selfActor.getReach({action:"attack",weapon}))&&void 0!==_a?_a:null;return(null==selfToken?void 0:selfToken.object)&&(null==target?void 0:target.object)?selfToken.object.distanceTo(target.object,{reach}):null})(),rangeIncrement=weapon&&"number"==typeof distance?(0,helpers_1.getRangeIncrement)(weapon,distance):null,targetInfo=target&&targetActor&&"number"==typeof distance?{token:target,actor:targetActor,distance,rangeIncrement}:null,notes=[null!==(_j=stat.notes)&&void 0!==_j?_j:[],null!==(_l=null===(_k=options.extraNotes)||void 0===_k?void 0:_k.call(options,options.statName))&&void 0!==_l?_l:[]].flat(),substitutions=(0,util_1.extractRollSubstitutions)(actor.synthetics.rollSubstitutions,[stat.slug],finalOptions);check_1.CheckPF2e.roll(check,{actor:selfActor,token:selfToken,item:weapon,createMessage:options.createMessage,target:targetInfo,dc,type:options.checkType,options:finalOptions,notes,substitutions,traits:traitObjects,title:`${game.i18n.localize(options.title)} - ${game.i18n.localize(options.subtitle)}`},options.event,((roll,outcome,message)=>{var _a;null===(_a=options.callback)||void 0===_a||_a.call(options,{actor,message,outcome,roll})}))}}static target(){var _a,_b,_c;const target=null!==(_b=null===(_a=Array.from(game.user.targets).filter((t=>t.actor instanceof _actor_1.CreaturePF2e)).shift())||void 0===_a?void 0:_a.document)&&void 0!==_b?_b:null;return{token:target,actor:null!==(_c=null==target?void 0:target.actor)&&void 0!==_c?_c:null}}static getWeaponPotencyModifier(item,selector){var _a,_b,_c;const itemBonus=item.system.runes.potency,slug="potency";return"noABP"!==game.settings.get("pf2e","automaticBonusVariant")?new modifiers_1.ModifierPF2e({slug,type:modifiers_1.MODIFIER_TYPE.POTENCY,label:item.name,modifier:null!==(_c=null===(_b=null===(_a=item.actor.synthetics.weaponPotency["mundane-attack"])||void 0===_a?void 0:_a[0])||void 0===_b?void 0:_b.bonus)&&void 0!==_c?_c:0,adjustments:(0,util_1.extractModifierAdjustments)(item.actor.synthetics.modifierAdjustments,[selector],slug)}):itemBonus>0?new modifiers_1.ModifierPF2e({slug,type:modifiers_1.MODIFIER_TYPE.ITEM,label:item.name,modifier:itemBonus,adjustments:(0,util_1.extractModifierAdjustments)(item.actor.synthetics.modifierAdjustments,[selector],slug)}):null}static getApplicableEquippedWeapons(actor,trait){return actor.isOfType("character")?actor.system.actions.flatMap((s=>s.ready&&s.item.traits.has(trait)?s.item:[])):actor.itemTypes.weapon.filter((w=>w.isEquipped&&w.traits.has(trait)))}}},2604:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.ActionMacros=exports.SkillActionOptions=exports.ActionDefaultOptions=exports.ActionMacroHelpers=void 0;const balance_1=__webpack_require__(55458),maneuver_in_flight_1=__webpack_require__(97198),squeeze_1=__webpack_require__(19561),tumble_through_1=__webpack_require__(89458),arcane_slam_1=__webpack_require__(20573),climb_1=__webpack_require__(88865),disarm_1=__webpack_require__(45713),force_open_1=__webpack_require__(2974),grapple_1=__webpack_require__(96632),high_jump_1=__webpack_require__(21695),long_jump_1=__webpack_require__(64363),shove_1=__webpack_require__(37897),swim_1=__webpack_require__(32152),trip_1=__webpack_require__(54758),whirling_throw_1=__webpack_require__(94133),seek_1=__webpack_require__(49630),sense_motive_1=__webpack_require__(35965),tamper_1=__webpack_require__(82099),crafting_1=__webpack_require__(41549),create_a_diversion_1=__webpack_require__(13613),feint_1=__webpack_require__(60607),impersonate_1=__webpack_require__(44903),lie_1=__webpack_require__(49602),bon_mot_1=__webpack_require__(55648),gather_information_1=__webpack_require__(94971),make_an_impression_1=__webpack_require__(51261),request_1=__webpack_require__(78325),avoid_notice_1=__webpack_require__(17202),sense_direction_1=__webpack_require__(23935),track_1=__webpack_require__(25491),coerce_1=__webpack_require__(6434),demoralize_1=__webpack_require__(72656),treat_disease_1=__webpack_require__(84671),treat_poison_1=__webpack_require__(32435),command_an_animal_1=__webpack_require__(13018),hide_1=__webpack_require__(10813),sneak_1=__webpack_require__(1938),pick_a_lock_1=__webpack_require__(9241);var helpers_1=__webpack_require__(87363);Object.defineProperty(exports,"ActionMacroHelpers",{enumerable:!0,get:function(){return helpers_1.ActionMacroHelpers}});var types_1=__webpack_require__(64077);Object.defineProperty(exports,"ActionDefaultOptions",{enumerable:!0,get:function(){return types_1.ActionDefaultOptions}}),Object.defineProperty(exports,"SkillActionOptions",{enumerable:!0,get:function(){return types_1.SkillActionOptions}}),exports.ActionMacros={seek:seek_1.seek,senseMotive:sense_motive_1.senseMotive,arcaneSlam:arcane_slam_1.arcaneSlam,tamper:tamper_1.tamper,avoidNotice:avoid_notice_1.avoidNotice,senseDirection:sense_direction_1.senseDirection,track:track_1.track,balance:balance_1.balance,maneuverInFlight:maneuver_in_flight_1.maneuverInFlight,squeeze:squeeze_1.squeeze,tumbleThrough:tumble_through_1.tumbleThrough,climb:climb_1.climb,disarm:disarm_1.disarm,forceOpen:force_open_1.forceOpen,grapple:grapple_1.grapple,highJump:high_jump_1.highJump,longJump:long_jump_1.longJump,shove:shove_1.shove,swim:swim_1.swim,trip:trip_1.trip,whirlingThrow:whirling_throw_1.whirlingThrow,craft:crafting_1.craft,repair:crafting_1.repair,createADiversion:create_a_diversion_1.createADiversion,feint:feint_1.feint,impersonate:impersonate_1.impersonate,lie:lie_1.lie,bonMot:bon_mot_1.bonMot,gatherInformation:gather_information_1.gatherInformation,makeAnImpression:make_an_impression_1.makeAnImpression,request:request_1.request,coerce:coerce_1.coerce,demoralize:demoralize_1.demoralize,treatDisease:treat_disease_1.treatDisease,treatPoison:treat_poison_1.treatPoison,commandAnAnimal:command_an_animal_1.commandAnAnimal,hide:hide_1.hide,sneak:sneak_1.sneak,pickALock:pick_a_lock_1.pickALock}},6434:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.coerce=void 0;const __1=__webpack_require__(2604);exports.coerce=function(options){var _a;const{checkType,property,stat,subtitle}=__1.ActionMacroHelpers.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"intimidation");__1.ActionMacroHelpers.simpleRollActionCheck({actors:options.actors,statName:property,actionGlyph:options.glyph,title:"PF2E.Actions.Coerce.Title",subtitle,modifiers:options.modifiers,rollOptions:["all",checkType,stat,"action:coerce"],extraOptions:["action:coerce"],traits:["auditory","concentrate","emotion","exploration","linguistic","mental"],checkType,event:options.event,callback:options.callback,difficultyClass:options.difficultyClass,difficultyClassStatistic:target=>target.saves.will,extraNotes:selector=>[__1.ActionMacroHelpers.note(selector,"PF2E.Actions.Coerce","criticalSuccess"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.Coerce","success"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.Coerce","failure"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.Coerce","criticalFailure")]})}},72656:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.demoralize=void 0;const __1=__webpack_require__(2604);exports.demoralize=function(options){var _a,_b;const{checkType,property,stat,subtitle}=__1.ActionMacroHelpers.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"intimidation");__1.ActionMacroHelpers.simpleRollActionCheck({actors:options.actors,statName:property,actionGlyph:null!==(_b=options.glyph)&&void 0!==_b?_b:"A",title:"PF2E.Actions.Demoralize.Title",subtitle,modifiers:options.modifiers,rollOptions:["all",checkType,stat,"action:demoralize"],extraOptions:["action:demoralize"],traits:["auditory","concentrate","emotion","fear","mental"],checkType,event:options.event,callback:options.callback,difficultyClass:options.difficultyClass,difficultyClassStatistic:target=>target.saves.will,extraNotes:selector=>[__1.ActionMacroHelpers.note(selector,"PF2E.Actions.Demoralize","criticalSuccess"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.Demoralize","success")]})}},84671:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.treatDisease=void 0;const __1=__webpack_require__(2604);exports.treatDisease=function(options){var _a;const{checkType,property,stat,subtitle}=__1.ActionMacroHelpers.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"medicine");__1.ActionMacroHelpers.simpleRollActionCheck({actors:options.actors,statName:property,actionGlyph:options.glyph,title:"PF2E.Actions.TreatDisease.Title",subtitle,modifiers:options.modifiers,rollOptions:["all",checkType,stat,"action:treat-disease"],extraOptions:["action:treat-disease"],traits:["downtime","manipulate"],checkType,event:options.event,callback:options.callback,difficultyClass:options.difficultyClass,extraNotes:selector=>[__1.ActionMacroHelpers.note(selector,"PF2E.Actions.TreatDisease","criticalSuccess"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.TreatDisease","success"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.TreatDisease","criticalFailure")]})}},32435:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.treatPoison=void 0;const __1=__webpack_require__(2604);exports.treatPoison=function(options){var _a,_b;const{checkType,property,stat,subtitle}=__1.ActionMacroHelpers.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"medicine");__1.ActionMacroHelpers.simpleRollActionCheck({actors:options.actors,statName:property,actionGlyph:null!==(_b=options.glyph)&&void 0!==_b?_b:"A",title:"PF2E.Actions.TreatPoison.Title",subtitle,modifiers:options.modifiers,rollOptions:["all",checkType,stat,"action:treat-poison"],extraOptions:["action:treat-poison"],traits:["manipulate"],checkType,event:options.event,callback:options.callback,difficultyClass:options.difficultyClass,extraNotes:selector=>[__1.ActionMacroHelpers.note(selector,"PF2E.Actions.TreatPoison","criticalSuccess"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.TreatPoison","success"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.TreatPoison","criticalFailure")]})}},13018:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.commandAnAnimal=void 0;const __1=__webpack_require__(2604);exports.commandAnAnimal=function(options){var _a,_b;const{checkType,property,stat,subtitle}=__1.ActionMacroHelpers.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"nature");__1.ActionMacroHelpers.simpleRollActionCheck({actors:options.actors,statName:property,actionGlyph:null!==(_b=options.glyph)&&void 0!==_b?_b:"A",title:"PF2E.Actions.CommandAnAnimal.Title",subtitle,modifiers:options.modifiers,rollOptions:["all",checkType,stat,"action:command-an-animal"],extraOptions:["action:command-an-animal"],traits:["auditory","concentrate"],checkType,event:options.event,callback:options.callback,difficultyClass:options.difficultyClass,difficultyClassStatistic:target=>target.saves.will,extraNotes:selector=>[__1.ActionMacroHelpers.note(selector,"PF2E.Actions.CommandAnAnimal","criticalSuccess"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.CommandAnAnimal","success"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.CommandAnAnimal","failure"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.CommandAnAnimal","criticalFailure")]})}},10813:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.hide=void 0;const __1=__webpack_require__(2604);exports.hide=function(options){var _a,_b;const{checkType,property,stat,subtitle}=__1.ActionMacroHelpers.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"stealth");__1.ActionMacroHelpers.simpleRollActionCheck({actors:options.actors,statName:property,actionGlyph:null!==(_b=options.glyph)&&void 0!==_b?_b:"A",title:"PF2E.Actions.Hide.Title",subtitle,modifiers:options.modifiers,rollOptions:["all",checkType,stat,"action:hide"],extraOptions:["action:hide"],traits:["secret"],checkType,event:options.event,callback:options.callback,difficultyClass:options.difficultyClass,difficultyClassStatistic:target=>target.perception,extraNotes:selector=>[__1.ActionMacroHelpers.note(selector,"PF2E.Actions.Hide","criticalSuccess"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.Hide","success")]})}},1938:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.sneak=void 0;const __1=__webpack_require__(2604);exports.sneak=function(options){var _a,_b;const{checkType,property,stat,subtitle}=__1.ActionMacroHelpers.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"stealth");__1.ActionMacroHelpers.simpleRollActionCheck({actors:options.actors,statName:property,actionGlyph:null!==(_b=options.glyph)&&void 0!==_b?_b:"A",title:"PF2E.Actions.Sneak.Title",subtitle,modifiers:options.modifiers,rollOptions:["all",checkType,stat,"action:sneak"],extraOptions:["action:sneak"],traits:["move","secret"],checkType,event:options.event,callback:options.callback,difficultyClass:options.difficultyClass,difficultyClassStatistic:target=>target.perception,extraNotes:selector=>[__1.ActionMacroHelpers.note(selector,"PF2E.Actions.Sneak","criticalSuccess"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.Sneak","success"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.Sneak","failure"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.Sneak","criticalFailure")]})}},9241:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.pickALock=void 0;const __1=__webpack_require__(2604);exports.pickALock=function(options){var _a,_b;const{checkType,property,stat,subtitle}=__1.ActionMacroHelpers.resolveStat(null!==(_a=null==options?void 0:options.skill)&&void 0!==_a?_a:"thievery");__1.ActionMacroHelpers.simpleRollActionCheck({actors:options.actors,statName:property,actionGlyph:null!==(_b=options.glyph)&&void 0!==_b?_b:"D",title:"PF2E.Actions.PickALock.Title",subtitle,modifiers:options.modifiers,rollOptions:["all",checkType,stat,"action:pick-a-lock"],extraOptions:["action:pick-a-lock"],traits:["manipulate"],checkType,event:options.event,callback:options.callback,difficultyClass:options.difficultyClass,extraNotes:selector=>[__1.ActionMacroHelpers.note(selector,"PF2E.Actions.PickALock","criticalSuccess"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.PickALock","success"),__1.ActionMacroHelpers.note(selector,"PF2E.Actions.PickALock","criticalFailure")]})}},64077:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0})},87941:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.isChaotic=exports.isLawful=exports.isGood=exports.isEvil=void 0,exports.isEvil=function(alignment){return"LE"===alignment||"CE"===alignment||"NE"===alignment},exports.isGood=function(alignment){return"LG"===alignment||"CG"===alignment||"NG"===alignment},exports.isLawful=function(alignment){return"LE"===alignment||"LN"===alignment||"LG"===alignment},exports.isChaotic=function(alignment){return"CE"===alignment||"CN"===alignment||"CG"===alignment}},87252:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.CheckModifiersDialog=void 0;const modifiers_1=__webpack_require__(92823),_util_1=__webpack_require__(6945),localize_1=__webpack_require__(41332);class CheckModifiersDialog extends Application{constructor(check,resolve,context={options:new Set}){var _a;super({title:(null==context?void 0:context.title)||check.slug}),this.isResolved=!1,this.check=check,this.resolve=resolve,this.substitutions=null!==(_a=null==context?void 0:context.substitutions)&&void 0!==_a?_a:[],this.context=context}static get defaultOptions(){return{...super.defaultOptions,template:"systems/pf2e/templates/chat/check-modifiers-dialog.html",classes:["dice-checks","dialog"],popOut:!0,width:380,height:"auto"}}async getData(){const fortune="keep-higher"===this.context.rollTwice,misfortune="keep-lower"===this.context.rollTwice,none=fortune===misfortune;return{appId:this.id,modifiers:this.check.modifiers,totalModifier:this.check.totalModifier,rollModes:CONFIG.Dice.rollModes,rollMode:this.context.rollMode,showRollDialogs:game.user.settings.showRollDialogs,substitutions:this.substitutions,fortune,none,misfortune}}activateListeners($html){$html.find(".roll").on("click",(()=>{this.resolve(!0),this.isResolved=!0,this.close()})),$html.find(".substitutions input[type=checkbox]").on("click",(event=>{var _a,_b;const checkbox=event.currentTarget,index=Number(checkbox.dataset.subIndex),substitution=this.substitutions.at(index);if(!substitution)return;substitution.ignored=!checkbox.checked;const options=null!==(_a=(_b=this.context).options)&&void 0!==_a?_a:_b.options=new Set,option=`substitute:${substitution.slug}`;substitution.ignored?options.delete(option):options.add(option),this.check.calculateTotal(this.context.options),this.render()})),$html.find(".modifier-container input[type=checkbox]").on("click",(event=>{const checkbox=event.currentTarget,index=Number(checkbox.dataset.modifierIndex);this.check.modifiers[index].ignored=!checkbox.checked,this.check.calculateTotal(),this.render()})),$html.find(".add-modifier-panel").on("click",".add-modifier",(event=>this.onAddModifier(event))),$html.find(".fate input[type=radio]").on("click",(event=>{this.context.rollTwice=event.currentTarget.value||!1})),$html.find("[name=rollmode]").on("change",(event=>{const rollMode=event.currentTarget.value;if(!(0,_util_1.tupleHasValue)(Object.values(CONST.DICE_ROLL_MODES),rollMode))throw(0,_util_1.ErrorPF2e)("Unexpected roll mode");this.context.rollMode=rollMode}));const $tooltip=$html.closest(`#${this.id}`).find("a.header-button.settings").attr({"data-tooltip-content":`#${this.id}-settings`}).tooltipster({animation:"fade",trigger:"click",arrow:!1,contentAsHTML:!0,debug:!1,interactive:!0,side:["top"],theme:"crb-hover",minWidth:165});$html.find(".settings-list input.quick-rolls-submit").on("change",(async event=>{const $checkbox=$(event.delegateTarget);await game.user.setFlag("pf2e","settings.showRollDialogs",$checkbox[0].checked),$tooltip.tooltipster("close")}))}async close(options){this.isResolved||this.resolve(!1),super.close(options)}async onAddModifier(event){const $parent=$(event.currentTarget).parents(".add-modifier-panel"),value=Number($parent.find(".add-modifier-value").val()||1),type=$parent.find(".add-modifier-type").val();let name=`${$parent.find(".add-modifier-name").val()}`;const errors=[];if(Number.isNaN(value)?errors.push("Modifier value must be a number."):0===value&&errors.push("Modifier value must not be zero."),!(0,_util_1.setHasElement)(modifiers_1.MODIFIER_TYPES,type))throw(0,_util_1.ErrorPF2e)("Unexpected invalid modifier type");name&&name.trim()||(name=game.i18n.localize(value<0?`PF2E.PenaltyLabel.${type}`:`PF2E.BonusLabel.${type}`)),errors.length>0?ui.notifications.error(errors.join(" ")):(this.check.push(new modifiers_1.ModifierPF2e(name,value,type)),await this.render())}_getHeaderButtons(){const buttons=super._getHeaderButtons();return[{label:localize_1.LocalizePF2e.translations.PF2E.SETTINGS.Settings,class:"settings",icon:"fas fa-cog",onclick:()=>null},...buttons]}_injectHTML($html){var _a,_b;super._injectHTML($html),null===(_b=null===(_a=$html[0])||void 0===_a?void 0:_a.querySelector("button.roll"))||void 0===_b||_b.focus()}}exports.CheckModifiersDialog=CheckModifiersDialog},45499:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.CheckPF2e=void 0;const _actor_1=__webpack_require__(85530),_item_1=__webpack_require__(10843),chat_message_1=__webpack_require__(40405),notes_1=__webpack_require__(46379),_scene_1=__webpack_require__(12789),sheet_util_1=__webpack_require__(15806),_util_1=__webpack_require__(6945),modifiers_1=__webpack_require__(92823),check_modifiers_dialog_1=__webpack_require__(87252),roll_1=__webpack_require__(83439),degree_of_success_1=__webpack_require__(54870),localize_1=__webpack_require__(41332),predication_1=__webpack_require__(538),text_editor_1=__webpack_require__(21047),attack_roll_1=__webpack_require__(32080);class CheckPF2e{static async roll(check,context={},event=null,callback){var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l,_m,_o,_p,_q,_r,_s,_t,_u,_v,_w,_x,_y,_z,_0,_1,_2,_3;event&&mergeObject(context,(0,sheet_util_1.eventToRollParams)(event)),null!==(_a=context.skipDialog)&&void 0!==_a||(context.skipDialog=!game.user.settings.showRollDialogs),Array.isArray(context.options)&&(context.options=new Set(context.options));const rollOptions=null!==(_b=context.options)&&void 0!==_b?_b:new Set;if(rollOptions.has("secret")&&(null!==(_c=context.rollMode)&&void 0!==_c||(context.rollMode="blindroll")),null!==(_d=context.rollMode)&&void 0!==_d||(context.rollMode=game.settings.get("core","rollMode")),rollOptions.size>0&&!context.isReroll&&check.calculateTotal(rollOptions),context.dc){const{adjustments}=context.dc;if(adjustments)for(const adjustment of adjustments){(!adjustment.predicate||predication_1.PredicatePF2e.test(adjustment.predicate,rollOptions))&&(null!==(_e=(_3=context.dc).modifiers)&&void 0!==_e||(_3.modifiers={}),mergeObject(context.dc.modifiers,adjustment.modifiers))}}if(!context.skipDialog){const dialogClosed=new Promise((resolve=>{new check_modifiers_dialog_1.CheckModifiersDialog(check,resolve,context).render(!0)}));if(!await dialogClosed)return null}const extraTags=[],isReroll=null!==(_f=context.isReroll)&&void 0!==_f&&_f;isReroll&&(context.rollTwice=!1);const substitutions=null!==(_g=context.substitutions)&&void 0!==_g?_g:[],[dice,tagsFromDice]=(()=>{var _a,_b,_c;const substitutions=null!==(_b=null===(_a=context.substitutions)||void 0===_a?void 0:_a.filter((s=>{var _a,_b;return null===(_b=!s.ignored&&(null===(_a=s.predicate)||void 0===_a?void 0:_a.test(rollOptions)))||void 0===_b||_b})))&&void 0!==_b?_b:[],rollTwice=null!==(_c=context.rollTwice)&&void 0!==_c&&_c,fortuneMisfortune=new Set(substitutions.map((s=>s.effectType)).concat("keep-higher"===rollTwice?"fortune":"keep-lower"===rollTwice?"misfortune":[]).flat());for(const trait of fortuneMisfortune)rollOptions.add(trait);const substitution=substitutions.at(-1);if(rollOptions.has("fortune")&&rollOptions.has("misfortune"))return["1d20",["PF2E.TraitFortune","PF2E.TraitMisfortune"]];if(substitution){const effectType={fortune:"PF2E.TraitFortune",misfortune:"PF2E.TraitMisfortune"}[substitution.effectType],extraTag=game.i18n.format("PF2E.SpecificRule.SubstituteRoll.EffectType",{type:game.i18n.localize(effectType),substitution:game.i18n.localize(substitution.label)});return[substitution.value.toString(),[extraTag]]}return"keep-lower"===context.rollTwice?["2d20kl",["PF2E.TraitMisfortune"]]:"keep-higher"===context.rollTwice?["2d20kh",["PF2E.TraitFortune"]]:["1d20",[]]})();extraTags.push(...tagsFromDice);const isStrike="attack-roll"===context.type&&(null===(_h=context.item)||void 0===_h?void 0:_h.isOfType("weapon","melee")),RollCls=isStrike?attack_roll_1.StrikeAttackRoll:roll_1.CheckRoll,strike=(()=>{var _a;const contextItem=context.item;if(isStrike&&contextItem&&(null===(_a=context.actor)||void 0===_a?void 0:_a.isOfType("character","npc"))){const strikes=context.actor.system.actions,strike=strikes.find((a=>{var _a;return(null===(_a=a.item)||void 0===_a?void 0:_a.id)===contextItem.id&&a.item.slug===contextItem.slug}));if(strike)return{actor:context.actor.uuid,index:strikes.indexOf(strike),damaging:!contextItem.isOfType("melee","weapon")||contextItem.dealsDamage,name:strike.item.name,altUsage:context.altUsage}}return null})(),options={rollerId:game.userId,isReroll,totalModifier:check.totalModifier};strike&&(options.strike=strike);const totalModifierPart=0===check.totalModifier?"":`+${check.totalModifier}`,roll=await new RollCls(`${dice}${totalModifierPart}`,{},options).evaluate({async:!0}),degree=context.dc?new degree_of_success_1.DegreeOfSuccess(roll,context.dc):null;degree&&(context.outcome=degree_of_success_1.DEGREE_OF_SUCCESS_STRINGS[degree.value],context.unadjustedOutcome=degree_of_success_1.DEGREE_OF_SUCCESS_STRINGS[degree.unadjusted],roll.options.degreeOfSuccess=degree.value);const notes=null!==(_k=null===(_j=context.notes)||void 0===_j?void 0:_j.map((n=>n instanceof notes_1.RollNotePF2e?n:new notes_1.RollNotePF2e(n))))&&void 0!==_k?_k:[],notesText=null!==(_l=notes.filter((note=>!!note.predicate.test(rollOptions)&&(!context.dc||0===note.outcome.length||!!(context.outcome&&context.unadjustedOutcome&&[context.outcome,context.unadjustedOutcome].some((o=>note.outcome.includes(o))))))).map((n=>n.text)).join("\n"))&&void 0!==_l?_l:"",item=null!==(_m=context.item)&&void 0!==_m?_m:null,flavor=await(async()=>{var _a;const result=await this.createResultFlavor({degree,target:null!==(_a=context.target)&&void 0!==_a?_a:null}),tags=this.createTagFlavor({check,context,extraTags}),incapacitation=rollOptions.has("incapacitation")?(()=>{const note=new notes_1.RollNotePF2e({selector:"all",title:game.i18n.localize("PF2E.TraitIncapacitation"),text:game.i18n.localize("PF2E.TraitDescriptionIncapacitationShort")});return(0,_util_1.parseHTML)(note.text)})():"",header=document.createElement("h4");return header.classList.add("action"),header.innerHTML=check.slug,[header,null!=result?result:[],tags,notesText,incapacitation].flat().map((e=>"string"==typeof e?e:e.outerHTML)).join("")})(),contextFlag={...context,item:void 0,actor:null!==(_p=null===(_o=context.actor)||void 0===_o?void 0:_o.id)&&void 0!==_p?_p:null,token:null!==(_r=null===(_q=context.token)||void 0===_q?void 0:_q.id)&&void 0!==_r?_r:null,domains:null!==(_s=context.domains)&&void 0!==_s?_s:[],target:context.target?{actor:context.target.actor.uuid,token:context.target.token.uuid}:null,options:Array.from(rollOptions).sort(),notes:notes.filter((n=>n.predicate.test(rollOptions))).map((n=>n.toObject())),rollMode:null!==(_t=context.rollMode)&&void 0!==_t?_t:game.settings.get("core","rollMode"),rollTwice:null!==(_u=context.rollTwice)&&void 0!==_u&&_u,title:null!==(_v=context.title)&&void 0!==_v?_v:"PF2E.Check.Label",type:null!==(_w=context.type)&&void 0!==_w?_w:"check",traits:null!==(_x=context.traits)&&void 0!==_x?_x:[],substitutions,dc:null!==(_y=context.dc)&&void 0!==_y?_y:null,skipDialog:null!==(_z=context.skipDialog)&&void 0!==_z?_z:!game.user.settings.showRollDialogs,isReroll:null!==(_0=context.isReroll)&&void 0!==_0&&_0,outcome:null!==(_1=context.outcome)&&void 0!==_1?_1:null,unadjustedOutcome:null!==(_2=context.unadjustedOutcome)&&void 0!==_2?_2:null};delete contextFlag.item;const message=await(()=>{var _a;const origin=item&&{uuid:item.uuid,type:item.type},coreFlags={canPopout:!0};"initiative"===context.type&&(coreFlags.initiativeRoll=!0);const flags={core:coreFlags,pf2e:{context:contextFlag,unsafe:flavor,modifierName:check.slug,modifiers:check.modifiers,origin,strike}},speaker=chat_message_1.ChatMessagePF2e.getSpeaker({actor:context.actor,token:context.token}),{rollMode}=contextFlag,create=null===(_a=context.createMessage)||void 0===_a||_a;return roll.toMessage({speaker,flavor,flags},{rollMode,create})})();if(callback){const msg=message instanceof chat_message_1.ChatMessagePF2e?message:new chat_message_1.ChatMessagePF2e(message);await callback(roll,context.outcome,msg)}return item instanceof _item_1.WeaponPF2e&&item.traits.has("consumable")&&item.actor.items.has(item.id)&&item.quantity>0&&await item.update({system:{quantity:item.quantity-1}}),roll}static createTagFlavor({check,context,extraTags}){var _a,_b;const toTagElement=(tag,cssClass=null)=>{const span=document.createElement("span");return span.classList.add("tag"),cssClass&&span.classList.add(`tag_${cssClass}`),span.innerText=tag.label,tag.name&&(span.dataset.slug=tag.name),tag.description&&(span.dataset.description=tag.description),span},traits=null!==(_b=null===(_a=context.traits)||void 0===_a?void 0:_a.map((trait=>(trait.label=game.i18n.localize(trait.label),trait))).sort(((a,b)=>a.label.localeCompare(b.label,game.i18n.lang))).map((t=>toTagElement(t))))&&void 0!==_b?_b:[],{item}=context,itemTraits=(null==item?void 0:item.isOfType("weapon","melee"))?Array.from(item.traits).map((t=>{const obj=(0,_util_1.traitSlugToObject)(t,CONFIG.PF2E.npcAttackTraits);return obj.label=game.i18n.localize(obj.label),obj})).sort(((a,b)=>a.label.localeCompare(b.label,game.i18n.lang))).map((t=>toTagElement(t,"alt"))):[],properties=(()=>{var _a;if((null==item?void 0:item.isOfType("weapon"))&&item.isRanged){const range=null!==(_a=item.rangeIncrement)&&void 0!==_a?_a:10,label=game.i18n.format("PF2E.Item.Weapon.RangeIncrementN.Label",{range});return[toTagElement({name:range.toString(),label,description:"PF2E.Item.Weapon.RangeIncrementN.Hint"},"secondary")]}return[]})(),traitsAndProperties=document.createElement("div");if(traitsAndProperties.className="tags",0===itemTraits.length&&0===properties.length)traitsAndProperties.append(...traits);else{const verticalBar=document.createElement("hr");verticalBar.className="vr",traitsAndProperties.append(...[traits,verticalBar,itemTraits,properties].flat())}const modifiers=check.modifiers.filter((m=>m.enabled)).map((modifier=>{const sign=modifier.modifier<0?"":"+",label=`${modifier.label} ${sign}${modifier.modifier}`;return toTagElement({name:modifier.slug,label},"transparent")})),tagsFromOptions=extraTags.map((t=>toTagElement({label:game.i18n.localize(t)},"transparent"))),modifiersAndExtras=document.createElement("div");return modifiersAndExtras.className="tags",modifiersAndExtras.append(...modifiers,...tagsFromOptions),[traitsAndProperties,document.createElement("hr"),modifiersAndExtras]}static async rerollFromMessage(message,{heroPoint=!1,keep="new"}={}){var _a,_b,_c,_d,_e;if(!message.isAuthor&&!game.user.isGM)return void ui.notifications.error(game.i18n.localize("PF2E.RerollMenu.ErrorCantDelete"));const actor=game.actors.get(null!==(_a=message.speaker.actor)&&void 0!==_a?_a:"");let rerollFlavor=game.i18n.localize(`PF2E.RerollMenu.MessageKeep.${keep}`);if(heroPoint){if(!(actor instanceof _actor_1.CharacterPF2e))return void ui.notifications.error(game.i18n.localize("PF2E.RerollMenu.ErrorNoActor"));{const heroPointCount=actor.heroPoints.value;if(!heroPointCount)return void ui.notifications.warn(game.i18n.format("PF2E.RerollMenu.WarnNoHeroPoint",{name:actor.name}));await actor.update({"system.resources.heroPoints.value":Math.clamped(heroPointCount-1,0,3)}),rerollFlavor=game.i18n.format("PF2E.RerollMenu.MessageHeroPoint",{name:actor.name})}}const systemFlags=deepClone(message.flags.pf2e),context=systemFlags.context;if(!context||"damage-roll"===context.type)return;context.skipDialog=!0,context.isReroll=!0;const oldRoll=message.rolls.at(0);if(!(oldRoll instanceof roll_1.CheckRoll))throw(0,_util_1.ErrorPF2e)("Unexpected error retrieving prior roll");const RollCls=oldRoll.constructor,newData=deepClone(oldRoll.data),newOptions={...oldRoll.options,isReroll:!0},newRoll=await new RollCls(oldRoll.formula,newData,newOptions).evaluate({async:!0});let keptRoll=newRoll,[oldRollClass,newRollClass]=["pf2e-reroll-discard",""];("best"===keep&&oldRoll.total>newRoll.total||"worst"===keep&&oldRoll.total<newRoll.total)&&([oldRollClass,newRollClass]=[newRollClass,oldRollClass],keptRoll=oldRoll);const renders_old=await CheckPF2e.renderReroll(oldRoll,{isOld:!0}),renders_new=await CheckPF2e.renderReroll(newRoll,{isOld:!1}),rerollIcon=(0,_util_1.fontAwesomeIcon)(heroPoint?"hospital-symbol":"dice");rerollIcon.classList.add("pf2e-reroll-indicator"),rerollIcon.setAttribute("title",rerollFlavor);const dc=null!==(_b=context.dc)&&void 0!==_b?_b:null,oldFlavor=null!==(_c=message.flavor)&&void 0!==_c?_c:"",degree=dc?new degree_of_success_1.DegreeOfSuccess(newRoll,dc):null,useNewRoll=keptRoll===newRoll&&!!degree;context.outcome=useNewRoll?degree_of_success_1.DEGREE_OF_SUCCESS_STRINGS[degree.value]:context.outcome;const newFlavor=useNewRoll?await(async()=>{var _a;const $parsedFlavor=$("<div>").append(oldFlavor),target=null!==(_a=context.target)&&void 0!==_a?_a:null,flavor=await this.createResultFlavor({degree,target});return flavor&&$parsedFlavor.find(".target-dc-result").replaceWith(flavor),$parsedFlavor.html()})():oldFlavor,{initiativeRoll}=message.flags.core;if(initiativeRoll){const combatant=null===(_d=message.token)||void 0===_d?void 0:_d.combatant;await(null==combatant?void 0:combatant.parent.setInitiative(combatant.id,newRoll.total))}await message.delete({render:!1}),await keptRoll.toMessage({content:`<div class="${oldRollClass}">${renders_old}</div><div class="pf2e-reroll-second ${newRollClass}">${renders_new}</div>`,flavor:`${rerollIcon.outerHTML}${newFlavor}`,speaker:message.speaker,flags:{core:{initiativeRoll},pf2e:systemFlags}},{rollMode:null!==(_e=context.rollMode)&&void 0!==_e?_e:"publicroll"})}static async renderReroll(roll,{isOld}){var _a,_b;const die=roll.dice.find((d=>d instanceof Die&&20===d.faces));if("number"!=typeof(null==die?void 0:die.total))throw(0,_util_1.ErrorPF2e)("Unexpected error inspecting d20 term");const html=await roll.render(),element=(0,_util_1.parseHTML)(`<div>${html}</div>`);return isOld&&(null===(_a=element.querySelector(".message-buttons"))||void 0===_a||_a.remove()),[1,20].includes(die.total)?(null===(_b=element.querySelector(".dice-total"))||void 0===_b||_b.classList.add(20===die.total?"success":"failure"),element.innerHTML):element.innerHTML}static async createResultFlavor({degree,target}){var _a;if(!degree)return null;const{dc}=degree,customLabel=!!dc.label&&Number.isInteger(dc.value)&&!dc.label.includes("{dc}")?`<dc>${dc.label}: {dc}</dc>`:null!==(_a=dc.label)&&void 0!==_a?_a:null,targetActor=await(async()=>{if(!(null==target?void 0:target.actor))return null;if(target.actor instanceof _actor_1.ActorPF2e)return target.actor;const maybeActor=await fromUuid(target.actor);return maybeActor instanceof _actor_1.ActorPF2e?maybeActor:maybeActor instanceof _scene_1.TokenDocumentPF2e?maybeActor.actor:null})(),targetData=await(async()=>{var _a,_b,_c;if(!target)return null;const token=await(async()=>target.token?target.token instanceof _scene_1.TokenDocumentPF2e?target.token:(null==targetActor?void 0:targetActor.token)?targetActor.token:fromUuid(target.token):null)(),canSeeName=(null!=token?token:new _scene_1.TokenDocumentPF2e(null!==(_a=null==targetActor?void 0:targetActor.prototypeToken.toObject())&&void 0!==_a?_a:{})).playersCanSeeName||!game.settings.get("pf2e","metagame_tokenSetsNameVisibility");return{name:null!==(_c=null!==(_b=null==token?void 0:token.name)&&void 0!==_b?_b:null==targetActor?void 0:targetActor.name)&&void 0!==_c?_c:"",visible:!!canSeeName}})(),translations=localize_1.LocalizePF2e.translations.PF2E.Check,dcData=(()=>{var _a,_b,_c;const dcType=game.i18n.localize((0,_util_1.objectHasKey)(translations.DC.Specific,dc.slug)?translations.DC.Specific[dc.slug]:translations.DC.Unspecific),targetAC=null==targetActor?void 0:targetActor.attributes.ac,circumstances="ac"===dc.slug&&targetAC instanceof modifiers_1.StatisticModifier?targetAC.modifiers.filter((m=>m.enabled&&"circumstance"===m.type)):[],preadjustedDC=circumstances.length>0&&targetAC?targetAC.value-circumstances.reduce(((total,c)=>total+c.modifier),0):null!==(_a=null==targetAC?void 0:targetAC.value)&&void 0!==_a?_a:null,visible=(null==targetActor?void 0:targetActor.hasPlayerOwner)||dc.visible||game.settings.get("pf2e","metagame_showDC");if("number"!=typeof preadjustedDC||0===circumstances.length){const labelKey=targetData?translations.DC.Label.WithTarget:null!=customLabel?customLabel:translations.DC.Label.NoTarget,dcValue="ac"===dc.slug&&targetAC?targetAC.value:dc.value;return{markup:game.i18n.format(labelKey,{dcType,dc:dcValue,target:null!==(_b=null==targetData?void 0:targetData.name)&&void 0!==_b?_b:null}),visible}}const adjustment={preadjusted:preadjustedDC,direction:preadjustedDC<dc.value?"increased":preadjustedDC>dc.value?"decreased":"no-change",circumstances:circumstances.map((c=>({label:c.label,value:c.modifier})))},translation="no-change"===adjustment.direction?translations.DC.Label.NoChangeTarget:translations.DC.Label.AdjustedTarget;return{markup:game.i18n.format(translation,{target:null!==(_c=null==targetData?void 0:targetData.name)&&void 0!==_c?_c:game.user.name,dcType,preadjusted:preadjustedDC,adjusted:dc.value}),visible,adjustment}})(),resultData=(()=>{var _a;const offset={value:new Intl.NumberFormat(game.i18n.lang,{maximumFractionDigits:0,signDisplay:"always",useGrouping:!1}).format(degree.rollTotal-dc.value),visible:dc.visible},adjustment=(()=>{switch(degree.degreeAdjustment){case degree_of_success_1.DEGREE_ADJUSTMENTS.INCREASE_BY_TWO:return game.i18n.localize("PF2E.TwoDegreesBetter");case degree_of_success_1.DEGREE_ADJUSTMENTS.INCREASE:return game.i18n.localize("PF2E.OneDegreeBetter");case degree_of_success_1.DEGREE_ADJUSTMENTS.LOWER:return game.i18n.localize("PF2E.OneDegreeWorse");case degree_of_success_1.DEGREE_ADJUSTMENTS.LOWER_BY_TWO:return game.i18n.localize("PF2E.TwoDegreesWorse");default:return null}})(),checkOrAttack=(0,_util_1.sluggify)(null!==(_a=dc.scope)&&void 0!==_a?_a:"Check",{camel:"bactrian"}),dosKey=degree_of_success_1.DEGREE_OF_SUCCESS_STRINGS[degree.value],degreeLabel=game.i18n.localize(`PF2E.Check.Result.Degree.${checkOrAttack}.${dosKey}`),resultKey=adjustment?"PF2E.Check.Result.AdjustedLabel":"PF2E.Check.Result.Label";return{markup:game.i18n.format(resultKey,{degree:degreeLabel,offset:offset.value,adjustment}),visible:game.settings.get("pf2e","metagame_showResults")}})(),rendered=await renderTemplate("systems/pf2e/templates/chat/check/target-dc-result.html",{target:targetData,dc:dcData,result:resultData}),html=(0,_util_1.parseHTML)(rendered),{convertXMLNode}=text_editor_1.TextEditorPF2e;if(targetData&&convertXMLNode(html,"target",{visible:targetData.visible,whose:"target"}),convertXMLNode(html,"dc",{visible:dcData.visible,whose:"target"}),dcData.adjustment){const{adjustment}=dcData;convertXMLNode(html,"preadjusted",{classes:["preadjusted-dc"]});const adjustedNode=convertXMLNode(html,"adjusted",{classes:["adjusted-dc",adjustment.direction]});if(!adjustedNode)throw(0,_util_1.ErrorPF2e)("Unexpected error processing roll template");adjustedNode.dataset.circumstances=JSON.stringify(adjustment.circumstances)}if(convertXMLNode(html,"degree",{visible:resultData.visible,classes:[degree_of_success_1.DEGREE_OF_SUCCESS_STRINGS[degree.value]]}),convertXMLNode(html,"offset",{visible:dcData.visible,whose:"target"}),!(null==targetData?void 0:targetData.visible)&&!dcData.visible){const targetDC=html.querySelector(".target-dc");targetDC&&(targetDC.dataset.visibility="gm"),resultData.visible||(html.dataset.visibility="gm")}return html}}exports.CheckPF2e=CheckPF2e},11848:function(__unused_webpack_module,exports,__webpack_require__){var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k);var desc=Object.getOwnPropertyDescriptor(m,k);desc&&!("get"in desc?!m.__esModule:desc.writable||desc.configurable)||(desc={enumerable:!0,get:function(){return m[k]}}),Object.defineProperty(o,k2,desc)}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)"default"===p||Object.prototype.hasOwnProperty.call(exports,p)||__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.StrikeAttackRoll=exports.CheckRoll=void 0;var roll_1=__webpack_require__(83439);Object.defineProperty(exports,"CheckRoll",{enumerable:!0,get:function(){return roll_1.CheckRoll}});var attack_roll_1=__webpack_require__(32080);Object.defineProperty(exports,"StrikeAttackRoll",{enumerable:!0,get:function(){return attack_roll_1.StrikeAttackRoll}}),__exportStar(__webpack_require__(84292),exports),__exportStar(__webpack_require__(45499),exports)},83439:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.CheckRoll=void 0;class CheckRoll extends Roll{constructor(formula,data={},options={}){var _a,_b,_c;super(formula,data,options),this.isReroll=null!==(_a=options.isReroll)&&void 0!==_a&&_a,this.isRerollable=!this.isReroll&&!this.dice.some((d=>d.modifiers.includes("kh")||d.modifiers.includes("kl"))),this.roller=null!==(_c=game.users.get(null!==(_b=this.options.rollerId)&&void 0!==_b?_b:""))&&void 0!==_c?_c:null}get degreeOfSuccess(){var _a;return null!==(_a=this.options.degreeOfSuccess)&&void 0!==_a?_a:null}}exports.CheckRoll=CheckRoll},32080:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.StrikeAttackRoll=void 0;const roll_1=__webpack_require__(83439);class StrikeAttackRoll extends roll_1.CheckRoll{async render(options={}){this._evaluated||await this.evaluate({async:!0});const{isPrivate,flavor,template}=options,chatData={formula:isPrivate?"???":this._formula,flavor:isPrivate?null:flavor,user:game.user.id,tooltip:isPrivate?"":await this.getTooltip(),total:isPrivate?"?":Math.round(100*this.total)/100,strike:this.options.strike,degree:this.options.degreeOfSuccess,canRollDamage:this.roller===game.user||game.user.isGM};return renderTemplate(null!=template?template:StrikeAttackRoll.CHAT_TEMPLATE,chatData)}}exports.StrikeAttackRoll=StrikeAttackRoll,StrikeAttackRoll.CHAT_TEMPLATE="systems/pf2e/templates/chat/check/strike/attack-roll.html"},84292:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0})},71881:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.FlattenedCondition=exports.ConditionReference=exports.ConditionManager=void 0;var manager_1=__webpack_require__(2500);Object.defineProperty(exports,"ConditionManager",{enumerable:!0,get:function(){return manager_1.ConditionManager}});var types_1=__webpack_require__(34953);Object.defineProperty(exports,"ConditionReference",{enumerable:!0,get:function(){return types_1.ConditionReference}}),Object.defineProperty(exports,"FlattenedCondition",{enumerable:!0,get:function(){return types_1.FlattenedCondition}})},2500:function(__unused_webpack_module,exports,__webpack_require__){var _a,_ConditionManager_initialized,__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)},__classPrivateFieldSet=this&&this.__classPrivateFieldSet||function(receiver,state,value,kind,f){if("m"===kind)throw new TypeError("Private method is not writable");if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===kind?f.call(receiver,value):f?f.value=value:state.set(receiver,value),value};Object.defineProperty(exports,"__esModule",{value:!0}),exports.ConditionManager=void 0;const _actor_1=__webpack_require__(85530),_util_1=__webpack_require__(6945),values_1=__webpack_require__(8382);class ConditionManager{static get conditionsSlugs(){return[...this.conditions.keys()]}static async initialize(force=!1){var _b,_c;if(__classPrivateFieldGet(this,_a,"f",_ConditionManager_initialized)&&!force)return;const content=await(null===(_b=game.packs.get("pf2e.conditionitems"))||void 0===_b?void 0:_b.getDocuments()),entries=null!==(_c=null==content?void 0:content.map((c=>[c.slug,c])))&&void 0!==_c?_c:[];this.conditions=new Map(entries),__classPrivateFieldSet(this,_a,!0,"f",_ConditionManager_initialized)}static getCondition(slug,modifications={}){var _b;if(slug=(0,_util_1.sluggify)(slug),!(0,_util_1.setHasElement)(values_1.CONDITION_SLUGS,slug))return null;const condition=null===(_b=ConditionManager.conditions.get(slug))||void 0===_b?void 0:_b.clone(modifications);if(!condition)throw(0,_util_1.ErrorPF2e)("Unexpected failure looking up condition");return condition}static async updateConditionValue(itemId,actorOrToken,value){const actor=actorOrToken instanceof _actor_1.ActorPF2e?actorOrToken:actorOrToken.actor,condition=null==actor?void 0:actor.items.get(itemId);if(null==condition?void 0:condition.isOfType("condition"))if(0===value)await condition.delete();else if(null==actor?void 0:actor.isOfType("creature")){const cappedConditions=["dying","wounded","doomed"];(0,_util_1.tupleHasValue)(cappedConditions,condition.slug)&&(value=Math.min(value,actor.attributes[condition.slug].max)),await condition.update({"system.value.value":value})}}static getFlattenedConditions(items){var _b,_c,_d,_e,_f,_g,_h;const flatteneds=new Map;for(const condition of items.sort(this.sortConditions)){const flattened=null!==(_b=flatteneds.get(condition.slug))&&void 0!==_b?_b:{id:condition.id,badge:condition.badge,active:condition.isActive,name:condition.name,value:condition.value,description:condition.description,img:condition.img,unidentified:condition.unidentified,references:!1,locked:condition.isLocked,parents:[],children:[],overrides:[],overriddenBy:[],immunityFrom:[]};if(!condition.isActive&&flatteneds.has(condition.slug))continue;flatteneds.set(condition.slug,flattened);const systemData=condition.system;if(systemData.references.parent){const refCondition=items.find((other=>{var _b;return other.id===(null===(_b=systemData.references.parent)||void 0===_b?void 0:_b.id)}));if(refCondition){const ref={id:systemData.references.parent,name:refCondition.name,base:refCondition.slug,text:""};refCondition.value&&(ref.name=`${ref.name} ${refCondition.value}`);const compendiumLink=null===(_c=refCondition.sourceId)||void 0===_c?void 0:_c.replace(/^Compendium\./,"");ref.text=compendiumLink?`@Compendium[${compendiumLink}]`:"",flattened.references=!0,flattened.locked=!0,flattened.parents.push(ref)}}else if(condition.flags.pf2e.grantedBy){const granter=condition.actor.items.get(condition.flags.pf2e.grantedBy.id);granter&&flattened.parents.push({id:{id:granter.id,type:granter.type},name:granter.name,base:null!==(_d=granter.slug)&&void 0!==_d?_d:(0,_util_1.sluggify)(granter.name),text:""})}for(const childRef of systemData.references.children){const refCondition=items.find((other=>other.id===childRef.id));if(refCondition){const ref={id:systemData.references.parent,name:refCondition.name,base:refCondition.slug,text:""};refCondition.value&&(ref.name=`${ref.name} ${refCondition.value}`);const compendiumLink=null===(_e=refCondition.sourceId)||void 0===_e?void 0:_e.replace(/^Compendium\./,"");ref.text=compendiumLink?`@Compendium[${compendiumLink}]`:"",flattened.references=!0,flattened.children.push(ref)}}for(const overriddenByRef of systemData.references.overrides){const refCondition=items.find((other=>other.id===overriddenByRef.id));if(refCondition){const ref={id:systemData.references.parent,name:refCondition.name,base:refCondition.slug,text:""};refCondition.value&&(ref.name=`${ref.name} ${refCondition.value}`);const compendiumLink=null===(_f=refCondition.sourceId)||void 0===_f?void 0:_f.replace(/^Compendium\./,"");ref.text=compendiumLink?`@Compendium[${compendiumLink}]`:"",flattened.references=!0,flattened.overrides.push(ref)}}for(const overriderRef of systemData.references.overriddenBy){const refCondition=items.find((other=>other.id===overriderRef.id));if(refCondition){const ref={id:systemData.references.parent,name:refCondition.name,base:refCondition.slug,text:""};refCondition.value&&(ref.name=`${ref.name} ${refCondition.value}`);const compendiumLink=null===(_g=refCondition.sourceId)||void 0===_g?void 0:_g.replace(/^Compendium\./,"");ref.text=compendiumLink?`@Compendium[${compendiumLink}]`:"",flattened.references=!0,flattened.overriddenBy.push(ref)}}for(const immuneToRef of systemData.references.immunityFrom){const refCondition=items.find((other=>other.id===immuneToRef.id));if(refCondition){const ref={id:systemData.references.parent,name:refCondition.name,base:refCondition.slug,text:""};refCondition.value&&(ref.name=`${ref.name} ${refCondition.value}`);const compendiumLink=null===(_h=refCondition.sourceId)||void 0===_h?void 0:_h.replace(/^Compendium\./,"");ref.text=compendiumLink?`@Compendium[${compendiumLink}]`:"",flattened.references=!0,flattened.immunityFrom.push(ref)}}}for(const flattened of flatteneds.values())flattened.breakdown=(()=>{if(flattened.parents.length>0){const list=Array.from(new Set(flattened.parents.map((p=>p.name)))).sort(((a,b)=>a.localeCompare(b))).join(", ");return game.i18n.format("PF2E.EffectPanel.AppliedBy",{"condition-list":list})}return""})();return Array.from(flatteneds.values())}static sortConditions(conditionA,conditionB){return conditionA.slug===conditionB.slug?conditionA.isActive?-1:1:conditionA.name.localeCompare(conditionB.name,game.i18n.lang)}}exports.ConditionManager=ConditionManager,_a=ConditionManager,_ConditionManager_initialized={value:!1},ConditionManager.conditions=new Map},34953:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0})},20497:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.reduceResistances=exports.parseExceptions=exports.golemAntiMagic=exports.GolemMagicImmunityResult=exports.calculateDamage=exports.removePositiveOrNegativeDamage=exports.removeAlignmentDamage=exports.Resistance=exports.Weakness=exports.Immunity=exports.DamageValues=exports.isCombinedTrait=exports.isAttackTrait=exports.ATTACK_TYPES=exports.DAMAGE_TRAITS=exports.isDamageType=void 0;const alignment_1=__webpack_require__(87941),_util_1=__webpack_require__(6945),values_1=__webpack_require__(6089);exports.isDamageType=function(value){return(0,_util_1.setHasElement)(values_1.DAMAGE_TYPES,value)},exports.DAMAGE_TRAITS=new Set(["air","earth","light","magical","unarmed","water"]),exports.ATTACK_TYPES=new Set(["area-damage","nonlethal-attacks","persistent-damage","precision","vorpal","weapons"]),exports.isAttackTrait=function(trait){return exports.ATTACK_TYPES.has(trait)};const combinedTypes=new Set([...exports.ATTACK_TYPES,...values_1.DAMAGE_CATEGORIES,...exports.DAMAGE_TRAITS,...values_1.DAMAGE_TYPES,"all","non-magical","critical-hits","splash-damage"]);function isCombinedTrait(trait){return combinedTypes.has(trait)}exports.isCombinedTrait=isCombinedTrait;class DamageValues{constructor({normal=0,precision=0,critical=0,criticalPrecision=0,splash=0,traits=new Set}={}){this.normal=normal,this.precision=precision,this.critical=critical,this.criticalPrecision=criticalPrecision,this.splash=splash,this.traits=traits}total(){return this.normal+this.precision+this.critical+this.criticalPrecision+this.splash}totalPrecision(){return this.precision+this.criticalPrecision}totalCritical(){return this.critical+this.criticalPrecision}totalSplash(){return this.splash}getTraits(){return denormalizeTraits(this.traits)}withoutCritical(){return this.copy({critical:0,criticalPrecision:0})}withoutPrecision(){return this.copy({precision:0,criticalPrecision:0})}withoutSplash(){return this.copy({splash:0})}addDamage(value){return this.copy({normal:this.normal+value})}copy({normal,precision,critical,criticalPrecision,splash,traits}){return new DamageValues({normal:null!=normal?normal:this.normal,precision:null!=precision?precision:this.precision,critical:null!=critical?critical:this.critical,criticalPrecision:null!=criticalPrecision?criticalPrecision:this.criticalPrecision,splash:null!=splash?splash:this.splash,traits:null!=traits?traits:this.traits})}}exports.DamageValues=DamageValues;class IWRAttribute{constructor({exceptions=[],type}){this.exceptions=exceptions,this.type=type}exceptionApplies(damageTraits){return this.exceptions.some((traitCombination=>Array.from(traitCombination).every((trait=>damageTraits.has(trait)))))}getType(){return this.type}}class Immunity extends IWRAttribute{copy({type,exceptions}){return new Immunity({exceptions:null!=exceptions?exceptions:this.exceptions,type:null!=type?type:this.type})}}exports.Immunity=Immunity;exports.Weakness=class Weakness extends IWRAttribute{constructor({type,value,exceptions=[]}){super({exceptions,type}),this.value=value}calculateValue(damage,damageType){var _a;const damageValues=null!==(_a=damage.get(damageType))&&void 0!==_a?_a:new DamageValues;return"critical-hits"===this.type?damageValues.totalCritical()>0?this.value:0:"precision"===this.type?damageValues.totalPrecision()>0?this.value:0:"splash-damage"===this.type?damageValues.totalSplash()>0?this.value:0:damageValues.total()>0?this.value:0}};class Resistance extends IWRAttribute{constructor({type,value,doubleResistanceVsNonMagical=!1,exceptions=[]}){super({exceptions,type}),this.value=value,this.doubleResistanceVsNonMagical=doubleResistanceVsNonMagical}calculateValue(damage,damageType){var _a;const damageValues=null!==(_a=damage.get(damageType))&&void 0!==_a?_a:new DamageValues,isNonMagical=getAllAttackTraits(damage).has("non-magical"),adjustedValue=this.doubleResistanceVsNonMagical&&isNonMagical?2*this.value:this.value;return"critical-hits"===this.type?Math.min(adjustedValue,damageValues.totalCritical()):"precision"===this.type?Math.min(adjustedValue,damageValues.totalPrecision()):"splash-damage"===this.type?Math.min(adjustedValue,damageValues.totalSplash()):adjustedValue}withReducedValue(reduceBy){return new Resistance({type:this.type,value:Math.max(0,this.value-reduceBy),exceptions:this.exceptions,doubleResistanceVsNonMagical:this.doubleResistanceVsNonMagical})}getValue(){return this.value}}function denormalizeTraits(traits){const result=new Set;result.add("all"),values_1.PHYSICAL_DAMAGE_TYPES.some((damageType=>traits.has(damageType)))&&result.add("physical"),values_1.ENERGY_DAMAGE_TYPES.some((damageType=>traits.has(damageType)))&&result.add("energy"),traits.has("salt-water")&&result.add("water"),traits.has("mithral")&&result.add("silver"),traits.has("magical")||result.add("non-magical");for(const trait of traits)result.add(trait);return result}function getAllAttackTraits(damage){const damageTypes=Array.from(damage.keys()),combined=[...Array.from(damage.values()).flatMap((value=>Array.from(value.getTraits()))),...damageTypes];return denormalizeTraits(new Set(combined))}function filterModifiers(damage,damageType,modifiersByType){var _a,_b;const allAttackTraits=getAllAttackTraits(damage),damageTraits=new Set(["critical-hits","precision","splash-damage",...denormalizeTraits(new Set([damageType])),...null!==(_b=null===(_a=damage.get(damageType))||void 0===_a?void 0:_a.getTraits())&&void 0!==_b?_b:new Set]);return Array.from(damageTraits).flatMap((trait=>{var _a;return null!==(_a=modifiersByType.get(trait))&&void 0!==_a?_a:[]})).filter((modifier=>!modifier.exceptionApplies(allAttackTraits)))}function findHighestModifier(damage,damageType,modifiersByType){return filterModifiers(damage,damageType,modifiersByType).map((modifier=>modifier.calculateValue(damage,damageType))).sort(((a,b)=>a-b)).reverse()[0]}function removeAlignmentDamage(damage,alignment){(0,alignment_1.isEvil)(alignment)||damage.delete("good"),(0,alignment_1.isGood)(alignment)||damage.delete("evil"),(0,alignment_1.isLawful)(alignment)||damage.delete("chaotic"),(0,alignment_1.isChaotic)(alignment)||damage.delete("lawful")}function removePositiveOrNegativeDamage(damage,modeOfBeing){"living"===modeOfBeing?damage.delete("positive"):"undead"===modeOfBeing?(damage.delete("negative"),damage.delete("bleed")):(damage.delete("negative"),damage.delete("positive"))}exports.Resistance=Resistance,exports.removeAlignmentDamage=removeAlignmentDamage,exports.removePositiveOrNegativeDamage=removePositiveOrNegativeDamage,exports.calculateDamage=function({damage,immunities=[],resistances=[],weaknesses=[],modeOfBeing="living",alignment="N",damageOptions={disregardTargetAlignment:!1}}){const copiedDamage=new Map;return Array.from(damage.entries()).forEach((([type,value])=>{copiedDamage.set(type,value)})),removePositiveOrNegativeDamage(copiedDamage,modeOfBeing),damageOptions.disregardTargetAlignment||removeAlignmentDamage(copiedDamage,alignment),function(damage,immunities){const flattenedImmunities=immunities.flatMap((immunity=>"object-immunities"===immunity.getType()?["bleed","poison","nonlethal-attacks","mental"].map((type=>immunity.copy({type}))):[immunity])).filter((immunity=>isCombinedTrait(immunity.getType()))),modifiersByType=(0,_util_1.groupBy)(flattenedImmunities,(immunity=>immunity.getType()));for(const type of Array.from(damage.keys())){let damageValues=damage.get(type),isImmune=!1;const applicableModifiers=filterModifiers(damage,type,modifiersByType);for(const modifier of applicableModifiers)"critical-hits"===modifier.getType()?damageValues=damageValues.withoutCritical():"precision"===modifier.getType()?damageValues=damageValues.withoutPrecision():"splash-damage"===modifier.getType()?damageValues=damageValues.withoutSplash():isImmune=!0;isImmune?damage.delete(type):damage.set(type,damageValues)}}(copiedDamage,immunities),function(damage,weaknesses){const usableModifiers=weaknesses.filter((weakness=>isCombinedTrait(weakness.getType()))),modifiersByType=(0,_util_1.groupBy)(usableModifiers,(weakness=>weakness.getType()));for(const type of Array.from(damage.keys())){const damageValues=damage.get(type),highestModifier=findHighestModifier(damage,type,modifiersByType);void 0!==highestModifier&&damage.set(type,damageValues.addDamage(highestModifier))}}(copiedDamage,weaknesses),function(damage,resistances){const usableModifiers=resistances.filter((resistance=>isCombinedTrait(resistance.getType()))),modifiersByType=(0,_util_1.groupBy)(usableModifiers,(resistance=>resistance.getType()));return(0,_util_1.sum)(Array.from(damage.keys()).map((type=>{const damageValues=damage.get(type),highestModifier=findHighestModifier(damage,type,modifiersByType);return void 0===highestModifier?damageValues.total():Math.max(0,damageValues.total()-highestModifier)})))}(copiedDamage,resistances)};class GolemMagicImmunityResult{constructor({slowedRoundsFormula,harmedFormula,healedFormula}={}){this.slowedRoundsFormula=slowedRoundsFormula,this.harmedFormula=harmedFormula,this.healedFormula=healedFormula}getSlowedRoundsFormula(){return this.slowedRoundsFormula}getHarmedFormula(){return this.harmedFormula}getHealedFormula(){return this.healedFormula}}function isTriggeredBy(damageType,values,triggeringTraits){return triggeringTraits.has(damageType)||Array.from(triggeringTraits).some((t=>values.getTraits().has(t)))}exports.GolemMagicImmunityResult=GolemMagicImmunityResult,exports.golemAntiMagic=function(damage,immunity){const result={};for(const[type,damageValues]of damage.entries())if(isTriggeredBy(type,damageValues,immunity.harmedBy.type)){const traits=damage.get(type).getTraits();traits.has("area-damage")||traits.has("persistent-damage")?result.harmedFormula=immunity.harmedBy.areaOrPersistentFormula:result.harmedFormula=immunity.harmedBy.formula}else isTriggeredBy(type,damageValues,immunity.healedBy.type)?result.healedFormula=immunity.healedBy.formula:isTriggeredBy(type,damageValues,immunity.slowedBy)&&(result.slowedRoundsFormula="2d6");return new GolemMagicImmunityResult(result)},exports.parseExceptions=function(exceptions){var _a;if(null==exceptions)return{doubleResistanceVsNonMagical:!1,except:[]};{const traitExceptions=exceptions.toLocaleLowerCase().replace("except","").replace(", or "," or ").replace(", "," or ").replace("unarmed attacks","unarmed").replace("ghost touch","ghostTouch").replace("cold iron","coldiron").trim().split(";"),traitCombinations=traitExceptions[0].split(" or ").map((value=>value.trim()));return{doubleResistanceVsNonMagical:"double resistance vs. non-magical"===(null===(_a=traitExceptions[1])||void 0===_a?void 0:_a.trim()),except:traitCombinations.map((traitCombination=>new Set(traitCombination.split(" ").filter((traitCombination=>isCombinedTrait(traitCombination)))))).filter((traits=>traits.size>0))}}},exports.reduceResistances=function(resistances,reductions){return resistances.map((resistance=>{const reduceBy=reductions.get(resistance.getType());return void 0===reduceBy?resistance:resistance.withReducedValue(reduceBy)}))}},2853:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.nextDamageDieSize=exports.DamageCategorization=void 0;const values_1=__webpack_require__(6089);exports.nextDamageDieSize=function(next){var _a;const[faces,direction]="upgrade"in next?[next.upgrade,1]:[next.downgrade,-1];return null!==(_a=values_1.DAMAGE_DIE_FACES_TUPLE[values_1.DAMAGE_DIE_FACES_TUPLE.indexOf(faces)+direction])&&void 0!==_a?_a:faces};const DamageCategorization={fromDamageType:damageType=>values_1.BASE_DAMAGE_TYPES_TO_CATEGORIES[damageType]||damageType,allCategories:()=>new Set(Object.values(values_1.BASE_DAMAGE_TYPES_TO_CATEGORIES)),baseCategories:()=>new Set(Object.values(values_1.BASE_DAMAGE_TYPES_TO_CATEGORIES)),toDamageTypes:category=>{const types=Object.entries(values_1.BASE_DAMAGE_TYPES_TO_CATEGORIES).filter((([_key,value])=>value===category)).map((([key])=>key));return new Set(types)}};exports.DamageCategorization=DamageCategorization},12227:function(__unused_webpack_module,exports,__webpack_require__){var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k);var desc=Object.getOwnPropertyDescriptor(m,k);desc&&!("get"in desc?!m.__esModule:desc.writable||desc.configurable)||(desc={enumerable:!0,get:function(){return m[k]}}),Object.defineProperty(o,k2,desc)}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)"default"===p||Object.prototype.hasOwnProperty.call(exports,p)||__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:!0}),__exportStar(__webpack_require__(20497),exports),__exportStar(__webpack_require__(2853),exports),__exportStar(__webpack_require__(1375),exports),__exportStar(__webpack_require__(91209),exports),__exportStar(__webpack_require__(6089),exports),__exportStar(__webpack_require__(11678),exports)},1375:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.DamageRollModifiersDialog=void 0;const modifiers_1=__webpack_require__(92823),chat_message_1=__webpack_require__(40405),degree_of_success_1=__webpack_require__(54870),roll_1=__webpack_require__(20129);class DamageRollModifiersDialog extends Application{static async roll(damage,context,callback){var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l,_m,_o,_p,_q,_r,_s,_t,_u,_v;const outcome=null!==(_a=context.outcome)&&void 0!==_a?_a:"success";null!==(_b=context.rollMode)&&void 0!==_b||(context.rollMode=null!==(_c=context.secret?"blindroll":void 0)&&void 0!==_c?_c:game.settings.get("core","rollMode"));const damageBaseModifier=damage.base.diceNumber>0&&0!==damage.base.modifier?damage.base.modifier>0?` + ${damage.base.modifier}`:` - ${Math.abs(damage.base.modifier)}`:0!==damage.base.modifier?damage.base.modifier.toString():"",outcomeLabel=game.i18n.localize(`PF2E.Check.Result.Degree.Attack.${outcome}`);let flavor=`<strong>${damage.name}</strong> (${outcomeLabel})`;if(damage.traits){const toTags=(slugs,{labels={},descriptions={},cssClass,dataAttr})=>slugs.map((s=>{var _a;return{value:s,label:game.i18n.localize(null!==(_a=labels[s])&&void 0!==_a?_a:"")}})).sort(((a,b)=>a.label.localeCompare(b.label))).map((tag=>{var _a;const description=null!==(_a=descriptions[tag.value])&&void 0!==_a?_a:"",span=document.createElement("span");return span.className="tag",cssClass&&span.classList.add(cssClass),span.dataset[dataAttr]=tag.value,span.dataset.description=description,span.innerText=tag.label,span.outerHTML})).join(""),traits=toTags(damage.traits,{labels:CONFIG.PF2E.actionTraits,descriptions:CONFIG.PF2E.traitsDescriptions,cssClass:null,dataAttr:"trait"}),item=null===(_d=context.self)||void 0===_d?void 0:_d.item;flavor+=`<div class="tags">${traits}<hr class="vr" />${[(null==item?void 0:item.isOfType("weapon","melee"))?toTags(Array.from(item.traits),{labels:CONFIG.PF2E.npcAttackTraits,descriptions:CONFIG.PF2E.traitsDescriptions,cssClass:"tag_alt",dataAttr:"trait"}):"",(()=>{if((null==item?void 0:item.isOfType("weapon"))&&item.isRanged){const{rangeIncrement}=item,slug=`range-increment-${rangeIncrement}`,label=game.i18n.format("PF2E.Item.Weapon.RangeIncrementN.Label",{range:rangeIncrement});return toTags([slug],{labels:{[slug]:label},descriptions:{[slug]:"PF2E.Item.Weapon.RangeIncrementN.Hint"},cssClass:"tag_secondary",dataAttr:"slug"})}return""})(),toTags(damage.materials,{labels:CONFIG.PF2E.preciousMaterials,descriptions:CONFIG.PF2E.traitsDescriptions,cssClass:"tag_material",dataAttr:"material"})].join("")}</div><hr>`}const base=damage.base.diceNumber>0?`${damage.base.diceNumber}${damage.base.dieSize}${damageBaseModifier}`:damageBaseModifier.toString(),damageTypes=CONFIG.PF2E.damageTypes,baseBreakdown=`<span class="tag tag_transparent">${base} ${game.i18n.localize(null!==(_e=damageTypes[damage.base.damageType])&&void 0!==_e?_e:damage.base.damageType)}</span>`,modifierBreakdown=[damage.diceModifiers.filter((m=>0!==m.diceNumber)),damage.numericModifiers].flat().filter((m=>m.enabled&&(!m.critical||"criticalSuccess"===outcome))).sort(((a,b)=>a.damageType===damage.base.damageType&&b.damageType===damage.base.damageType?0:a.damageType===damage.base.damageType?-1:b.damageType===damage.base.damageType?1:0)).map((m=>{var _a;const modifier=m instanceof modifiers_1.ModifierPF2e?` ${m.modifier<0?"":"+"}${m.modifier}`:"",damageType=m.damageType&&m.damageType!==damage.base.damageType?game.i18n.localize(null!==(_a=damageTypes[m.damageType])&&void 0!==_a?_a:m.damageType):null,typeLabel=damageType?` ${damageType}`:"";return`<span class="tag tag_transparent">${m.label} ${modifier}${typeLabel}</span>`})).join("");flavor+=`<div class="tags">${baseBreakdown}${modifierBreakdown}</div>`;const noteRollData=null===(_g=null===(_f=context.self)||void 0===_f?void 0:_f.item)||void 0===_g?void 0:_g.getRollData();flavor+=`${(await Promise.all(damage.notes.filter((note=>0===note.outcome.length||note.outcome.includes(outcome))).map((async note=>await game.pf2e.TextEditor.enrichHTML(note.text,{rollData:noteRollData,async:!0}))))).join("<br />")}`;if(!deepClone(damage.formula[outcome]))return void ui.notifications.error(game.i18n.format("PF2E.UI.noDamageInfoForOutcome",{outcome}));const{self,target}=context,item=null!==(_h=null==self?void 0:self.item)&&void 0!==_h?_h:null,origin=item?{uuid:item.uuid,type:item.type}:null,targetFlag=target?{actor:target.actor.uuid,token:target.token.uuid}:null,strike=(()=>{var _a;if((null==item?void 0:item.isOfType("melee","weapon"))&&item&&(null===(_a=null==self?void 0:self.actor)||void 0===_a?void 0:_a.isOfType("character","npc"))){const strikes=self.actor.system.actions,strike=strikes.find((a=>{var _a;return(null===(_a=a.item)||void 0===_a?void 0:_a.id)===item.id&&a.item.slug===item.slug}));if(strike)return{actor:self.actor.uuid,index:strikes.indexOf(strike),damaging:!0,name:strike.item.name,altUsage:item.isOfType("weapon")?item.altUsageType:null}}return null})(),rollerId=game.userId,degreeOfSuccess=degree_of_success_1.DEGREE_OF_SUCCESS_STRINGS.indexOf(outcome),roll=await new roll_1.DamageRoll("",{},{rollerId,damage,degreeOfSuccess}).evaluate({async:!0}),rollData=roll.options.result,rollMode=null!==(_j=context.rollMode)&&void 0!==_j?_j:"publicroll",contextFlag={type:context.type,actor:null!==(_l=null===(_k=context.self)||void 0===_k?void 0:_k.actor.id)&&void 0!==_l?_l:null,token:null!==(_p=null===(_o=null===(_m=context.self)||void 0===_m?void 0:_m.token)||void 0===_o?void 0:_o.id)&&void 0!==_p?_p:null,target:targetFlag,domains:null!==(_q=context.domains)&&void 0!==_q?_q:[],options:Array.from(context.options).sort(),notes:null!==(_r=context.notes)&&void 0!==_r?_r:[],secret:null!==(_s=context.secret)&&void 0!==_s&&_s,rollMode,traits:null!==(_t=context.traits)&&void 0!==_t?_t:[],skipDialog:null!==(_u=context.skipDialog)&&void 0!==_u?_u:!game.user.settings.showRollDialogs,outcome,unadjustedOutcome:null!==(_v=context.unadjustedOutcome)&&void 0!==_v?_v:null};await chat_message_1.ChatMessagePF2e.create({type:CONST.CHAT_MESSAGE_TYPES.ROLL,speaker:chat_message_1.ChatMessagePF2e.getSpeaker({actor:null==self?void 0:self.actor,token:null==self?void 0:self.token}),flavor,content:await roll.render(),roll:roll.toJSON(),sound:"sounds/dice.wav",flags:{core:{canPopout:!0},pf2e:{context:contextFlag,damageRoll:rollData,target:targetFlag,origin,strike,preformatted:"both"}}},{rollMode}),Hooks.call("pf2e.damageRoll",rollData),callback&&callback(rollData)}}exports.DamageRollModifiersDialog=DamageRollModifiersDialog},20129:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.DamageRoll=void 0;const degree_of_success_1=__webpack_require__(54870),values_1=__webpack_require__(6089);class DamageRoll extends Roll{constructor(formula,data={},options){var _a,_b;super(formula,data,options),this.roller=null!==(_b=game.users.get(null!==(_a=null==options?void 0:options.rollerId)&&void 0!==_a?_a:""))&&void 0!==_b?_b:null,options.result&&(this._evaluated=!0,this._total=options.result.total)}get formula(){var _a,_b,_c;const outcome=degree_of_success_1.DEGREE_OF_SUCCESS_STRINGS[null!==(_a=this.options.degreeOfSuccess)&&void 0!==_a?_a:2];return null!==(_c=null===(_b=this.options.damage.formula[null!=outcome?outcome:2])||void 0===_b?void 0:_b.formula)&&void 0!==_c?_c:super.formula}async _evaluate(options){var _a,_b,_c;const{damage}=this.options,outcome=degree_of_success_1.DEGREE_OF_SUCCESS_STRINGS[null!==(_a=this.options.degreeOfSuccess)&&void 0!==_a?_a:2],formula=this.options.damage.formula[null!=outcome?outcome:2];if(!formula)return this;const rollData={outcome,traits:null!==(_b=damage.traits)&&void 0!==_b?_b:[],types:{},total:0,diceResults:{},baseDamageDice:damage.effectDice},rolls=[];for(const[damageType,categories]of Object.entries(formula.partials)){rollData.diceResults[damageType]={};for(const[damageCategory,partial]of Object.entries(categories)){const roll=await new Roll(partial,formula.data).evaluate({...options,async:!0});rolls.push(roll);const damageValue=null!==(_c=rollData.types[damageType])&&void 0!==_c?_c:{};damageValue[damageCategory]=roll.total,rollData.types[damageType]=damageValue,rollData.total+=roll.total,rollData.diceResults[damageType][damageCategory]=roll.dice.flatMap((d=>d.results.map((r=>{var _a;return{faces:null!==(_a=d.faces)&&void 0!==_a?_a:0,result:r.result}}))))}}const pool=PoolTerm.fromRolls(rolls),firstResult=pool.results.at(0);return 0===rollData.total&&0===(null==firstResult?void 0:firstResult.result)&&(rollData.total=1,firstResult.result=1),this.options.result=rollData,this.terms=[pool],this._evaluated=!0,this._total=pool.total,this}async getTooltip(){var _a,_b,_c;const{result}=this.options,outcome=degree_of_success_1.DEGREE_OF_SUCCESS_STRINGS[null!==(_a=this.options.degreeOfSuccess)&&void 0!==_a?_a:2],formula=this.options.damage.formula[null!=outcome?outcome:2];if(!result||!formula)return super.getTooltip();const damageTypes=CONFIG.PF2E.damageTypes,damageCategories=CONFIG.PF2E.damageCategories,renderData={damageTypes:{}};for(const[damageType,categories]of Object.entries(result.diceResults))renderData.damageTypes[damageType]={icon:null!==(_b=values_1.DAMAGE_TYPE_ICONS[damageType])&&void 0!==_b?_b:damageType,label:null!==(_c=damageTypes[damageType])&&void 0!==_c?_c:damageType,categories:Object.entries(categories).reduce(((output,[damageCategory,dice])=>{var _a,_b,_c,_d;return output[damageCategory]={dice,formula:null===(_a=formula.partials[damageType])||void 0===_a?void 0:_a[damageCategory],label:null!==(_b=damageCategories[damageCategory])&&void 0!==_b?_b:damageCategory,total:null!==(_d=null===(_c=result.types[damageType])||void 0===_c?void 0:_c[damageCategory])&&void 0!==_d?_d:0},output}),{})};return await renderTemplate("systems/pf2e/templates/chat/damage/damage-card-details.html",renderData)}async render(chatOptions){return this._evaluated&&(this._formula=this.formula),super.render(chatOptions)}}exports.DamageRoll=DamageRoll},91209:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0})},6089:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.PHYSICAL_DAMAGE_TYPES=exports.ENERGY_DAMAGE_TYPES=exports.DAMAGE_TYPES=exports.DAMAGE_TYPE_ICONS=exports.DAMAGE_DIE_FACES_TUPLE=exports.DAMAGE_DIE_FACES=exports.DAMAGE_CATEGORIES=exports.BASE_DAMAGE_TYPES_TO_CATEGORIES=exports.ALIGNMENT_DAMAGE_TYPES=void 0;const PHYSICAL_DAMAGE_TYPES=["bludgeoning","piercing","slashing","bleed"];exports.PHYSICAL_DAMAGE_TYPES=PHYSICAL_DAMAGE_TYPES;const ENERGY_DAMAGE_TYPES=["acid","cold","electricity","fire","sonic","force","positive","negative"];exports.ENERGY_DAMAGE_TYPES=ENERGY_DAMAGE_TYPES;const ALIGNMENT_DAMAGE_TYPES=["chaotic","lawful","good","evil"];exports.ALIGNMENT_DAMAGE_TYPES=ALIGNMENT_DAMAGE_TYPES;const DAMAGE_CATEGORIES=new Set(["adamantine","alignment","coldiron","darkwood","energy","ghostTouch","mithral","orichalcum","physical","precision","salt","salt-water","silver","sisterstone-dusk","sisterstone-scarlet","warpglass"]);exports.DAMAGE_CATEGORIES=DAMAGE_CATEGORIES;const DAMAGE_DIE_FACES_TUPLE=["d4","d6","d8","d10","d12"];exports.DAMAGE_DIE_FACES_TUPLE=DAMAGE_DIE_FACES_TUPLE;const DAMAGE_DIE_FACES=new Set(DAMAGE_DIE_FACES_TUPLE);exports.DAMAGE_DIE_FACES=DAMAGE_DIE_FACES;const DAMAGE_TYPES=new Set([...PHYSICAL_DAMAGE_TYPES,...ENERGY_DAMAGE_TYPES,...ALIGNMENT_DAMAGE_TYPES,"mental","poison","untyped"]);exports.DAMAGE_TYPES=DAMAGE_TYPES;exports.BASE_DAMAGE_TYPES_TO_CATEGORIES={bludgeoning:"physical",piercing:"physical",slashing:"physical",acid:"energy",cold:"energy",electricity:"energy",fire:"energy",sonic:"energy",positive:"energy",negative:"energy",force:"energy",chaotic:"alignment",evil:"alignment",good:"alignment",lawful:"alignment"};exports.DAMAGE_TYPE_ICONS={acid:"vial",bludgeoning:"hammer",chaotic:"dizzy",cold:"snowflake",electricity:"bolt",evil:"crow",fire:"fire",force:"hand-sparkles",good:"dove",lawful:"balance-scale",mental:"brain",negative:"skull",piercing:"bow-arrow",poison:"spider",positive:"sun",slashing:"swords",sonic:"volume-up"}},11678:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.WeaponDamagePF2e=void 0;const modifiers_1=__webpack_require__(92823),physical_1=__webpack_require__(6560),weapon_1=__webpack_require__(14299),notes_1=__webpack_require__(46379),util_1=__webpack_require__(58903),predication_1=__webpack_require__(538),_util_1=__webpack_require__(6945),_1=__webpack_require__(12227);class WeaponDamagePF2e{static calculateStrikeNPC(attack,actor,traits=[],statisticsModifiers,modifierAdjustments,damageDice,proficiencyRank=0,options=new Set,rollNotes,strikeAdjustments){var _a;const secondaryInstances=Object.values(attack.system.damageRolls).slice(1).map(this.npcDamageToWeaponDamage);for(const instance of secondaryInstances){const{damageType}=instance;if(instance.dice>0&&instance.die&&damageDice.damage.push((()=>new modifiers_1.DamageDicePF2e({slug:"base",label:"PF2E.Damage.Base",selector:"damage",diceNumber:instance.dice,dieSize:instance.die,damageType:instance.damageType}))),instance.modifier){(null!==(_a=statisticsModifiers.damage)&&void 0!==_a?_a:statisticsModifiers.damage=[]).push((()=>new modifiers_1.ModifierPF2e({label:"PF2E.WeaponBaseLabel",modifier:instance.modifier,damageType})))}}return WeaponDamagePF2e.calculate(attack,actor,traits,statisticsModifiers,modifierAdjustments,damageDice,proficiencyRank,options,rollNotes,null,{},strikeAdjustments)}static calculate(weapon,actor,traits=[],statisticsModifiers,modifierAdjustments,damageDice,proficiencyRank=-1,options=new Set,rollNotes,weaponPotency,striking,strikeAdjustments){var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l,_m;const{baseDamage}=weapon;if(0===baseDamage.dice&&0===baseDamage.modifier)return null;let effectDice=baseDamage.dice;const diceModifiers=[],numericModifiers=[],weaponTraits=weapon.system.traits.value;for(const trait of weaponTraits)options.add(trait);proficiencyRank>=0&&options.add(modifiers_1.PROFICIENCY_RANK_OPTION[proficiencyRank]);{const isMelee=!!weapon.isMelee;options.add(isMelee?"melee":"ranged");const strengthModValue=actor.abilities.str.mod,modifierValue=WeaponDamagePF2e.strengthModToDamage(weapon)?strengthModValue:weaponTraits.some((t=>"propulsive"===t))?strengthModValue<0?strengthModValue:Math.floor(strengthModValue/2):null;if(weapon.isOfType("weapon")&&"number"==typeof modifierValue){const strModifier=new modifiers_1.ModifierPF2e({label:CONFIG.PF2E.abilities.str,ability:"str",modifier:modifierValue,type:modifiers_1.MODIFIER_TYPE.ABILITY});numericModifiers.push(strModifier)}}const resolvables={weapon},injectables=resolvables,synthetics={modifierAdjustments,statisticsModifiers},fromDamageSelector=(0,util_1.extractModifiers)(synthetics,["damage"],{resolvables,injectables}),modifiersAndSelectors=numericModifiers.concat(fromDamageSelector).filter((m=>"ability"===m.type)).flatMap((modifier=>{const selectors=WeaponDamagePF2e.getSelectors(weapon,modifier.ability,proficiencyRank);return modifier.predicate.test(options)?{modifier,selectors}:[]})),{selectors}=modifiersAndSelectors.length>0?modifiersAndSelectors.reduce(((best,candidate)=>candidate.modifier.modifier>best.modifier.modifier?candidate:best)):{selectors:WeaponDamagePF2e.getSelectors(weapon,null,proficiencyRank)};for(const rule of actor.rules.filter((r=>!r.ignored)))null===(_a=rule.beforeRoll)||void 0===_a||_a.call(rule,selectors,options);if(weapon.isOfType("weapon")){weaponTraits.includes("kickback")&&numericModifiers.push(new modifiers_1.ModifierPF2e({label:CONFIG.PF2E.weaponTraits.kickback,modifier:1}));const twoHandTrait=weaponTraits.find((t=>{var _a;return t.startsWith("two-hand-")&&(null!==(_a=weapon.system.equipped.handsHeld)&&void 0!==_a?_a:0)>=2}));twoHandTrait&&(baseDamage.die=twoHandTrait.substring(twoHandTrait.lastIndexOf("-")+1));const splashDamage=Number(null===(_b=weapon.system.splashDamage)||void 0===_b?void 0:_b.value);if(splashDamage>0){const modifier=new modifiers_1.ModifierPF2e({label:"PF2E.WeaponSplashDamageLabel",modifier:splashDamage,damageCategory:"splash"});numericModifiers.push(modifier)}const bonusDamage=Number(null===(_c=weapon.system.bonusDamage)||void 0===_c?void 0:_c.value);bonusDamage>0&&numericModifiers.push(new modifiers_1.ModifierPF2e({label:"PF2E.WeaponBonusDamageLabel",modifier:bonusDamage}));const customDamage=weapon.system.property1,normalDice=null!==(_d=customDamage.dice)&&void 0!==_d?_d:0;if(normalDice>0){const damageType=customDamage.damageType||null;diceModifiers.push(new modifiers_1.DiceModifierPF2e({label:"PF2E.WeaponCustomDamageLabel",diceNumber:normalDice,dieSize:customDamage.die,damageType}))}const critDice=null!==(_e=customDamage.critDice)&&void 0!==_e?_e:0;if(critDice>0){const damageType=customDamage.critDamageType||null;diceModifiers.push(new modifiers_1.DiceModifierPF2e({label:"PF2E.WeaponCustomDamageLabel",diceNumber:critDice,dieSize:customDamage.critDie,damageType,critical:!0}))}}const potency=null!==(_f=null==weaponPotency?void 0:weaponPotency.bonus)&&void 0!==_f?_f:0;let strikingDice=0;{const strikingList=[];selectors.forEach((key=>{var _a;(null!==(_a=striking[key])&&void 0!==_a?_a:[]).filter((wp=>predication_1.PredicatePF2e.test(wp.predicate,options))).forEach((wp=>strikingList.push(wp)))}));const strikingRune=weapon.isOfType("weapon")?weapon.system.runes.striking:null;if(strikingRune&&strikingList.push({label:"PF2E.StrikingRuneLabel",bonus:strikingRune,predicate:new predication_1.PredicatePF2e}),strikingList.length>0){const s=strikingList.reduce(((highest,current)=>highest.bonus>current.bonus?highest:current),strikingList[0]);effectDice+=s.bonus,strikingDice=s.bonus,diceModifiers.push(new modifiers_1.DiceModifierPF2e({label:s.label,diceNumber:s.bonus}))}}const propertyRunes=null!==(_g=null==weaponPotency?void 0:weaponPotency.property)&&void 0!==_g?_g:[];if(diceModifiers.push(...(0,physical_1.getPropertyRuneModifiers)(propertyRunes)),propertyRunes.includes("ghostTouch")&&diceModifiers.push(new modifiers_1.DiceModifierPF2e({label:CONFIG.PF2E.weaponPropertyRunes.ghostTouch})),weaponTraits.some((t=>"backstabber"===t))&&options.has("target:condition:flat-footed")){const modifier=new modifiers_1.ModifierPF2e({label:CONFIG.PF2E.weaponTraits.backstabber,modifier:potency>2?2:1,damageCategory:"precision"});numericModifiers.push(modifier)}const traitLabels=CONFIG.PF2E.weaponTraits,deadlyTraits=weaponTraits.filter((t=>t.startsWith("deadly-")));for(const slug of deadlyTraits){const diceNumber=(()=>{var _a;const baseNumber=Number(null===(_a=/-(\d)d\d{1,2}$/.exec(slug))||void 0===_a?void 0:_a.at(1))||1;return strikingDice>1?strikingDice*baseNumber:baseNumber})();diceModifiers.push(new modifiers_1.DiceModifierPF2e({label:traitLabels[slug],diceNumber,dieSize:null!==(_j=null===(_h=/-\d?(d\d{1,2})$/.exec(slug))||void 0===_h?void 0:_h.at(1))&&void 0!==_j?_j:baseDamage.die,critical:!0}))}for(const trait of weaponTraits.filter((t=>t.startsWith("fatal-d")))){const dieSize=trait.substring(trait.indexOf("-")+1);diceModifiers.push(new modifiers_1.DiceModifierPF2e({label:traitLabels[trait],diceNumber:1,dieSize,critical:!0,enabled:!0,override:{dieSize}}))}const weaponSpecializationDamage=proficiencyRank>1?proficiencyRank:0;if(weaponSpecializationDamage>0){const has=(slug,name)=>actor.items.some((item=>{var _a;return"feat"===item.type&&((null===(_a=item.slug)||void 0===_a?void 0:_a.startsWith(slug))||item.name.startsWith(name))}));has("greater-weapon-specialization","Greater Weapon Specialization")?numericModifiers.push(new modifiers_1.ModifierPF2e({label:"PF2E.GreaterWeaponSpecialization",modifier:2*weaponSpecializationDamage})):has("weapon-specialization","Weapon Specialization")&&numericModifiers.push(new modifiers_1.ModifierPF2e({label:"PF2E.WeaponSpecialization",modifier:weaponSpecializationDamage}))}const syntheticModifiers=(0,util_1.extractModifiers)(synthetics,selectors,{resolvables,injectables});numericModifiers.push(...new modifiers_1.StatisticModifier("",syntheticModifiers,options).modifiers);const runeNotes=propertyRunes.flatMap((r=>{var _a,_b;return(null!==(_b=null===(_a=CONFIG.PF2E.runes.weapon.property[r].damage)||void 0===_a?void 0:_a.notes)&&void 0!==_b?_b:[]).map((d=>new notes_1.RollNotePF2e({selector:"strike-damage",...d})))}));(null!==(_k=rollNotes["strike-damage"])&&void 0!==_k?_k:rollNotes["strike-damage"]=[]).push(...runeNotes);const notes=selectors.flatMap((s=>{var _a,_b;return null!==(_b=null===(_a=rollNotes[s])||void 0===_a?void 0:_a.map((n=>n.clone())).filter((n=>n.predicate.test(options))))&&void 0!==_b?_b:[]})),material=(0,_util_1.setHasElement)(weapon_1.WEAPON_MATERIAL_EFFECTS,weapon.system.material.precious)?weapon.system.material.precious:null,materials=new Set;material&&materials.add(material);for(const adjustment of strikeAdjustments)null===(_l=adjustment.adjustDamageRoll)||void 0===_l||_l.call(adjustment,weapon,{materials});for(const option of Array.from(materials).map((m=>`weapon:material:${m}`)))options.add(option);const damage={name:`${game.i18n.localize("PF2E.DamageRoll")}: ${weapon.name}`,base:{diceNumber:baseDamage.dice,dieSize:baseDamage.die,modifier:baseDamage.modifier,category:_1.DamageCategorization.fromDamageType(baseDamage.damageType),damageType:baseDamage.damageType},effectDice,diceModifiers,numericModifiers,notes,traits:(null!=traits?traits:[]).map((t=>t.name)),materials:Array.from(materials)};diceModifiers.push(...(0,util_1.extractDamageDice)(damageDice,selectors,{test:options,resolvables:{weapon},injectables:{weapon}}));for(const dice of diceModifiers)dice.label=game.i18n.localize(null!==(_m=dice.label)&&void 0!==_m?_m:dice.slug),dice.diceNumber>0&&dice.dieSize?dice.label+=` +${dice.diceNumber}${dice.dieSize}`:dice.diceNumber>0?dice.label+=` +${dice.diceNumber}${damage.base.dieSize}`:dice.dieSize&&(dice.label+=` ${dice.dieSize}`),dice.category&&(dice.diceNumber>0||dice.dieSize)&&(!dice.damageType||dice.damageType===damage.base.damageType&&dice.category!==damage.base.category)&&(dice.label+=` ${dice.category}`),dice.enabled=dice.predicate.test(options),dice.ignored=!dice.enabled;const excludeFrom=weapon.isOfType("weapon")?weapon:null;return this.excludeDamage({actor,weapon:excludeFrom,modifiers:[...numericModifiers,...diceModifiers],options}),{...damage,formula:{success:this.getFormula(deepClone(damage),!1),criticalSuccess:this.getFormula(deepClone(damage),!0)}}}static getFormula(damage,critical){var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k;const{base}=damage,diceModifiers=damage.diceModifiers,outcomeMatches=m=>null===m.critical||critical&&m.critical||!critical&&!m.critical,hasUpgrade=diceModifiers.some((dm=>{var _a;return dm.enabled&&(null===(_a=dm.override)||void 0===_a?void 0:_a.upgrade)&&outcomeMatches(dm)})),hasDowngrade=diceModifiers.some((dm=>{var _a;return dm.enabled&&(null===(_a=dm.override)||void 0===_a?void 0:_a.downgrade)&&(critical||!dm.critical)}));base.dieSize&&hasUpgrade&&!hasDowngrade?base.dieSize=(0,_1.nextDamageDieSize)({upgrade:base.dieSize}):base.dieSize&&hasDowngrade&&!hasUpgrade&&(base.dieSize=(0,_1.nextDamageDieSize)({downgrade:base.dieSize}));const damageOverrides=diceModifiers.filter((dm=>!(!dm.enabled||!dm.override)));for(const override of damageOverrides)(critical&&!1!==override.critical||!critical&&!override.critical)&&(base.dieSize=null!==(_a=override.override.dieSize)&&void 0!==_a?_a:base.dieSize,base.damageType=null!==(_b=override.override.damageType)&&void 0!==_b?_b:base.damageType,base.diceNumber=null!==(_c=override.override.diceNumber)&&void 0!==_c?_c:base.diceNumber);base.category=_1.DamageCategorization.fromDamageType(base.damageType);const dicePool={},critPool={};dicePool[base.damageType]={base:!0,categories:{[_1.DamageCategorization.fromDamageType(base.damageType)]:{dice:base.dieSize?{[base.dieSize]:base.diceNumber}:{},modifier:null!==(_d=base.modifier)&&void 0!==_d?_d:0}}};for(const dice of diceModifiers.filter((dm=>dm.enabled))){const dieSize=dice.dieSize||base.dieSize||null;if(dice.diceNumber>0&&dieSize){const pool=dice.critical||critical&&!1===dice.critical?critPool:dicePool;this.addDice(pool,null!==(_e=dice.damageType)&&void 0!==_e?_e:base.damageType,dice.category,dieSize,dice.diceNumber)}}{const modifiers=damage.numericModifiers.flatMap((modifier=>{var _a,_b;return null!==(_a=modifier.damageType)&&void 0!==_a||(modifier.damageType=base.damageType),null!==(_b=modifier.damageCategory)&&void 0!==_b||(modifier.damageCategory=_1.DamageCategorization.fromDamageType(modifier.damageType)),outcomeMatches(modifier)?modifier:[]})),numericModifiers=Array.from((0,_util_1.groupBy)(modifiers,(m=>{var _a;return null!==(_a=m.damageType)&&void 0!==_a?_a:base.damageType})).entries()).flatMap((([t,m])=>new modifiers_1.StatisticModifier(`${t}-damage`,m).modifiers)).filter((m=>m.enabled));for(const modifier of numericModifiers){const damageType=null!==(_f=modifier.damageType)&&void 0!==_f?_f:base.damageType,pool=null!==(_g=dicePool[damageType])&&void 0!==_g?_g:dicePool[damageType]={categories:{}},categorySlug=null!==(_h=modifier.damageCategory)&&void 0!==_h?_h:_1.DamageCategorization.fromDamageType(damageType);(null!==(_j=(_k=pool.categories)[categorySlug])&&void 0!==_j?_j:_k[categorySlug]={modifier:0,dice:{}}).modifier+=modifier.modifier,damage.traits.push(...modifier.traits)}damage.traits=Array.from(new Set(damage.traits))}const partials={};let formula=this.buildFormula(dicePool,partials);if(critical){formula=this.doubleFormula(formula);const nonDoublings=damage.numericModifiers.filter((m=>m.enabled&&!1===m.critical));for(const nonDoubling of nonDoublings)formula+=` + ${nonDoubling.modifier}`;for(const[damageType,categories]of Object.entries(partials))for(const[damageCategory,f]of Object.entries(categories)){partials[damageType][damageCategory]=this.doubleFormula(f);for(const nonDoubling of nonDoublings)nonDoubling.damageType===damageType&&(partials[damageType][damageCategory]+=` + ${nonDoubling.modifier}`)}const critFormula=this.buildFormula(critPool,partials);critFormula&&(formula+=` + ${critFormula}`)}return{formula,partials,data:{baseDamageType:base.damageType,effectiveDamageDice:damage.effectDice}}}static addDice(pool,damageType,category,dieSize,count){var _a,_b,_c,_d;const damagePool=null!==(_a=pool[damageType])&&void 0!==_a?_a:pool[damageType]={categories:{}},categorySlug=null!=category?category:_1.DamageCategorization.fromDamageType(damageType),damageCategory=null!==(_b=(_d=damagePool.categories)[categorySlug])&&void 0!==_b?_b:_d[categorySlug]={dice:{},modifier:0};return damageCategory.dice[dieSize]=(null!==(_c=damageCategory.dice[dieSize])&&void 0!==_c?_c:0)+count,pool}static buildFormula(pool,partials={}){var _a;const parts=[];let minValue=0;for(const[type,components]of Object.entries(pool))for(const[category,info]of Object.entries(components.categories)){const p=[];for(const[dieSize,count]of Object.entries(info.dice))minValue+=count,parts.push(`${count}${dieSize}`),p.push(`${count}${dieSize}`);info.modifier&&(minValue+=info.modifier,parts.push(info.modifier.toString()),p.push(info.modifier.toString())),partials[type]=null!==(_a=partials[type])&&void 0!==_a?_a:{};let formula=partials[type][category],offset=0;formula||(formula=p[0],offset=1),partials[type][category]=[formula].concat(p.slice(offset).flatMap((part=>part.startsWith("-")?["-",part.substring(1)]:["+",part]))).join(" ")}if(0===parts.length)return"";const formula=[parts[0]].concat(parts.slice(1).flatMap((part=>part.startsWith("-")?["-",part.substring(1)]:["+",part]))).join(" ");return minValue<=0?`{${formula}, 1}kh`:formula}static excludeDamage({actor,modifiers,weapon,options}){var _a;if(!weapon)return;const notIgnored=modifiers.filter((modifier=>!modifier.ignored));for(const rule of actor.rules)null===(_a=rule.applyDamageExclusion)||void 0===_a||_a.call(rule,weapon,notIgnored);for(const modifier of notIgnored)modifier.ignored=!modifier.predicate.test(options)}static doubleFormula(formula){if("doubledamage"===game.settings.get("pf2e","critRule"))return/^\d+$/.test(formula)?`2 * ${formula}`:`2 * (${formula})`;return new Roll(formula).alter(2,0,{multiplyNumeric:!0}).formula}static getSelectors(weapon,ability,proficiencyRank){var _a,_b,_c;const selectors=[`${weapon.id}-damage`,`${null!==(_a=weapon.slug)&&void 0!==_a?_a:(0,_util_1.sluggify)(weapon.name)}-damage`,"strike-damage","damage"];if(weapon.isOfType("melee"))return this.strengthBasedDamage(weapon)&&selectors.push("str-damage"),selectors;if(weapon.group&&selectors.push(`${weapon.group}-weapon-group-damage`),"unarmed"===weapon.category&&selectors.push("unarmed-damage"),ability&&selectors.push(`${ability}-damage`),proficiencyRank>=0){const proficiencies=["untrained","trained","expert","master","legendary"];selectors.push(`${proficiencies[proficiencyRank]}-damage`)}const baseType=null!==(_c=CONFIG.PF2E.equivalentWeapons[null!==(_b=weapon.baseType)&&void 0!==_b?_b:""])&&void 0!==_c?_c:weapon.baseType;return baseType&&!selectors.includes(`${baseType}-damage`)&&selectors.push(`${baseType}-damage`),selectors}static npcDamageToWeaponDamage(instance){var _a,_b,_c;const roll=new Roll(instance.damage),die=roll.dice.at(0),operator=(()=>{var _a,_b;const operators=roll.terms.filter((t=>t instanceof OperatorTerm));if(1===operators.length)return null!==(_b=null===(_a=operators.at(0))||void 0===_a?void 0:_a.operator)&&void 0!==_b?_b:"+";if(2===operators.length){const[first,second]=operators;if(first.operator!==second.operator&&operators.every((o=>["+","-"].includes(o.operator))))return"-"}return"+"})(),modifier=null!==(_b=null===(_a=roll.terms.find((t=>t instanceof NumericTerm)))||void 0===_a?void 0:_a.number)&&void 0!==_b?_b:0;return{dice:null!==(_c=null==die?void 0:die.number)&&void 0!==_c?_c:0,die:(null==die?void 0:die.faces)?`d${die.faces}`:null,modifier:"+"===operator?modifier:-1*modifier,damageType:instance.damageType}}static strengthBasedDamage(weapon){return weapon.isMelee||weapon.isThrown&&!weapon.traits.has("splash")}static strengthModToDamage(weapon){return weapon.isOfType("weapon")&&this.strengthBasedDamage(weapon)}}exports.WeaponDamagePF2e=WeaponDamagePF2e},54870:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.DEGREE_OF_SUCCESS_STRINGS=exports.DEGREE_ADJUSTMENTS=exports.DegreeOfSuccess=void 0;class DegreeOfSuccess{constructor(roll,dc){var _a,_b,_c;roll instanceof Roll?(this.dieResult=null!==(_b=null===(_a=roll.isDeterministic?roll.terms.find((t=>t instanceof NumericTerm)):roll.dice.find((d=>d instanceof Die&&20===d.faces)))||void 0===_a?void 0:_a.total)&&void 0!==_b?_b:1,this.rollTotal=roll.total):(this.dieResult=roll.dieValue,this.rollTotal=roll.dieValue+roll.modifier),this.dc="number"==typeof dc?{value:dc}:dc,this.unadjusted=this.calculateDegreeOfSuccess(),this.degreeAdjustment=this.getDegreeAdjustment(this.unadjusted,null!==(_c=this.dc.modifiers)&&void 0!==_c?_c:{}),this.value=this.degreeAdjustment?this.adjustDegreeOfSuccess(this.degreeAdjustment,this.unadjusted):this.unadjusted}getDegreeAdjustment(value,modifiers){for(const degree of["all","criticalFailure","failure","success","criticalSuccess"]){const checkDC=modifiers[degree];if(!checkDC)continue;const condition=PREFIXES[degree],adjustment=ADJUSTMENTS[checkDC];if(!(value===DegreeOfSuccess.CRITICAL_SUCCESS&&adjustment===DEGREE_ADJUSTMENTS.INCREASE||value===DegreeOfSuccess.CRITICAL_FAILURE&&adjustment===DEGREE_ADJUSTMENTS.LOWER)){if(condition===PREFIXES.all)return adjustment;if(value===condition)return adjustment}}return null}adjustDegreeOfSuccess(adjustment,degreeOfSuccess){return Math.clamped(degreeOfSuccess+adjustment,0,3)}adjustDegreeByDieValue(degree){return 20===this.dieResult?this.adjustDegreeOfSuccess(DEGREE_ADJUSTMENTS.INCREASE,degree):1===this.dieResult?this.adjustDegreeOfSuccess(DEGREE_ADJUSTMENTS.LOWER,degree):degree}calculateDegreeOfSuccess(){const dc=this.dc.value;return this.rollTotal-dc>=10?this.adjustDegreeByDieValue(DegreeOfSuccess.CRITICAL_SUCCESS):dc-this.rollTotal>=10?this.adjustDegreeByDieValue(DegreeOfSuccess.CRITICAL_FAILURE):this.rollTotal>=dc?this.adjustDegreeByDieValue(DegreeOfSuccess.SUCCESS):this.adjustDegreeByDieValue(DegreeOfSuccess.FAILURE)}}exports.DegreeOfSuccess=DegreeOfSuccess,DegreeOfSuccess.CRITICAL_FAILURE=0,DegreeOfSuccess.FAILURE=1,DegreeOfSuccess.SUCCESS=2,DegreeOfSuccess.CRITICAL_SUCCESS=3;const DEGREE_ADJUSTMENTS={LOWER_BY_TWO:-2,LOWER:-1,INCREASE:1,INCREASE_BY_TWO:2};exports.DEGREE_ADJUSTMENTS=DEGREE_ADJUSTMENTS;const ADJUSTMENTS={"two-degrees-better":DEGREE_ADJUSTMENTS.INCREASE_BY_TWO,"one-degree-better":DEGREE_ADJUSTMENTS.INCREASE,"one-degree-worse":DEGREE_ADJUSTMENTS.LOWER,"two-degrees-worse":DEGREE_ADJUSTMENTS.LOWER_BY_TWO};exports.DEGREE_OF_SUCCESS_STRINGS=["criticalFailure","failure","success","criticalSuccess"];const PREFIXES={all:-1,criticalFailure:DegreeOfSuccess.CRITICAL_FAILURE,failure:DegreeOfSuccess.FAILURE,success:DegreeOfSuccess.SUCCESS,criticalSuccess:DegreeOfSuccess.CRITICAL_SUCCESS}},42621:function(__unused_webpack_module,exports,__webpack_require__){var _EffectTracker_instances,_EffectTracker_removeExpired,__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.EffectTracker=void 0;const helpers_1=__webpack_require__(89503);exports.EffectTracker=class EffectTracker{constructor(){_EffectTracker_instances.add(this),this.effects=[],this.auraEffects=new Collection}insert(effect,duration){var _a,_b,_c,_d;if(0===this.effects.length)this.effects.push(effect);else{for(let index=0;index<this.effects.length;index++){const other=this.effects[index],remaining=other.remainingDuration.remaining;if(duration.remaining>remaining);else{if(remaining>duration.remaining)return void this.effects.splice(index,0,effect);if((null!==(_a=effect.system.start.initiative)&&void 0!==_a?_a:0)>(null!==(_b=other.system.start.initiative)&&void 0!==_b?_b:0));else{if((null!==(_c=other.system.start.initiative)&&void 0!==_c?_c:0)>(null!==(_d=effect.system.start.initiative)&&void 0!==_d?_d:0))return void this.effects.splice(index,0,effect);if("turn-start"===other.system.duration.expiry&&"turn-end"===effect.system.duration.expiry)return void this.effects.splice(index,0,effect)}}}this.effects.push(effect)}}register(effect){effect.fromAura&&(canvas.ready||!effect.actor.isToken)&&effect.id&&this.auraEffects.set(effect.uuid,effect);const index=this.effects.findIndex((e=>e.id===effect.id)),systemData=effect.system,duration=systemData.duration.unit;switch(duration){case"unlimited":case"encounter":return"unlimited"===duration&&(systemData.expired=!1),void(index>=0&&index<this.effects.length&&this.effects.splice(index,1));default:{const duration=effect.remainingDuration;if(effect.system.expired=duration.expired,0===this.effects.length||index<0)this.insert(effect,duration);else{const existing=this.effects[index];duration.remaining!==existing.remainingDuration.remaining&&(this.effects.splice(index,1),this.insert(effect,duration))}}}}unregister(toRemove){this.effects=this.effects.filter((e=>e!==toRemove)),this.auraEffects.delete(toRemove.uuid)}async refresh({resetItemData=!1}={}){if(resetItemData)for(const effect of this.effects)effect.reset();const actorsToUpdate=new Set(this.effects.filter((e=>e.isExpired)).map((e=>e.actor)));if(game.settings.get("pf2e","automation.removeExpiredEffects"))for(const actor of actorsToUpdate)await __classPrivateFieldGet(this,_EffectTracker_instances,"m",_EffectTracker_removeExpired).call(this,actor);else game.settings.get("pf2e","automation.effectExpiration")&&(0,helpers_1.resetAndRerenderActors)(actorsToUpdate)}async onEncounterEnd(encounter){const autoRemoveExpired=game.settings.get("pf2e","automation.removeExpiredEffects"),autoExpireEffects=!autoRemoveExpired&&game.settings.get("pf2e","automation.effectExpiration");if(!autoExpireEffects&&!autoRemoveExpired)return;const actors=encounter.combatants.contents.flatMap((c=>{var _a;return null!==(_a=c.actor)&&void 0!==_a?_a:[]})).filter((a=>game.user===a.primaryUpdater));for(const actor of actors){const expiresNow=actor.itemTypes.effect.filter((e=>"encounter"===e.system.duration.unit));if(0!==expiresNow.length){if(autoExpireEffects){const updates=expiresNow.map((e=>({_id:e.id,"system.expired":!0})));await actor.updateEmbeddedDocuments("Item",updates)}else{const deletes=expiresNow.map((e=>e.id));await actor.deleteEmbeddedDocuments("Item",deletes)}for(const effect of expiresNow)this.unregister(effect)}}}},_EffectTracker_instances=new WeakSet,_EffectTracker_removeExpired=async function(actor){actor.primaryUpdater===game.user&&await actor.deleteEmbeddedDocuments("Item",actor.itemTypes.effect.filter((e=>e.isExpired)).map((e=>e.id)))}},41332:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.LocalizePF2e=void 0;const _util_1=__webpack_require__(6945);class LocalizePF2e{static get translations(){if(!this.ready)throw(0,_util_1.ErrorPF2e)("LocalizePF2e instantiated too early");return void 0===this._translations&&(this._translations=mergeObject(game.i18n._fallback,game.i18n.translations,{enforceTypes:!0})),this._translations}}exports.LocalizePF2e=LocalizePF2e,LocalizePF2e.ready=!1},538:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.convertLegacyData=exports.PredicatePF2e=void 0;const _util_1=__webpack_require__(6945);class PredicatePF2e extends Array{constructor(...statements){Array.isArray(statements[0])?super(...statements[0]):super(...statements),this.isValid=PredicatePF2e.isValid(this)}static isValid(statements){return this.isArray(statements)}static isArray(statements){return super.isArray(statements)&&statements.every((s=>StatementValidator.validate(s)))}static test(predicate=[],options){return predicate instanceof PredicatePF2e?predicate.test(options):new PredicatePF2e(...predicate).test(options)}static create(data,warn=!1){return data instanceof PredicatePF2e?data.clone():Array.isArray(data)?new PredicatePF2e(data):(0,_util_1.isObject)(data)?(warn&&foundry.utils.logCompatibilityWarning("Predicate data must be an array",{mode:CONST.COMPATIBILITY_MODES.WARNING,since:"4.2.0",until:"4.5.0"}),new PredicatePF2e(convertLegacyData(data))):new PredicatePF2e}test(options){if(!this.isValid)return console.error("PF2e System | The provided predicate set is malformed."),!1;const domain=options instanceof Set?options:new Set(options);return this.every((s=>this.isTrue(s,domain)))}toObject(){return deepClone([...this])}clone(){return new PredicatePF2e(this.toObject())}isTrue(statement,domain){return"string"==typeof statement&&domain.has(statement)||StatementValidator.isBinaryOp(statement)&&this.testBinaryOp(statement,domain)||StatementValidator.isCompound(statement)&&this.testCompound(statement,domain)}testBinaryOp(statement,domain){if("eq"in statement)return domain.has(`${statement.eq[0]}:${statement.eq[1]}`);{const operator=Object.keys(statement)[0],[left,right]=Object.values(statement)[0],domainArray=Array.from(domain),leftValues=domainArray.flatMap((d=>{var _a;return d.startsWith(left)?Number(null===(_a=/:(-?\d+)$/.exec(d))||void 0===_a?void 0:_a[1]):[]})),rightValues=domainArray.flatMap((d=>{var _a;return"number"==typeof right?right:d.startsWith(right)?Number(null===(_a=/:(-?\d+)$/.exec(d))||void 0===_a?void 0:_a[1]):[]}));switch(operator){case"gt":return leftValues.some((l=>rightValues.every((r=>l>r))));case"gte":return leftValues.some((l=>rightValues.every((r=>l>=r))));case"lt":return leftValues.some((l=>rightValues.every((r=>l<r))));case"lte":return leftValues.some((l=>rightValues.every((r=>l<=r))));default:return console.warn("PF2e System | Malformed binary operation encounter"),!1}}}testCompound(statement,domain){return"and"in statement&&statement.and.every((subProp=>this.isTrue(subProp,domain)))||"nand"in statement&&!statement.nand.every((subProp=>this.isTrue(subProp,domain)))||"or"in statement&&statement.or.some((subProp=>this.isTrue(subProp,domain)))||"nor"in statement&&!statement.nor.some((subProp=>this.isTrue(subProp,domain)))||"not"in statement&&!this.isTrue(statement.not,domain)||"if"in statement&&!(this.isTrue(statement.if,domain)&&!this.isTrue(statement.then,domain))}}exports.PredicatePF2e=PredicatePF2e;class StatementValidator{static validate(statement){return this.isStatement(statement)}static isStatement(statement){return statement instanceof Object?this.isCompound(statement)||this.isBinaryOp(statement):"string"==typeof statement&&this.isAtomic(statement)}static isAtomic(statement){return"string"==typeof statement&&statement.length>0||this.isBinaryOp(statement)}static isBinaryOp(statement){if(!(0,_util_1.isObject)(statement))return!1;const entries=Object.entries(statement);if(entries.length>1)return!1;const[operator,operands]=entries[0];return this.binaryOperators.has(operator)&&Array.isArray(operands)&&2===operands.length&&"string"==typeof operands[0]&&["string","number"].includes(typeof operands[1])}static isCompound(statement){return(0,_util_1.isObject)(statement)&&(this.isAnd(statement)||this.isOr(statement)||this.isNand(statement)||this.isNor(statement)||this.isNot(statement)||this.isIf(statement))}static isAnd(statement){return 1===Object.keys(statement).length&&Array.isArray(statement.and)&&statement.and.every((subProp=>this.isStatement(subProp)))}static isNand(statement){return 1===Object.keys(statement).length&&Array.isArray(statement.nand)&&statement.nand.every((subProp=>this.isStatement(subProp)))}static isOr(statement){return 1===Object.keys(statement).length&&Array.isArray(statement.or)&&statement.or.every((subProp=>this.isStatement(subProp)))}static isNor(statement){return 1===Object.keys(statement).length&&Array.isArray(statement.nor)&&statement.nor.every((subProp=>this.isStatement(subProp)))}static isNot(statement){return 1===Object.keys(statement).length&&!!statement.not&&this.isStatement(statement.not)}static isIf(statement){return 2===Object.keys(statement).length&&this.isStatement(statement.if)&&this.isStatement(statement.then)}}function convertLegacyData(predicate){var _a;const keys=Object.keys(predicate);return 0===keys.length?[]:1===keys.length&&Array.isArray(predicate.all)?deepClone(predicate.all):1===keys.length&&Array.isArray(predicate.any)&&1===predicate.any.length?deepClone(predicate.any):deepClone([null!==(_a=predicate.all)&&void 0!==_a?_a:[],Array.isArray(predicate.any)?{or:predicate.any}:[],Array.isArray(predicate.not)?1===predicate.not.length?{not:predicate.not[0]}:{nor:predicate.not}:[]].flat())}StatementValidator.binaryOperators=new Set(["eq","gt","gte","lt","lte"]),exports.convertLegacyData=convertLegacyData},87525:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.RollTwiceOption=exports.DamageRollPF2e=void 0;const damage_1=__webpack_require__(12227),check_1=__webpack_require__(11848);Object.defineProperty(exports,"RollTwiceOption",{enumerable:!0,get:function(){return check_1.RollTwiceOption}});exports.DamageRollPF2e=class DamageRollPF2e{static async roll(damage,context,callback){var _a,_b;const baseDamageType=null===(_b=damage.formula[null!==(_a=context.outcome)&&void 0!==_a?_a:"success"])||void 0===_b?void 0:_b.data.baseDamageType;damage.base.damageType=null!=baseDamageType?baseDamageType:damage.base.damageType,damage.base.category=damage_1.DamageCategorization.fromDamageType(damage.base.damageType),context.options.has("secret")&&(context.secret=!0),await damage_1.DamageRollModifiersDialog.roll(damage,context,callback)}}},47612:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.AutomationSettings=void 0;const menu_1=__webpack_require__(69593);class AutomationSettings extends menu_1.SettingsMenuPF2e{static get settings(){return{rulesBasedVision:{name:CONFIG.PF2E.SETTINGS.automation.rulesBasedVision.name,hint:CONFIG.PF2E.SETTINGS.automation.rulesBasedVision.hint,default:!0,type:Boolean,onChange:()=>{window.location.reload()}},effectExpiration:{name:CONFIG.PF2E.SETTINGS.automation.effectExpiration.name,hint:CONFIG.PF2E.SETTINGS.automation.effectExpiration.hint,default:!0,type:Boolean,onChange:()=>{for(const actor of game.actors){actor.reset(),actor.sheet.render(!1);for(const token of actor.getActiveTokens())token.drawEffects()}}},removeExpiredEffects:{name:CONFIG.PF2E.SETTINGS.automation.removeExpiredEffects.name,hint:CONFIG.PF2E.SETTINGS.automation.removeExpiredEffects.hint,default:!1,type:Boolean},flankingDetection:{name:CONFIG.PF2E.SETTINGS.automation.flankingDetection.name,hint:CONFIG.PF2E.SETTINGS.automation.flankingDetection.hint,default:!0,type:Boolean},lootableNPCs:{name:CONFIG.PF2E.SETTINGS.automation.lootableNPCs.name,hint:CONFIG.PF2E.SETTINGS.automation.lootableNPCs.hint,default:!1,type:Boolean}}}}exports.AutomationSettings=AutomationSettings,AutomationSettings.namespace="automation",AutomationSettings.SETTINGS=["rulesBasedVision","effectExpiration","removeExpiredEffects","flankingDetection","lootableNPCs"]},15759:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.prepareCleanup=void 0;const base_1=__webpack_require__(54310),_util_1=__webpack_require__(6945),base_2=__webpack_require__(27981);exports.prepareCleanup=function(listKey,deletions){var _a;return new((_a=class extends base_1.MigrationBase{async updateActor(source){if("character"===source.type||"npc"===source.type)switch(listKey){case"creatureTraits":{const traits=source.system.traits;traits.value=traits.value.filter((t=>!deletions.includes(t)));break}case"languages":{const languages=source.system.traits.languages;languages.value=languages.value.filter((l=>!deletions.includes(l)));break}case"weaponCategories":if("character"===source.type)for(const key of deletions)(0,_util_1.objectHasKey)(source.system.martial,key)&&(delete source.system.martial[key],source.system.martial[`-=${key}`]=null);break;case"weaponGroups":if("character"===source.type){const proficiencyKeys=deletions.map((deletion=>`weapon-group-${deletion}`));for(const key of proficiencyKeys)delete source.system.martial[key],source.system.martial[`-=${key}`]=null}break;case"baseWeapons":if("character"===source.type){const proficiencyKeys=deletions.map((deletion=>`weapon-base-${deletion}`));for(const key of proficiencyKeys)delete source.system.martial[key],source.system.martial[`-=${key}`]=null}break;case"weaponTraits":{const weaponsAndAttacks=source.items.filter((i=>["melee","weapon"].includes(i.type)));for(const itemSource of weaponsAndAttacks){const traits=itemSource.system.traits.value;for(const deleted of deletions)traits.findSplice((t=>t===deleted))}}}}async updateItem(source){var _a,_b,_c;switch(listKey){case"creatureTraits":if(source.system.traits){const traits=source.system.traits;traits.value=traits.value.filter((t=>!deletions.includes(t)))}break;case"featTraits":if("feat"===source.type){const traits=source.system.traits;traits.value=traits.value.filter((t=>!deletions.includes(t)))}break;case"magicSchools":if("spell"===source.type){const school=source.system.school;school.value=deletions.includes(null!==(_a=school.value)&&void 0!==_a?_a:"")?"evocation":school.value}break;case"spellTraits":if("spell"===source.type){const traits=source.system.traits;traits.value=traits.value.filter((t=>!deletions.includes(t)))}break;case"weaponCategories":if("weapon"===source.type){const systemData=source.system;systemData.category=deletions.includes(null!==(_b=systemData.category)&&void 0!==_b?_b:"")?"simple":systemData.category}break;case"weaponGroups":if("weapon"===source.type){const systemData=source.system;systemData.group=deletions.includes(null!==(_c=systemData.group)&&void 0!==_c?_c:"")?null:systemData.group}break;case"baseWeapons":if("weapon"===source.type){const base=source.system.baseItem;source.system.baseItem=deletions.includes(null!=base?base:"")?null:base}}}}).version=base_2.MigrationRunnerBase.LATEST_SCHEMA_VERSION,_a)}},44028:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.isHomebrewFlagCategory=void 0;const _util_1=__webpack_require__(6945);exports.isHomebrewFlagCategory=function(value){return Object.entries(value).every((([_hbKey,hbLabel])=>{return"string"==typeof hbLabel||(0,_util_1.isObject)(hbLabel)&&("string"==typeof(obj=hbLabel).label&&"string"==typeof obj.description);var obj}))}},27608:function(__unused_webpack_module,exports,__webpack_require__){var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k);var desc=Object.getOwnPropertyDescriptor(m,k);desc&&!("get"in desc?!m.__esModule:desc.writable||desc.configurable)||(desc={enumerable:!0,get:function(){return m[k]}}),Object.defineProperty(o,k2,desc)}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)"default"===p||Object.prototype.hasOwnProperty.call(exports,p)||__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:!0}),__exportStar(__webpack_require__(62401),exports)},62401:function(__unused_webpack_module,exports,__webpack_require__){var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.HomebrewElements=void 0;const base_1=__webpack_require__(22222),runner_1=__webpack_require__(46842),localize_1=__webpack_require__(41332),_util_1=__webpack_require__(6945),tagify_1=__importDefault(__webpack_require__(88537)),menu_1=__webpack_require__(69593),cleanup_migration_1=__webpack_require__(15759),helpers_1=__webpack_require__(44028);__webpack_require__(34889);class HomebrewElements extends menu_1.SettingsMenuPF2e{constructor(){super(...arguments),this.initialRefresh=!0,this.secondaryRecords={creatureTraits:["ancestryItemTraits"],equipmentTraits:["armorTraits","consumableTraits"],featTraits:["actionTraits"],weaponTraits:["npcAttackTraits"]}}static get defaultOptions(){return mergeObject(super.defaultOptions,{template:"systems/pf2e/templates/system/settings/homebrew.html"})}static get settings(){return this.SETTINGS.map((key=>({key,value:{name:CONFIG.PF2E.SETTINGS.homebrew[key].name,hint:CONFIG.PF2E.SETTINGS.homebrew[key].hint,default:[],type:Object}}))).reduce(((settings,setting)=>mergeObject(settings,{[setting.key]:setting.value})),{})}activateListeners($form){super.activateListeners($form),$form.find("button[name=reset]").on("click",(()=>{this.render()}));for(const key of HomebrewElements.SETTINGS){const $input=$form.find(`input[name="${key}"]`);new tagify_1.default($input[0],{editTags:1,hooks:{beforeRemoveTag:tags=>{const translations=localize_1.LocalizePF2e.translations.PF2E.SETTINGS.Homebrew.ConfirmDelete,response=(async()=>{const content=game.i18n.format(translations.Message,{element:tags[0].data.value});return await Dialog.confirm({title:translations.Title,content:`<p>${content}</p>`})})();return(async()=>await response?Promise.resolve():Promise.reject())()}}})}}async _onSubmit(event,{updateData=null,preventClose=!1,preventRender=!1}={}){return this.form.querySelectorAll("tags ~ input").forEach((input=>{""===input.value&&(input.value="[]")})),super._onSubmit(event,{updateData,preventClose,preventRender})}async _updateObject(_event,data){const cleanupTasks=HomebrewElements.SETTINGS.map((key=>{var _a;for(const tag of data[key])null!==(_a=tag.id)&&void 0!==_a||(tag.id=`hb_${(0,_util_1.sluggify)(tag.value)}`);return this.processDeletions(key,data[key])})).filter((task=>!!task));(new runner_1.MigrationRunner).runMigrations(cleanupTasks),await super._updateObject(_event,data),this.refreshTags()}processDeletions(listKey,newTagList){const oldTagList=game.settings.get("pf2e",`homebrew.${listKey}`),newIDList=newTagList.map((tag=>tag.id)),deletions=oldTagList.flatMap((oldTag=>newIDList.includes(oldTag.id)?[]:oldTag.id)),coreElements="baseWeapons"===listKey?localize_1.LocalizePF2e.translations.PF2E.Weapon.Base:CONFIG.PF2E[listKey];for(const id of deletions)if(delete coreElements[id],(0,_util_1.objectHasKey)(this.secondaryRecords,listKey))for(const recordKey of this.secondaryRecords[listKey]){delete CONFIG.PF2E[recordKey][id]}return game.user.isGM&&deletions.length>0?(0,cleanup_migration_1.prepareCleanup)(listKey,deletions):null}refreshTags(){for(const listKey of HomebrewElements.SETTINGS){const settingsKey=`homebrew.${listKey}`,elements=game.settings.get("pf2e",settingsKey);this.updateConfigRecords(elements,listKey)}if(this.initialRefresh)this.initialRefresh=!1;else{const sheets=Object.values(ui.windows).filter((app=>app instanceof ActorSheet||app instanceof base_1.ItemSheetPF2e));for(const sheet of sheets)sheet.render(!1)}}registerModuleTags(){var _a,_b;const activeModules=[...game.modules.entries()].filter((([_key,foundryModule])=>foundryModule.active));for(const[key,foundryModule]of activeModules){const homebrew=null===(_b=null===(_a=foundryModule.flags)||void 0===_a?void 0:_a[key])||void 0===_b?void 0:_b["pf2e-homebrew"];if((0,_util_1.isObject)(homebrew))for(const recordKey of Object.keys(homebrew)){if(!(0,_util_1.tupleHasValue)(HomebrewElements.SETTINGS,recordKey)){console.warn(`PF2E System | Invalid homebrew record "${recordKey}" in module ${key}`);continue}const elements=homebrew[recordKey];if(!(0,_util_1.isObject)(elements)||!(0,helpers_1.isHomebrewFlagCategory)(elements)){console.warn(`PF2E System | Homebrew record ${recordKey} is malformed in module ${key}`);continue}const tags=Object.entries(elements).map((([id,value])=>({id:`hb_${id}`,value:"string"==typeof value?value:value.label})));this.updateConfigRecords(tags,recordKey);for(const[key,value]of Object.entries(elements))if("object"==typeof value){const hbKey=`hb_${key}`;CONFIG.PF2E.traitsDescriptions[hbKey]=value.description}}}}getConfigRecord(recordKey){return"baseWeapons"===recordKey?localize_1.LocalizePF2e.translations.PF2E.Weapon.Base:CONFIG.PF2E[recordKey]}updateConfigRecords(elements,listKey){const coreElements=this.getConfigRecord(listKey);for(const element of elements)if(coreElements[element.id]=element.value,(0,_util_1.objectHasKey)(this.secondaryRecords,listKey))for(const recordKey of this.secondaryRecords[listKey]){CONFIG.PF2E[recordKey][element.id]=element.value}}}exports.HomebrewElements=HomebrewElements,HomebrewElements.namespace="homebrew",HomebrewElements.SETTINGS=["creatureTraits","featTraits","languages","magicSchools","spellTraits","weaponCategories","weaponGroups","baseWeapons","weaponTraits","equipmentTraits"]},93896:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.registerSettings=void 0;const variant_rules_1=__webpack_require__(88431),world_clock_1=__webpack_require__(85439),homebrew_1=__webpack_require__(27608),status_effects_1=__webpack_require__(49780),runner_1=__webpack_require__(46842),automation_1=__webpack_require__(47612),metagame_1=__webpack_require__(85814),helpers_1=__webpack_require__(89503);exports.registerSettings=function(){game.settings.register("pf2e","tokens.autoscale",{name:"PF2E.SETTINGS.Tokens.Autoscale.Name",hint:"PF2E.SETTINGS.Tokens.Autoscale.Hint",scope:"world",config:!0,default:!0,type:Boolean}),game.settings.register("pf2e","identifyMagicNotMatchingTraditionModifier",{name:"PF2E.SETTINGS.IdentifyMagicNotMatchingTraditionModifier.Name",hint:"PF2E.SETTINGS.IdentifyMagicNotMatchingTraditionModifier.Hint",choices:{0:"PF2E.SETTINGS.IdentifyMagicNotMatchingTraditionModifier.Choices.0",2:"PF2E.SETTINGS.IdentifyMagicNotMatchingTraditionModifier.Choices.2",5:"PF2E.SETTINGS.IdentifyMagicNotMatchingTraditionModifier.Choices.5",10:"PF2E.SETTINGS.IdentifyMagicNotMatchingTraditionModifier.Choices.10"},type:Number,default:5,scope:"world",config:!0}),game.settings.register("pf2e","critRule",{name:"PF2E.SETTINGS.CritRule.Name",hint:"PF2E.SETTINGS.CritRule.Hint",scope:"world",config:!0,default:"doubledamage",type:String,choices:{doubledamage:"PF2E.SETTINGS.CritRule.Choices.Doubledamage",doubledice:"PF2E.SETTINGS.CritRule.Choices.Doubledice"}}),game.settings.register("pf2e","compendiumBrowserPacks",{name:"PF2E.SETTINGS.CompendiumBrowserPacks.Name",hint:"PF2E.SETTINGS.CompendiumBrowserPacks.Hint",default:{},type:Object,scope:"world",onChange:()=>{game.pf2e.compendiumBrowser.initCompendiumList()}}),game.settings.register("pf2e","enabledRulesUI",{name:"PF2E.SETTINGS.EnabledRulesUI.Name",hint:"PF2E.SETTINGS.EnabledRulesUI.Hint",scope:"world",config:!0,default:!1,type:Boolean}),game.settings.register("pf2e","critFumbleButtons",{name:game.i18n.localize("PF2E.SETTINGS.critFumbleCardButtons.name"),hint:game.i18n.localize("PF2E.SETTINGS.critFumbleCardButtons.hint"),scope:"world",config:!0,default:!1,type:Boolean,onChange:()=>{window.location.reload()}}),game.settings.register("pf2e","drawCritFumble",{name:game.i18n.localize("PF2E.SETTINGS.critFumbleCards.name"),hint:game.i18n.localize("PF2E.SETTINGS.critFumbleCards.hint"),scope:"world",config:!0,default:!1,type:Boolean,onChange:()=>{window.location.reload()}}),game.settings.register("pf2e","statusEffectType",{name:"PF2E.SETTINGS.statusEffectType.name",hint:"PF2E.SETTINGS.statusEffectType.hint",scope:"world",config:!0,default:"default",type:String,choices:{blackWhite:"PF2E.SETTINGS.statusEffectType.blackWhite",default:"PF2E.SETTINGS.statusEffectType.default"},onChange:iconType=>{status_effects_1.StatusEffects.migrateStatusEffectUrls(iconType)}}),game.settings.register("pf2e","totmToggles",{name:"PF2E.SETTINGS.TOTMToggles.Name",hint:"PF2E.SETTINGS.TOTMToggles.Hint",config:!0,default:!1,type:Boolean,onChange:()=>{(0,helpers_1.resetAndRerenderActors)()}}),game.settings.register("pf2e","deathIcon",{name:"PF2E.Settings.DeathIcon.Name",hint:"PF2E.Settings.DeathIcon.Hint",scope:"world",config:!1,default:"icons/svg/skull.svg",type:String,onChange:choice=>{choice&&(CONFIG.controlIcons.defeated=choice)}}),game.settings.register("pf2e","nathMode",{name:"PF2E.SETTINGS.NathMode.Name",hint:"PF2E.SETTINGS.NathMode.Hint",scope:"world",config:!1,default:!1,type:Boolean}),game.settings.register("pf2e","statusEffectShowCombatMessage",{name:"PF2E.SETTINGS.statusEffectShowCombatMessage.name",hint:"PF2E.SETTINGS.statusEffectShowCombatMessage.hint",scope:"world",config:!0,default:!0,type:Boolean}),game.settings.register("pf2e","worldSystemVersion",{name:"World System Version",scope:"world",config:!1,default:game.system.version,type:String}),game.settings.registerMenu("pf2e","automation",{name:"PF2E.SETTINGS.Automation.Name",label:"PF2E.SETTINGS.Automation.Label",hint:"PF2E.SETTINGS.Automation.Hint",icon:"fas fa-robot",type:automation_1.AutomationSettings,restricted:!0}),game.settings.register("pf2e","automation.actorsDeadAtZero",{name:CONFIG.PF2E.SETTINGS.automation.actorsDeadAtZero.name,scope:"world",config:!1,default:"npcsOnly",type:String}),automation_1.AutomationSettings.registerSettings(),game.settings.registerMenu("pf2e","metagame",{name:"PF2E.SETTINGS.Metagame.Name",label:"PF2E.SETTINGS.Metagame.Label",hint:"PF2E.SETTINGS.Metagame.Hint",icon:"fas fa-brain",type:metagame_1.MetagameSettings,restricted:!0}),metagame_1.MetagameSettings.registerSettings(),game.settings.registerMenu("pf2e","variantRules",{name:"PF2E.SETTINGS.Variant.Name",label:"PF2E.SETTINGS.Variant.Label",hint:"PF2E.SETTINGS.Variant.Hint",icon:"fas fa-book",type:variant_rules_1.VariantRulesSettings,restricted:!0}),variant_rules_1.VariantRulesSettings.registerSettings(),game.settings.registerMenu("pf2e","homebrew",{name:"PF2E.SETTINGS.Homebrew.Name",label:"PF2E.SETTINGS.Homebrew.Label",hint:"PF2E.SETTINGS.Homebrew.Hint",icon:"fas fa-beer",type:homebrew_1.HomebrewElements,restricted:!0}),homebrew_1.HomebrewElements.registerSettings(),game.settings.registerMenu("pf2e","worldClock",{name:game.i18n.localize(CONFIG.PF2E.SETTINGS.worldClock.name),label:game.i18n.localize(CONFIG.PF2E.SETTINGS.worldClock.label),hint:game.i18n.localize(CONFIG.PF2E.SETTINGS.worldClock.hint),icon:"far fa-clock",type:world_clock_1.WorldClockSettings,restricted:!0}),world_clock_1.WorldClockSettings.registerSettings(),game.settings.register("pf2e","campaignFeats",{name:CONFIG.PF2E.SETTINGS.CampaignFeats.name,hint:CONFIG.PF2E.SETTINGS.CampaignFeats.hint,scope:"world",config:!0,default:!1,type:Boolean}),game.settings.register("pf2e","campaignFeatSections",{name:"Campaign Feat Sections",scope:"world",config:!1,default:[],type:Array}),game.settings.register("pf2e","RAI.TreatWoundsAltSkills",{name:"Treat Wounds Macro Compat",scope:"world",config:!1,default:!0,type:Boolean}),game.settings.register("pf2e","gmVision",{name:"PF2E.SETTINGS.GMVision",scope:"client",config:!1,default:!1,type:Boolean,onChange:value=>{const color=value?CONFIG.PF2E.Canvas.darkness.gmVision:CONFIG.PF2E.Canvas.darkness.default;CONFIG.Canvas.darknessColor=color,canvas.colorManager.initialize()}}),game.settings.register("pf2e","worldSchemaVersion",{name:"PF2E.SETTINGS.WorldSchemaVersion.Name",hint:"PF2E.SETTINGS.WorldSchemaVersion.Hint",scope:"world",config:!0,default:runner_1.MigrationRunner.LATEST_SCHEMA_VERSION,type:Number})}},69593:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.SettingsMenuPF2e=void 0;class SettingsMenuPF2e extends FormApplication{static get defaultOptions(){const options=super.defaultOptions;return options.classes.push("settings-menu"),mergeObject(options,{title:`PF2E.SETTINGS.${this.namespace.titleCase()}.Name`,id:`${this.namespace}-settings`,template:"systems/pf2e/templates/system/settings/menu.html",width:550,height:"auto",closeOnSubmit:!0})}static get prefix(){return`${this.namespace}.`}get namespace(){return this.constructor.namespace}get prefix(){return this.constructor.prefix}static get settings(){return{}}static registerSettings(){const settings=this.settings;for(const setting of this.SETTINGS)game.settings.register("pf2e",`${this.prefix}${setting}`,{...settings[setting],scope:"world",config:!1})}async getData(){const settings=this.constructor.settings,templateData=Object.entries(settings).map((([key,setting])=>{const value=game.settings.get("pf2e",`${this.prefix}${key}`);return{...setting,key,value,isSelect:!!setting.choices,isCheckbox:setting.type===Boolean}}));return mergeObject(await super.getData(),{settings:templateData,instructions:`PF2E.SETTINGS.${this.namespace.titleCase()}.Hint`})}async _updateObject(_event,data){for(const key of this.constructor.SETTINGS){const settingKey=`${this.prefix}${key}`;await game.settings.set("pf2e",settingKey,data[key])}}}exports.SettingsMenuPF2e=SettingsMenuPF2e},85814:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.MetagameSettings=void 0;const menu_1=__webpack_require__(69593),MetagameSettingsConfig={showDC:{name:"PF2E.SETTINGS.Metagame.ShowDC.Name",hint:"PF2E.SETTINGS.Metagame.ShowDC.Hint",default:!1,type:Boolean},showResults:{name:"PF2E.SETTINGS.Metagame.ShowResults.Name",hint:"PF2E.SETTINGS.Metagame.ShowResults.Hint",default:!0,type:Boolean},tokenSetsNameVisibility:{name:"PF2E.SETTINGS.Metagame.TokenSetsNameVisibility.Name",hint:"PF2E.SETTINGS.Metagame.TokenSetsNameVisibility.Hint",default:!1,type:Boolean,onChange:async()=>{var _a;await ui.combat.render();const renderedMessages=document.querySelectorAll("#chat-log > li");for(const rendered of Array.from(renderedMessages)){const message=game.messages.get(null!==(_a=null==rendered?void 0:rendered.dataset.messageId)&&void 0!==_a?_a:"");message&&await ui.chat.updateMessage(message)}}},secretDamage:{name:"PF2E.SETTINGS.Metagame.SecretDamage.Name",hint:"PF2E.SETTINGS.Metagame.SecretDamage.Hint",default:!1,type:Boolean},secretCondition:{name:"PF2E.SETTINGS.Metagame.SecretCondition.Name",hint:"PF2E.SETTINGS.Metagame.SecretCondition.Hint",default:!1,type:Boolean},partyVision:{name:"PF2E.SETTINGS.Metagame.PartyVision.Name",hint:"PF2E.SETTINGS.Metagame.PartyVision.Hint",default:!1,type:Boolean,onChange:()=>{window.location.reload()}}};class MetagameSettings extends menu_1.SettingsMenuPF2e{static get settings(){return MetagameSettingsConfig}static get SETTINGS(){return Object.keys(this.settings)}static get prefix(){return`${this.namespace}_`}}exports.MetagameSettings=MetagameSettings,MetagameSettings.namespace="metagame"},88431:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.VariantRulesSettings=void 0;const SETTINGS={gradualBoostsVariant:{name:"PF2E.SETTINGS.Variant.AbilityScore.GradualBoosts.Name",hint:"PF2E.SETTINGS.Variant.AbilityScore.GradualBoosts.Hint",default:!1,type:Boolean},staminaVariant:{name:"PF2E.SETTINGS.Variant.Stamina.Name",hint:"PF2E.SETTINGS.Variant.Stamina.Hint",default:0,type:Number,choices:{0:"PF2E.SETTINGS.Variant.Stamina.Choices.0",1:"PF2E.SETTINGS.Variant.Stamina.Choices.1"}},ancestryParagonVariant:{name:"PF2E.SETTINGS.Variant.AncestryParagon.Name",hint:"PF2E.SETTINGS.Variant.AncestryParagon.Hint",default:0,type:Boolean},freeArchetypeVariant:{name:"PF2E.SETTINGS.Variant.FreeArchetype.Name",hint:"PF2E.SETTINGS.Variant.FreeArchetype.Hint",default:0,type:Boolean},dualClassVariant:{name:"PF2E.SETTINGS.Variant.DualClass.Name",hint:"PF2E.SETTINGS.Variant.DualClass.Hint",default:0,type:Boolean},automaticBonusVariant:{name:"PF2E.SETTINGS.Variant.AutomaticBonus.Name",hint:"PF2E.SETTINGS.Variant.AutomaticBonus.Hint",default:"noABP",type:String,choices:{noABP:"PF2E.SETTINGS.Variant.AutomaticBonus.Choices.noABP",ABPFundamentalPotency:"PF2E.SETTINGS.Variant.AutomaticBonus.Choices.ABPFundamentalPotency",ABPRulesAsWritten:"PF2E.SETTINGS.Variant.AutomaticBonus.Choices.ABPRulesAsWritten"}},proficiencyVariant:{name:"PF2E.SETTINGS.Variant.Proficiency.Name",hint:"PF2E.SETTINGS.Variant.Proficiency.Hint",default:"ProficiencyWithLevel",type:String,choices:{ProficiencyWithLevel:"PF2E.SETTINGS.Variant.Proficiency.Choices.ProficiencyWithLevel",ProficiencyWithoutLevel:"PF2E.SETTINGS.Variant.Proficiency.Choices.ProficiencyWithoutLevel"}},proficiencyUntrainedModifier:{name:"PF2E.SETTINGS.Variant.UntrainedModifier.Name",hint:"PF2E.SETTINGS.Variant.UntrainedModifier.Hint",default:0,type:Number},proficiencyTrainedModifier:{name:"PF2E.SETTINGS.Variant.TrainedModifier.Name",hint:"PF2E.SETTINGS.Variant.TrainedModifier.Hint",default:2,type:Number},proficiencyExpertModifier:{name:"PF2E.SETTINGS.Variant.ExpertModifier.Name",hint:"PF2E.SETTINGS.Variant.ExpertModifier.Hint",default:4,type:Number},proficiencyMasterModifier:{name:"PF2E.SETTINGS.Variant.MasterModifier.Name",hint:"PF2E.SETTINGS.Variant.MasterModifier.Hint",default:6,type:Number},proficiencyLegendaryModifier:{name:"PF2E.SETTINGS.Variant.LegendaryModifier.Name",hint:"PF2E.SETTINGS.Variant.LegendaryModifier.Hint",default:8,type:Number}};class VariantRulesSettings extends FormApplication{static get defaultOptions(){return{...super.defaultOptions,title:"PF2E.SETTINGS.Variant.Title",id:"variant-rules-settings",template:"systems/pf2e/templates/system/settings/variant-rules-settings.html",width:550,height:"auto",closeOnSubmit:!0}}async getData(){return Object.entries(SETTINGS).reduce(((data,[key,setting])=>({...data,[key]:{value:game.settings.get("pf2e",key),setting}})),{})}static registerSettings(){for(const[k,v]of Object.entries(SETTINGS))v.config=!1,v.scope="world",game.settings.register("pf2e",k,v)}activateListeners($html){super.activateListeners($html),$html.find("button[name=reset]").on("click",(event=>this.onResetDefaults(event)))}async onResetDefaults(event){event.preventDefault();for(const[k,v]of Object.entries(SETTINGS))await game.settings.set("pf2e",k,null==v?void 0:v.default);return this.render()}async _onSubmit(event,options={}){return event.preventDefault(),super._onSubmit(event,options)}async _updateObject(_event,data){for(const key of Object.keys(SETTINGS))game.settings.set("pf2e",key,data[key])}}exports.VariantRulesSettings=VariantRulesSettings},85439:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.WorldClockSettings=void 0;const luxon_1=__webpack_require__(87883),localize_1=__webpack_require__(41332);class WorldClockSettings extends FormApplication{static get defaultOptions(){return mergeObject(super.defaultOptions,{title:CONFIG.PF2E.SETTINGS.worldClock.name,id:"world-clock-settings",template:"systems/pf2e/templates/system/settings/world-clock/index.html",width:550,height:"auto",closeOnSubmit:!0})}async getData(){const worldDefault=game.settings.get("pf2e","worldClock.syncDarkness")?game.i18n.localize(CONFIG.PF2E.SETTINGS.worldClock.syncDarknessScene.enabled):game.i18n.localize(CONFIG.PF2E.SETTINGS.worldClock.syncDarknessScene.disabled),sceneSetting=["syncDarknessScene",{name:CONFIG.PF2E.SETTINGS.worldClock.syncDarknessScene.name,hint:CONFIG.PF2E.SETTINGS.worldClock.syncDarknessScene.hint,default:"default",type:String,choices:{enabled:CONFIG.PF2E.SETTINGS.worldClock.syncDarknessScene.enabled,disabled:CONFIG.PF2E.SETTINGS.worldClock.syncDarknessScene.disabled,default:game.i18n.format(CONFIG.PF2E.SETTINGS.worldClock.syncDarknessScene.default,{worldDefault})}}],settings=[...Object.entries(WorldClockSettings.settings).filter((([key])=>"worldCreatedOn"!==key)),sceneSetting].map((([key,setting])=>{const value=(()=>{var _a;if("syncDarknessScene"===key)return null===(_a=canvas.scene)||void 0===_a?void 0:_a.flags.pf2e.syncDarkness;const rawValue=game.settings.get("pf2e",`worldClock.${key}`);return"worldCreatedOn"===key&&"string"==typeof rawValue?luxon_1.DateTime.fromISO(rawValue).toFormat("yyyy-MM-dd'T'HH:mm"):rawValue})();return{...setting,key,value,isSelect:"choices"in setting,isCheckbox:setting.type===Boolean,isDateTime:setting.type===String&&!("choices"in setting)}}));return mergeObject(await super.getData(),{settings})}static registerSettings(){game.settings.register("pf2e","worldClock.dateTheme",this.settings.dateTheme),game.settings.register("pf2e","worldClock.timeConvention",this.settings.timeConvention),game.settings.register("pf2e","worldClock.playersCanView",this.settings.playersCanView),game.settings.register("pf2e","worldClock.syncDarkness",this.settings.syncDarkness),game.settings.register("pf2e","worldClock.worldCreatedOn",this.settings.worldCreatedOn),game.settings.register("pf2e","worldClock.showClockButton",this.settings.showClockButton)}activateListeners($html){super.activateListeners($html);const translations=localize_1.LocalizePF2e.translations.PF2E.SETTINGS.WorldClock,title=translations.ResetWorldTime.Name;$html.find("button.reset-world-time").on("click",(async()=>{const template=await renderTemplate("systems/pf2e/templates/system/settings/world-clock/confirm-reset.html");Dialog.confirm({title,content:template,yes:()=>{game.time.advance(-1*game.time.worldTime),this.close()},defaultYes:!1})})),$html.find('input[name="syncDarkness"]').on("change",(event=>{const worldDefault=$(event.currentTarget)[0].checked?translations.SyncDarknessScene.Enabled:translations.SyncDarknessScene.Disabled;$html.find('select[name="syncDarknessScene"] > option[value="default"]').text(game.i18n.format(translations.SyncDarknessScene.Default,{worldDefault}))}))}async _updateObject(_event,data){var _a,_b;const keys=["dateTheme","timeConvention","playersCanView","syncDarkness","showClockButton"];for(const key of keys){const settingKey=`worldClock.${key}`,newValue="worldCreatedOn"===key?luxon_1.DateTime.fromISO(data[key]).toUTC():data[key];await game.settings.set("pf2e",settingKey,newValue)}await(null===(_a=canvas.scene)||void 0===_a?void 0:_a.setFlag("pf2e","syncDarkness",null!==(_b=data.syncDarknessScene)&&void 0!==_b?_b:"default")),delete data.syncDarknessScene,game.pf2e.worldClock.render(!1)}static get settings(){return{dateTheme:{name:CONFIG.PF2E.SETTINGS.worldClock.dateTheme.name,hint:CONFIG.PF2E.SETTINGS.worldClock.dateTheme.hint,scope:"world",config:!1,default:"AR",type:String,choices:{AR:CONFIG.PF2E.SETTINGS.worldClock.dateTheme.AR,AD:CONFIG.PF2E.SETTINGS.worldClock.dateTheme.AD,CE:CONFIG.PF2E.SETTINGS.worldClock.dateTheme.CE}},timeConvention:{name:CONFIG.PF2E.SETTINGS.worldClock.timeConvention.name,hint:CONFIG.PF2E.SETTINGS.worldClock.timeConvention.hint,scope:"world",config:!1,default:24,type:Number,choices:{24:CONFIG.PF2E.SETTINGS.worldClock.timeConvention.twentyFour,12:CONFIG.PF2E.SETTINGS.worldClock.timeConvention.twelve}},showClockButton:{name:CONFIG.PF2E.SETTINGS.worldClock.showClockButton.name,hint:CONFIG.PF2E.SETTINGS.worldClock.showClockButton.hint,scope:"world",config:!1,default:!0,type:Boolean,onChange:()=>{game.settings.set("pf2e","worldClock.playersCanView",game.settings.get("pf2e","worldClock.showClockButton"))}},playersCanView:{name:CONFIG.PF2E.SETTINGS.worldClock.playersCanView.name,hint:CONFIG.PF2E.SETTINGS.worldClock.playersCanView.hint,scope:"world",config:!1,default:!1,type:Boolean},syncDarkness:{name:CONFIG.PF2E.SETTINGS.worldClock.syncDarkness.name,hint:CONFIG.PF2E.SETTINGS.worldClock.syncDarkness.hint,scope:"world",config:!1,default:!1,type:Boolean},worldCreatedOn:{name:CONFIG.PF2E.SETTINGS.worldClock.worldCreatedOn.name,hint:CONFIG.PF2E.SETTINGS.worldClock.worldCreatedOn.hint,scope:"world",config:!1,default:luxon_1.DateTime.utc().toISO(),type:String}}}}exports.WorldClockSettings=WorldClockSettings},78214:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0})},77486:function(__unused_webpack_module,exports,__webpack_require__){var _Statistic_data,_StatisticCheck_instances,_StatisticCheck_stat,_StatisticCheck_calculateLabel,__createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k);var desc=Object.getOwnPropertyDescriptor(m,k);desc&&!("get"in desc?!m.__esModule:desc.writable||desc.configurable)||(desc={enumerable:!0,get:function(){return m[k]}}),Object.defineProperty(o,k2,desc)}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)"default"===p||Object.prototype.hasOwnProperty.call(exports,p)||__createBinding(exports,m,p)},__classPrivateFieldSet=this&&this.__classPrivateFieldSet||function(receiver,state,value,kind,f){if("m"===kind)throw new TypeError("Private method is not writable");if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===kind?f.call(receiver,value):f?f.value=value:state.set(receiver,value),value},__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.Statistic=void 0;const helpers_1=__webpack_require__(89503),modifiers_1=__webpack_require__(92823),util_1=__webpack_require__(58903),sheet_util_1=__webpack_require__(15806),check_1=__webpack_require__(11848),_util_1=__webpack_require__(6945);__exportStar(__webpack_require__(78214),exports);class Statistic{constructor(actor,data,options){var _a,_b,_c;this.actor=actor,this.options=options,_Statistic_data.set(this,void 0),this.ability=null,this.abilityModifier=null,this.rank=null,this.proficient=!0,__classPrivateFieldSet(this,_Statistic_data,data,"f"),this.slug=data.slug,this.ability=null!==(_a=data.ability)&&void 0!==_a?_a:null,this.lore=data.lore,this.label=game.i18n.localize(data.label);const baseModifiers=[];if(actor.isOfType("character")&&this.ability&&(this.abilityModifier=(0,modifiers_1.createAbilityModifier)({actor,ability:this.ability,domains:null!==(_b=data.domains)&&void 0!==_b?_b:[]}),baseModifiers.push(this.abilityModifier)),"number"==typeof data.rank?(this.rank=data.rank,baseModifiers.push(modifiers_1.ProficiencyModifier.fromLevelAndRank(actor.level,data.rank))):"untrained-level"===data.rank&&(this.rank=0,baseModifiers.push(modifiers_1.ProficiencyModifier.fromLevelAndRank(actor.level,0,{addLevel:!0}))),this.proficient=void 0===data.proficient?null===this.rank||this.rank>0:!!data.proficient,this.modifiers=[baseModifiers,null!==(_c=data.modifiers)&&void 0!==_c?_c:[]].flat(),this.check=new StatisticCheck(this,__classPrivateFieldGet(this,_Statistic_data,"f"),this.options),this.dc=new StatisticDifficultyClass(this,__classPrivateFieldGet(this,_Statistic_data,"f"),this.options),data.domains&&this.modifiers.push(...(0,util_1.extractModifiers)(this.actor.synthetics,data.domains)),data.domains){const options=this.createRollOptions(data.domains,{});this.modifiers=this.modifiers.map((mod=>mod.clone({test:options})))}}static from(actor,stat,slug,label,type,domains){return new Statistic(actor,{slug,domains,label,check:{type},modifiers:[...stat.modifiers]})}createRollOptions(domains,args={}){var _a,_b;const{item,extraRollOptions,origin,target}=args,rollOptions=[];if(domains&&domains.length&&rollOptions.push(...this.actor.getRollOptions(domains),...this.actor.getSelfRollOptions()),"number"==typeof this.rank&&rollOptions.push(modifiers_1.PROFICIENCY_RANK_OPTION[this.rank]),__classPrivateFieldGet(this,_Statistic_data,"f").rollOptions&&rollOptions.push(...__classPrivateFieldGet(this,_Statistic_data,"f").rollOptions),item){rollOptions.push(...item.getRollOptions("item")),item.actor&&item.actor.id!==this.actor.id&&rollOptions.push(...item.actor.getSelfRollOptions("origin"));(null!==(_b=null===(_a=item.system.traits)||void 0===_a?void 0:_a.value)&&void 0!==_b?_b:[]).includes("attack")&&rollOptions.push("trait:attack")}return origin?rollOptions.push(...origin.getSelfRollOptions("origin")):target&&rollOptions.push(...target.getSelfRollOptions("target")),extraRollOptions&&rollOptions.push(...extraRollOptions),new Set(rollOptions)}withRollOptions(options){var _a;const newOptions=mergeObject(null!==(_a=this.options)&&void 0!==_a?_a:{},null!=options?options:{},{inplace:!1});return new Statistic(this.actor,deepClone(__classPrivateFieldGet(this,_Statistic_data,"f")),newOptions)}extend(data){var _a,_b,_c,_d;function maybeMergeArrays(arr1,arr2){if(arr1||arr2)return[...new Set([null!=arr1?arr1:[],null!=arr2?arr2:[]].flat())]}const result=mergeObject(deepClone(__classPrivateFieldGet(this,_Statistic_data,"f")),data);return result.domains=maybeMergeArrays(__classPrivateFieldGet(this,_Statistic_data,"f").domains,data.domains),result.modifiers=maybeMergeArrays(__classPrivateFieldGet(this,_Statistic_data,"f").modifiers,data.modifiers),result.check&&__classPrivateFieldGet(this,_Statistic_data,"f").check&&(result.check.domains=maybeMergeArrays(__classPrivateFieldGet(this,_Statistic_data,"f").check.domains,null===(_a=data.check)||void 0===_a?void 0:_a.domains),result.check.modifiers=maybeMergeArrays(__classPrivateFieldGet(this,_Statistic_data,"f").check.modifiers,null===(_b=data.check)||void 0===_b?void 0:_b.modifiers)),result.dc&&__classPrivateFieldGet(this,_Statistic_data,"f").dc&&(result.dc.domains=maybeMergeArrays(__classPrivateFieldGet(this,_Statistic_data,"f").dc.domains,null===(_c=data.dc)||void 0===_c?void 0:_c.domains),result.dc.modifiers=maybeMergeArrays(__classPrivateFieldGet(this,_Statistic_data,"f").dc.modifiers,null===(_d=data.dc)||void 0===_d?void 0:_d.modifiers)),new Statistic(this.actor,result,this.options)}roll(args={}){return this.check.roll(args)}getChatData(options={}){var _a,_b;const{check,dc}=this.withRollOptions(options),{map1,map2}=options.item?(0,helpers_1.calculateMAPs)(options.item,{domains:null!==(_a=null==check?void 0:check.domains)&&void 0!==_a?_a:[],options:null!==(_b=null==check?void 0:check.createRollOptions(options))&&void 0!==_b?_b:[]}):{map1:-5,map2:-10};return{slug:this.slug,label:this.label,rank:this.rank,check:{mod:check.mod,breakdown:check.breakdown,label:check.label,map1,map2},dc:{value:dc.value,breakdown:dc.breakdown}}}getTraceData(options={}){var _a,_b,_c;const{check,dc}=this,valueProp=null!==(_a=options.value)&&void 0!==_a?_a:"mod";return{slug:this.slug,label:this.label,value:"mod"===valueProp?check.mod:dc.value,totalModifier:null!==(_b=check.mod)&&void 0!==_b?_b:0,dc:dc.value,breakdown:null!==(_c=check.breakdown)&&void 0!==_c?_c:"",_modifiers:check.modifiers.map((m=>m.toObject()))}}}exports.Statistic=Statistic,_Statistic_data=new WeakMap;class StatisticCheck{constructor(parent,data,options){var _a,_b,_c,_d,_e,_f,_g;this.parent=parent,_StatisticCheck_instances.add(this),_StatisticCheck_stat.set(this,void 0),this.type=null!==(_b=null===(_a=data.check)||void 0===_a?void 0:_a.type)&&void 0!==_b?_b:"check",this.label=__classPrivateFieldGet(this,_StatisticCheck_instances,"m",_StatisticCheck_calculateLabel).call(this,data),this.domains=(null!==(_c=data.domains)&&void 0!==_c?_c:[]).concat(null!==(_e=null===(_d=data.check)||void 0===_d?void 0:_d.domains)&&void 0!==_e?_e:[]);const rollOptions=parent.createRollOptions(this.domains,options),allCheckModifiers=[parent.modifiers,null!==(_g=null===(_f=data.check)||void 0===_f?void 0:_f.modifiers)&&void 0!==_g?_g:[],(0,util_1.extractModifiers)(parent.actor.synthetics,this.domains)].flat();this.modifiers=allCheckModifiers.map((modifier=>modifier.clone({test:rollOptions}))),__classPrivateFieldSet(this,_StatisticCheck_stat,new modifiers_1.StatisticModifier(this.label,this.modifiers,rollOptions),"f"),this.mod=__classPrivateFieldGet(this,_StatisticCheck_stat,"f").totalModifier}createRollOptions(args={}){return this.parent.createRollOptions(this.domains,args)}async roll(args={}){var _a,_b,_c,_d,_e,_f,_g,_h,_j,_k,_l,_m,_o,_p;const{rollMode,skipDialog}=(()=>{var _a,_b;if((0,_util_1.isObject)(args)){const event=null!==(_b=null===(_a=args.event)||void 0===_a?void 0:_a.originalEvent)&&void 0!==_b?_b:args.event;if(event instanceof MouseEvent){const{rollMode,skipDialog}=args;return mergeObject({rollMode,skipDialog},(0,sheet_util_1.eventToRollParams)(event))}}return args})(),actor=this.parent.actor,item=null!==(_a=args.item)&&void 0!==_a?_a:null,domains=this.domains,rollContext=(()=>{const isCreature=actor.isOfType("creature"),isAttackItem=null==item?void 0:item.isOfType("weapon","melee","spell");return isCreature&&isAttackItem&&["attack-roll","spell-attack-roll"].includes(this.type)?actor.getAttackRollContext({item,domains,options:new Set}):null})();args.dc&&(null!==(_b=(_p=args.dc).adjustments)&&void 0!==_b||(_p.adjustments=[]),args.dc.adjustments.push(...(0,util_1.extractDegreeOfSuccessAdjustments)(actor.synthetics,this.domains)));const{origin}=args,target=origin?null:null!==(_e=null!==(_c=args.target)&&void 0!==_c?_c:null===(_d=null==rollContext?void 0:rollContext.target)||void 0===_d?void 0:_d.actor)&&void 0!==_e?_e:Array.from(game.user.targets).flatMap((t=>{var _a;return null!==(_a=t.actor)&&void 0!==_a?_a:[]})).find((a=>a.isOfType("creature"))),extraModifiers=[...null!==(_f=args.modifiers)&&void 0!==_f?_f:[]],extraRollOptions=[...null!==(_g=args.extraRollOptions)&&void 0!==_g?_g:[],...null!==(_h=null==rollContext?void 0:rollContext.options)&&void 0!==_h?_h:[]],options=this.createRollOptions({...args,origin,target,extraRollOptions});for(const rule of actor.rules.filter((r=>!r.ignored)))null===(_j=rule.beforeRoll)||void 0===_j||_j.call(rule,domains,options);if(args.attackNumber&&args.attackNumber>1)if(item){const maps=(0,helpers_1.calculateMAPs)(item,{domains,options}),penalty=maps[`map${Math.clamped(args.attackNumber,2,3)-1}`];extraModifiers.push(new modifiers_1.ModifierPF2e(maps.label,penalty,"untyped"))}else console.warn("Missing item argument while calculating MAP during check");const traits=null===(_k=args.traits)||void 0===_k?void 0:_k.map((t=>"string"==typeof t?(0,_util_1.traitSlugToObject)(t,CONFIG.PF2E.actionTraits):t));for(const trait of null!=traits?traits:[])options.add(trait.name);const context={actor,item,domains,target:null!==(_l=null==rollContext?void 0:rollContext.target)&&void 0!==_l?_l:null,dc:null!==(_m=args.dc)&&void 0!==_m?_m:null==rollContext?void 0:rollContext.dc,notes:(0,util_1.extractNotes)(actor.synthetics.rollNotes,this.domains),options,type:this.type,rollMode,skipDialog,rollTwice:args.rollTwice||(0,util_1.extractRollTwice)(actor.synthetics.rollTwice,domains,options),substitutions:(0,util_1.extractRollSubstitutions)(actor.synthetics.rollSubstitutions,domains,options),traits},roll=await check_1.CheckPF2e.roll(new modifiers_1.CheckModifier(this.label,__classPrivateFieldGet(this,_StatisticCheck_stat,"f"),extraModifiers),context,null,args.callback);for(const rule of actor.rules.filter((r=>!r.ignored)))await(null===(_o=rule.afterRoll)||void 0===_o?void 0:_o.call(rule,{roll,selectors:domains,domains,rollOptions:options}));return roll}get breakdown(){return this.modifiers.filter((m=>m.enabled)).map((m=>`${m.label} ${m.modifier<0?"":"+"}${m.modifier}`)).join(", ")}}_StatisticCheck_stat=new WeakMap,_StatisticCheck_instances=new WeakSet,_StatisticCheck_calculateLabel=function(data){var _a,_b;const parentLabel=this.parent.label;if(null===(_a=data.check)||void 0===_a?void 0:_a.label)return game.i18n.localize(null===(_b=data.check)||void 0===_b?void 0:_b.label);switch(this.type){case"skill-check":return game.i18n.format("PF2E.SkillCheckWithName",{skillName:parentLabel});case"saving-throw":return game.i18n.format("PF2E.SavingThrowWithName",{saveName:parentLabel});case"spell-attack-roll":return game.i18n.format("PF2E.SpellAttackWithTradition",{tradition:parentLabel});default:return parentLabel}};class StatisticDifficultyClass{constructor(parent,data,options={}){var _a,_b,_c,_d,_e,_f,_g;this.parent=parent,this.domains=(null!==(_a=data.domains)&&void 0!==_a?_a:[]).concat(null!==(_c=null===(_b=data.dc)||void 0===_b?void 0:_b.domains)&&void 0!==_c?_c:[]);const rollOptions=parent.createRollOptions(this.domains,options),allDCModifiers=[parent.modifiers,null!==(_e=null===(_d=data.dc)||void 0===_d?void 0:_d.modifiers)&&void 0!==_e?_e:[],(0,util_1.extractModifiers)(parent.actor.synthetics,this.domains)].flat();this.modifiers=allDCModifiers.map((modifier=>modifier.clone({test:rollOptions}))),this.value=(null!==(_g=null===(_f=data.dc)||void 0===_f?void 0:_f.base)&&void 0!==_g?_g:10)+new modifiers_1.StatisticModifier("",this.modifiers,rollOptions).totalModifier}createRollOptions(args={}){return this.parent.createRollOptions(this.domains,args)}get breakdown(){const enabledMods=this.modifiers.filter((m=>m.enabled));return[game.i18n.localize("PF2E.DCBase")].concat(enabledMods.map((m=>`${m.label} ${m.modifier<0?"":"+"}${m.modifier}`))).join(", ")}}},7290:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.BaseTagSelector=void 0;class BaseTagSelector extends FormApplication{constructor(object,options={}){var _a;super(object,options),this.flat=null!==(_a=options.flat)&&void 0!==_a&&_a,this.choices=this.getChoices()}static get defaultOptions(){return mergeObject(super.defaultOptions,{id:"tag-selector",classes:["pf2e"],width:"auto",height:700})}activateListeners($html){super.activateListeners($html),$html.find('input[type="text"], input[type="number"]').on("focusin",(event=>{event.currentTarget.select()}))}getChoices(){const choices=this.configTypes.reduce(((types,key)=>mergeObject(types,CONFIG.PF2E[key])),{});return this.sortChoices(choices)}sortChoices(choices){return Object.entries(choices).map((([key,value])=>[key,game.i18n.localize(value)])).sort((([_keyA,valueA],[_keyB,valueB])=>valueA.localeCompare(valueB))).reduce(((accumulated,[key,value])=>mergeObject(accumulated,{[key]:value})),{})}}exports.BaseTagSelector=BaseTagSelector},21533:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.TagSelectorBasic=void 0;const base_1=__webpack_require__(7290);function isValuesList(value){return!(!value||"object"!=typeof value||!("value"in value))}class TagSelectorBasic extends base_1.BaseTagSelector{constructor(object,options){var _a,_b;super(object,options),this.searchString="",this.filterTimeout=null,this.objectProperty=options.objectProperty,this.allowCustom=null===(_a=options.allowCustom)||void 0===_a||_a,options.customChoices&&(mergeObject(this.choices,options.customChoices),this.choices=this.sortChoices(this.choices)),this.options.title=null!==(_b=options.title)&&void 0!==_b?_b:"PF2E.TraitsLabel"}get configTypes(){var _a;return null!==(_a=this.options.configTypes)&&void 0!==_a?_a:[]}static get defaultOptions(){return mergeObject(super.defaultOptions,{template:"systems/pf2e/templates/system/tag-selector/basic.html",height:710})}async getData(){const{chosen,custom,flat,disabled}=(()=>{const document=this.object,sourceProperty=getProperty(document.toObject(),this.objectProperty),preparedProperty=getProperty(document,this.objectProperty);if(Array.isArray(preparedProperty)){const manuallyChosen=Array.isArray(sourceProperty)?sourceProperty.map((prop=>String(prop))):[],automaticallyChosen=preparedProperty.filter((tag=>!manuallyChosen.includes(tag)));return{chosen:Array.from(new Set([...manuallyChosen,...automaticallyChosen])),custom:null,flat:!0,disabled:automaticallyChosen}}if(isValuesList(preparedProperty)&&isValuesList(sourceProperty)){const manuallyChosen=sourceProperty.value.map((prop=>prop.toString())),custom=this.allowCustom?sourceProperty.custom:null,automaticallyChosen=preparedProperty.value.filter((tag=>!manuallyChosen.includes(tag)));return{chosen:Array.from(new Set([...manuallyChosen,...automaticallyChosen])),custom,flat:!1,disabled:automaticallyChosen}}return{chosen:[],custom:null,flat:this.flat,disabled:[]}})(),choices=Object.keys(this.choices).reduce(((accumulated,type)=>(accumulated[type]={label:this.choices[type],selected:chosen.includes(type),disabled:disabled.includes(type)},accumulated)),{});return{...await super.getData(),choices,allowCustom:this.allowCustom&&!flat,custom,flat}}activateListeners($html){super.activateListeners($html),$html.find('input[id="search"]').on("keyup",(event=>this.onFilterResults(event))),this.searchString&&this.search(this.searchString)}async _updateObject(event,formData){const{flat}=event.target?$(event.target).data():{flat:!1},value=this.getUpdateData(formData);this.allowCustom&&"string"==typeof formData.custom?await this.object.update({[this.objectProperty]:{value,custom:formData.custom}}):flat?await this.object.update({[this.objectProperty]:value}):await this.object.update({[`${this.objectProperty}.value`]:value})}getUpdateData(formData){const optionsAreNumeric=Object.keys(formData).every((tag=>Number.isInteger(Number(tag)))),selections=Object.entries(formData).flatMap((([tag,selected])=>selected?tag:[])).filter((tag=>"custom"!==tag));return optionsAreNumeric?selections.map((tag=>Number(tag))):selections}search(searchString){const query=new RegExp(RegExp.escape(searchString),"i");this.element.find("li.trait-item").each(((_i,li)=>{var _a;const name=null!==(_a=li.getElementsByClassName("trait-label")[0].textContent)&&void 0!==_a?_a:"";li.style.display=query.test(name)?"flex":"none"})),this.searchString=searchString}onFilterResults(event){event.preventDefault();const input=event.currentTarget;this.filterTimeout&&(clearTimeout(this.filterTimeout),this.filterTimeout=null),this.filterTimeout=window.setTimeout((()=>this.search(input.value)),100)}}exports.TagSelectorBasic=TagSelectorBasic},26115:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.TAG_SELECTOR_TYPES=exports.SELECTABLE_TAG_FIELDS=exports.TagSelectorOptions=exports.WeaknessSelector=exports.SpeedSelector=exports.SenseSelector=exports.ResistanceSelector=exports.TagSelectorBasic=exports.BasicConstructorOptions=void 0;var basic_1=__webpack_require__(21533);Object.defineProperty(exports,"BasicConstructorOptions",{enumerable:!0,get:function(){return basic_1.BasicConstructorOptions}}),Object.defineProperty(exports,"TagSelectorBasic",{enumerable:!0,get:function(){return basic_1.TagSelectorBasic}});var resistances_1=__webpack_require__(7443);Object.defineProperty(exports,"ResistanceSelector",{enumerable:!0,get:function(){return resistances_1.ResistanceSelector}});var senses_1=__webpack_require__(44461);Object.defineProperty(exports,"SenseSelector",{enumerable:!0,get:function(){return senses_1.SenseSelector}});var speeds_1=__webpack_require__(19362);Object.defineProperty(exports,"SpeedSelector",{enumerable:!0,get:function(){return speeds_1.SpeedSelector}});var weaknesses_1=__webpack_require__(65298);Object.defineProperty(exports,"WeaknessSelector",{enumerable:!0,get:function(){return weaknesses_1.WeaknessSelector}});var base_1=__webpack_require__(7290);Object.defineProperty(exports,"TagSelectorOptions",{enumerable:!0,get:function(){return base_1.TagSelectorOptions}});exports.TAG_SELECTOR_TYPES=["basic","resistances","senses","speed-types","weaknesses"];exports.SELECTABLE_TAG_FIELDS=["abilities","actionCategories","actionTraits","actionTypes","actionsNumber","actorSizes","alignments","ancestryItemTraits","ancestryTraits","areaSizes","areaTypes","armorGroups","armorPotencyRunes","armorPropertyRunes","armorResiliencyRunes","armorTraits","armorTypes","attackEffects","attributes","baseWeaponTypes","bulkTypes","classTraits","conditionTypes","consumableTraits","consumableTypes","creatureTraits","currencies","damageCategories","damageDie","damageTypes","dcAdjustments","equipmentTraits","featTraits","featTypes","hazardTraits","healingTypes","immunityTypes","itemBonuses","languages","levels","magicTraditions","magicTraditions","martialSkills","monsterTraits","npcAttackTraits","otherArmorTags","otherConsumableTags","otherWeaponTags","preciousMaterialGrades","preciousMaterials","preparationType","prerequisitePlaceholders","proficiencyLevels","rarityTraits","resistanceTypes","saves","senses","skillList","skills","speedTypes","spellComponents","spellLevels","spellTraits","spellTypes","traitsDescriptions","vehicleTraits","weaknessTypes","weaponCategories","weaponDamage","weaponDescriptions","weaponGroups","weaponHands","weaponMAP","weaponPotencyRunes","weaponPropertyRunes","weaponReload","weaponStrikingRunes","weaponTraits"]},7443:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.ResistanceSelector=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(7290);class ResistanceSelector extends base_1.BaseTagSelector{constructor(){super(...arguments),this.objectProperty="system.traits.dr"}static get defaultOptions(){return{...super.defaultOptions,id:"tag-selector",classes:["pf2e"],template:"systems/pf2e/templates/system/tag-selector/resistances.html",title:"PF2E.ResistancesLabel",width:"auto",height:700}}get actor(){return this.object}get configTypes(){return["resistanceTypes"]}async getData(){if(!this.actor.isOfType("character","hazard","npc","vehicle"))throw(0,_util_1.ErrorPF2e)("Resistances can only be saved to PCs, NPCs, hazards, and vehicles");const resistances=this.actor._source.system.traits.dr,choices=Object.entries(this.choices).reduce(((accum,[type,label])=>{var _a;const resistance=resistances.find((r=>r.type===type));return{...accum,[type]:{label,selected:!!resistance,value:Number(null==resistance?void 0:resistance.value)||0,exceptions:null!==(_a=null==resistance?void 0:resistance.exceptions)&&void 0!==_a?_a:""}}}),{});return{...await super.getData(),choices,hasExceptions:this.actor.isOfType("hazard","npc")}}activateListeners($html){super.activateListeners($html),$html.find("input[id^=input_value]").on("focusin",(event=>{$(event.currentTarget).prev().prev().prop("checked",!0)})).on("focusout",(event=>{const input=$(event.currentTarget);input.val()||input.prev().prev().prop("checked",!1)}))}async _updateObject(_event,formData){const selections=Object.entries(formData).flatMap((([type,values])=>{var _a;if(Array.isArray(values)&&values.length>1&&values[0]){const value=Number(values[1]);if(Number.isInteger(value)&&value>0)return{type,value,exceptions:String(null!==(_a=values[2])&&void 0!==_a?_a:"")}}return[]}));this.actor.update({[this.objectProperty]:selections})}}exports.ResistanceSelector=ResistanceSelector},44461:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.SenseSelector=void 0;const base_1=__webpack_require__(7290),_util_1=__webpack_require__(6945);class SenseSelector extends base_1.BaseTagSelector{constructor(){super(...arguments),this.objectProperty="system.traits.senses"}static get defaultOptions(){return mergeObject(super.defaultOptions,{template:"systems/pf2e/templates/system/tag-selector/senses.html",title:"PF2E.Actor.Creature.Sense.Label"})}get configTypes(){return["senses"]}async getData(){if(!this.object.isOfType("character"))throw(0,_util_1.ErrorPF2e)("The Sense selector is usable only with PCs");const senses=this.object.system.traits.senses,choices=Object.entries(this.choices).reduce(((accum,[type,label])=>{var _a,_b;const sense=senses.find((sense=>sense.type===type));return{...accum,[type]:{acuity:null!==(_a=null==sense?void 0:sense.acuity)&&void 0!==_a?_a:"precise",disabled:!!(null==sense?void 0:sense.source),label,selected:!!sense,value:null!==(_b=null==sense?void 0:sense.value)&&void 0!==_b?_b:""}}}),{});return{...await super.getData(),hasExceptions:!1,choices,senseAcuity:CONFIG.PF2E.senseAcuity}}activateListeners($html){super.activateListeners($html),$html.find("input[id^=input_value]").on("focusin",(event=>{$(event.currentTarget).prev().prev().prop("checked",!0)})).on("focusout",(event=>{const input=$(event.currentTarget);input.val()||input.prev().prev().prop("checked",!1)}))}async _updateObject(_event,formData){const update=Object.entries(formData).filter((e=>!0===e[1]||Array.isArray(e[1])&&e[1][0])).map((([type,values])=>{if(!0===values)return{type};if(Number(values[2])){return{type,acuity:values[1],value:Number(values[2])}}return{type,acuity:values[1]}}));this.object.update({[this.objectProperty]:update})}}exports.SenseSelector=SenseSelector},19362:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.SpeedSelector=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(7290);class SpeedSelector extends base_1.BaseTagSelector{constructor(){super(...arguments),this.objectProperty="system.attributes.speed.otherSpeeds"}static get defaultOptions(){return mergeObject(super.defaultOptions,{template:"systems/pf2e/templates/system/tag-selector/speeds.html",title:"PF2E.SpeedTypes"})}get configTypes(){return["speedTypes"]}async getData(){if(!this.object.isOfType("creature"))throw(0,_util_1.ErrorPF2e)("The Speed selector is usable only with creature-type actors");const speeds=this.object.system.attributes.speed.otherSpeeds,speedLabels=CONFIG.PF2E.speedTypes,choices=Object.keys(this.choices).reduce(((accum,type)=>{const speed=speeds.find((s=>s.type===type));return{...accum,[type]:{selected:!!speed,disabled:!!(null==speed?void 0:speed.source),label:game.i18n.localize(speedLabels[type]),value:Number(null==speed?void 0:speed.value)||""}}}),{});return{...await super.getData(),hasExceptions:this.object.isOfType("npc"),choices}}activateListeners($html){super.activateListeners($html),$html.find("input[id^=input_value]").on("focusin",(event=>{$(event.currentTarget).prev().prev().prop("checked",!0)})).on("focusout",(event=>{const input=$(event.currentTarget);input.val()||input.prev().prev().prop("checked",!1)}))}async _updateObject(_event,formData){const update=Object.entries(formData).flatMap((([key,value])=>{if(!Array.isArray(value)||2!==value.length)return[];const selected=!!value[0],distance=Math.trunc(Math.abs(value[1]));return selected&&distance?{type:key,value:distance}:[]}));this.object.update({[this.objectProperty]:update})}}exports.SpeedSelector=SpeedSelector},65298:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.WeaknessSelector=void 0;const _util_1=__webpack_require__(6945),base_1=__webpack_require__(7290);class WeaknessSelector extends base_1.BaseTagSelector{constructor(){super(...arguments),this.objectProperty="system.traits.dv"}static get defaultOptions(){return{...super.defaultOptions,template:"systems/pf2e/templates/system/tag-selector/weaknesses.html",title:"PF2E.WeaknessesLabel"}}get actor(){return this.object}get configTypes(){return["weaknessTypes"]}async getData(){if(!this.actor.isOfType("character","hazard","npc","vehicle"))throw(0,_util_1.ErrorPF2e)("Weaknesses can only be saved to PCs, NPCs, hazards, and vehicles");const weaknesses=this.actor._source.system.traits.dv,choices=Object.entries(this.choices).reduce(((accum,[type,label])=>{var _a;const weakness=weaknesses.find((w=>w.type===type));return{...accum,[type]:{label,selected:!!weakness,value:Number(null==weakness?void 0:weakness.value)||0,exceptions:null!==(_a=null==weakness?void 0:weakness.exceptions)&&void 0!==_a?_a:""}}}),{});return{...await super.getData(),choices,hasExceptions:this.actor.isOfType("hazard","npc")}}activateListeners($html){super.activateListeners($html),$html.find("input[id^=input_value]").on("focusin",(event=>{$(event.currentTarget).prev().prev().prop("checked",!0)})).on("focusout",(event=>{const input=$(event.currentTarget);input.val()||input.prev().prev().prop("checked",!1)}))}async _updateObject(_event,formData){const selections=Object.entries(formData).flatMap((([type,values])=>{var _a;if(Array.isArray(values)&&values.length>1&&values[0]){const value=Number(values[1]);if(Number.isInteger(value)&&value>0)return{type,value,exceptions:String(null!==(_a=values[2])&&void 0!==_a?_a:"")}}return[]}));this.actor.update({[this.objectProperty]:selections})}}exports.WeaknessSelector=WeaknessSelector},21047:function(__unused_webpack_module,exports,__webpack_require__){var _a,_TextEditorPF2e_localize,_TextEditorPF2e_createTemplate,_TextEditorPF2e_createCheck,__classPrivateFieldGet=this&&this.__classPrivateFieldGet||function(receiver,state,kind,f){if("a"===kind&&!f)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof state?receiver!==state||!f:!state.has(receiver))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===kind?f:"a"===kind?f.call(receiver):f?f.value:state.get(receiver)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.TextEditorPF2e=void 0;const modifiers_1=__webpack_require__(92823),values_1=__webpack_require__(8382),util_1=__webpack_require__(58903),user_visibility_1=__webpack_require__(96498),_util_1=__webpack_require__(6945),statistic_1=__webpack_require__(77486),superEnrichHTML=TextEditor.enrichHTML;class TextEditorPF2e extends TextEditor{static enrichHTML(content,options={}){(null==content?void 0:content.startsWith("<p>@Localize"))&&(content=content.substring(3,content.length-4));const enriched=superEnrichHTML.apply(this,[content,options]);return"string"==typeof enriched?TextEditorPF2e.processUserVisibility(enriched,options):Promise.resolve().then((async()=>TextEditorPF2e.processUserVisibility(await enriched,options)))}static processUserVisibility(content,options){var _b,_c;const $html=$("<div>").html(content),document=null!==(_c=null===(_b=options.rollData)||void 0===_b?void 0:_b.actor)&&void 0!==_c?_c:null;return user_visibility_1.UserVisibilityPF2e.process($html,{document}),$html.html()}static async enrichString(data,options={}){var _b,_c,_d,_e,_f;if(data.length<4)return null;const item=null!==(_c=null===(_b=options.rollData)||void 0===_b?void 0:_b.item)&&void 0!==_c?_c:null,[_match,inlineType,paramString,buttonLabel]=data;switch(inlineType){case"Check":{const actor=null!==(_f=null!==(_e=null===(_d=options.rollData)||void 0===_d?void 0:_d.actor)&&void 0!==_e?_e:null==item?void 0:item.actor)&&void 0!==_f?_f:null;return __classPrivateFieldGet(this,_a,"m",_TextEditorPF2e_createCheck).call(this,{paramString,inlineLabel:buttonLabel,item,actor})}case"Localize":return __classPrivateFieldGet(this,_a,"m",_TextEditorPF2e_localize).call(this,paramString,options);case"Template":return __classPrivateFieldGet(this,_a,"m",_TextEditorPF2e_createTemplate).call(this,paramString,buttonLabel,null==item?void 0:item.system);default:return null}}static convertXMLNode(html,name,{visible,visibility=null,whose="self",classes=[]}){const node=html.querySelector(name);if(!node)return null;const span=document.createElement("span"),{dataset,classList}=span;void 0!==visible&&(visibility=visible?"all":"gm"),visibility&&(dataset.visibility=visibility),whose&&(dataset.whose=whose);for(const cssClass of classes)classList.add(cssClass);return span.append(...Array.from(node.childNodes)),node.replaceWith(span),span}}exports.TextEditorPF2e=TextEditorPF2e,_a=TextEditorPF2e,_TextEditorPF2e_localize=async function(paramString,options={}){const content=game.i18n.localize(paramString);if(content===paramString)return ui.notifications.error(`Failed to localize ${paramString}!`),null;const result=document.createElement("span");return result.innerHTML=await TextEditor.enrichHTML(content,{...options,async:!0}),result},_TextEditorPF2e_createTemplate=function(paramString,label,itemData){var _b;const rawParams=(()=>{const error="Wrong notation for params - use [type1:value1|type2:value2|...]",parameters=new Map,paramStrings=paramString.trim().split("|");if(!Array.isArray(paramStrings))return error;for(const param of paramStrings){const paramComponents=param.trim().split(":");if(2!==paramComponents.length)return error;parameters.set(paramComponents[0].trim(),paramComponents[1].trim())}return parameters})();if("string"==typeof rawParams)return ui.notifications.error(rawParams),null;const params=Object.fromEntries(rawParams);if(params.type){if(params.distance){if((0,_util_1.objectHasKey)(CONFIG.PF2E.areaTypes,params.type)){if(isNaN(+params.distance))return ui.notifications.error(game.i18n.format("PF2E.InlineTemplateErrors.DistanceNoNumber",{distance:params.distance})),null;if(params.width&&isNaN(+params.width))return ui.notifications.error(game.i18n.format("PF2E.InlineTemplateErrors.WidthNoNumber",{width:params.width})),null;{if(!params.traits&&(params.traits="",null==itemData?void 0:itemData.traits)){let traits=itemData.traits.value.join(",");""!==itemData.traits.custom&&(traits=traits.concat(`, ${itemData.traits.custom}`)),params.traits=traits}label||(label=game.i18n.format("PF2E.TemplateLabel",{size:params.distance,unit:game.i18n.localize("PF2E.Foot"),shape:game.i18n.localize(CONFIG.PF2E.areaTypes[params.type])}));const html=document.createElement("span");return html.innerHTML=label,html.setAttribute("data-pf2-effect-area",params.type),html.setAttribute("data-pf2-distance",params.distance),""!==params.traits&&html.setAttribute("data-pf2-traits",params.traits),"line"===params.type&&html.setAttribute("data-pf2-width",null!==(_b=params.width)&&void 0!==_b?_b:"5"),html}}return ui.notifications.error(game.i18n.format("PF2E.InlineTemplateErrors.TypeUnsupported",{type:params.type})),null}return ui.notifications.error(game.i18n.localize("PF2E.InlineTemplateErrors.DistanceMissing")),null}return ui.notifications.error(game.i18n.localize("PF2E.InlineTemplateErrors.TypeMissing")),null},_TextEditorPF2e_createCheck=function(_b){var _c,_d,_e,_f,_g,_h,{paramString,inlineLabel,item=null,actor=null!==(_c=null==item?void 0:item.actor)&&void 0!==_c?_c:null}=_b;const parts=paramString.split("|"),params={type:"",dc:""};for(const paramPart of parts){const param=paramPart.trim();if(param.startsWith("traits:"))params.traits=param.substring(7);else if("showDC"===param)params.showDC="all";else{const paramParts=param.split(":");if(2!==paramParts.length)return ui.notifications.warn(`Error. Expected "parameter:value" but got: ${param}`),null;params[paramParts[0].trim()]=paramParts[1].trim()}}if(!params.type)return ui.notifications.warn(game.i18n.localize("PF2E.InlineCheck.Errors.TypeMissing")),null;const traits=[],itemTraits=null==item?void 0:item.system.traits;if(itemTraits&&"true"!==params.overrideTraits&&(traits.push(...itemTraits.value),itemTraits.custom&&traits.push(...itemTraits.custom.split(",").map((trait=>trait.trim())))),null==item?void 0:item.slug){const actionName="action:"+(null==item?void 0:item.slug);traits.push(actionName)}const actorTraits=null==actor?void 0:actor.getSelfRollOptions("origin");actorTraits&&"true"!==params.overrideTraits&&traits.push(...actorTraits),"true"===params.basic&&traits.push("damaging-effect"),params.traits&&traits.push(...params.traits.split(",").map((trait=>trait.trim())));const allTraits=Array.from(new Set(traits)),html=document.createElement("span");html.setAttribute("data-pf2-traits",`${allTraits}`);const name=null!==(_e=null!==(_d=params.name)&&void 0!==_d?_d:null==item?void 0:item.name)&&void 0!==_e?_e:params.type;html.setAttribute("data-pf2-label",game.i18n.format("PF2E.InlineCheck.DCWithName",{name})),html.setAttribute("data-pf2-repost-flavor",name);const role=null!==(_f=params.showDC)&&void 0!==_f?_f:"owner";switch(html.setAttribute("data-pf2-show-dc",null!==(_g=params.showDC)&&void 0!==_g?_g:role),html.setAttribute("data-pf2-adjustment",null!==(_h=params.adjustment)&&void 0!==_h?_h:""),params.type){case"flat":html.innerHTML=null!=inlineLabel?inlineLabel:game.i18n.localize("PF2E.FlatCheck"),html.setAttribute("data-pf2-check","flat");break;case"perception":html.innerHTML=null!=inlineLabel?inlineLabel:game.i18n.localize("PF2E.PerceptionCheck"),html.setAttribute("data-pf2-check","perception");break;case"fortitude":case"reflex":case"will":{const saveName=game.i18n.localize(CONFIG.PF2E.saves[params.type]),saveLabel="true"===params.basic?game.i18n.format("PF2E.InlineCheck.BasicWithSave",{save:saveName}):saveName;html.innerHTML=null!=inlineLabel?inlineLabel:saveLabel,html.setAttribute("data-pf2-check",params.type);break}default:{const shortForm=(0,_util_1.objectHasKey)(values_1.SKILL_EXPANDED,params.type)?values_1.SKILL_EXPANDED[params.type].shortform:(0,_util_1.objectHasKey)(values_1.SKILL_DICTIONARY,params.type)?params.type:void 0,skillLabel=shortForm?game.i18n.localize(CONFIG.PF2E.skills[shortForm]):params.type.split("-").map((word=>word.slice(0,1).toUpperCase()+word.slice(1))).join(" ");html.innerHTML=null!=inlineLabel?inlineLabel:skillLabel,html.setAttribute("data-pf2-check",params.type)}}if(params.type&&params.dc){const checkDC="@self.level"===params.dc?params.dc:function(_b){var _c,{name,params,item=null,actor=null!==(_c=null==item?void 0:item.actor)&&void 0!==_c?_c:null}=_b;const{type}=params,dc=params.dc,base=(()=>{if(dc.startsWith("resolve")&&actor){params.immutable||(params.immutable="true");const resolve=dc.match(/resolve\((.+?)\)$/),value=resolve&&(null==resolve?void 0:resolve.length)>0?resolve[1]:"";return Number((resolveString=>{try{return Roll.safeEval(Roll.replaceFormulaData(resolveString,{actor,item:null!=item?item:{}}))}catch(_b){return 0}})(value))}return Number(dc)||void 0})();if(base){const getStatisticValue=selectors=>{if((null==item?void 0:item.actor)&&"true"!==params.immutable){const{actor}=item,{synthetics}=actor,modifier=new modifiers_1.ModifierPF2e({slug:"base",label:"PF2E.ModifierTitle",modifier:base-10,adjustments:(0,util_1.extractModifierAdjustments)(synthetics.modifierAdjustments,selectors,"base")}),stat=new statistic_1.Statistic(actor,{slug:type,label:name,domains:selectors,modifiers:[modifier,...(0,util_1.extractModifiers)(synthetics,selectors)]});return String(stat.dc.value)}return base.toString()},slugName=(0,_util_1.sluggify)(name);switch(type){case"flat":return"false"===params.immutable?getStatisticValue(["inline-dc",`${slugName}-inline-dc`]):base.toString();case"perception":return getStatisticValue(["all","inline-dc",`${slugName}-inline-dc`]);case"fortitude":case"reflex":case"will":return getStatisticValue(["all","inline-dc",`${slugName}-inline-dc`]);default:return getStatisticValue(["all","inline-dc",`${slugName}-inline-dc`])}}return"0"}({name,params,item,actor});html.setAttribute("data-pf2-dc",checkDC);const text=html.innerHTML;"@self.level"!==checkDC&&(html.innerHTML=game.i18n.format("PF2E.DCWithValueAndVisibility",{role,dc:checkDC,text}))}return html}},20381:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.UserPF2e=void 0;class UserPF2e extends User{prepareData(){super.prepareData(),canvas.ready&&canvas.tokens.controlled.length>0&&game.pf2e.effectPanel.refresh()}prepareBaseData(){super.prepareBaseData(),this.flags=mergeObject({pf2e:{settings:{showEffectPanel:!0,showRollDialogs:!0,searchPackContents:!1,monochromeDarkvision:!0}}},this.flags)}get settings(){return this.flags.pf2e.settings}clearTargets(){this.updateTokenTargets()}_onUpdate(changed,options,userId){var _a;if(super._onUpdate(changed,options,userId),game.user.id!==userId)return;const keys=Object.keys(flattenObject(changed));keys.includes("flags.pf2e.settings.showEffectPanel")&&game.pf2e.effectPanel.refresh(),keys.includes("flags.pf2e.settings.monochromeDarkvision")&&canvas.ready&&(null===(_a=canvas.scene)||void 0===_a||_a.reset(),canvas.perception.update({initializeVision:!0,refreshLighting:!0},!0))}}exports.UserPF2e=UserPF2e},81781:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.UserPF2e=void 0;var document_1=__webpack_require__(20381);Object.defineProperty(exports,"UserPF2e",{enumerable:!0,get:function(){return document_1.UserPF2e}})},42261:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.UserConfigPF2e=void 0;class UserConfigPF2e extends UserConfig{get template(){return"systems/pf2e/templates/user/sheet.html"}}exports.UserConfigPF2e=UserConfigPF2e},30417:(__unused_webpack_module,exports,__webpack_require__)=>{const hooks_1=__webpack_require__(57399);__webpack_require__(7478);__webpack_require__(44958),hooks_1.HooksPF2e.listen()},55643:function(__unused_webpack_module,exports,__webpack_require__){var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.PF2ECONFIG=void 0;const _item_1=__webpack_require__(10843),_actor_1=__webpack_require__(85530),runes_1=__webpack_require__(31862),values_1=__webpack_require__(67189),en_json_1=__importDefault(__webpack_require__(67515)),traits_1=__webpack_require__(39713),sheet_1=__webpack_require__(46047),_util_1=__webpack_require__(6945),weaponPropertyRunes={...Object.entries(runes_1.WEAPON_PROPERTY_RUNES).reduce(((accumulated,[slug,rune])=>({...accumulated,[slug]:rune.name})),{})},damageCategories={alignment:"PF2E.Alignment",adamantine:"PF2E.PreciousMaterialAdamantine",coldiron:"PF2E.PreciousMaterialColdIron",darkwood:"PF2E.PreciousMaterialDarkwood",energy:"PF2E.TraitEnergy",ghostTouch:weaponPropertyRunes.ghostTouch,mithral:"PF2E.PreciousMaterialMithral",orichalcum:"PF2E.PreciousMaterialOrichalcum",physical:"PF2E.TraitPhysical",precision:"PF2E.TraitPrecision",salt:"PF2E.TraitSalt","salt-water":"PF2E.TraitSaltWater",silver:"PF2E.PreciousMaterialSilver","sisterstone-dusk":"PF2E.PreciousMaterialSisterstoneDusk","sisterstone-scarlet":"PF2E.PreciousMaterialSisterstoneScarlet",warpglass:"PF2E.PreciousMaterialWarpglass"},damageTypes={...traits_1.alignmentTraits,...traits_1.elementalTraits,...traits_1.energyDamageTypes,bleed:"PF2E.TraitBleed",bludgeoning:"PF2E.TraitBludgeoning",piercing:"PF2E.TraitPiercing",slashing:"PF2E.TraitSlashing",mental:"PF2E.TraitMental",poison:"PF2E.TraitPoison",untyped:"PF2E.TraitUntyped"},tokenHUDConditions={blinded:"PF2E.ConditionTypeBlinded",broken:"PF2E.ConditionTypeBroken",clumsy:"PF2E.ConditionTypeClumsy",concealed:"PF2E.ConditionTypeConcealed",confused:"PF2E.ConditionTypeConfused",controlled:"PF2E.ConditionTypeControlled",dazzled:"PF2E.ConditionTypeDazzled",deafened:"PF2E.ConditionTypeDeafened",doomed:"PF2E.ConditionTypeDoomed",drained:"PF2E.ConditionTypeDrained",dying:"PF2E.ConditionTypeDying",encumbered:"PF2E.ConditionTypeEncumbered",enfeebled:"PF2E.ConditionTypeEnfeebled",fascinated:"PF2E.ConditionTypeFascinated",fatigued:"PF2E.ConditionTypeFatigued","flat-footed":"PF2E.ConditionTypeFlatFooted",fleeing:"PF2E.ConditionTypeFleeing",frightened:"PF2E.ConditionTypeFrightened",grabbed:"PF2E.ConditionTypeGrabbed",immobilized:"PF2E.ConditionTypeImmobilized",invisible:"PF2E.ConditionTypeInvisible",paralyzed:"PF2E.ConditionTypeParalyzed","persistent-damage":"PF2E.ConditionTypePersistent",petrified:"PF2E.ConditionTypePetrified",prone:"PF2E.ConditionTypeProne",quickened:"PF2E.ConditionTypeQuickened",restrained:"PF2E.ConditionTypeRestrained",sickened:"PF2E.ConditionTypeSickened",slowed:"PF2E.ConditionTypeSlowed",stunned:"PF2E.ConditionTypeStunned",stupefied:"PF2E.ConditionTypeStupefied",unconscious:"PF2E.ConditionTypeUnconscious",undetected:"PF2E.ConditionTypeUndetected",wounded:"PF2E.ConditionTypeWounded"},conditionTypes={...tokenHUDConditions,friendly:"PF2E.ConditionTypeFriendly",helpful:"PF2E.ConditionTypeHelpful",hidden:"PF2E.ConditionTypeHidden",hostile:"PF2E.ConditionTypeHostile",indifferent:"PF2E.ConditionTypeIndifferent",observed:"PF2E.ConditionTypeObserved",unfriendly:"PF2E.ConditionTypeUnfriendly",unnoticed:"PF2E.ConditionTypeUnnoticed"},immunityTypes={...conditionTypes,...damageCategories,...traits_1.damageTraits,...damageTypes,...traits_1.magicSchools,"area-damage":"PF2E.TraitAreaDamage",auditory:"PF2E.TraitAuditory",confusion:"PF2E.TraitConfusion","critical-hits":"PF2E.TraitCriticalHits",curse:"PF2E.TraitCurse",detection:"PF2E.TraitDetection","death-effects":"PF2E.TraitDeathEffects",disease:"PF2E.TraitDisease",emotion:"PF2E.TraitEmotion","fear-effects":"PF2E.TraitFearEffects",ghostTouch:weaponPropertyRunes.ghostTouch,healing:"PF2E.TraitHealing",inhaled:"PF2E.TraitInhaled",light:"PF2E.TraitLight",magic:"PF2E.TraitMagic",magical:"PF2E.TraitMagical","nonlethal-attacks":"PF2E.TraitNonlethalAttacks","nonmagical-attacks":"PF2E.TraitNonmagicalAttacks","object-immunities":"PF2E.TraitObjectImmunities",olfactory:"PF2E.TraitOlfactory",polymorph:"PF2E.TraitPolymorph",possession:"PF2E.TraitPossession",scrying:"PF2E.TraitScrying",sleep:"PF2E.TraitSleep",spellDeflection:"PF2E.TraitSpellDeflection","swarm-attacks":"PF2E.TraitSwarmAttacks","swarm-mind":"PF2E.TraitSwarmMind",trip:"PF2E.TraitTrip",unarmed:"PF2E.TraitUnarmed",visual:"PF2E.TraitVisual"},weaknessTypes={...damageCategories,...traits_1.damageTraits,...damageTypes,"area-damage":"PF2E.TraitAreaDamage",axe:"PF2E.TraitAxeVulnerability","critical-hits":"PF2E.TraitCriticalHits",emotion:"PF2E.TraitEmotion","nonlethal-attacks":"PF2E.TraitNonlethalAttacks","persistent-damage":"PF2E.ConditionTypePersistent","salt-water":"PF2E.TraitSaltWater","splash-damage":"PF2E.TraitSplashDamage","vampire-weaknesses":"PF2E.TraitVampireWeaknesses",vorpal:weaponPropertyRunes.vorpal,"vorpal-fear":"PF2E.TraitVorpalFear","vulnerable-to-sunlight":"PF2E.TraitVulnerableToSunlight",unarmed:"PF2E.TraitUnarmed",weapons:"PF2E.TraitWeapons"},resistanceTypes={...damageCategories,...traits_1.damageTraits,...damageTypes,all:"PF2E.TraitAll","area-damage":"PF2E.TraitAreaDamage","critical-hits":"PF2E.TraitCriticalHits","nonlethal-attacks":"PF2E.TraitNonlethalAttacks","persistent-damage":"PF2E.ConditionTypePersistent","protean anatomy":"PF2E.TraitProteanAnatomy",unarmed:"PF2E.TraitUnarmed",vorpal:weaponPropertyRunes.vorpal,weapons:"PF2E.TraitWeapons"},baseWeaponTypes=Object.keys(en_json_1.default.PF2E.Weapon.Base).reduce(((map,slug)=>({...map,[slug]:`PF2E.Weapon.Base.${slug}`})),{}),traitsDescriptions={aasimar:"PF2E.TraitDescriptionAasimar",aberration:"PF2E.TraitDescriptionAberration",abjuration:"PF2E.TraitDescriptionAbjuration",acid:"PF2E.TraitDescriptionAcid",additive1:"PF2E.TraitDescriptionAdditive",additive2:"PF2E.TraitDescriptionAdditive",additive3:"PF2E.TraitDescriptionAdditive",adjustment:"PF2E.TraitDescriptionAdjustment",aeon:"PF2E.TraitDescriptionAeon",aesir:"PF2E.TraitDescriptionAesir",aftermath:"PF2E.TraitDescriptionAftermath",agathion:"PF2E.TraitDescriptionAgathion",agile:"PF2E.TraitDescriptionAgile",air:"PF2E.TraitDescriptionAir",alchemical:"PF2E.TraitDescriptionAlchemical",alchemist:"PF2E.TraitDescriptionAlchemist",amphibious:"PF2E.TraitDescriptionAmphibious",anadi:"PF2E.TraitDescriptionAnadi",android:"PF2E.TraitDescriptionAndroid",apex:"PF2E.TraitDescriptionApex",aphorite:"PF2E.TraitDescriptionAphorite",arcane:"PF2E.TraitDescriptionArcane",archetype:"PF2E.TraitDescriptionArchetype",artifact:"PF2E.TraitDescriptionArtifact",attached:"PF2E.TraitDescriptionAttached","attached-to-crossbow-or-firearm":"PF2E.TraitDescriptionAttached","attached-to-shield":"PF2E.TraitDescriptionAttached",attack:"PF2E.TraitDescriptionAttack",auditory:"PF2E.TraitDescriptionAuditory",aura:"PF2E.TraitDescriptionAura",automaton:"PF2E.TraitDescriptionAutomaton",azarketi:"PF2E.TraitDescriptionAzarketi",backstabber:"PF2E.TraitDescriptionBackstabber",backswing:"PF2E.TraitDescriptionBackswing",barbarian:"PF2E.TraitDescriptionBarbarian",bard:"PF2E.TraitDescriptionBard",beastkin:"PF2E.TraitDescriptionBeastkin",bomb:"PF2E.TraitDescriptionBomb",brutal:"PF2E.TraitDescriptionBrutal",bulwark:"PF2E.TraitDescriptionBulwark",cantrip:"PF2E.TraitDescriptionCantrip","capacity-3":"PF2E.TraitDescriptionCapacity","capacity-4":"PF2E.TraitDescriptionCapacity","capacity-5":"PF2E.TraitDescriptionCapacity",catalyst:"PF2E.TraitDescriptionCatalyst",catfolk:"PF2E.TraitDescriptionCatfolk",champion:"PF2E.TraitDescriptionChampion",changeling:"PF2E.TraitDescriptionChangeling",chaotic:"PF2E.TraitDescriptionChaotic",charm:"PF2E.TraitDescriptionCharm",class:"PF2E.TraitDescriptionClass",cleric:"PF2E.TraitDescriptionCleric",climbing:"PF2E.TraitDescriptionClimbing",clockwork:"PF2E.TraitDescriptionClockwork",cobbled:"PF2E.TraitDescriptionCobbled",cold:"PF2E.TraitDescriptionCold",combination:"PF2E.TraitDescriptionCombination",comfort:"PF2E.TraitDescriptionComfort",common:"PF2E.TraitDescriptionCommon",companion:"PF2E.TraitDescriptionCompanion",complex:"PF2E.TraitDescriptionComplex",composition:"PF2E.TraitDescriptionComposition",concealable:"PF2E.TraitDescriptionConcealable",concentrate:"PF2E.TraitDescriptionConcentrate",concussive:"PF2E.TraitDescriptionConcussive",conjuration:"PF2E.TraitDescriptionConjuration",conrasu:"PF2E.TraitDescriptionConrasu",consecration:"PF2E.TraitDescriptionConsecration",consumable:"PF2E.TraitDescriptionConsumable",contact:"PF2E.TraitDescriptionContact",contingency:"PF2E.TraitDescriptionContingency",contract:"PF2E.TraitDescriptionContract","critical-fusion":"PF2E.TraitDescriptionCriticalFusion",curse:"PF2E.TraitDescriptionCurse",cursebound:"PF2E.TraitDescriptionCursebound",cursed:"PF2E.TraitDescriptionCursed",darkness:"PF2E.TraitDescriptionDarkness",darvakka:"PF2E.TraitDescriptionDarvakka","deadly-2d10":"PF2E.TraitDescriptionDeadly","deadly-2d12":"PF2E.TraitDescriptionDeadly","deadly-2d8":"PF2E.TraitDescriptionDeadly","deadly-3d10":"PF2E.TraitDescriptionDeadly","deadly-3d12":"PF2E.TraitDescriptionDeadly","deadly-3d8":"PF2E.TraitDescriptionDeadly","deadly-4d10":"PF2E.TraitDescriptionDeadly","deadly-4d12":"PF2E.TraitDescriptionDeadly","deadly-4d8":"PF2E.TraitDescriptionDeadly","deadly-d10":"PF2E.TraitDescriptionDeadly","deadly-d12":"PF2E.TraitDescriptionDeadly","deadly-d6":"PF2E.TraitDescriptionDeadly","deadly-d8":"PF2E.TraitDescriptionDeadly",death:"PF2E.TraitDescriptionDeath",dedication:"PF2E.TraitDescriptionDedication",detection:"PF2E.TraitDescriptionDetection",deviant:"PF2E.TraitDescriptionDeviant",dhampir:"PF2E.TraitDescriptionDhampir",disarm:"PF2E.TraitDescriptionDisarm",disease:"PF2E.TraitDescriptionDisease",divination:"PF2E.TraitDescriptionDivination",divine:"PF2E.TraitDescriptionDivine","double-barrel":"PF2E.TraitDescriptionDoubleBarrel",downtime:"PF2E.TraitDescriptionDowntime",drug:"PF2E.TraitDescriptionDrug",druid:"PF2E.TraitDescriptionDruid",duskwalker:"PF2E.TraitDescriptionDuskwalker",dwarf:"PF2E.TraitDescriptionDwarf",earth:"PF2E.TraitDescriptionEarth",eidolon:"PF2E.TraitDescriptionEidolon",electricity:"PF2E.TraitDescriptionElectricity",elf:"PF2E.TraitDescriptionElf",elixir:"PF2E.TraitDescriptionElixir",emotion:"PF2E.TraitDescriptionEmotion",enchantment:"PF2E.TraitDescriptionEnchantment",environment:"PF2E.TraitDescriptionEnvironment",esoterica:"PF2E.TraitDescriptionEsoterica",evil:"PF2E.TraitDescriptionEvil",evocation:"PF2E.TraitDescriptionEvocation",exploration:"PF2E.TraitDescriptionExploration",extradimensional:"PF2E.TraitDescriptionExtradimensional","fatal-aim-d10":"PF2E.TraitDescriptionFatalAim","fatal-aim-d12":"PF2E.TraitDescriptionFatalAim","fatal-d10":"PF2E.TraitDescriptionFatal","fatal-d12":"PF2E.TraitDescriptionFatal","fatal-d8":"PF2E.TraitDescriptionFatal",fear:"PF2E.TraitDescriptionFear",fetchling:"PF2E.TraitDescriptionFetchling",fey:"PF2E.TraitDescriptionFey",fighter:"PF2E.TraitDescriptionFighter",finesse:"PF2E.TraitDescriptionFinesse",finisher:"PF2E.TraitDescriptionFinisher",fire:"PF2E.TraitDescriptionFire",fleshwarp:"PF2E.TraitDescriptionFleshwarp",flexible:"PF2E.TraitDescriptionFlexible",flourish:"PF2E.TraitDescriptionFlourish",focused:"PF2E.TraitDescriptionFocused",force:"PF2E.TraitDescriptionForce",forceful:"PF2E.TraitDescriptionForceful",fortune:"PF2E.TraitDescriptionFortune","free-hand":"PF2E.TraitDescriptionFreeHand",fulu:"PF2E.TraitDescriptionFulu",fungus:"PF2E.TraitDescriptionFungus",gadget:"PF2E.TraitDescriptionGadget",ganzi:"PF2E.TraitDescriptionGanzi",general:"PF2E.TraitDescriptionGeneral",genie:"PF2E.TraitDescriptionGenie",geniekin:"PF2E.TraitDescriptionGeniekin",ghoran:"PF2E.TraitDescriptionGhoran",ghul:"PF2E.TraitDescriptionGhul",gnoll:"PF2E.TraitDescriptionGnoll",gnome:"PF2E.TraitDescriptionGnome",goblin:"PF2E.TraitDescriptionGoblin",goloma:"PF2E.TraitDescriptionGoloma",good:"PF2E.TraitDescriptionGood",grapple:"PF2E.TraitDescriptionGrapple",grimoire:"PF2E.TraitDescriptionGrimoire",grippli:"PF2E.TraitDescriptionGrippli",gunslinger:"PF2E.TraitDescriptionGunslinger",halfling:"PF2E.TraitDescriptionHalfling","half-elf":"PF2E.TraitDescriptionHalfElf","half-orc":"PF2E.TraitDescriptionHalfOrc","jousting-d6":"PF2E.TraitDescriptionJoustingD6",hampering:"PF2E.TraitDescriptionHampering",haunt:"PF2E.TraitDescriptionHaunt",healing:"PF2E.TraitDescriptionHealing",hex:"PF2E.TraitDescriptionHex",hobgoblin:"PF2E.TraitDescriptionHobgoblin",human:"PF2E.TraitDescriptionHuman",humanoid:"PF2E.TraitDescriptionHumanoid",ifrit:"PF2E.TraitDescriptionIfrit",illusion:"PF2E.TraitDescriptionIllusion",incapacitation:"PF2E.TraitDescriptionIncapacitation",incarnate:"PF2E.TraitDescriptionIncarnate",incorporeal:"PF2E.TraitDescriptionIncorporeal",infused:"PF2E.TraitDescriptionInfused",ingested:"PF2E.TraitDescriptionIngested",inhaled:"PF2E.TraitDescriptionInhaled",injection:"PF2E.TraitDescriptionInjection",injury:"PF2E.TraitDescriptionInjury",intelligent:"PF2E.TraitDescriptionIntelligent",inventor:"PF2E.TraitDescriptionInventor",invested:"PF2E.TraitDescriptionInvested",investigator:"PF2E.TraitDescriptionInvestigator",kashrishi:"PF2E.TraitDescriptionKashrishi",kickback:"PF2E.TraitDescriptionKickback",kitsune:"TraitDescriptionKitsune",kobold:"TraitDescriptionKobold",lawful:"PF2E.TraitDescriptionLawful",leshy:"PF2E.TraitDescriptionLeshy",light:"PF2E.TraitDescriptionLight",linguistic:"PF2E.TraitDescriptionLinguistic",litany:"PF2E.TraitDescriptionLitany",lizardfolk:"PF2E.TraitDescriptionLizardfolk",magical:"PF2E.TraitDescriptionMagical",magus:"PF2E.TraitDescriptionMagus",manipulate:"PF2E.TraitDescriptionManipulate",mechanical:"PF2E.TraitDescriptionMechanical",mental:"PF2E.TraitDescriptionMental",metal:"PF2E.TraitDescriptionMetal",metamagic:"PF2E.TraitDescriptionMetamagic",mindless:"PF2E.TraitDescriptionMindless",minion:"PF2E.TraitDescriptionMinion",misfortune:"PF2E.TraitDescriptionMisfortune",modification:"PF2E.TraitDescriptionModification",modular:"PF2E.TraitDescriptionModular",monk:"PF2E.TraitDescriptionMonk",morph:"PF2E.TraitDescriptionMorph",mounted:"PF2E.TraitDescriptionMounted",move:"PF2E.TraitDescriptionMove",multiclass:"PF2E.TraitDescriptionMulticlass",mutagen:"PF2E.TraitDescriptionMutagen",nagaji:"PF2E.TraitDescriptionNagaji",necromancy:"PF2E.TraitDescriptionNecromancy",negative:"PF2E.TraitDescriptionNegative",noisy:"PF2E.TraitDescriptionNoisy",nonlethal:"PF2E.TraitDescriptionNonlethal",oath:"PF2E.TraitDescriptionOath",occult:"PF2E.TraitDescriptionOccult",oil:"PF2E.TraitDescriptionOil",olfactory:"PF2E.TraitDescriptionOlfactory",open:"PF2E.TraitDescriptionOpen",oracle:"PF2E.TraitDescriptionOracle",orc:"PF2E.TraitDescriptionOrc",oread:"PF2E.TraitDescriptionOread",parry:"PF2E.TraitDescriptionParry",peachwood:"PF2E.PreciousMaterialPeachwoodDescription",plant:"PF2E.TraitDescriptionPlant",poison:"PF2E.TraitDescriptionPoison",polymorph:"PF2E.TraitDescriptionPolymorph",poppet:"PF2E.TraitDescriptionPoppet",portable:"PF2E.TraitDescriptionPortable",positive:"PF2E.TraitDescriptionPositive",possession:"PF2E.TraitDescriptionPossession",potion:"PF2E.TraitDescriptionPotion",precious:"PF2E.TraitDescriptionPrecious",prediction:"PF2E.TraitDescriptionPrediction",press:"PF2E.TraitDescriptionPress",primal:"PF2E.TraitDescriptionPrimal",propulsive:"PF2E.TraitDescriptionPropulsive",psyche:"PF2E.TraitDescriptionPsyche",psychic:"PF2E.TraitDescriptionPsychic",rage:"PF2E.TraitDescriptionRage",ranger:"PF2E.TraitDescriptionRanger",...values_1.RANGE_TRAITS.reduce(((descriptions,trait)=>mergeObject(descriptions,{[trait]:"PF2E.TraitDescriptionRange"})),{}),"ranged-trip":"PF2E.TraitDescriptionRangedTrip",rare:"PF2E.TraitDescriptionRare",ratfolk:"PF2E.TraitDescriptionRatfolk",reach:"PF2E.TraitDescriptionReach","reach-0":"PF2E.TraitDescriptionReach","reach-10":"PF2E.TraitDescriptionReach","reach-100":"PF2E.TraitDescriptionReach","reach-1000":"PF2E.TraitDescriptionReach","reach-15":"PF2E.TraitDescriptionReach","reach-20":"PF2E.TraitDescriptionReach","reach-25":"PF2E.TraitDescriptionReach","reach-30":"PF2E.TraitDescriptionReach","reach-40":"PF2E.TraitDescriptionReach","reach-50":"PF2E.TraitDescriptionReach","reach-60":"PF2E.TraitDescriptionReach",reflection:"PF2E.TraitDescriptionReflection",reload:"PF2E.TraitDescriptionReload","reload-0":"PF2E.TraitDescriptionReload","reload-1":"PF2E.TraitDescriptionReload","reload-1-min":"PF2E.TraitDescriptionReload","reload-2":"PF2E.TraitDescriptionReload",repeating:"PF2E.TraitDescriptionRepeating",resonant:"PF2E.TraitDescriptionResonant",revelation:"PF2E.TraitDescriptionRevelation",rogue:"PF2E.TraitDescriptionRogue",saggorak:"PF2E.TraitDescriptionSaggorak","scatter-10":"PF2E.TraitDescriptionScatter","scatter-15":"PF2E.TraitDescriptionScatter","scatter-5":"PF2E.TraitDescriptionScatter",scroll:"PF2E.TraitDescriptionScroll",scrying:"PF2E.TraitDescriptionScrying",secret:"PF2E.TraitDescriptionSecret",shadow:"PF2E.TraitDescriptionShadow",shisk:"PF2E.TraitDescriptionShisk",shoony:"PF2E.TraitDescriptionShoony",shove:"PF2E.TraitDescriptionShove",skeleton:"PF2E.TraitDescriptionSkeleton",skill:"PF2E.TraitDescriptionSkill",sleep:"PF2E.TraitDescriptionSleep",snare:"PF2E.TraitDescriptionSnare",social:"PF2E.TraitDescriptionSocial",sonic:"PF2E.TraitDescriptionSonic",sorcerer:"PF2E.TraitDescriptionSorcerer",spellheart:"PF2E.TraitDescriptionSpellheart",spellshot:"PF2E.TraitNoDescription",splash:"PF2E.TraitDescriptionSplash","splash-10":"PF2E.TraitDescriptionSplash10",sprite:"PF2E.TraitDescriptionSprite",staff:"PF2E.TraitDescriptionStaff",stance:"PF2E.TraitDescriptionStance",steam:"PF2E.TraitDescriptionSteam",strix:"PF2E.TraitDescriptionStrix",structure:"PF2E.TraitDescriptionStructure",suli:"PF2E.TraitDescriptionSuli",summon:"PF2E.TraitDescriptionSummon",summoned:"PF2E.TraitDescriptionSummoned",summoner:"PF2E.TraitDescriptionSummoner",swashbuckler:"PF2E.TraitDescriptionSwashbuckler",sweep:"PF2E.TraitDescriptionSweep",sylph:"PF2E.TraitDescriptionSylph",talisman:"PF2E.TraitDescriptionTalisman",tattoo:"PF2E.TraitDescriptionTattoo",tech:"PF2E.TraitDescriptionTech",telepathy:"PF2E.TraitDescriptionTelepathy",teleportation:"PF2E.TraitDescriptionTeleportation",tengu:"PF2E.TraitDescriptionTengu",tethered:"PF2E.TraitDescriptionTethered",thaumaturge:"PF2E.TraitDescriptionThaumaturge",thrown:"PF2E.TraitDescriptionThrown","thrown-10":"PF2E.TraitDescriptionThrown","thrown-100":"PF2E.TraitDescriptionThrown","thrown-15":"PF2E.TraitDescriptionThrown","thrown-20":"PF2E.TraitDescriptionThrown","thrown-200":"PF2E.TraitDescriptionThrown","thrown-25":"PF2E.TraitDescriptionThrown","thrown-30":"PF2E.TraitDescriptionThrown","thrown-40":"PF2E.TraitDescriptionThrown","thrown-50":"PF2E.TraitDescriptionThrown","thrown-60":"PF2E.TraitDescriptionThrown","thrown-80":"PF2E.TraitDescriptionThrown",tiefling:"PF2E.TraitDescriptionTiefling",time:"PF2E.TraitDescriptionTime",transmutation:"PF2E.TraitDescriptionTransmutation",trap:"PF2E.TraitDescriptionTrap",trip:"PF2E.TraitDescriptionTrip","true-name":"PF2E.TraitDescriptionTrueName",twin:"PF2E.TraitDescriptionTwin","two-hand-d10":"PF2E.TraitDescriptionTwoHand","two-hand-d12":"PF2E.TraitDescriptionTwoHand","two-hand-d6":"PF2E.TraitDescriptionTwoHand","two-hand-d8":"PF2E.TraitDescriptionTwoHand",unarmed:"PF2E.TraitDescriptionUnarmed",uncommon:"PF2E.TraitDescriptionUncommon",undine:"PF2E.TraitDescriptionUndine",unique:"PF2E.TraitDescriptionUnique",unstable:"PF2E.TraitDescriptionUnstable",vanara:"PF2E.TraitDescriptionVanara",vishkanya:"PF2E.TraitDescriptionVishkanya","versatile-acid":"PF2E.TraitDescriptionVersatile","versatile-b":"PF2E.TraitDescriptionVersatile","versatile-chaotic":"PF2E.TraitDescriptionVersatile","versatile-cold":"PF2E.TraitDescriptionVersatile","versatile-electricity":"PF2E.TraitDescriptionVersatile","versatile-evil":"PF2E.TraitDescriptionVersatile","versatile-fire":"PF2E.TraitDescriptionVersatile","versatile-force":"PF2E.TraitDescriptionVersatile","versatile-good":"PF2E.TraitDescriptionVersatile","versatile-lawful":"PF2E.TraitDescriptionVersatile","versatile-negative":"PF2E.TraitDescriptionVersatile","versatile-p":"PF2E.TraitDescriptionVersatile","versatile-positive":"PF2E.TraitDescriptionVersatile","versatile-s":"PF2E.TraitDescriptionVersatile","versatile-sonic":"PF2E.TraitDescriptionVersatile",virulent:"PF2E.TraitDescriptionVirulent",visual:"PF2E.TraitDescriptionVisual","volley-20":"PF2E.TraitDescriptionVolley","volley-30":"PF2E.TraitDescriptionVolley","volley-50":"PF2E.TraitDescriptionVolley",wand:"PF2E.TraitDescriptionWand",water:"PF2E.TraitDescriptionWater",witch:"PF2E.TraitDescriptionWitch",wizard:"PF2E.TraitDescriptionWizard",abysium:"PF2E.PreciousMaterialAbysiumDescription",adamantine:"PF2E.PreciousMaterialAdamantineDescription",coldIron:"PF2E.PreciousMaterialColdIronDescription",darkwood:"PF2E.PreciousMaterialDarkwoodDescription",djezet:"PF2E.PreciousMaterialDjezetDescription",dragonhide:"PF2E.PreciousMaterialDragonhideDescription","grisantian-pelt":"PF2E.PreciousMaterialGrisantianPeltDescription",inubrix:"PF2E.PreciousMaterialInubrixDescription",mithral:"PF2E.PreciousMaterialMithralDescription",noqual:"PF2E.PreciousMaterialNoqualDescription",orichalcum:"PF2E.PreciousMaterialOrichalcumDescription",siccatite:"PF2E.PreciousMaterialSiccatiteDescription",silver:"PF2E.PreciousMaterialSilverDescription","sisterstone-dusk":"PF2E.PreciousMaterialSisterstoneDescription","sisterstone-scarlet":"PF2E.PreciousMaterialSisterstoneDescription",sovereignSteel:"PF2E.PreciousMaterialSovereignSteelDescription",warpglass:"PF2E.PreciousMaterialWarpglassDescription"},meleeWeaponGroups={axe:"PF2E.WeaponGroupAxe",brawling:"PF2E.WeaponGroupBrawling",club:"PF2E.WeaponGroupClub",dart:"PF2E.WeaponGroupDart",flail:"PF2E.WeaponGroupFlail",hammer:"PF2E.WeaponGroupHammer",knife:"PF2E.WeaponGroupKnife",pick:"PF2E.WeaponGroupPick",polearm:"PF2E.WeaponGroupPolearm",shield:"PF2E.WeaponGroupShield",spear:"PF2E.WeaponGroupSpear",sword:"PF2E.WeaponGroupSword"},weaponGroups={...meleeWeaponGroups,bomb:"PF2E.WeaponGroupBomb",bow:"PF2E.WeaponGroupBow",firearm:"PF2E.WeaponGroupFirearm",sling:"PF2E.WeaponGroupSling"},deityDomains=Object.keys(en_json_1.default.PF2E.Item.Deity.Domain).reduce(((domains,key)=>{const slug=(0,_util_1.sluggify)(key),casedKey=(0,_util_1.sluggify)(key,{camel:"bactrian"});return{...domains,[slug]:{label:`PF2E.Item.Deity.Domain.${casedKey}.Label`,description:`PF2E.Item.Deity.Domain.${casedKey}.Description`}}}),{});exports.PF2ECONFIG={chatDamageButtonShieldToggle:!1,statusEffects:{lastIconTheme:"default",iconDir:"systems/pf2e/icons/conditions/",conditions:tokenHUDConditions},levels:{1:"PF2E.Level1",2:"PF2E.Level2",3:"PF2E.Level3",4:"PF2E.Level4",5:"PF2E.Level5",6:"PF2E.Level6",7:"PF2E.Level7",8:"PF2E.Level8",9:"PF2E.Level9",10:"PF2E.Level10",11:"PF2E.Level11",12:"PF2E.Level12",13:"PF2E.Level13",14:"PF2E.Level14",15:"PF2E.Level15",16:"PF2E.Level16",17:"PF2E.Level17",18:"PF2E.Level18",19:"PF2E.Level19",20:"PF2E.Level20"},abilities:{str:"PF2E.AbilityStr",dex:"PF2E.AbilityDex",con:"PF2E.AbilityCon",int:"PF2E.AbilityInt",wis:"PF2E.AbilityWis",cha:"PF2E.AbilityCha"},attributes:{perception:"PF2E.PerceptionLabel",stealth:"PF2E.StealthLabel",initiative:"PF2E.PerceptionLabel"},dcAdjustments:{"incredibly easy":"PF2E.DCAdjustmentIncrediblyEasy","very easy":"PF2E.DCAdjustmentVeryEasy",easy:"PF2E.DCAdjustmentEasy",normal:"PF2E.DCAdjustmentNormal",hard:"PF2E.DCAdjustmentHard","very hard":"PF2E.DCAdjustmentVeryHard","incredibly hard":"PF2E.DCAdjustmentIncrediblyHard"},skills:{acr:"PF2E.SkillAcr",arc:"PF2E.SkillArc",ath:"PF2E.SkillAth",cra:"PF2E.SkillCra",dec:"PF2E.SkillDec",dip:"PF2E.SkillDip",itm:"PF2E.SkillItm",med:"PF2E.SkillMed",nat:"PF2E.SkillNat",occ:"PF2E.SkillOcc",prf:"PF2E.SkillPrf",rel:"PF2E.SkillRel",soc:"PF2E.SkillSoc",ste:"PF2E.SkillSte",sur:"PF2E.SkillSur",thi:"PF2E.SkillThi"},martialSkills:{unarmored:"PF2E.MartialUnarmored",light:"PF2E.MartialLight",medium:"PF2E.MartialMedium",heavy:"PF2E.MartialHeavy",simple:"PF2E.MartialSimple",martial:"PF2E.MartialMartial",advanced:"PF2E.MartialAdvanced",unarmed:"PF2E.MartialUnarmed"},saves:{fortitude:"PF2E.SavesFortitude",reflex:"PF2E.SavesReflex",will:"PF2E.SavesWill"},savingThrowDefaultAbilities:{fortitude:"con",reflex:"dex",will:"wis"},currencies:{pp:"PF2E.CurrencyPP",gp:"PF2E.CurrencyGP",sp:"PF2E.CurrencySP",cp:"PF2E.CurrencyCP"},preciousMaterialGrades:{low:"PF2E.PreciousMaterialLowGrade",standard:"PF2E.PreciousMaterialStandardGrade",high:"PF2E.PreciousMaterialHighGrade"},preciousMaterials:traits_1.preciousMaterials,armorPotencyRunes:{1:"PF2E.ArmorPotencyRune1",2:"PF2E.ArmorPotencyRune2",3:"PF2E.ArmorPotencyRune3",4:"PF2E.ArmorPotencyRune4"},armorResiliencyRunes:{resilient:"PF2E.ArmorResilientRune",greaterResilient:"PF2E.ArmorGreaterResilientRune",majorResilient:"PF2E.ArmorMajorResilientRune"},armorPropertyRunes:{ready:"PF2E.ArmorPropertyRuneReady",slick:"PF2E.ArmorPropertyRuneSlick",shadow:"PF2E.ArmorPropertyRuneShadow",glamered:"PF2E.ArmorPropertyRuneGlamered",acidResistant:"PF2E.ArmorPropertyRuneAcidResistant",coldResistant:"PF2E.ArmorPropertyRuneColdResistant",electricityResistant:"PF2E.ArmorPropertyRuneElectricityResistant",fireResistant:"PF2E.ArmorPropertyRuneFireResistant",greaterSlick:"PF2E.ArmorPropertyRuneGreaterSlick",invisibility:"PF2E.ArmorPropertyRuneInvisibility",sinisterKnight:"PF2E.ArmorPropertyRuneSinisterKnight",greaterDread:"PF2E.ArmorPropertyRuneGreaterDread",greaterReady:"PF2E.ArmorPropertyRuneGreaterReady",greaterShadow:"PF2E.ArmorPropertyRuneGreaterShadow",greaterInvisibility:"PF2E.ArmorPropertyRuneGreaterInvisibility",greaterAcidResistant:"PF2E.ArmorPropertyRuneGreaterAcidResistant",greaterColdResistant:"PF2E.ArmorPropertyRuneGreaterColdResistant",greaterElectricityResistant:"PF2E.ArmorPropertyRuneGreaterElectricityResistant",greaterFireResistant:"PF2E.ArmorPropertyRuneGreaterFireResistant",fortification:"PF2E.ArmorPropertyRuneFortification",winged:"PF2E.ArmorPropertyRuneWinged",rockBraced:"PF2E.ArmorPropertyRuneRockBraced",soaring:"PF2E.ArmorPropertyRuneSoaring",antimagic:"PF2E.ArmorPropertyRuneAntimagic",majorSlick:"PF2E.ArmorPropertyRuneMajorSlick",ethereal:"PF2E.ArmorPropertyRuneEthereal",majorShadow:"PF2E.ArmorPropertyRuneMajorShadow",moderateDread:"PF2E.ArmorPropertyRuneModerateDread",greaterFortification:"PF2E.ArmorPropertyRuneGreaterFortification",greaterWinged:"PF2E.ArmorPropertyRuneGreaterWinged",deathless:"PF2E.ArmorPropertyRuneDeathless",dread:"PF2E.ArmorPropertyRuneDread",bitter:"PF2E.ArmorPropertyRuneBitter",stanching:"PF2E.ArmorPropertyRuneStanching",greaterStanching:"PF2E.ArmorPropertyRuneGreaterStanching",majorStanching:"PF2E.ArmorPropertyRuneMajorStanching",trueStanching:"PF2E.ArmorPropertyRuneTrueStanching",implacable:"PF2E.ArmorPropertyRuneImplacable"},accessoryPropertyRunes:{called:"PF2E.AccessoryPropertyRuneCalled",dragonsBreath:"PF2E.AccessoryPropertyRuneDragonsBreath",paired:"PF2E.AccessoryPropertyRunePaired",greaterPaired:"PF2E.AccessoryPropertyRuneGreaterPaired",majorPaired:"PF2E.AccessoryPropertyRuneMajorPaired",presentable:"PF2E.AccessoryPropertyRunePresentable",snagging:"PF2E.AccessoryPropertyRuneSnagging",softLanding:"PF2E.AccessoryPropertyRuneSoftLanding",spellBastion:"PF2E.AccessoryPropertyRuneSpellBastion",windCatcher:"PF2E.AccessoryPropertyRuneWindCatcher",greaterWindCatcher:"PF2E.AccessoryPropertyRuneGreaterWindCatcher"},weaponPotencyRunes:{1:"PF2E.WeaponPotencyRune1",2:"PF2E.WeaponPotencyRune2",3:"PF2E.WeaponPotencyRune3",4:"PF2E.WeaponPotencyRune4"},weaponStrikingRunes:{striking:"PF2E.ArmorStrikingRune",greaterStriking:"PF2E.ArmorGreaterStrikingRune",majorStriking:"PF2E.ArmorMajorStrikingRune"},weaponPropertyRunes,damageTraits:traits_1.damageTraits,damageTypes,damageSubtypes:{persistent:"PF2E.ConditionTypePersistentShort",splash:"PF2E.TraitSplash"},damageCategories,resistanceTypes,stackGroups:{arrows:"PF2E.StackGroupArrows",bolts:"PF2E.StackGroupBolts",slingBullets:"PF2E.StackGroupSlingBullets",blowgunDarts:"PF2E.StackGroupBlowgunDarts",woodenTaws:"PF2E.StackGroupWoodenTaws",rounds5:"PF2E.StackGroupRounds5",rounds10:"PF2E.StackGroupRounds10",rations:"PF2E.StackGroupRations",coins:"PF2E.StackGroupCoins",gems:"PF2E.StackGroupGems",sacks:"PF2E.StackGroupSacks"},weaknessTypes,weaponDamage:{bludgeoning:"PF2E.TraitBludgeoning",piercing:"PF2E.TraitPiercing",slashing:"PF2E.TraitSlashing",modular:"PF2E.TraitModular"},healingTypes:{healing:"PF2E.TraitHealing",temphp:"PF2E.HealingTypeTemporaryHealing"},weaponCategories:{simple:"PF2E.WeaponTypeSimple",martial:"PF2E.WeaponTypeMartial",advanced:"PF2E.WeaponTypeAdvanced",unarmed:"PF2E.WeaponTypeUnarmed"},weaponGroups,meleeWeaponGroups,baseWeaponTypes,equivalentWeapons:{"composite-longbow":"longbow","composite-shortbow":"shortbow","big-boom-gun":"hand-cannon","spoon-gun":"hand-cannon"},weaponDescriptions:{club:"PF2E.WeaponDescriptionClub",knife:"PF2E.WeaponDescriptionKnife",brawling:"PF2E.WeaponDescriptionBrawling",spear:"PF2E.WeaponDescriptionSpear",sword:"PF2E.WeaponDescriptionSword",axe:"PF2E.WeaponDescriptionAxe",flail:"PF2E.WeaponDescriptionFlail",polearm:"PF2E.WeaponDescriptionPolearm",pick:"PF2E.WeaponDescriptionPick",hammer:"PF2E.WeaponDescriptionHammer",shield:"PF2E.WeaponDescriptionShield",dart:"PF2E.WeaponDescriptionDart",bow:"PF2E.WeaponDescriptionBow",sling:"PF2E.WeaponDescriptionSling",bomb:"PF2E.WeaponDescriptionBomb"},usageTraits:{"affixed-to-a-ranged-weapon":"PF2E.TraitAffixedToARangedWeapon","affixed-to-a-shield":"PF2E.TraitAffixedToAShield","affixed-to-a-two-handed-firearm-or-crossbow":"PF2E.TraitAffixededToATwoHandedFirearmOrCrossbow","affixed-to-armor":"PF2E.TraitAffixedToArmor","affixed-to-medium-heavy-armor":"PF2E.TraitAffixedToMediumHeavyArmor","affixed-to-armor-or-a-weapon":"PF2E.TraitAffixedToArmorOrAWeapon","affixed-to-armor-or-travelers-clothing":"PF2E.TraitAffixedToArmorOrTravelersClothing","affixed-to-crossbow-or-firearm":"PF2E.TraitAffixededToCrossbowOrFirearm","affixed-to-firearm":"PF2E.TraitAffixededToFirearm","affixed-to-firearm-with-a-reload-of-1":"PF2E.TraitAffixededToFirearmWithAReloadOf1","affixed-to-firearm-with-the-kickback-trait":"PF2E.TraitAffixededToFirearmWithTheKickbackTrait","affixed-to-headgear":"PF2E.TraitAffixedToHeadgear","affixed-to-weapon":"PF2E.TraitAffixedToWeapon","applied-to-a-wind-powered-vehicle":"PF2E.TraitAppliedToAWindPoweredVehicle","applied-to-any-item-of-light-or-negligible-bulk":"PF2E.TraitAppliedToAnyItemOfLightOrNegligibleBulk","applied-to-any-visible-article-of-clothing":"PF2E.TraitAppliedToAnyVisibleArticleOfClothing","applied-to-belt-cape-cloak-or-scarf":"PF2E.TraitAppliedToBeltCapeCloakOrScarf","applied-to-boots-cape-cloak-or-umbrella":"PF2E.TraitAppliedToBootsCapeCloakOrUmbrella","applied-to-dueling-cape-or-shield":"PF2E.TraitAppliedToDuelingCapeOrShield","applied-to-buckler-shield":"PF2E.TraitAppliedToBucklerShield","applied-to-shield":"PF2E.TraitAppliedToShield","attached-to-a-thrown-weapon":"PF2E.TraitAttachedToAThrownWeapon","attached-to-crossbow-or-firearm":"PF2E.TraitAttachedToCrossbowOrFirearm","attached-to-crossbow-or-firearm-firing-mechanism":"PF2E.TraitAttachedToCrossbowOrFirearmFiringMechanism","attached-to-crossbow-or-firearm-scope":"PF2E.TraitAttachedToCrossbowOrFirearmScope","attached-to-firearm":"PF2E.TraitAttachedToFirearm","attached-to-firearm-scope":"PF2E.TraitAttachedToFirearmScope",bonded:"PF2E.TraitBonded","each-rune-applied-to-a-separate-item-that-has-pockets":"PF2E.TraitEachRuneAppliedToASeparateItemThatHasPockets","etched-onto-a-weapon":"PF2E.TraitEtchedOntoAWeapon","etched-onto-armor":"PF2E.TraitEtchedOntoArmor","etched-onto-clan-dagger":"PF2E.TraitEtchedOntoAClanDagger","etched-onto-lm-nonmetal-armor":"PF2E.TraitEtchedOntoLightMedNMArmor","etched-onto-med-heavy-armor":"PF2E.TraitEtchedOntoMedHeavyArmor","etched-onto-melee-weapon":"PF2E.TraitEtchedOntoAMeleeWeapon","etched-onto-thrown-weapon":"PF2E.TraitEtchedOntoAThrownWeapon","held-in-one-hand":"PF2E.TraitHeldOneHand","held-in-two-hands":"PF2E.TraitHeldTwoHands",other:"Other","sewn-into-clothing":"PF2E.TraitSewnIntoClothing","tattooed-on-the-body":"PF2E.TraitTattooedOnTheBody",worn:"PF2E.TraitWorn",wornamulet:"PF2E.TraitWornAmulet",wornanklets:"PF2E.TraitWornAnklets",wornarmbands:"PF2E.TraitWornArmbands",wornbackpack:"PF2E.TraitWornBackpack",wornbarding:"PF2E.TraitWornBarding",wornbelt:"PF2E.TraitWornBelt",wornbeltpouch:"PF2E.TraitWornBeltPouch",wornbracelet:"PF2E.TraitWornBracelet",wornbracers:"PF2E.TraitWornBracers",worncirclet:"PF2E.TraitWornCirclet",worncloak:"PF2E.TraitWornCloak",wornclothing:"PF2E.TraitWornClothing",worncollar:"PF2E.TraitWornCollar",worncrown:"PF2E.TraitWornCrown",wornepaulet:"PF2E.TraitWornEpaulet",worneyepiece:"PF2E.TraitWornEyepiece",worngarment:"PF2E.TraitWornGarment",worngloves:"PF2E.TraitWornGloves",wornheadwear:"PF2E.TraitWornHeadwear",wornhorseshoes:"PF2E.TraitWornHorseshoes",wornmask:"PF2E.TraitWornMask",wornnecklace:"PF2E.TraitWornNecklace",wornonbelt:"PF2E.TraitWornOnBelt",wornoronehand:"PF2E.TraitWornOrOneHand",wornring:"PF2E.TraitWornRing",wornsaddle:"PF2E.TraitWornSaddle",wornshoes:"PF2E.TraitWornShoes",wornwrist:"PF2E.TraitWornOnWrists","worn-and-attached-to-two-weapons":"PF2E.TraitWornAndAttachedToTwoWeapons","worn-under-armor":"PF2E.TraitWornUnderArmor"},rarityTraits:{common:"PF2E.TraitCommon",uncommon:"PF2E.TraitUncommon",rare:"PF2E.TraitRare",unique:"PF2E.TraitUnique"},magicTraditions:traits_1.magicTraditions,spellOtherTraits:traits_1.spellOtherTraits,magicSchools:traits_1.magicSchools,classTraits:traits_1.classTraits,ancestryTraits:traits_1.ancestryTraits,ancestryItemTraits:traits_1.ancestryItemTraits,deityDomains,weaponTraits:traits_1.weaponTraits,otherWeaponTags:traits_1.otherWeaponTags,armorTraits:traits_1.armorTraits,otherArmorTags:traits_1.otherArmorTags,equipmentTraits:traits_1.equipmentTraits,consumableTraits:traits_1.consumableTraits,otherConsumableTags:traits_1.otherConsumableTags,actionTraits:traits_1.actionTraits,spellTraits:traits_1.spellTraits,featTraits:traits_1.featTraits,creatureTraits:traits_1.creatureTraits,monsterTraits:traits_1.creatureTraits,npcAttackTraits:traits_1.npcAttackTraits,hazardTraits:traits_1.hazardTraits,vehicleTraits:traits_1.vehicleTraits,traitsDescriptions,weaponHands:{1:"PF2E.WeaponHands1","1+":"PF2E.WeaponHands1Plus",2:"PF2E.WeaponHands2"},itemBonuses:{"-2":"PF2E.ItemBonusMinus2",0:"PF2E.ItemBonus0",1:"PF2E.ItemBonus1",2:"PF2E.ItemBonus2",3:"PF2E.ItemBonus3"},damageDice:{0:"0",1:"1",2:"2",3:"3",4:"4"},damageDie:{d4:"PF2E.DamageDieD4",d6:"PF2E.DamageDieD6",d8:"PF2E.DamageDieD8",d10:"PF2E.DamageDieD10",d12:"PF2E.DamageDieD12"},weaponMAP:{1:"-1/-2",2:"-2/-4",3:"-3/-6",4:"-4/-8",5:"-5/-10"},weaponReload:{"-":"—",0:"0",1:"1",2:"2",3:"3",10:"PF2E.Item.Weapon.ReloadOneMinute"},armorTypes:{unarmored:"PF2E.ArmorTypeUnarmored",light:"PF2E.ArmorTypeLight",medium:"PF2E.ArmorTypeMedium",heavy:"PF2E.ArmorTypeHeavy",shield:"PF2E.ArmorTypeShield"},armorGroups:{composite:"PF2E.ArmorGroupComposite",chain:"PF2E.ArmorGroupChain",cloth:"PF2E.ArmorGroupCloth",leather:"PF2E.ArmorGroupLeather",plate:"PF2E.ArmorGroupPlate"},consumableTypes:{ammo:"PF2E.ConsumableTypeAmmo",catalyst:"PF2E.TraitCatalyst",drug:"PF2E.ConsumableTypeDrug",elixir:"PF2E.ConsumableTypeElixir",fulu:"PF2E.TraitFulu",gadget:"PF2E.TraitGadget",oil:"PF2E.ConsumableTypeOil",other:"PF2E.ConsumableTypeOther",mutagen:"PF2E.ConsumableTypeMutagen",poison:"PF2E.ConsumableTypePoison",potion:"PF2E.ConsumableTypePotion",scroll:"PF2E.ConsumableTypeScroll",snare:"PF2E.ConsumableTypeSnare",talisman:"PF2E.ConsumableTypeTalisman",tool:"PF2E.ConsumableTypeTool",wand:"PF2E.ConsumableTypeWand"},preparationType:{prepared:"PF2E.PreparationTypePrepared",spontaneous:"PF2E.PreparationTypeSpontaneous",innate:"PF2E.PreparationTypeInnate",focus:"PF2E.SpellCategoryFocus",ritual:"PF2E.SpellCategoryRitual",items:"PF2E.PreparationTypeItems"},areaTypes:{burst:"PF2E.AreaTypeBurst",cone:"PF2E.AreaTypeCone",cube:"PF2E.AreaTypeCube",emanation:"PF2E.AreaTypeEmanation",line:"PF2E.AreaTypeLine",square:"PF2E.AreaTypeSquare"},areaSizes:{5:"PF2E.AreaSize5",10:"PF2E.AreaSize10",15:"PF2E.AreaSize15",20:"PF2E.AreaSize20",25:"PF2E.AreaSize25",30:"PF2E.AreaSize30",40:"PF2E.AreaSize40",45:"PF2E.AreaSize45",50:"PF2E.AreaSize50",60:"PF2E.AreaSize60",75:"PF2E.AreaSize75",80:"PF2E.AreaSize80",90:"PF2E.AreaSize90",100:"PF2E.AreaSize100",120:"PF2E.AreaSize120",360:"PF2E.AreaSize360",500:"PF2E.AreaSize500",1e3:"PF2E.AreaSize1000",1320:"PF2E.AreaSizeQuarterMile",5280:"PF2E.AreaSize1Mile"},alignments:{LG:"PF2E.AlignmentLG",NG:"PF2E.AlignmentNG",CG:"PF2E.AlignmentCG",LN:"PF2E.AlignmentLN",N:"PF2E.AlignmentN",CN:"PF2E.AlignmentCN",LE:"PF2E.AlignmentLE",NE:"PF2E.AlignmentNE",CE:"PF2E.AlignmentCE"},alignmentTraits:traits_1.alignmentTraits,attitude:{hostile:"PF2E.Attitudes.Hostile",unfriendly:"PF2E.Attitudes.Unfriendly",indifferent:"PF2E.Attitudes.Indifferent",friendly:"PF2E.Attitudes.Friendly",helpful:"PF2E.Attitudes.Helpful"},skillList:{acrobatics:"PF2E.SkillAcrobatics",arcana:"PF2E.SkillArcana",athletics:"PF2E.SkillAthletics",crafting:"PF2E.SkillCrafting",deception:"PF2E.SkillDeception",diplomacy:"PF2E.SkillDiplomacy",intimidation:"PF2E.SkillIntimidation",medicine:"PF2E.SkillMedicine",nature:"PF2E.SkillNature",occultism:"PF2E.SkillOccultism",performance:"PF2E.SkillPerformance",religion:"PF2E.SkillReligion",society:"PF2E.SkillSociety",stealth:"PF2E.SkillStealth",survival:"PF2E.SkillSurvival",thievery:"PF2E.SkillThievery",lore:"PF2E.SkillLore"},spellComponents:{V:"PF2E.SpellComponentV",S:"PF2E.SpellComponentS",M:"PF2E.SpellComponentM",F:"PF2E.SpellComponentF"},spellCategories:{spell:"PF2E.SpellCategorySpell",focus:"PF2E.SpellCategoryFocus",ritual:"PF2E.SpellCategoryRitual"},spellTypes:{attack:"PF2E.SpellTypeAttack",save:"PF2E.SpellTypeSave",heal:"PF2E.SpellTypeHeal",utility:"PF2E.SpellTypeUtility"},spellLevels:{1:"PF2E.SpellLevel1",2:"PF2E.SpellLevel2",3:"PF2E.SpellLevel3",4:"PF2E.SpellLevel4",5:"PF2E.SpellLevel5",6:"PF2E.SpellLevel6",7:"PF2E.SpellLevel7",8:"PF2E.SpellLevel8",9:"PF2E.SpellLevel9",10:"PF2E.SpellLevel10"},featTypes:{ancestry:"PF2E.FeatTypeAncestry",ancestryfeature:"PF2E.FeatTypeAncestryfeature",class:"PF2E.FeatTypeClass",classfeature:"PF2E.FeatTypeClassfeature",skill:"PF2E.FeatTypeSkill",general:"PF2E.FeatTypeGeneral",archetype:"PF2E.FeatTypeArchetype",bonus:"PF2E.FeatTypeBonus",pfsboon:"PF2E.FeatPFSBoonHeader",deityboon:"PF2E.FeatDeityBoonHeader",curse:"PF2E.FeatCurseHeader"},actionTypes:{action:"PF2E.ActionTypeAction",reaction:"PF2E.ActionTypeReaction",free:"PF2E.ActionTypeFree",passive:"PF2E.ActionTypePassive"},actionsNumber:{1:"PF2E.ActionNumber1",2:"PF2E.ActionNumber2",3:"PF2E.ActionNumber3"},actionCategories:{interaction:"PF2E.ActionCategoryInteraction",defensive:"PF2E.ActionCategoryDefensive",offensive:"PF2E.ActionCategoryOffensive"},frequencies:{PT1M:"PF2E.Duration.PT1M",PT10M:"PF2E.Duration.PT10M",PT1H:"PF2E.Duration.PT1H",PT24H:"PF2E.Duration.PT24H",day:"PF2E.Duration.day",P1W:"PF2E.Duration.P1W"},proficiencyLevels:["PF2E.ProficiencyLevel0","PF2E.ProficiencyLevel1","PF2E.ProficiencyLevel2","PF2E.ProficiencyLevel3","PF2E.ProficiencyLevel4"],actorSizes:{tiny:"PF2E.ActorSizeTiny",sm:"PF2E.ActorSizeSmall",med:"PF2E.ActorSizeMedium",lg:"PF2E.ActorSizeLarge",huge:"PF2E.ActorSizeHuge",grg:"PF2E.ActorSizeGargantuan"},actorTypes:{character:"ACTOR.TypeCharacter",familiar:"ACTOR.TypeFamiliar",hazard:"ACTOR.TypeHazard",loot:"ACTOR.TypeLoot",npc:"ACTOR.TypeNpc",vehicle:"ACTOR.TypeVehicle"},speedTypes:{swim:"PF2E.SpeedTypesSwim",climb:"PF2E.SpeedTypesClimb",fly:"PF2E.SpeedTypesFly",burrow:"PF2E.SpeedTypesBurrow"},prerequisitePlaceholders:{prerequisite1:"PF2E.Prerequisite1",prerequisite2:"PF2E.Prerequisite2",prerequisite3:"PF2E.Prerequisite3",prerequisite4:"PF2E.Prerequisite4",prerequisite5:"PF2E.Prerequisite5"},senses:{darkvision:"PF2E.Actor.Creature.Sense.Type.Darkvision",echolocation:"PF2E.Actor.Creature.Sense.Type.Echolocation",greaterDarkvision:"PF2E.Actor.Creature.Sense.Type.GreaterDarkvision",lifesense:"PF2E.Actor.Creature.Sense.Type.Lifesense",lowLightVision:"PF2E.Actor.Creature.Sense.Type.LowLightVision",motionsense:"PF2E.Actor.Creature.Sense.Type.Motionsense",scent:"PF2E.Actor.Creature.Sense.Type.Scent",seeInvisibility:"PF2E.Actor.Creature.Sense.Type.SeeInvisibility",spiritsense:"PF2E.Actor.Creature.Sense.Type.Spiritsense",tremorsense:"PF2E.Actor.Creature.Sense.Type.Tremorsense",wavesense:"PF2E.Actor.Creature.Sense.Type.Wavesense"},senseAcuity:{imprecise:"PF2E.Actor.Creature.Sense.Acuity.Imprecise",precise:"PF2E.Actor.Creature.Sense.Acuity.Precise",vague:"PF2E.Actor.Creature.Sense.Acuity.Vague"},bulkTypes:{L:"PF2E.BulkTypeLight",1:"1",2:"2",3:"3",4:"4",5:"5",6:"6",7:"7",8:"8",9:"9",10:"10",11:"11",12:"12",13:"13",14:"14",15:"15",16:"16",17:"17",18:"18",19:"19",20:"20",21:"21",22:"22",23:"23",24:"24",25:"25",26:"26",27:"27",28:"28",29:"29",30:"30",31:"31",32:"32",33:"33",34:"34",35:"35",36:"36",37:"37",38:"38",39:"39",40:"40",41:"41",42:"42",43:"43",44:"44",45:"45",46:"46",47:"47",48:"48",49:"49",50:"50"},conditionTypes,pfsFactions:{EA:"PF2E.PFS.Factions.EA",GA:"PF2E.PFS.Factions.GA",HH:"PF2E.PFS.Factions.HH",VS:"PF2E.PFS.Factions.VS",RO:"PF2E.PFS.Factions.RO",VW:"PF2E.PFS.Factions.VW"},pfsSchools:{none:"PF2E.PFS.School.None",scrolls:"PF2E.PFS.School.Scrolls",spells:"PF2E.PFS.School.Spells",swords:"PF2E.PFS.School.Swords"},immunityTypes,languages:{common:"PF2E.LanguageCommon",draconic:"PF2E.LanguageDraconic",dwarven:"PF2E.LanguageDwarven",elven:"PF2E.LanguageElven",gnomish:"PF2E.LanguageGnomish",goblin:"PF2E.LanguageGoblin",halfling:"PF2E.LanguageHalfling",jotun:"PF2E.LanguageJotun",orcish:"PF2E.LanguageOrcish",sylvan:"PF2E.LanguageSylvan",undercommon:"PF2E.LanguageUndercommon",ysoki:"PF2E.LanguageYsoki",abyssal:"PF2E.LanguageAbyssal",adlet:"PF2E.LanguageAdlet",aklo:"PF2E.LanguageAklo",akitonian:"PF2E.LanguageAkitonian",alghollthu:"PF2E.LanguageAlghollthu",amurrun:"PF2E.LanguageAmurrun",anadi:"PF2E.LanguageAnadi","ancient-osiriani":"PF2E.LanguageAncientOsiriani",anugobu:"PF2E.LanguageAnugobu",arcadian:"PF2E.LanguageArcadian",aquan:"PF2E.LanguageAquan",arboreal:"PF2E.LanguageArboreal",auran:"PF2E.LanguageAuran",boggard:"PF2E.LanguageBoggard",calda:"PF2E.LanguageCalda",caligni:"PF2E.LanguageCaligni",celestial:"PF2E.LanguageCelestial",cyclops:"PF2E.LanguageCyclops",daemonic:"PF2E.LanguageDaemonic",destrachan:"PF2E.LanguageDestrachan",drooni:"PF2E.LanguageDrooni",dziriak:"PF2E.LanguageDziriak",ekujae:"PF2E.LanguageEkujae",erutaki:"PF2E.LanguageErutaki",formian:"PF2E.LanguageFormian",garundi:"PF2E.LanguageGarundi",girtablilu:"PF2E.LanguageGirtablilu",gnoll:"PF2E.LanguageGnoll",goloma:"PF2E.LanguageGoloma",grippli:"PF2E.LanguageGrippli",hallit:"PF2E.LanguageHallit",hwan:"PF2E.LanguageHwan",iblydan:"PF2E.LanguageIblydan",ignan:"PF2E.LanguageIgnan",ikeshti:"PF2E.LanguageIkeshti",infernal:"PF2E.LanguageInfernal",iruxi:"PF2E.LanguageIruxi",jistkan:"PF2E.LanguageJistkan",jyoti:"PF2E.LanguageJyoti",kaava:"PF2E.LanguageKaava",kashrishi:"PF2E.LanguageKashrishi",kibwani:"PF2E.LanguageKibwani",kitsune:"PF2E.LanguageKitsune",kelish:"PF2E.LanguageKelish",lirgeni:"PF2E.LanguageLirgeni",mahwek:"PF2E.LanguageMahwek",minaten:"PF2E.LanguageMinaten",minkaian:"PF2E.LanguageMinkaian",mwangi:"PF2E.LanguageMwangi",mzunu:"PF2E.LanguageMzunu",nagaji:"PF2E.LanguageNagaji",necril:"PF2E.LanguageNecril",ocotan:"PF2E.LanguageOcotan",okaiyan:"PF2E.LanguageOkaiyan",osiriani:"PF2E.LanguageOsiriani",protean:"PF2E.LanguageProtean",rasu:"PF2E.LanguageRasu",ratajin:"PF2E.LanguageRatajin",razatlani:"PF2E.LanguageRazatlani",requian:"PF2E.LanguageRequian",russian:"PF2E.LanguageRussian",senzar:"PF2E.LanguageSenzar",shadowtongue:"PF2E.LanguageShadowtongue",shobhad:"PF2E.LanguageShobhad",shisk:"PF2E.LanguageShisk",shoanti:"PF2E.LanguageShoanti",shoony:"PF2E.LanguageShoony",skald:"PF2E.LanguageSkald",sphinx:"PF2E.LanguageSphinx",strix:"PF2E.LanguageStrix",taldane:"PF2E.LanguageTaldane",tekritanin:"PF2E.LanguageTekritanin",tengu:"PF2E.LanguageTengu",terran:"PF2E.LanguageTerran",thassilonian:"PF2E.LanguageThassilonian",tien:"PF2E.LanguageTien",utopian:"PF2E.LanguageUtopian",vanara:"PF2E.LanguageVanara",varisian:"PF2E.LanguageVarisian",varki:"PF2E.LanguageVarki",vishkanyan:"PF2E.LanguageVishkanyan",vudrani:"PF2E.LanguageVudrani",wyrwood:"PF2E.LanguageWyrwood",xanmba:"PF2E.LanguageXanmba",androffan:"PF2E.LanguageAndroffan",azlanti:"PF2E.LanguageAzlanti",grioth:"PF2E.LanguageGrioth",kovintal:"PF2E.LanguageKovintal",migo:"PF2E.LanguageMiGo",munavri:"PF2E.LanguageMunavri",samsaran:"PF2E.LanguageSamsaran",sasquatch:"PF2E.LanguageSasquatch",shae:"PF2E.LanguageShae",yithian:"PF2E.LanguageYithian",druidic:"PF2E.LanguageDruidic"},attackEffects:{grab:"PF2E.AttackEffectGrab","improved-grab":"PF2E.AttackEffectImprovedGrab",constrict:"PF2E.AttackEffectConstrict","greater-constrict":"PF2E.AttackEffectGreaterConstrict",knockdown:"PF2E.AttackEffectKnockdown","improved-knockdown":"PF2E.AttackEffectImprovedKnockdown",push:"PF2E.AttackEffectPush","improved-push":"PF2E.AttackEffectImprovedPush",trip:"PF2E.AttackEffectTrip"},worldClock:{AR:{yearOffset:2700},IC:{yearOffset:5200},AD:{yearOffset:-95},CE:{yearOffset:0}},runes:{weapon:{property:{...runes_1.WEAPON_PROPERTY_RUNES}}},monsterAbilities:()=>({"All-Around Vision":{actionType:"passive",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 342</i></a><br>This monster can see in all directions simultaneously, and therefore can\'t be flanked.'},"Aquatic Ambush":{actionType:"action",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 342</i></a><br><b>Requirements</b> The monster is hiding in water and a creature that hasn\'t detected it is within the listed number of feet. <b>Effect</b> The monster moves up to its swim Speed + 10 feet toward the triggering creature, traveling on water and on land. Once the creature is in reach, the monster makes a Strike against it. The creature is <a style="text-decoration:underline" href="https://2e.aonprd.com/Conditions.aspx?ID=16">flat-footed</a> against this Strike.'},"Attack of Opportunity":{actionType:"reaction",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 342</i></a><br><b>Trigger</b> A creature within the monster\'s reach uses a manipulate action or a move action, makes a ranged attack, or leaves a square during a move action it\'s using. <b>Effect</b> The monster attempts a melee Strike against the triggering creature. If the attack is a critical hit and the trigger was a manipulate action, the monster disrupts that action. This Strike doesn\'t count toward the monster\'s multiple attack penalty, and its multiple attack penalty doesn\'t apply to this Strike.'},"At-Will Spells":{actionType:"passive",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 342</i></a><br>The monster can cast its at-will spells any number of times without using up spell slots.'},Aura:{actionType:"passive",actionCost:1,description:"<b>Source</b> <a href=\"https://paizo.com/products/btq01y0m?Pathfinder-Bestiary\" target=\"_blank\" class=\"external-link\"><i>Bestiary pg. 342</i></a><br>A monster's aura automatically affects everything within a specified emanation around that monster. The monster doesn't need to spend actions on the aura; rather, the aura's effects are applied at specific times, such as when a creature ends its turn in the aura or when creatures enter the aura.<br><br> If an aura does nothing but deal damage, its entry lists only the radius, damage, and saving throw. Such auras deal this damage to a creature when the creature enters the aura and when a creature starts its turn in the aura. A creature can take damage from the aura only once per round.<br><br> The GM might determine that a monster's aura doesn't affect its own allies. For example, a creature might be immune to a monster's frightful presence if they have been around each other for a long time."},Buck:{actionType:"reaction",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 342</i></a><br>Most monsters that serve as mounts can attempt to\nbuck off unwanted or annoying riders, but most mounts\nwill not use this reaction against a trusted creature unless\nthe mounts are spooked or mistreated. <b>Trigger</b> A creature\nMounts or uses the Command an Animal action while riding\nthe monster. <b>Effect</b> The triggering creature must succeed\nat a Reflex saving throw against the listed DC or fall off the\ncreature and land prone. If the save is a critical failure, the\ntriggering creature also takes 1d6 bludgeoning damage in\naddition to the normal damage for the fall.'},"Catch Rock":{actionType:"reaction",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 342</i></a><br><b>Requirements</b> The monster must have a free hand but can Release anything it\'s holding as part of this reaction. <b>Trigger</b> The monster is targeted with a thrown rock Strike or a rock would fall on the monster. <b>Effect</b> The monster gains a +4 circumstance bonus to its AC against the triggering attack or to any defense against the falling rock. If the attack misses or the monster successfully defends against the falling rock, the monster catches the rock, takes no damage, and is now holding the rock.'},"Change Shape":{actionType:"action",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 342</i></a><br>(<a style="text-decoration:underline" href="https://2e.aonprd.com/Traits.aspx?ID=32">concentrate</a>, [magical tradition], <a style="text-decoration:underline" href="https://2e.aonprd.com/Traits.aspx?ID=127">polymorph</a>, <a style="text-decoration:underline" href="https://2e.aonprd.com/Traits.aspx?ID=157">transmutation</a>) The monster changes its shape indefinitely. It can use this action again to return to its natural shape or adopt a new shape. Unless otherwise noted, a monster cannot use Change Shape to appear as a specific individual. Using Change Shape counts as creating a disguise for the Impersonate use of Deception. The monster\'s transformation automatically defeats Perception DCs to determine whether the creature is a member of the ancestry or creature type into which it transformed, and it gains a +4 status bonus to its Deception DC to prevent others from seeing through its disguise. Change Shape abilities specify what shapes the monster can adopt. The monster doesn\'t gain any special abilities of the new shape, only its physical form. For example, in each shape, it replaces its normal Speeds and Strikes, and might potentially change its senses or size. Any changes are listed in its stat block.'},"Constant Spells":{actionType:"passive",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 342</i></a><br>A constant spell affects the monster without the monster needing to cast it, and its duration is unlimited. If a constant spell gets counteracted, the monster can reactivate it by spending the normal spellcasting actions the spellrequires.'},Constrict:{actionType:"action",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 342</i></a><br>The monster deals the listed amount of damage to any number of creatures grabbed or restrained by it. Each of those creatures can attempt a basic Fortitude save with the listed DC.'},Coven:{actionType:"passive",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 342</i></a><br>(<a style="text-decoration:underline" href="https://2e.aonprd.com/Traits.aspx?ID=47">divination</a>, <a style="text-decoration:underline" href="https://2e.aonprd.com/Traits.aspx?ID=106">mental</a>, <a style="text-decoration:underline" href="https://2e.aonprd.com/Traits.aspx?ID=120">occult</a>) This monster can form a coven with two or more other creatures who also have the coven ability. This involves performing an 8-hour ceremony with all prospective coven members. After the coven is formed, each of its members gains elite adjustments (page 6), adjusting their levels accordingly. Coven members can sense other members\' locations and conditions by spending a single action, which has the concentrate trait, and can sense what another coven member is sensing as a two-action activity, which has the concentrate trait as well.<br><br> Covens also grant spells and rituals to their members, but these can be cast only in cooperation between three coven members who are all within 30 feet of one another. A coven member can contribute to a coven spell with a single-action spellcasting activity that has a single verbal component. If two coven members have contributed these actions within the last round, a third member can cast a coven spell on her turn by spending the normal spellcasting actions. A coven can cast its coven spells an unlimited number of times but can cast only one coven spell each round. All covens grant the 8th-level <i><a style="text-decoration:underline" href="https://2e.aonprd.com/Spells.aspx?ID=17">baleful polymorph</a></i> spell and all the following spells, which the coven can cast at any level up to 5th: <i><a style="text-decoration:underline" href="https://2e.aonprd.com/Spells.aspx?ID=15">augury</a></i>, <i><a style="text-decoration:underline" href="https://2e.aonprd.com/Spells.aspx?ID=34">charm</a></i>, <i><a style="text-decoration:underline" href="https://2e.aonprd.com/Spells.aspx?ID=39">clairaudience</a></i>, <i><a style="text-decoration:underline" href="https://2e.aonprd.com/Spells.aspx?ID=40">clairvoyance</a></i>, <i><a style="text-decoration:underline" href="https://2e.aonprd.com/Spells.aspx?ID=90">dream message</a></i>, <i><a style="text-decoration:underline" href="https://2e.aonprd.com/Spells.aspx?ID=159">illusory disguise</a></i>, <i><a style="text-decoration:underline" href="https://2e.aonprd.com/Spells.aspx?ID=161">illusory scene</a></i>, <i><a style="text-decoration:underline" href="https://2e.aonprd.com/Spells.aspx?ID=239">prying eye</a></i>, and <i><a style="text-decoration:underline" href="https://2e.aonprd.com/Spells.aspx?ID=329">talking corpse</a></i>. Individual creatures with the coven ability also grant additional spells to any coven they join. A coven can also cast the <i><a style="text-decoration:underline" href="https://2e.aonprd.com/Rituals.aspx?ID=9">control weather</a></i> ritual, with a DC of 23 instead of the standard DC.<br><br> If a coven member leaving the coven or the death of a coven member brings the coven below three members, the remaining members keep their elite adjustments for 24 hours, but without enough members to contribute the necessary actions, they can\'t cast coven spells.'},Darkvision:{actionType:"passive",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 343</i></a><br>A monster with darkvision can see perfectly well in areas of darkness and dim light, though such vision is in black and white only. Some forms of magical darkness, such as a 4th-level <i><a style="text-decoration:underline" href="https://2e.aonprd.com/Spells.aspx?ID=59">darkness</a></i> spell, block normal darkvision. A monster with greater darkvision, however, can see through even these forms of magical darkness.'},Disease:{actionType:"passive",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 343</i></a><br>When a creature is exposed to a monster\'s disease, it attempts a Fortitude save or succumbs to the disease. The level of a disease is the level of the monster in icting the disease. The disease follows the <a style="text-decoration:underline" href="https://2e.aonprd.com/Rules.aspx?ID=361">rules for afflictions</a>.'},Engulf:{actionType:"action",actionCost:2,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 343</i></a><br>The monster Strides up to double its Speed and can move through the spaces of any creatures in its path. Any creature of the monster\'s size or smaller whose space the monster moves through can attempt a Reflex save with the listed DC to avoid being engulfed. A creature unable to act automatically critically fails this save. If a creature succeeds at its save, it can choose to be either pushed aside (out of the monster\'s path) or pushed in front of the monster to the end of the monster\'s movement. The monster can attempt to Engulf the same creature only once in a single use of Engulf. The monster can contain as many creatures as can fit in its space.<br><br> A creature that fails its save is pulled into the monster\'s body. It is grabbed, is <a style="text-decoration:underline" href="https://2e.aonprd.com/Conditions.aspx?ID=35">slowed 1</a>, and has to hold its breath or start suffocating. The creature takes the listed amount of damage when first engulfed and at the end of each of its turns while it\'s engulfed. An engulfed creature can get free by Escaping against the listed escape DC. An engulfed creature can attack the monster engulfing it, but only with unarmed attacks or with weapons of light Bulk or less. The engulfing creature is <a style="text-decoration:underline" href="https://2e.aonprd.com/Conditions.aspx?ID=16">flat-footed</a> against the attack. If the monster takes piercing or slashing damage equaling or exceeding the listed Rupture value from a single attack or spell, the engulfed creature cuts itself free. A creature that gets free by either method can immediately breathe and exits the swallowing monster\'s space.<br><br> If the monster dies, all creatures it has engulfed are automatically released as the monster\'s form loses cohesion.'},"Fast Healing":{actionType:"passive",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 343</i></a><br>A monster with this ability regains the given number of Hit Points each round at the beginning of its turn.'},Ferocity:{actionType:"reaction",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 343</i></a><br><b>Trigger</b> The monster is reduced to 0 HP. <b>Effect</b> The monster avoids being knocked out and remains at 1 HP, but its <a style="text-decoration:underline" href="https://2e.aonprd.com/Conditions.aspx?ID=42">wounded</a> value increases by 1. When it is <a style="text-decoration:underline" href="https://2e.aonprd.com/Conditions.aspx?ID=42">wounded 3</a>, it can no longer use this ability.'},"Frightful Presence":{actionType:"passive",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 343</i></a><br>(<a style="text-decoration:underline" href="https://2e.aonprd.com/Traits.aspx?ID=206">aura</a>, <a style="text-decoration:underline" href="https://2e.aonprd.com/Traits.aspx?ID=60">emotion</a>, <a style="text-decoration:underline" href="https://2e.aonprd.com/Traits.aspx?ID=68">fear</a>, <a style="text-decoration:underline" href="https://2e.aonprd.com/Traits.aspx?ID=106">mental</a>) A creature that first enters the area must attempt a Will save. Regardless of the result of the saving throw, the creature is temporarily immune to this monster\'s Frightful Presence for 1 minute.<br><br> <b>Critical Success</b> The creature is unaffected by the presence.<br> <b>Success</b> The creature is <a style="text-decoration:underline" href="https://2e.aonprd.com/Conditions.aspx?ID=19">frightened 1</a>.<br> <b>Failure</b> The creature is <a style="text-decoration:underline" href="https://2e.aonprd.com/Conditions.aspx?ID=19">frightened 2</a>.<br> <b>Critical Failure</b> The creature is <a style="text-decoration:underline" href="https://2e.aonprd.com/Conditions.aspx?ID=19">frightened 4</a>.'},Grab:{actionType:"action",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 343</i></a><br><b>Requirements</b> The monster\'s last action was a success with a Strike that lists Grab in its damage entry, or it has a creature grabbed using this action. <b>Effect</b> The monster automatically Grabs the target until the end of the monster\'s next turn. The creature is grabbed by whichever body part the monster attacked with, and that body part can\'t be used to Strike creatures until the grab is ended.<br><br> Using Grab extends the duration of the monster\'s Grab until the end of its next turn for all creatures grabbed by it. A grabbed creature can use the <a style="text-decoration:underline" href="https://2e.aonprd.com/Actions.aspx?ID=79">Escape</a> action to get out of the grab, and the Grab ends for a grabbed creatures if the monster moves away from it.'},"Greater Constrict":{actionType:"action",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 343</i></a><br>The monster deals the listed amount of damage to any number of creatures grabbed or restrained by it. Each of those creatures can attempt a basic Fortitude save with the listed DC. A creature that fails this save falls <a style="text-decoration:underline" href="https://2e.aonprd.com/Conditions.aspx?ID=38">unconscious</a>, and a creature that succeeds is then temporarily immune to falling <a style="text-decoration:underline" href="https://2e.aonprd.com/Conditions.aspx?ID=38">unconscious</a> from Greater Constrict for 1 minute.'},"Improved Grab":{actionType:"free",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 343</i></a><br>The monster can use Grab as a free action triggered by a hit with its initial attack. A monster with Improved Grab still needs to spend an action to extend the duration for creatures it already has grabbed.'},"Improved Knockdown":{actionType:"free",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 343</i></a><br>The monster can use Knockdown as a free action triggered by a hit with its initial attack.'},"Improved Push":{actionType:"free",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 343</i></a><br>The monster can use Push as a free action triggered by a hit with its initial attack.'},Knockdown:{actionType:"action",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 343</i></a><br><b>Requirements</b> The monster\'s last action was a success with a Strike that lists Knockdown in its damage entry. <b>Effect</b> The monster knocks the target prone.'},Lifesense:{actionType:"passive",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 343</i></a><br>Lifesense allows a monster to sense the vital essence of living and undead creatures within the listed range. The sense can distinguish between the positive energy animating living creatures and the negative energy animating undead creatures, much as sight distinguishes colors.'},"Light Blindness":{actionType:"passive",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 343</i></a><br>When first exposed to bright light, the monster is <a style="text-decoration:underline" href="https://2e.aonprd.com/Conditions.aspx?ID=1">blinded</a> until the end of its next turn. After this exposure, light doesn\'t blind the monster again until after it spends 1 hour in darkness. However, as long as the monster is in an area of bright light, it\'s <a style="text-decoration:underline" href="https://2e.aonprd.com/Conditions.aspx?ID=7">dazzled</a>.'},"Low-Light Vision":{actionType:"passive",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 343</i></a><br>The monster can see in dim light as though it were bright light, so it ignores the <a style="text-decoration:underline" href="https://2e.aonprd.com/Conditions.aspx?ID=4">concealed</a> condition due to dim light.'},Poison:{actionType:"passive",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 343</i></a><br>When a creature is exposed to a monster\'s poison, it attempts a Fortitude save to avoid becoming poisoned. The level of a poison is the level of the monster inflicting the poison. The poison follows the <a style="text-decoration:underline" href="https://2e.aonprd.com/Rules.aspx?ID=361">rules for afflictions</a>.'},Push:{actionType:"action",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 343</i></a><br><b>Requirements</b> The monster\'s last action was a success with a Strike that lists Push in its damage entry. <b>Effect</b> The monster automatically knocks the target away from the monster. Unless otherwise noted in the ability description, the creature is pushed 5 feet. If the attack was a critical hit, this distance is doubled.'},Regeneration:{actionType:"passive",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 343</i></a><br>This monster regains the listed number of Hit Points each round at the beginning of its turn. Its <a style="text-decoration:underline" href="https://2e.aonprd.com/Conditions.aspx?ID=11">dying</a> condition never increases beyond <a style="text-decoration:underline" href="https://2e.aonprd.com/Conditions.aspx?ID=11">dying 3</a> as long as its regeneration is active. However, if it takes damage of a type listed in the regeneration entry, its regeneration deactivates until the end of its next turn. Deactivate the regeneration before applying any damage of a listed type, since that damage might kill the monster by bringing it to <a style="text-decoration:underline" href="https://2e.aonprd.com/Conditions.aspx?ID=11">dying 4</a>.'},Rend:{actionType:"action",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 344</i></a><br>A Rend entry lists a Strike the monster has. <b>Requirements</b> The monster hit the same enemy with two consecutive Strikes of the listed type in the same round. <b>Effect</b> The monster automatically deals that Strike\'s damage again to the enemy.'},"Retributive Strike":{actionType:"reaction",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 344</i></a><br><b>Trigger</b> An enemy damages the monster\'s ally, and both are within 15 feet of the monster. <b>Effect</b> The ally gains resistance to all damage against the triggering damage equal to 2 + the monster\'s level. If the foe is within reach, the monster makes a melee Strike against it.'},Scent:{actionType:"passive",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 344</i></a><br>Scent involves sensing creatures or objects by smell, and is usually a vague sense. The range is listed in the ability, and it functions only if the creature or object being detected emits an aroma (for instance, incorporeal creatures usually do not exude an aroma).<br><br> If a creature emits a heavy aroma or is upwind, the GM can double or even triple the range of scent abilities used to detect that creature, and the GM can reduce the range if a creature is downwind.'},"Shield Block":{actionType:"reaction",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 344</i></a><br><b>Trigger</b> The monster has its shield raised and takes damage from a physical attack. <b>Effect</b> The monster snaps its shield into place to deflect a blow. The shield prevents the monster from taking an amount of damage up to the shield\'s Hardness. The monster and the shield each take any remaining damage, possibly breaking or destroying the shield.'},"Sneak Attack":{actionType:"passive",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 344</i></a><br>When the monster Strikes a creature that has the <a style="text-decoration:underline" href="https://2e.aonprd.com/Conditions.aspx?ID=16">flat-footed</a> condition with an <a style="text-decoration:underline" href="https://2e.aonprd.com/Traits.aspx?ID=170">agile</a> or <a style="text-decoration:underline" href="https://2e.aonprd.com/Traits.aspx?ID=179">finesse</a> melee weapon, an <a style="text-decoration:underline" href="https://2e.aonprd.com/Traits.aspx?ID=170">agile</a> or <a style="text-decoration:underline" href="https://2e.aonprd.com/Traits.aspx?ID=179">finesse</a> unarmed attack, or a ranged weapon attack, it also deals the listed precision damage. For a ranged attack with a thrown weapon, that weapon must also be an <a style="text-decoration:underline" href="https://2e.aonprd.com/Traits.aspx?ID=170">agile</a> or <a style="text-decoration:underline" href="https://2e.aonprd.com/Traits.aspx?ID=179">finesse</a> weapon.'},"Swallow Whole":{actionType:"action",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 344</i></a><br>(<a style="text-decoration:underline" href="https://2e.aonprd.com/Traits.aspx?ID=15">attack</a>) The monster attempts to swallow a creature of the listed size or smaller that it has grabbed in its jaws or mouth. If a swallowed creature is of the maximum size listed, the monster can\'t use Swallow Whole again. If the creature is smaller than the maximum, the monster can usually swallow more creatures; the GM determines the maximum. The monster attempts an <a style="text-decoration:underline" href="https://2e.aonprd.com/Skills.aspx?ID=3">Athletics</a> check opposed by the grabbed creature\'s Reflex DC. If it succeeds, it swallows the creature. The monster\'s mouth or jaws no longer grab a creature it has swallowed, so the monster is free to use them to Strike or Grab once again. The monster can\'t attack creatures it has swallowed.<br><br> A swallowed creature is <a style="text-decoration:underline" href="https://2e.aonprd.com/Conditions.aspx?ID=20">grabbed</a>, is <a style="text-decoration:underline" href="https://2e.aonprd.com/Conditions.aspx?ID=35">slowed 1</a>, and has to hold its breath or start suffocating. The swallowed creature takes the listed amount of damage when first swallowed and at the end of each of its turns while it\'s swallowed. If the victim Escapes this ability\'s grabbed condition, it exits through the monster\'s mouth. This frees any other creature grabbed in the monster\'s mouth or jaws. A swallowed creature can attack the monster that has swallowed it, but only with unarmed attacks or with weapons of light Bulk or less. The engulfing creature is flat-footed against the attack. If the monster takes piercing or slashing damage equaling or exceeding the listed Rupture value from a single attack or spell, the engulfed creature cuts itself free. A creature that gets free by either Escaping or cutting itself free can immediately breathe and exits the swallowing monster\'s space.<br><br> If the monster dies, a swallowed creature can be freed by creatures adjacent to the corpse if they spend a combined total of 3 actions cutting the monster open with a weapon or unarmed attack that deals piercing or slashing damage.'},"Swarm Mind":{actionType:"passive",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 344</i></a><br>This monster doesn\'t have a single mind (typically because it\'s a swarm of smaller creatures), and is immune to mental effects that target only a specific number of creatures. It is still subject to mental effects that affect all creatures in an area.'},Telepathy:{actionType:"passive",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 344</i></a><br>(<a style="text-decoration:underline" href="https://2e.aonprd.com/Traits.aspx?ID=206">aura</a>, <a style="text-decoration:underline" href="https://2e.aonprd.com/Traits.aspx?ID=47">divination</a>, <a style="text-decoration:underline" href="https://2e.aonprd.com/Traits.aspx?ID=103">magical</a>) A monster with telepathy can communicate mentally with any creatures within the listed radius, as long as they share a language. This doesn\'t give any special access to their thoughts, and communicates no more information than normal speech would.'},"Throw Rock":{actionType:"action",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 344</i></a><br>The monster picks up a rock within reach or retrieves a stowed rock and throws it, making a ranged Strike.'},Trample:{actionType:"action",actionCost:3,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 344</i></a><br>The monster Strides up to double its Speed and can move through the spaces of creatures of the listed size, Trampling each creature whose space it enters. The monster can attempt to Trample the same creature only once in a single use of Trample. The monster deals the damage of the listed Strike, but trampled creatures can attempt a basic Reflex save at the listed DC (no damage on a critical success, half damage on a success, double damage on a critical failure).'},Tremorsense:{actionType:"passive",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 344</i></a><br>Tremorsense allows a monster to feel the vibrations through a solid surface caused by movement. It is an imprecise sense with a limited range (listed in the ability). Tremorsense functions only if the monster is on the same surface as the subject, and only if the subject is moving along (or burrowing through) the surface.'},Wavesense:{actionType:"passive",actionCost:1,description:'<b>Source</b> <a href="https://paizo.com/products/btq01y0m?Pathfinder-Bestiary" target="_blank" class="external-link"><i>Bestiary pg. 344</i></a><br>This sense allows a monster to feel vibrations caused by movement through a liquid. It\'s an imprecise sense with a limited range (listed in the ability). Wavesense functions only if monster and the subject are in the same body of liquid, and only if the subject is moving through the liquid.'}}),SETTINGS:{automation:{rulesBasedVision:{name:"PF2E.SETTINGS.Automation.RulesBasedVision.Name",hint:"PF2E.SETTINGS.Automation.RulesBasedVision.Hint"},effectExpiration:{name:"PF2E.SETTINGS.Automation.EffectExpiration.Name",hint:"PF2E.SETTINGS.Automation.EffectExpiration.Hint"},removeExpiredEffects:{name:"PF2E.SETTINGS.Automation.RemoveExpiredEffects.Name",hint:"PF2E.SETTINGS.Automation.RemoveExpiredEffects.Hint"},flankingDetection:{name:"PF2E.SETTINGS.Automation.FlankingDetection.Name",hint:"PF2E.SETTINGS.Automation.FlankingDetection.Hint"},actorsDeadAtZero:{name:"PF2E.SETTINGS.Automation.ActorsDeadAtZero.Name",hint:"PF2E.SETTINGS.Automation.ActorsDeadAtZero.Hint",neither:"PF2E.SETTINGS.Automation.ActorsDeadAtZero.Neither",npcsOnly:"PF2E.SETTINGS.Automation.ActorsDeadAtZero.NPCsOnly",pcsOnly:"PF2E.SETTINGS.Automation.ActorsDeadAtZero.PCsOnly",both:"PF2E.SETTINGS.Automation.ActorsDeadAtZero.Both"},lootableNPCs:{name:"PF2E.SETTINGS.Automation.LootableNPCs.Name",hint:"PF2E.SETTINGS.Automation.LootableNPCs.Hint"}},homebrew:{creatureTraits:{name:"PF2E.SETTINGS.Homebrew.CreatureTraits.Name",hint:"PF2E.SETTINGS.Homebrew.CreatureTraits.Hint"},featTraits:{name:"PF2E.SETTINGS.Homebrew.FeatTraits.Name",hint:"PF2E.SETTINGS.Homebrew.FeatTraits.Hint"},languages:{name:"PF2E.SETTINGS.Homebrew.Languages.Name",hint:"PF2E.SETTINGS.Homebrew.Languages.Hint"},magicSchools:{name:"PF2E.SETTINGS.Homebrew.MagicSchools.Name",hint:"PF2E.SETTINGS.Homebrew.MagicSchools.Hint"},spellTraits:{name:"PF2E.SETTINGS.Homebrew.SpellTraits.Name",hint:"PF2E.SETTINGS.Homebrew.SpellTraits.Hint"},weaponCategories:{name:"PF2E.SETTINGS.Homebrew.WeaponCategories.Name",hint:"PF2E.SETTINGS.Homebrew.WeaponCategories.Hint"},weaponGroups:{name:"PF2E.SETTINGS.Homebrew.WeaponGroups.Name",hint:"PF2E.SETTINGS.Homebrew.WeaponGroups.Hint"},baseWeapons:{name:"PF2E.SETTINGS.Homebrew.BaseWeapons.Name",hint:"PF2E.SETTINGS.Homebrew.BaseWeapons.Hint"},weaponTraits:{name:"PF2E.SETTINGS.Homebrew.WeaponTraits.Name",hint:"PF2E.SETTINGS.Homebrew.WeaponTraits.Hint"},equipmentTraits:{name:"PF2E.SETTINGS.Homebrew.EquipmentTraits.Name",hint:"PF2E.SETTINGS.Homebrew.EquipmentTraits.Hint"}},worldClock:{name:"PF2E.SETTINGS.WorldClock.Name",label:"PF2E.SETTINGS.WorldClock.Label",hint:"PF2E.SETTINGS.WorldClock.Hint",dateTheme:{name:"PF2E.SETTINGS.WorldClock.DateTheme.Name",hint:"PF2E.SETTINGS.WorldClock.DateTheme.Hint",AR:"PF2E.SETTINGS.WorldClock.DateTheme.AR",AD:"PF2E.SETTINGS.WorldClock.DateTheme.AD",CE:"PF2E.SETTINGS.WorldClock.DateTheme.CE"},timeConvention:{name:"PF2E.SETTINGS.WorldClock.TimeConvention.Name",hint:"PF2E.SETTINGS.WorldClock.TimeConvention.Hint",twentyFour:"PF2E.SETTINGS.WorldClock.TimeConvention.TwentyFour",twelve:"PF2E.SETTINGS.WorldClock.TimeConvention.Twelve"},showClockButton:{name:"PF2E.SETTINGS.WorldClock.ShowClockButton.Name",hint:"PF2E.SETTINGS.WorldClock.ShowClockButton.Hint"},playersCanView:{name:"PF2E.SETTINGS.WorldClock.PlayersCanView.Name",hint:"PF2E.SETTINGS.WorldClock.PlayersCanView.Hint"},syncDarkness:{name:"PF2E.SETTINGS.WorldClock.SyncDarkness.Name",hint:"PF2E.SETTINGS.WorldClock.SyncDarkness.Hint"},syncDarknessScene:{name:"PF2E.SETTINGS.WorldClock.SyncDarknessScene.Name",hint:"PF2E.SETTINGS.WorldClock.SyncDarknessScene.Hint",enabled:"PF2E.SETTINGS.WorldClock.SyncDarknessScene.Enabled",disabled:"PF2E.SETTINGS.WorldClock.SyncDarknessScene.Disabled",default:"PF2E.SETTINGS.WorldClock.SyncDarknessScene.Default"},worldCreatedOn:{name:"PF2E.SETTINGS.WorldClock.WorldCreatedOn.Name",hint:"PF2E.SETTINGS.WorldClock.WorldCreatedOn.Hint"}},CampaignFeats:{name:"PF2E.SETTINGS.CampaignFeats.Name",hint:"PF2E.SETTINGS.CampaignFeats.Hint"}},Actor:{documentClasses:{character:_actor_1.CharacterPF2e,npc:_actor_1.NPCPF2e,hazard:_actor_1.HazardPF2e,loot:_actor_1.LootPF2e,familiar:_actor_1.FamiliarPF2e,vehicle:_actor_1.VehiclePF2e}},Item:{documentClasses:{action:_item_1.ActionItemPF2e,ancestry:_item_1.AncestryPF2e,armor:_item_1.ArmorPF2e,background:_item_1.BackgroundPF2e,backpack:_item_1.ContainerPF2e,book:_item_1.BookPF2e,class:_item_1.ClassPF2e,condition:_item_1.ConditionPF2e,consumable:_item_1.ConsumablePF2e,deity:_item_1.DeityPF2e,effect:_item_1.EffectPF2e,equipment:_item_1.EquipmentPF2e,feat:_item_1.FeatPF2e,heritage:_item_1.HeritagePF2e,kit:_item_1.KitPF2e,lore:_item_1.LorePF2e,melee:_item_1.MeleePF2e,spell:_item_1.SpellPF2e,spellcastingEntry:_item_1.SpellcastingEntryPF2e,treasure:_item_1.TreasurePF2e,weapon:_item_1.WeaponPF2e},traits:{action:traits_1.actionTraits,armor:traits_1.armorTraits,ancestry:traits_1.creatureTraits,backpack:traits_1.equipmentTraits,book:traits_1.equipmentTraits,consumable:traits_1.consumableTraits,equipment:traits_1.equipmentTraits,feat:traits_1.featTraits,heritage:traits_1.featTraits,kit:traits_1.classTraits,melee:traits_1.npcAttackTraits,spell:traits_1.spellTraits,weapon:traits_1.weaponTraits}},JournalEntry:{sheetClass:sheet_1.JournalSheetPF2e},Canvas:{darkness:{default:CONFIG.Canvas.darknessColor,gmVision:7762846}}}},39713:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.weaponTraits=exports.vehicleTraits=exports.spellTraits=exports.spellOtherTraits=exports.preciousMaterials=exports.otherWeaponTags=exports.otherConsumableTags=exports.otherArmorTags=exports.npcAttackTraits=exports.magicTraditions=exports.magicSchools=exports.hazardTraits=exports.featTraits=exports.equipmentTraits=exports.energyDamageTypes=exports.elementalTraits=exports.damageTraits=exports.creatureTraits=exports.consumableTraits=exports.classTraits=exports.armorTraits=exports.ancestryTraits=exports.ancestryItemTraits=exports.alignmentTraits=exports.actionTraits=void 0;const values_1=__webpack_require__(67189),_util_1=__webpack_require__(6945),ancestryTraits={"half-elf":"PF2E.TraitHalfElf","half-orc":"PF2E.TraitHalfOrc",aasimar:"PF2E.TraitAasimar",aberration:"PF2E.TraitAberration",anadi:"PF2E.TraitAnadi",android:"PF2E.TraitAndroid",aphorite:"PF2E.TraitAphorite",automaton:"PF2E.TraitAutomaton",azarketi:"PF2E.TraitAzarketi",beastkin:"PF2E.TraitBeastkin",catfolk:"PF2E.TraitCatfolk",changeling:"PF2E.TraitChangeling",conrasu:"PF2E.TraitConrasu",dhampir:"PF2E.TraitDhampir",duskwalker:"PF2E.TraitDuskwalker",dwarf:"PF2E.TraitDwarf",elf:"PF2E.TraitElf",fetchling:"PF2E.TraitFetchling",fleshwarp:"PF2E.TraitFleshwarp",ganzi:"PF2E.TraitGanzi",geniekin:"PF2E.TraitGeniekin",ghoran:"PF2E.TraitGhoran",gnoll:"PF2E.TraitGnoll",gnome:"PF2E.TraitGnome",goblin:"PF2E.TraitGoblin",goloma:"PF2E.TraitGoloma",grippli:"PF2E.TraitGrippli",halfling:"PF2E.TraitHalfling",hobgoblin:"PF2E.TraitHobgoblin",human:"PF2E.TraitHuman",ifrit:"PF2E.TraitIfrit",kashrishi:"PF2E.TraitKashrishi",kitsune:"PF2E.TraitKitsune",kobold:"PF2E.TraitKobold",leshy:"PF2E.TraitLeshy",lizardfolk:"PF2E.TraitLizardfolk",nagaji:"PF2E.TraitNagaji",orc:"PF2E.TraitOrc",oread:"PF2E.TraitOread",poppet:"PF2E.TraitPoppet",ratfolk:"PF2E.TraitRatfolk",shisk:"PF2E.TraitShisk",shoony:"PF2E.TraitShoony",skeleton:"PF2E.TraitSkeleton",sprite:"PF2E.TraitSprite",strix:"PF2E.TraitStrix",suli:"PF2E.TraitSuli",sylph:"PF2E.TraitSylph",tengu:"PF2E.TraitTengu",tiefling:"PF2E.TraitTiefling",undine:"PF2E.TraitUndine",vanara:"PF2E.TraitVanara",vishkanya:"PF2E.TraitVishkanya"};exports.ancestryTraits=ancestryTraits;const ancestryItemTraits={...ancestryTraits,amphibious:"PF2E.TraitAmphibious",fey:"PF2E.TraitFey",fungus:"PF2E.TraitFungus",humanoid:"PF2E.TraitHumanoid",plant:"PF2E.TraitPlant"};exports.ancestryItemTraits=ancestryItemTraits;const elementalTraits={air:"PF2E.TraitAir",earth:"PF2E.TraitEarth",fire:"PF2E.TraitFire",metal:"PF2E.TraitMetal",water:"PF2E.TraitWater"};exports.elementalTraits=elementalTraits;const energyDamageTypes={acid:"PF2E.TraitAcid",cold:"PF2E.TraitCold",electricity:"PF2E.TraitElectricity",fire:"PF2E.TraitFire",force:"PF2E.TraitForce",negative:"PF2E.TraitNegative",positive:"PF2E.TraitPositive",sonic:"PF2E.TraitSonic"};exports.energyDamageTypes=energyDamageTypes;const magicTraditions={arcane:"PF2E.TraitArcane",divine:"PF2E.TraitDivine",occult:"PF2E.TraitOccult",primal:"PF2E.TraitPrimal"};exports.magicTraditions=magicTraditions;const creatureTraits={...ancestryItemTraits,...elementalTraits,...energyDamageTypes,...magicTraditions,aberration:"PF2E.TraitAberration",aeon:"PF2E.TraitAeon",aesir:"PF2E.TraitAesir",agathion:"PF2E.TraitAgathion",alchemical:"PF2E.TraitAlchemical",angel:"PF2E.TraitAngel",animal:"PF2E.TraitAnimal",anugobu:"PF2E.TraitAnugobu",aquatic:"PF2E.TraitAquatic",archon:"PF2E.TraitArchon",astral:"PF2E.TraitAstral",asura:"PF2E.TraitAsura",azata:"PF2E.TraitAzata",beast:"PF2E.TraitBeast",boggard:"PF2E.TraitBoggard",caligni:"PF2E.TraitCaligni",celestial:"PF2E.TraitCelestial","charau-ka":"PF2E.TraitCharauKa",clockwork:"PF2E.TraitClockwork",construct:"PF2E.TraitConstruct",couatl:"PF2E.TraitCouatl",daemon:"PF2E.TraitDaemon",darvakka:"PF2E.TraitDarvakka",demon:"PF2E.TraitDemon",dero:"PF2E.TraitDero",devil:"PF2E.TraitDevil",dinosaur:"PF2E.TraitDinosaur",div:"PF2E.TraitDiv",dragon:"PF2E.TraitDragon",dream:"PF2E.TraitDream",drow:"PF2E.TraitDrow",duergar:"PF2E.TraitDuergar",duskwalker:"PF2E.TraitDuskwalker",eidolon:"PF2E.TraitEidolon",elemental:"PF2E.TraitElemental",ethereal:"PF2E.TraitEthereal",evocation:"PF2E.TraitEvocation",fiend:"PF2E.TraitFiend",formian:"PF2E.TraitFormian",fungus:"PF2E.TraitFungus",genie:"PF2E.TraitGenie",ghoran:"PF2E.TraitGhoran",ghost:"PF2E.TraitGhost",ghoul:"PF2E.TraitGhoul",ghul:"PF2E.TraitGhul",giant:"PF2E.TraitGiant",golem:"PF2E.TraitGolem",gremlin:"PF2E.TraitGremlin",grioth:"PF2E.TraitGrioth",grippli:"PF2E.TraitGrippli",hag:"PF2E.TraitHag",hantu:"PF2E.TraitHantu",herald:"PF2E.TraitHerald",humanoid:"PF2E.TraitHumanoid",ifrit:"PF2E.TraitIfrit",ikeshti:"PF2E.TraitIkeshti",illusion:"PF2E.TraitIllusion",incorporeal:"PF2E.TraitIncorporeal",inevitable:"PF2E.TraitInevitable",kami:"PF2E.TraitKami",kovintus:"PF2E.TraitKovintus",light:"PF2E.TraitLight",locathah:"PF2E.TraitLocathah",mental:"PF2E.TraitMental",merfolk:"PF2E.TraitMerfolk",mindless:"PF2E.TraitMindless",minion:"PF2E.TraitMinion",monitor:"PF2E.TraitMonitor",morlock:"PF2E.TraitMorlock",mortic:"PF2E.TraitMortic",mummy:"PF2E.TraitMummy",munavri:"PF2E.TraitMunavri",mutant:"PF2E.TraitMutant",nagaji:"PF2E.TraitNagaji",nymph:"PF2E.TraitNymph",oni:"PF2E.TraitOni",ooze:"PF2E.TraitOoze",orc:"PF2E.TraitOrc",oread:"PF2E.TraitOread",paaridar:"PF2E.TraitPaaridar",petitioner:"PF2E.TraitPetitioner",phantom:"PF2E.TraitPhantom",protean:"PF2E.TraitProtean",psychopomp:"PF2E.TraitPsychopomp",qlippoth:"PF2E.TraitQlippoth",rakshasa:"PF2E.TraitRakshasa",reflection:"PF2E.TraitReflection",sahkil:"PF2E.TraitSahkil",samsaran:"PF2E.TraitSamsaran","sea devil":"PF2E.TraitSeaDevil",serpentfolk:"PF2E.TraitSerpentfolk",seugathi:"PF2E.TraitSeugathi",shabti:"PF2E.TraitShabti",shadow:"PF2E.TraitShadow",shobhad:"PF2E.TraitShobhad",siktempora:"PF2E.TraitSiktempora",skeleton:"PF2E.TraitSkeleton",skelm:"PF2E.TraitSkelm",skulk:"PF2E.TraitSkulk",soulbound:"PF2E.TraitSoulbound",spirit:"PF2E.TraitSpirit",spriggan:"PF2E.TraitSpriggan",stheno:"PF2E.TraitStheno",summoned:"PF2E.TraitSummoned",swarm:"PF2E.TraitSwarm",sylph:"PF2E.TraitSylph",tane:"PF2E.TraitTane",tanggal:"PF2E.TraitTanggal",tengu:"PF2E.TraitTengu",time:"PF2E.TraitTime",titan:"PF2E.TraitTitan",troll:"PF2E.TraitTroll",troop:"PF2E.TraitTroop",undead:"PF2E.TraitUndead",undine:"PF2E.TraitUndine",urdefhan:"PF2E.TraitUrdefhan",vampire:"PF2E.TraitVampire",vanara:"PF2E.TraitVanara",velstrac:"PF2E.TraitVelstrac",vishkanya:"PF2E.TraitVishkanya",wayang:"PF2E.TraitWayang",werecreature:"PF2E.TraitWerecreature",wight:"PF2E.TraitWight","wild-hunt":"PF2E.TraitWildHunt",wraith:"PF2E.TraitWraith",wyrwood:"PF2E.TraitWyrwood",xulgath:"PF2E.TraitXulgath",zombie:"PF2E.TraitZombie"};exports.creatureTraits=creatureTraits;const classTraits={alchemist:"PF2E.TraitAlchemist",barbarian:"PF2E.TraitBarbarian",bard:"PF2E.TraitBard",champion:"PF2E.TraitChampion",cleric:"PF2E.TraitCleric",druid:"PF2E.TraitDruid",fighter:"PF2E.TraitFighter",gunslinger:"PF2E.TraitGunslinger",inventor:"PF2E.TraitInventor",investigator:"PF2E.TraitInvestigator",magus:"PF2E.TraitMagus",monk:"PF2E.TraitMonk",oracle:"PF2E.TraitOracle",psychic:"PF2E.TraitPsychic",ranger:"PF2E.TraitRanger",rogue:"PF2E.TraitRogue",sorcerer:"PF2E.TraitSorcerer",summoner:"PF2E.TraitSummoner",swashbuckler:"PF2E.TraitSwashbuckler",thaumaturge:"PF2E.TraitThaumaturge",witch:"PF2E.TraitWitch",wizard:"PF2E.TraitWizard"};exports.classTraits=classTraits;const spellOtherTraits={amp:"PF2E.TraitAmp",attack:"PF2E.TraitAttack",auditory:"PF2E.TraitAuditory",aura:"PF2E.TraitAura",beast:"PF2E.TraitBeast",cantrip:"PF2E.TraitCantrip",composition:"PF2E.TraitComposition",concentrate:"PF2E.TraitConcentrate",consecration:"PF2E.TraitConsecration",contingency:"PF2E.TraitContingency",curse:"PF2E.TraitCurse",cursebound:"PF2E.TraitCursebound",darkness:"PF2E.TraitDarkness",death:"PF2E.TraitDeath",detection:"PF2E.TraitDetection",disease:"PF2E.TraitDisease",dream:"PF2E.TraitDream",eidolon:"PF2E.TraitEidolon",emotion:"PF2E.TraitEmotion",extradimensional:"PF2E.TraitExtradimensional",fear:"PF2E.TraitFear",fortune:"PF2E.TraitFortune",fungus:"PF2E.TraitFungus",healing:"PF2E.TraitHealing",hex:"PF2E.TraitHex",incapacitation:"PF2E.TraitIncapacitation",incarnate:"PF2E.TraitIncarnate",incorporeal:"PF2E.TraitIncorporeal",inhaled:"PF2E.TraitInhaled",light:"PF2E.TraitLight",linguistic:"PF2E.TraitLinguistic",litany:"PF2E.TraitLitany",metamagic:"PF2E.TraitMetamagic",mindless:"PF2E.TraitMindless",misfortune:"PF2E.TraitMisfortune",morph:"PF2E.TraitMorph",move:"PF2E.TraitMove",nonlethal:"PF2E.TraitNonlethal",olfactory:"PF2E.TraitOlfactory",plant:"PF2E.TraitPlant",poison:"PF2E.TraitPoison",polymorph:"PF2E.TraitPolymorph",possession:"PF2E.TraitPossession",prediction:"PF2E.TraitPrediction",psyche:"PF2E.TraitPsyche",revelation:"PF2E.TraitRevelation",scrying:"PF2E.TraitScrying",shadow:"PF2E.TraitShadow",sleep:"PF2E.TraitSleep",stance:"PF2E.TraitStance",summoned:"PF2E.TraitSummoned",teleportation:"PF2E.TraitTeleportation","true-name":"PF2E.TraitTrueName",visual:"PF2E.TraitVisual"};exports.spellOtherTraits=spellOtherTraits;const alignmentTraits={chaotic:"PF2E.TraitChaotic",evil:"PF2E.TraitEvil",good:"PF2E.TraitGood",lawful:"PF2E.TraitLawful"};exports.alignmentTraits=alignmentTraits;const damageTraits={...alignmentTraits,...elementalTraits,...energyDamageTypes,light:"PF2E.TraitLight",magical:"PF2E.TraitMagical",mental:"PF2E.TraitMental",nonlethal:"PF2E.TraitNonlethal",plant:"PF2E.TraitPlant",radiation:"PF2E.TraitRadiation"};exports.damageTraits=damageTraits;const magicSchools={abjuration:"PF2E.TraitAbjuration",conjuration:"PF2E.TraitConjuration",divination:"PF2E.TraitDivination",enchantment:"PF2E.TraitEnchantment",evocation:"PF2E.TraitEvocation",illusion:"PF2E.TraitIllusion",necromancy:"PF2E.TraitNecromancy",transmutation:"PF2E.TraitTransmutation"};exports.magicSchools=magicSchools;const spellTraits={...alignmentTraits,...classTraits,...damageTraits,...elementalTraits,...magicSchools,...magicTraditions,...spellOtherTraits};exports.spellTraits=spellTraits;const weaponTraits={...alignmentTraits,...ancestryTraits,...elementalTraits,...energyDamageTypes,...magicSchools,...magicTraditions,alchemical:"PF2E.TraitAlchemical",agile:"PF2E.TraitAgile",artifact:"PF2E.TraitArtifact",attached:"PF2E.TraitAttached","attached-to-shield":"PF2E.TraitAttachedToShield","attached-to-crossbow-or-firearm":"PF2E.TraitAttachedToCrossbowOrFirearm",auditory:"PF2E.TraitAuditory",backstabber:"PF2E.TraitBackstabber",backswing:"PF2E.TraitBackswing",bomb:"PF2E.TraitBomb",brutal:"PF2E.TraitBrutal","capacity-3":"PF2E.TraitCapacity3","capacity-4":"PF2E.TraitCapacity4","capacity-5":"PF2E.TraitCapacity5",climbing:"PF2E.TraitClimbing",clockwork:"PF2E.TraitClockwork",cobbled:"PF2E.TraitCobbled",combination:"PF2E.TraitCombination",concealable:"PF2E.TraitConcealable",concussive:"PF2E.TraitConcussive",consumable:"PF2E.TraitConsumable","critical-fusion":"PF2E.TraitCriticalFusion",cursed:"PF2E.TraitCursed","deadly-d6":"PF2E.TraitDeadlyD6","deadly-d8":"PF2E.TraitDeadlyD8","deadly-2d8":"PF2E.TraitDeadly2D8","deadly-3d8":"PF2E.TraitDeadly3D8","deadly-4d8":"PF2E.TraitDeadly4D8","deadly-d10":"PF2E.TraitDeadlyD10","deadly-2d10":"PF2E.TraitDeadly2D10","deadly-3d10":"PF2E.TraitDeadly3D10","deadly-4d10":"PF2E.TraitDeadly4D10","deadly-d12":"PF2E.TraitDeadlyD12","deadly-2d12":"PF2E.TraitDeadly2D12","deadly-3d12":"PF2E.TraitDeadly3D12","deadly-4d12":"PF2E.TraitDeadly4D12",death:"PF2E.TraitDeath",disarm:"PF2E.TraitDisarm",disease:"PF2E.TraitDisease","double-barrel":"PF2E.TraitDoubleBarrel",emotion:"PF2E.TraitEmotion","fatal-aim-d10":"PF2E.TraitFatalAimD10","fatal-aim-d12":"PF2E.TraitFatalAimD12","fatal-d8":"PF2E.TraitFatalD8","fatal-d10":"PF2E.TraitFatalD10","fatal-d12":"PF2E.TraitFatalD12",fear:"PF2E.TraitFear",finesse:"PF2E.TraitFinesse",forceful:"PF2E.TraitForceful",fortune:"PF2E.TraitFortune","free-hand":"PF2E.TraitFreeHand",fungus:"PF2E.TraitFungus",grapple:"PF2E.TraitGrapple",hampering:"PF2E.TraitHampering",healing:"PF2E.TraitHealing",infused:"PF2E.TraitInfused",inhaled:"PF2E.TraitInhaled",injection:"PF2E.TraitInjection",intelligent:"PF2E.TraitIntelligent",invested:"PF2E.TraitInvested","jousting-d6":"PF2E.TraitJoustingD6",kickback:"PF2E.TraitKickback",light:"PF2E.TraitLight",magical:"PF2E.TraitMagical",mental:"PF2E.TraitMental",modular:"PF2E.TraitModular",monk:"PF2E.TraitMonk",nonlethal:"PF2E.TraitNonlethal",olfactory:"PF2E.TraitOlfactory",parry:"PF2E.TraitParry",plant:"PF2E.TraitPlant",poison:"PF2E.TraitPoison",propulsive:"PF2E.TraitPropulsive","ranged-trip":"PF2E.TraitRangedTrip",reach:"PF2E.TraitReach",repeating:"PF2E.TraitRepeating",resonant:"PF2E.TraitResonant",saggorak:"PF2E.TraitSaggorak","scatter-5":"PF2E.TraitScatter5","scatter-10":"PF2E.TraitScatter10","scatter-15":"PF2E.TraitScatter15",shadow:"PF2E.TraitShadow",shove:"PF2E.TraitShove",splash:"PF2E.TraitSplash",staff:"PF2E.TraitStaff",sweep:"PF2E.TraitSweep",tech:"PF2E.TraitTech",teleportation:"PF2E.TraitTeleportation",tethered:"PF2E.TraitTethered",thrown:"PF2E.TraitThrown","thrown-10":"PF2E.TraitThrown10","thrown-15":"PF2E.TraitThrown15","thrown-20":"PF2E.TraitThrown20","thrown-30":"PF2E.TraitThrown30","thrown-40":"PF2E.TraitThrown40","thrown-60":"PF2E.TraitThrown60","thrown-80":"PF2E.TraitThrown80","thrown-100":"PF2E.TraitThrown100","thrown-200":"PF2E.TraitThrown200",trip:"PF2E.TraitTrip",twin:"PF2E.TraitTwin","two-hand-d6":"PF2E.TraitTwoHandD6","two-hand-d8":"PF2E.TraitTwoHandD8","two-hand-d10":"PF2E.TraitTwoHandD10","two-hand-d12":"PF2E.TraitTwoHandD12",unarmed:"PF2E.TraitUnarmed","versatile-acid":"PF2E.TraitVersatileAcid","versatile-b":"PF2E.TraitVersatileB","versatile-chaotic":"PF2E.TraitVersatileChaotic","versatile-cold":"PF2E.TraitVersatileCold","versatile-electricity":"PF2E.TraitVersatileElectricity","versatile-evil":"PF2E.TraitVersatileEvil","versatile-fire":"PF2E.TraitVersatileFire","versatile-force":"PF2E.TraitVersatileForce","versatile-good":"PF2E.TraitVersatileGood","versatile-lawful":"PF2E.TraitVersatileLawful","versatile-negative":"PF2E.TraitVersatileNegative","versatile-p":"PF2E.TraitVersatileP","versatile-positive":"PF2E.TraitVersatilePositive","versatile-s":"PF2E.TraitVersatileS","versatile-sonic":"PF2E.TraitVersatileSonic","volley-20":"PF2E.TraitVolley20","volley-30":"PF2E.TraitVolley30","volley-50":"PF2E.TraitVolley50"};exports.weaponTraits=weaponTraits;const preciousMaterials={abysium:"PF2E.PreciousMaterialAbysium",adamantine:"PF2E.PreciousMaterialAdamantine",coldIron:"PF2E.PreciousMaterialColdIron",darkwood:"PF2E.PreciousMaterialDarkwood",djezet:"PF2E.PreciousMaterialDjezet",dragonhide:"PF2E.PreciousMaterialDragonhide","grisantian-pelt":"PF2E.PreciousMaterialGrisantianPelt",inubrix:"PF2E.PreciousMaterialInubrix",mithral:"PF2E.PreciousMaterialMithral",noqual:"PF2E.PreciousMaterialNoqual",orichalcum:"PF2E.PreciousMaterialOrichalcum",peachwood:"PF2E.PreciousMaterialPeachwood",siccatite:"PF2E.PreciousMaterialSiccatite",silver:"PF2E.PreciousMaterialSilver","sisterstone-dusk":"PF2E.PreciousMaterialSisterstoneDusk","sisterstone-scarlet":"PF2E.PreciousMaterialSisterstoneScarlet",sovereignSteel:"PF2E.PreciousMaterialSovereignSteel",warpglass:"PF2E.PreciousMaterialWarpglass"};exports.preciousMaterials=preciousMaterials;exports.otherArmorTags={shoddy:"PF2E.Item.Physical.OtherTag.Shoddy"};exports.otherConsumableTags={herbal:"PF2E.Item.Physical.OtherTag.Herbal"};exports.otherWeaponTags={crossbow:"PF2E.Weapon.Base.crossbow",improvised:"PF2E.Item.Physical.OtherTag.Improvised",shoddy:"PF2E.Item.Physical.OtherTag.Shoddy"};const rangeTraits=values_1.RANGE_TRAITS.reduce(((descriptions,trait)=>({...descriptions,[trait]:`PF2E.Trait${(0,_util_1.sluggify)(trait,{camel:"bactrian"})}`})),{}),npcAttackTraits={...weaponTraits,...preciousMaterials,...rangeTraits,curse:"PF2E.TraitCurse","reach-0":"PF2E.TraitReach0","reach-10":"PF2E.TraitReach10","reach-15":"PF2E.TraitReach15","reach-20":"PF2E.TraitReach20","reach-25":"PF2E.TraitReach25","reach-30":"PF2E.TraitReach30","reach-40":"PF2E.TraitReach40","reach-50":"PF2E.TraitReach50","reach-60":"PF2E.TraitReach60","reach-100":"PF2E.TraitReach100","reach-1000":"PF2E.TraitReach1000","reload-0":"PF2E.TraitReload0","reload-1":"PF2E.TraitReload1","reload-2":"PF2E.TraitReload2","reload-1-min":"PF2E.TraitReload1Min"};exports.npcAttackTraits=npcAttackTraits;const featTraits={...ancestryTraits,...classTraits,...damageTraits,...magicSchools,...magicTraditions,...spellTraits,additive1:"PF2E.TraitAdditive1",additive2:"PF2E.TraitAdditive2",additive3:"PF2E.TraitAdditive3",aftermath:"PF2E.TraitAftermath",alchemical:"PF2E.TraitAlchemical",archetype:"PF2E.TraitArchetype",auditory:"PF2E.TraitAuditory",aura:"PF2E.TraitAura",class:"PF2E.Class",concentrate:"PF2E.TraitConcentrate",dedication:"PF2E.TraitDedication",detection:"PF2E.TraitDetection",deviant:"PF2E.TraitDeviant",downtime:"PF2E.TraitDowntime",emotion:"PF2E.TraitEmotion",evolution:"PF2E.TraitEvolution",esoterica:"PF2E.TraitEsoterica",exploration:"PF2E.TraitExploration",fear:"PF2E.TraitFear",finisher:"PF2E.TraitFinisher",flourish:"PF2E.TraitFlourish",fortune:"PF2E.TraitFortune",general:"PF2E.TraitGeneral",injury:"PF2E.TraitInjury",lineage:"PF2E.TraitLineage",manipulate:"PF2E.TraitManipulate",metamagic:"PF2E.TraitMetamagic",mindshift:"PF2E.TraitMindshift",modification:"PF2E.TraitModification",move:"PF2E.TraitMove",multiclass:"PF2E.TraitMulticlass",oath:"PF2E.TraitOath",olfactory:"PF2E.TraitOlfactory",open:"PF2E.TraitOpen","pervasive-magic":"PF2E.TraitPervasiveMagic",poison:"PF2E.TraitPoison",press:"PF2E.TraitPress",rage:"PF2E.TraitRage",reckless:"PF2E.TraitReckless",reflection:"PF2E.TraitReflection",secret:"PF2E.TraitSecret",skill:"PF2E.TraitSkill",social:"PF2E.TraitSocial",spellshot:"PF2E.TraitSpellshot",stamina:"PF2E.TraitStamina",stance:"PF2E.TraitStance",tandem:"PF2E.TraitTandem",time:"PF2E.TraitTime","true-name":"PF2E.TraitTrueName",unstable:"PF2E.TraitUnstable",vigilante:"PF2E.TraitVigilante",virulent:"PF2E.TraitVirulent"};exports.featTraits=featTraits;const consumableTraits={...damageTraits,...elementalTraits,...magicSchools,...magicTraditions,additive1:"PF2E.TraitAdditive1",additive2:"PF2E.TraitAdditive2",additive3:"PF2E.TraitAdditive3",alchemical:"PF2E.TraitAlchemical",auditory:"PF2E.TraitAuditory",aura:"PF2E.TraitAura",catalyst:"PF2E.TraitCatalyst",clockwork:"PF2E.TraitClockwork",consumable:"PF2E.TraitConsumable",contact:"PF2E.TraitContact",cursed:"PF2E.TraitCursed",drug:"PF2E.TraitDrug",elixir:"PF2E.TraitElixir",emotion:"PF2E.TraitEmotion",fear:"PF2E.TraitFear",fey:"PF2E.TraitFey",fortune:"PF2E.TraitFortune",fulu:"PF2E.TraitFulu",gadget:"PF2E.TraitGadget",healing:"PF2E.TraitHealing",incapacitation:"PF2E.TraitIncapacitation",infused:"PF2E.TraitInfused",ingested:"PF2E.TraitIngested",inhaled:"PF2E.TraitInhaled",injury:"PF2E.TraitInjury",kobold:"PF2E.TraitKobold",light:"PF2E.TraitLight",magical:"PF2E.TraitMagical",mechanical:"PF2E.TraitMechanical",misfortune:"PF2E.TraitMisfortune",morph:"PF2E.TraitMorph",mutagen:"PF2E.TraitMutagen",oil:"PF2E.TraitOil",olfactory:"PF2E.TraitOlfactory",poison:"PF2E.TraitPoison",polymorph:"PF2E.TraitPolymorph",potion:"PF2E.TraitPotion",precious:"PF2E.TraitPrecious",scroll:"PF2E.TraitScroll",scrying:"PF2E.TraitScrying",sleep:"PF2E.TraitSleep",snare:"PF2E.TraitSnare",splash:"PF2E.TraitSplash",structure:"PF2E.TraitStructure",talisman:"PF2E.TraitTalisman",teleportation:"PF2E.TraitTeleportation",trap:"PF2E.TraitTrap",virulent:"PF2E.TraitVirulent",visual:"PF2E.TraitVisual",wand:"PF2E.TraitWand"};exports.consumableTraits=consumableTraits;const actionTraits={...featTraits,...consumableTraits,...spellTraits,circus:"PF2E.TraitCircus",summon:"PF2E.TraitSummon"};exports.actionTraits=actionTraits;const hazardTraits={...damageTraits,...magicSchools,...magicTraditions,alchemical:"PF2E.TraitAlchemical",aquatic:"PF2E.TraitAquatic",auditory:"PF2E.TraitAuditory",clockwork:"PF2E.TraitClockwork",consumable:"PF2E.TraitConsumable",curse:"PF2E.TraitCurse",environmental:"PF2E.TraitEnvironmental",fungus:"PF2E.TraitFungus",haunt:"PF2E.TraitHaunt",inhaled:"PF2E.TraitInhaled",kaiju:"PF2E.TraitKaiju",magical:"PF2E.TraitMagical",mechanical:"PF2E.TraitMechanical",poison:"PF2E.TraitPoison",steam:"PF2E.TraitSteam",summoned:"PF2E.TraitSummoned",technological:"PF2E.TraitTechnological",teleportation:"PF2E.TraitTeleportation",trap:"PF2E.TraitTrap",virulent:"PF2E.TraitVirulent",visual:"PF2E.TraitVisual"};exports.hazardTraits=hazardTraits;const vehicleTraits={...magicSchools,artifact:"PF2E.TraitArtifact",clockwork:"PF2E.TraitClockwork",magical:"PF2E.TraitMagical",teleportation:"PF2E.TraitTeleportation"};exports.vehicleTraits=vehicleTraits;const equipmentTraits={...alignmentTraits,...ancestryTraits,...elementalTraits,...energyDamageTypes,...magicSchools,...magicTraditions,adjustment:"PF2E.TraitAdjustment",alchemical:"PF2E.TraitAlchemical",apex:"PF2E.TraitApex",artifact:"PF2E.TraitArtifact",auditory:"PF2E.TraitAuditory",aura:"PF2E.TraitAura",clockwork:"PF2E.TraitClockwork",companion:"PF2E.TraitCompanion",contract:"PF2E.TraitContract",cursed:"PF2E.TraitCursed",darkness:"PF2E.TraitDarkness",death:"PF2E.TraitDeath",detection:"PF2E.TraitDetection",eidolon:"PF2E.TraitEidolon",emotion:"PF2E.TraitEmotion",extradimensional:"PF2E.TraitExtradimensional",fear:"PF2E.TraitFear",focused:"PF2E.TraitFocused",fortune:"PF2E.TraitFortune",fulu:"PF2E.TraitFulu",gadget:"PF2E.TraitGadget",grimoire:"PF2E.TraitGrimoire",healing:"PF2E.TraitHealing",infused:"PF2E.TraitInfused",intelligent:"PF2E.TraitIntelligent",invested:"PF2E.TraitInvested",light:"PF2E.TraitLight",magical:"PF2E.TraitMagical",mental:"PF2E.TraitMental",misfortune:"PF2E.TraitMisfortune",mounted:"PF2E.TraitMounted",nonlethal:"PF2E.TraitNonlethal",plant:"PF2E.TraitPlant",poison:"PF2E.TraitPoison",portable:"PF2E.TraitPortable",precious:"PF2E.TraitPrecious",revelation:"PF2E.TraitRevelation",saggorak:"PF2E.TraitSaggorak",scrying:"PF2E.TraitScrying",sleep:"PF2E.TraitSleep",spellheart:"PF2E.TraitSpellheart",staff:"PF2E.TraitStaff",steam:"PF2E.TraitSteam",structure:"PF2E.TraitStructure",tattoo:"PF2E.TraitTattoo",teleportation:"PF2E.TraitTeleportation",visual:"PF2E.TraitVisual",wand:"PF2E.TraitWand"};exports.equipmentTraits=equipmentTraits;const armorTraits={...alignmentTraits,...elementalTraits,...magicSchools,...magicTraditions,apex:"PF2E.TraitApex",artifact:"PF2E.TraitArtifact",auditory:"PF2E.TraitAuditory",bulwark:"PF2E.TraitBulwark",clockwork:"PF2E.TraitClockwork",comfort:"PF2E.TraitComfort",cursed:"PF2E.TraitCursed",extradimensional:"PF2E.TraitExtradimensional",focused:"PF2E.TraitFocused",force:"PF2E.TraitForce",flexible:"PF2E.TraitFlexible",intelligent:"PF2E.TraitIntelligent",invested:"PF2E.TraitInvested",light:"PF2E.TraitLight",magical:"PF2E.TraitMagical",noisy:"PF2E.TraitNoisy"};exports.armorTraits=armorTraits},18235:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.combineTerms=exports.DicePF2e=void 0;const _util_1=__webpack_require__(6945);function combineTerms(formula){const roll=new Roll(formula);if(!roll.terms.every((t=>" + "===t.expression||t instanceof Die||t instanceof NumericTerm)))return roll;const diceByFaces=roll.terms.filter((term=>term instanceof Die)).reduce(((counts,die)=>{var _a;return counts[die.faces]=(null!==(_a=counts[die.faces])&&void 0!==_a?_a:0)+die.number,counts}),{}),stringTerms=[4,6,8,10,12,20].reduce(((terms,faces)=>"number"==typeof diceByFaces[faces]?[...terms,`${diceByFaces[faces]}d${faces}`]:terms),[]),constant=roll.terms.filter((term=>term instanceof NumericTerm)).reduce(((runningTotal,term)=>runningTotal+term.number),0);return new Roll([...stringTerms,constant].filter((term=>0!==term)).join("+"))}exports.DicePF2e=class DicePF2e{static async d20Roll({event,item=null,parts,data,template,title,speaker,flavor,onClose,dialogOptions,rollMode=game.settings.get("core","rollMode"),rollType=""}){const userSettingQuickD20Roll=!game.user.settings.showRollDialogs,_roll=(rollParts,adv,$form)=>{let flav=flavor instanceof Function?flavor(rollParts,data):title;1===adv?(rollParts[0]=["2d20kh"],flav=game.i18n.format("PF2E.Roll.MisfortuneTitle",{title})):-1===adv&&(rollParts[0]=["2d20kl"],flav=game.i18n.format("PF2E.Roll.MisfortuneTitle",{title})),$form&&(data.itemBonus=$form.find("[name=itemBonus]").val()),data.itemBonus&&0!==data.itemBonus||-1===rollParts.indexOf("@itemBonus")||rollParts.splice(rollParts.indexOf("@itemBonus"),1),$form&&(data.statusBonus=$form.find("[name=statusBonus]").val()),data.statusBonus&&0!==data.statusBonus||-1===rollParts.indexOf("@statusBonus")||rollParts.splice(rollParts.indexOf("@statusBonus"),1),$form&&(data.circumstanceBonus=$form.find("[name=circumstanceBonus]").val()),data.circumstanceBonus&&0!==data.circumstanceBonus||-1===rollParts.indexOf("@circumstanceBonus")||rollParts.splice(rollParts.indexOf("@circumstanceBonus"),1);const roll=new Roll(rollParts.join("+"),data).roll({async:!1}),origin=item?{uuid:item.uuid,type:item.type}:null;return roll.toMessage({speaker,flavor:flav,flags:{pf2e:{context:{type:rollType},origin}}},{rollMode:$form?$form.find("[name=rollMode]").val():rollMode}),roll};if(parts.unshift("1d20"),userSettingQuickD20Roll&&!event.altKey&&!event.ctrlKey&&!event.metaKey&&!event.shiftKey||!userSettingQuickD20Roll&&event.shiftKey)return _roll(parts,0);if(event.ctrlKey||event.metaKey)return rollMode="blindroll",_roll(parts,0);if(event.shiftKey||!userSettingQuickD20Roll){-1===parts.indexOf("@circumstanceBonus")&&(parts=parts.concat(["@circumstanceBonus"])),-1===parts.indexOf("@itemBonus")&&(parts=parts.concat(["@itemBonus"])),-1===parts.indexOf("@statusBonus")&&(parts=parts.concat(["@statusBonus"])),template=template||"systems/pf2e/templates/chat/roll-dialog.html";const dialogData={data,rollMode,formula:parts.join(" + "),rollModes:CONFIG.Dice.rollModes},content=await renderTemplate(template,dialogData);let roll;return new Promise((resolve=>{new Dialog({title,content,buttons:{advantage:{label:game.i18n.localize("PF2E.Roll.Fortune"),callback:html=>{roll=_roll(parts,1,html)}},normal:{label:game.i18n.localize("PF2E.Roll.Normal"),callback:html=>{roll=_roll(parts,0,html)}},disadvantage:{label:game.i18n.localize("PF2E.Roll.Misfortune"),callback:html=>{roll=_roll(parts,-1,html)}}},default:game.i18n.localize("PF2E.Roll.Normal"),close:html=>{onClose&&onClose(html,parts,data),resolve(roll)}},dialogOptions).render(!0)}))}return _roll(parts,0)}static async damageRoll({event,item=null,partsCritOnly=[],parts,data,template="",title,speaker,flavor,critical=!1,onClose,dialogOptions,simplify=!1}){const defaultRollMode=game.settings.get("core","rollMode"),userSettingQuickD20Roll=!game.user.settings.showRollDialogs,_roll=async(rollParts,crit,$form)=>{$form&&(data.itemBonus=$form.find("[name=itemBonus]").val(),data.statusBonus=$form.find("[name=statusBonus]").val(),data.circumstanceBonus=$form.find("[name=circumstanceBonus]").val());for(const key of["itemBonus","statusBonus","circumstanceBonus"])if(!data[key]||0===data[key]){let index;const part=`@${key}`;index=rollParts.indexOf(part),-1!==index&&rollParts.splice(index,1),index=partsCritOnly.indexOf(part),-1!==index&&partsCritOnly.splice(index,1)}const rule=game.settings.get("pf2e","critRule"),formula=Roll.replaceFormulaData(rollParts.join("+"),data),baseRoll=simplify?combineTerms(formula):new Roll(formula);if(crit){if("doubledamage"===rule)rollParts=[`(${baseRoll.formula}) * 2`];else{rollParts=[new Roll(baseRoll.formula,data).alter(2,0,{multiplyNumeric:!0}).formula]}rollParts=rollParts.concat(partsCritOnly)}else rollParts=[baseRoll.formula];const roll=new Roll(rollParts.join("+"),data),flav=flavor instanceof Function?flavor(rollParts,data):title,traits=(null==item?void 0:item.isOfType("spell"))?this.getTraitMarkup(item):"",origin=item?{uuid:item.uuid,type:item.type}:null,rollMode=$form?$form.find("[name=rollMode]").val():defaultRollMode;return(await roll.toMessage({speaker,flavor:`${flav}\n${traits}`,flags:{pf2e:{origin}}},{rollMode})).rolls[0]};if(userSettingQuickD20Roll&&!event.shiftKey&&!event.ctrlKey&&!event.metaKey)return _roll(parts,event.altKey||critical);if(!userSettingQuickD20Roll&&(event.shiftKey||event.ctrlKey||event.metaKey))return _roll(parts,event.altKey||critical);parts.includes("@circumstanceBonus")||parts.push("@circumstanceBonus"),parts.includes("@itemBonus")||parts.push("@itemBonus"),parts.includes("@statusBonus")||parts.push("@statusBonus"),template=template||"systems/pf2e/templates/chat/roll-dialog.html";const dialogData={data,rollMode:defaultRollMode,formula:parts.join(" + "),rollModes:CONFIG.Dice.rollModes};let roll;return new Promise((resolve=>{renderTemplate(template,dialogData).then((async content=>{new Dialog({title,content,buttons:{critical:{condition:critical,label:game.i18n.localize("PF2E.Roll.CriticalHit"),callback:async html=>{roll=await _roll(parts,!0,html)}},normal:{label:critical?game.i18n.localize("PF2E.Roll.Normal"):game.i18n.localize("PF2E.Roll.Roll"),callback:async html=>{roll=await _roll(parts,!1,html)}}},default:game.i18n.localize("PF2E.Roll.Normal"),close:html=>{onClose&&onClose(html,parts,data),resolve(roll)}},dialogOptions).render(!0)}))}))}alter(add,multiply){var _a;const rgx=new RegExp(DiceTerm.REGEXP,"g");if(this._rolled)throw(0,_util_1.ErrorPF2e)("You may not alter a Roll which has already been rolled");return this.terms=null===(_a=this.terms)||void 0===_a?void 0:_a.map((t=>t.replace(rgx,((_match,nd,d,mods)=>`${nd=nd*(multiply||1)+(add||0)}d${d}${mods=mods||""}`)))),this}static getTraitMarkup(spell){const allSpellTraits={...CONFIG.PF2E.magicSchools,...CONFIG.PF2E.magicTraditions,...CONFIG.PF2E.spellTraits},traitDescriptions=CONFIG.PF2E.traitsDescriptions;return[...spell.traits].map((trait=>{var _a;return{value:trait,label:game.i18n.localize(allSpellTraits[trait]),description:null!==(_a=traitDescriptions[trait])&&void 0!==_a?_a:""}})).sort(((a,b)=>a.label.localeCompare(b.label))).map((trait=>$("<span>").addClass("tag").attr({"data-trait":trait.value,"data-description":trait.description}).text(trait.label))).reduce((($traits,$trait)=>$traits.append($trait)),$("<div>").addClass("item-properties").addClass("tags")).prop("outerHTML")}},exports.combineTerms=combineTerms},91105:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.registerHandlebarsHelpers=void 0;const helpers_1=__webpack_require__(73715),util_1=__webpack_require__(6945);exports.registerHandlebarsHelpers=function(){Handlebars.registerHelper("pad",((value,length,character)=>`${value}`.padStart(length,character))),Handlebars.registerHelper("add",((a,b)=>a+b)),Handlebars.registerHelper("if_all",((...args)=>{const opts=args.pop();let{fn}=opts;for(let i=0;i<args.length;++i)if(!args[i]){fn=opts.inverse;break}return fn()})),Handlebars.registerHelper("nor",((...args)=>!args.slice(0,-1).some((a=>!!a)))),Handlebars.registerHelper("any",((...args)=>{const opts=args.pop();return args.some((v=>!!v))?opts:opts.inverse})),Handlebars.registerHelper("disabled",(condition=>condition?"disabled":"")),Handlebars.registerHelper("coalesce",((...args)=>{var _a;return null!==(_a=args.find((arg=>null!=arg)))&&void 0!==_a?_a:null})),Handlebars.registerHelper("lower",(str=>String.prototype.toLowerCase.call(null!=str?str:""))),Handlebars.registerHelper("multiply",((a,b)=>a*b)),Handlebars.registerHelper("percentage",((value,max)=>100*value/max)),Handlebars.registerHelper("strip_tags",(value=>function(input,allowed){allowed=(`${allowed||""}`.toLowerCase().match(/<[a-z][a-z0-9]*>/g)||[]).join("");const tags=/<\/?([a-z0-9]*)\b[^>]*>?/gi,commentsAndPhpTags=/<!--[\s\S]*?-->|<\?(?:php)?[\s\S]*?\?>/gi;let before,after=(phpValue=>{if("string"==typeof phpValue)return phpValue;switch(typeof phpValue){case"boolean":return phpValue?"1":"";case"number":return Number.isNaN(phpValue)?"NAN":phpValue===1/0?(phpValue<0?"-":"")+"INF":`${phpValue}`;case"undefined":return"";case"object":return Array.isArray(phpValue)?"Array":null!==phpValue?"Object":"";default:throw new Error("Unsupported value type")}})(input);after="<"===after.substring(after.length-1)?after.substring(0,after.length-1):after;do{if(before=after,after=before.replace(commentsAndPhpTags,"").replace(tags,(($0,$1)=>allowed.indexOf(`<${$1.toLowerCase()}>`)>-1?$0:"")),before===after)return after}while(before!==after);return""}(String(value)))),Handlebars.registerHelper("ordinal",(function(value){return value=Number(value),isNaN(value)?null:(0,util_1.ordinal)(value)})),Handlebars.registerHelper("json",(html=>JSON.stringify(html))),Handlebars.registerHelper("actionGlyph",((value,options)=>{const glyph=(0,util_1.getActionGlyph)(null!=value?value:"");return glyph?`<span class="activity-icon">${glyph}</span>`:(null==options?void 0:options.hash.fallback)?Handlebars.escapeExpression(value):null})),Handlebars.registerHelper("concat",(function(...params){return params.slice(0,-1).join("")})),Handlebars.registerHelper("times",(function(count,block){const results=new Array;for(let i=0;i<count;i++)results.push(block.fn(i));return results.join("")})),Handlebars.registerHelper("developMode",(function(body){return""})),Handlebars.registerHelper("isNullish",(function(value){return null==value})),Handlebars.registerHelper("coinLabel",(function(value){return value?"value"in value?new helpers_1.CoinsPF2e(value.value):new helpers_1.CoinsPF2e(value):null})),Handlebars.registerHelper("contains",(function(arr,element){return Array.isArray(arr)&&arr.includes(element)}))}},16229:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.BabeleReady=void 0,exports.BabeleReady={listen(){Hooks.once("babele.ready",(()=>{game.pf2e.ConditionManager.initialize(!0)}))}}},11669:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.CanvasInit=void 0,exports.CanvasInit={listen:()=>{Hooks.on("canvasInit",(async canvas=>{SquareGrid.prototype.measureDistances=function(segments,options={}){if(!options.gridSpaces)return BaseGrid.prototype.measureDistances.call(this,segments,options);let nDiagonal=0;const d=canvas.dimensions;return segments.map((s=>{const r=s.ray,nx=Math.abs(Math.ceil(r.dx/d.size)),ny=Math.abs(Math.ceil(r.dy/d.size)),nd=Math.min(nx,ny),ns=Math.abs(ny-nx);nDiagonal+=nd;const nd10=Math.floor(nDiagonal/2)-Math.floor((nDiagonal-nd)/2);return(2*nd10+(nd-nd10)+ns)*canvas.dimensions.distance}))}}))}}},46851:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.CanvasReady=void 0,exports.CanvasReady={listen:()=>{Hooks.once("canvasReady",(async()=>{var _a,_b;await game.pf2e.ConditionManager.initialize();const tokenActors=null!==(_b=null===(_a=canvas.scene)||void 0===_a?void 0:_a.tokens.contents.flatMap((t=>{var _a;return null!==(_a=t.actor)&&void 0!==_a?_a:[]})))&&void 0!==_b?_b:[];for(const actor of tokenActors)for(const effect of actor.itemTypes.effect.filter((e=>e.fromAura)))game.pf2e.effectTracker.register(effect)})),Hooks.on("canvasReady",(()=>{game.pf2e.effectPanel.render(!0),canvas.scene&&(game.ready&&canvas.scene.reset(),CONFIG.MeasuredTemplate.defaults.angle=canvas.scene.hasHexGrid?60:90),Promise.resolve().then((async()=>{for(const token of canvas.tokens.placeables){const{visible}=token;await token.draw(),token.visible=visible}}))}))}}},82154:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.CloseCombatTrackerConfig=void 0,exports.CloseCombatTrackerConfig={listen:()=>{Hooks.on("closeCombatTrackerConfig",(async(_app,$html)=>{const newIcon=String($html.find('input[name="deathIcon"]').val()).trim();newIcon&&newIcon!==game.settings.get("pf2e","deathIcon")&&await game.settings.set("pf2e","deathIcon",newIcon);const currentDeadAtZero=game.settings.get("pf2e","automation.actorsDeadAtZero"),newDeadAtZero=String($html.find('select[name="actorsDeadAtZero"]').val());currentDeadAtZero!==newDeadAtZero&&await game.settings.set("pf2e","automation.actorsDeadAtZero",newDeadAtZero)}))}}},45359:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.CloseWorldClockSettings=void 0,exports.CloseWorldClockSettings={listen:()=>{Hooks.on("closeWorldClockSettings",(()=>{game.user.isGM&&game.socket.emit("system.pf2e",{request:"refreshSceneControls",data:{layer:"TokenLayer"}})}))}}},46636:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.DiceSoNiceReady=void 0;exports.DiceSoNiceReady={listen:()=>{Hooks.once("diceSoNiceReady",(dice3d=>{if((obj=dice3d)instanceof Object&&["addSystem","addDicePreset","addTexture","addColorset"].every((m=>m in obj))){var obj;dice3d.addSystem({id:"basic",name:"Dicefinder Basic",colorset:"basic"});for(const faces of[4,6,8,10,12])dice3d.addDicePreset({type:`d${faces}`,labels:[...Array(faces)].map(((_value,idx)=>String(idx+1))),system:"basic",colorset:"basic"});dice3d.addDicePreset({type:"d20",labels:["1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","systems/pf2e/dice/basic/nat20.webp"],system:"basic",colorset:"basic"}),dice3d.addDicePreset({type:"dc",labels:["systems/pf2e/dice/basic/tail.webp","systems/pf2e/dice/basic/heads.webp"],system:"basic",colorset:"basic"}),dice3d.addDicePreset({type:"d2",labels:["systems/pf2e/dice/basic/tail_bump.webp","systems/pf2e/dice/basic/heads_bump.webp"],system:"basic",colorset:"basic"}),dice3d.addDicePreset({type:"d100",labels:[...Array(10)].map(((_value,idx)=>String(10*(idx+1)))),system:"basic",colorset:"basic"}),dice3d.addDicePreset({type:"df",labels:["-","","+"],system:"basic",colorset:"basic"}),dice3d.addTexture("PFred",{name:"Pathfinder Red",composite:"source-over",source:"systems/pf2e/dice/texture/texture.webp"}).then((()=>{dice3d.addColorset({name:"basic",description:"Dicefinder Basic",category:"Pathfinder 2e",texture:"PFred",material:"metal",foreground:"#f9b96e",outline:"none",edge:"#f9b96e",visibility:"hidden"})})),dice3d.addSystem({id:"campaign",name:"Dicefinder Campaign",colorset:"campaign"}),dice3d.addDicePreset({type:"dc",labels:["systems/pf2e/dice/basic/tail.webp","systems/pf2e/dice/basic/heads.webp"],system:"campaign",colorset:"campaign"}),dice3d.addDicePreset({type:"d2",labels:["systems/pf2e/dice/basic/tail_bump.webp","systems/pf2e/dice/basic/heads_bump.webp"],system:"campaign",colorset:"campaign"}),dice3d.addDicePreset({type:"d4",labels:["systems/pf2e/dice/campaign/d4/d4-1.webp","systems/pf2e/dice/campaign/d4/d4-2.webp","systems/pf2e/dice/campaign/d4/d4-3.webp","systems/pf2e/dice/campaign/d4/d4-4.webp"],system:"campaign",colorset:"campaign"}),dice3d.addDicePreset({type:"d6",labels:["systems/pf2e/dice/campaign/d6/d6-1.webp","systems/pf2e/dice/campaign/d6/d6-2.webp","systems/pf2e/dice/campaign/d6/d6-3.webp","systems/pf2e/dice/campaign/d6/d6-4.webp","systems/pf2e/dice/campaign/d6/d6-5.webp","systems/pf2e/dice/campaign/d6/d6-6.webp"],system:"campaign",colorset:"campaign"}),dice3d.addDicePreset({type:"df",labels:["systems/pf2e/dice/campaign/df/dfm.webp","systems/pf2e/dice/campaign/df/df.webp","systems/pf2e/dice/campaign/df/dfp.webp"],system:"campaign",colorset:"campaign"}),dice3d.addDicePreset({type:"d8",labels:["systems/pf2e/dice/campaign/d8/d8-1.webp","systems/pf2e/dice/campaign/d8/d8-2.webp","systems/pf2e/dice/campaign/d8/d8-3.webp","systems/pf2e/dice/campaign/d8/d8-4.webp","systems/pf2e/dice/campaign/d8/d8-5.webp","systems/pf2e/dice/campaign/d8/d8-6.webp","systems/pf2e/dice/campaign/d8/d8-7.webp","systems/pf2e/dice/campaign/d8/d8-P.webp"],system:"campaign",colorset:"campaign"}),dice3d.addDicePreset({type:"d10",labels:["systems/pf2e/dice/campaign/d10/d10-1.webp","systems/pf2e/dice/campaign/d10/d10-2.webp","systems/pf2e/dice/campaign/d10/d10-3.webp","systems/pf2e/dice/campaign/d10/d10-4.webp","systems/pf2e/dice/campaign/d10/d10-5.webp","systems/pf2e/dice/campaign/d10/d10-6.webp","systems/pf2e/dice/campaign/d10/d10-7.webp","systems/pf2e/dice/campaign/d10/d10-8.webp","systems/pf2e/dice/campaign/d10/d10-9.webp","systems/pf2e/dice/campaign/d10/d10-10.webp"],system:"campaign",colorset:"campaign"}),dice3d.addDicePreset({type:"d12",labels:["systems/pf2e/dice/campaign/d12/d12-1.webp","systems/pf2e/dice/campaign/d12/d12-2.webp","systems/pf2e/dice/campaign/d12/d12-3.webp","systems/pf2e/dice/campaign/d12/d12-4.webp","systems/pf2e/dice/campaign/d12/d12-5.webp","systems/pf2e/dice/campaign/d12/d12-6.webp","systems/pf2e/dice/campaign/d12/d12-7.webp","systems/pf2e/dice/campaign/d12/d12-8.webp","systems/pf2e/dice/campaign/d12/d12-9.webp","systems/pf2e/dice/campaign/d12/d12-10.webp","systems/pf2e/dice/campaign/d12/d12-11.webp","systems/pf2e/dice/campaign/d12/d12-12.webp"],system:"campaign",colorset:"campaign"}),dice3d.addDicePreset({type:"d100",labels:["systems/pf2e/dice/campaign/d100/d100-10.webp","systems/pf2e/dice/campaign/d100/d100-20.webp","systems/pf2e/dice/campaign/d100/d100-30.webp","systems/pf2e/dice/campaign/d100/d100-40.webp","systems/pf2e/dice/campaign/d100/d100-50.webp","systems/pf2e/dice/campaign/d100/d100-60.webp","systems/pf2e/dice/campaign/d100/d100-70.webp","systems/pf2e/dice/campaign/d100/d100-80.webp","systems/pf2e/dice/campaign/d100/d100-90.webp","systems/pf2e/dice/campaign/d100/d100-100.webp"],system:"campaign",colorset:"campaign"}),dice3d.addDicePreset({type:"d20",labels:["systems/pf2e/dice/campaign/d20/d20-1.webp","systems/pf2e/dice/campaign/d20/d20-2.webp","systems/pf2e/dice/campaign/d20/d20-3.webp","systems/pf2e/dice/campaign/d20/d20-4.webp","systems/pf2e/dice/campaign/d20/d20-5.webp","systems/pf2e/dice/campaign/d20/d20-6.webp","systems/pf2e/dice/campaign/d20/d20-7.webp","systems/pf2e/dice/campaign/d20/d20-8.webp","systems/pf2e/dice/campaign/d20/d20-9.webp","systems/pf2e/dice/campaign/d20/d20-10.webp","systems/pf2e/dice/campaign/d20/d20-11.webp","systems/pf2e/dice/campaign/d20/d20-12.webp","systems/pf2e/dice/campaign/d20/d20-13.webp","systems/pf2e/dice/campaign/d20/d20-14.webp","systems/pf2e/dice/campaign/d20/d20-15.webp","systems/pf2e/dice/campaign/d20/d20-16.webp","systems/pf2e/dice/campaign/d20/d20-17.webp","systems/pf2e/dice/campaign/d20/d20-18.webp","systems/pf2e/dice/campaign/d20/d20-19.webp","systems/pf2e/dice/campaign/d20/d20-20.webp"],system:"campaign",colorset:"campaign"}),dice3d.addTexture("stoneD4",{name:"Pathfinder Stone (D4)",composite:"source-over",source:"systems/pf2e/dice/texture/d4.webp"}).then((()=>{dice3d.addColorset({name:"campaign",description:"Dicefinder Campaign",category:"Pathfinder 2e",texture:"stoneD4",material:"stone",foreground:"#5c2f00",outline:"none",edge:"#f9b96e",visibility:"hidden"})})),dice3d.addSystem({id:"darkmode",name:"Dicefinder Dark Mode",colorset:"darkmode"});for(const faces of[4,6,8,10,12])dice3d.addDicePreset({type:`d${faces}`,labels:[...Array(faces)].map(((_value,idx)=>String(idx+1))),system:"darkmode",colorset:"darkmode"});dice3d.addDicePreset({type:"d100",labels:[...Array(10)].map(((_value,idx)=>String(10*(idx+1)))),system:"darkmode",colorset:"darkmode"}),dice3d.addDicePreset({type:"df",labels:["-","","+"],system:"darkmode",colorset:"darkmode"}),dice3d.addDicePreset({type:"d20",labels:["1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","systems/pf2e/dice/basic/nat20.webp"],system:"darkmode",colorset:"darkmode"}),dice3d.addDicePreset({type:"dc",labels:["systems/pf2e/dice/basic/tail.webp","systems/pf2e/dice/basic/heads.webp"],system:"darkmode",colorset:"darkmode"}),dice3d.addDicePreset({type:"d2",labels:["systems/pf2e/dice/basic/tail_bump.webp","systems/pf2e/dice/basic/heads_bump.webp"],system:"darkmode",colorset:"darkmode"}),dice3d.addTexture("darkModeBlack",{name:"Dark Mode Black",composite:"source-over",source:"systems/pf2e/dice/texture/transparent.webp"}).then((()=>{dice3d.addColorset({name:"darkmode",description:"Dicefinder Dark Mode",category:"Pathfinder 2e",texture:"darkModeBlack",material:"metal",foreground:"#f9b96e",outline:"none",edge:"#f9b96e",visibility:"hidden"})}))}}))}}},12535:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.DropCanvasData=void 0,exports.DropCanvasData={listen:()=>{Hooks.on("dropCanvasData",((_canvas,data)=>{const dropTarget=[...canvas.tokens.placeables].sort(((a,b)=>b.document.sort-a.document.sort)).find((token=>{var _a,_b,_c,_d;const maximumX=token.x+(null!==(_b=null===(_a=token.hitArea)||void 0===_a?void 0:_a.right)&&void 0!==_b?_b:0),maximumY=token.y+(null!==(_d=null===(_c=token.hitArea)||void 0===_c?void 0:_c.bottom)&&void 0!==_d?_d:0);return data.x>=token.x&&data.y>=token.y&&data.x<=maximumX&&data.y<=maximumY}));return!(null==dropTarget?void 0:dropTarget.actor)||"Item"!==data.type||(dropTarget.actor.sheet.emulateItemDrop(data),!1)}))}}},55291:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.GetSceneControlButtons=void 0;const scene_darkness_adjuster_1=__webpack_require__(39940);exports.GetSceneControlButtons={listen:()=>{Hooks.on("getSceneControlButtons",(controls=>{var _a;const tokenTools=null===(_a=controls.find((c=>"token"===c.name)))||void 0===_a?void 0:_a.tools;null==tokenTools||tokenTools.push({name:"worldclock",title:"CONTROLS.WorldClock",icon:"fas fa-clock",button:!0,visible:game.settings.get("pf2e","worldClock.showClockButton")&&(game.user.isGM||game.settings.get("pf2e","worldClock.playersCanView")),onClick:()=>{game.pf2e.worldClock.rendered?game.pf2e.worldClock.close({force:!0}):game.pf2e.worldClock.render(!0)}});const lightingControls=controls.find((c=>"lighting"===c.name)),lightingTools=null==lightingControls?void 0:lightingControls.tools,dayTool=null==lightingTools?void 0:lightingTools.find((tool=>"day"===tool.name));if(!(lightingControls&&lightingTools&&dayTool))return;lightingControls.visible&&scene_darkness_adjuster_1.SceneDarknessAdjuster.instance.rendered&&scene_darkness_adjuster_1.SceneDarknessAdjuster.instance.close({force:!0});const adjusterTool={name:"darkness-adjuster",title:"CONTROLS.AdjustSceneDarkness",icon:"fa-solid fa-adjust",visible:game.user.isGM&&game.settings.get("pf2e","automation.rulesBasedVision"),toggle:!0,active:!1,onClick:()=>{const adjuster=scene_darkness_adjuster_1.SceneDarknessAdjuster.instance;adjuster.rendered?adjuster.close({force:!0}):adjuster.render(!0)}},gmVisionTool=(()=>{var _a,_b;const binding=null===(_b=null===(_a=game.keybindings.actions.get("pf2e.gm-vision"))||void 0===_a?void 0:_a.editable)||void 0===_b?void 0:_b[0];if(!binding||!game.user.isGM)return null;const gmVisionLabel=game.i18n.localize("PF2E.Keybinding.GMVision.Label"),bindingLabel=KeybindingsConfig._humanizeBinding(binding),gmVisionIcon=(active=game.settings.get("pf2e","gmVision"))=>active?"fa-solid fa-lightbulb-cfl-on":"fa-solid fa-lightbulb-cfl";return{name:"gm-vision",title:`${gmVisionLabel} [${bindingLabel}]`,icon:gmVisionIcon(),visible:game.user.isGM,toggle:!0,active:game.settings.get("pf2e","gmVision"),onClick:()=>{var _a;const newStatus=!game.settings.get("pf2e","gmVision");game.settings.set("pf2e","gmVision",newStatus);const toggle=null===(_a=ui.controls.control)||void 0===_a?void 0:_a.tools.find((t=>"gm-vision"===t.name));toggle&&(toggle.active=newStatus,toggle.icon=gmVisionIcon(newStatus),ui.controls.render())}}})(),tools=[adjusterTool,null!=gmVisionTool?gmVisionTool:[]].flat();lightingTools.splice(null==lightingTools?void 0:lightingTools.indexOf(dayTool),0,...tools)}))}}},57399:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.HooksPF2e=void 0;const babele_ready_1=__webpack_require__(16229),canvas_init_1=__webpack_require__(11669),canvas_ready_1=__webpack_require__(46851),close_combat_tracker_config_1=__webpack_require__(82154),close_world_clock_settings_1=__webpack_require__(45359),dice_so_nice_ready_1=__webpack_require__(46636),drop_canvas_data_1=__webpack_require__(12535),get_scene_control_buttons_1=__webpack_require__(55291),init_1=__webpack_require__(6318),lighting_refresh_1=__webpack_require__(68743),load_1=__webpack_require__(36081),ready_1=__webpack_require__(41558),render_actor_directory_1=__webpack_require__(83671),render_chat_message_1=__webpack_require__(37538),render_combat_tracker_config_1=__webpack_require__(41471),render_dialog_1=__webpack_require__(11287),render_journal_page_sheet_1=__webpack_require__(7109),render_journal_text_page_sheet_1=__webpack_require__(97451),render_settings_1=__webpack_require__(37870),render_token_hud_1=__webpack_require__(80138),setup_1=__webpack_require__(14869),update_world_time_1=__webpack_require__(98488);exports.HooksPF2e={listen(){const listeners=[load_1.Load,babele_ready_1.BabeleReady,canvas_init_1.CanvasInit,canvas_ready_1.CanvasReady,close_combat_tracker_config_1.CloseCombatTrackerConfig,close_world_clock_settings_1.CloseWorldClockSettings,dice_so_nice_ready_1.DiceSoNiceReady,drop_canvas_data_1.DropCanvasData,get_scene_control_buttons_1.GetSceneControlButtons,init_1.Init,lighting_refresh_1.LightingRefresh,ready_1.Ready,render_actor_directory_1.RenderActorDirectory,render_chat_message_1.RenderChatMessage,render_combat_tracker_config_1.RenderCombatTrackerConfig,render_dialog_1.RenderDialog,render_journal_page_sheet_1.RenderJournalPageSheet,render_journal_text_page_sheet_1.RenderJournalTextPageSheet,render_settings_1.RenderSettings,render_token_hud_1.RenderTokenHUD,setup_1.Setup,update_world_time_1.UpdateWorldTime];for(const Listener of listeners)Listener.listen()}}},6318:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Init=void 0;const values_1=__webpack_require__(67189),ui_1=__webpack_require__(8320),hotbar_1=__webpack_require__(68049),canvas_1=__webpack_require__(85336),modes_1=__webpack_require__(38278),config_1=__webpack_require__(55643),handlebars_1=__webpack_require__(91105),register_fonts_1=__webpack_require__(30969),register_keybindings_1=__webpack_require__(45560),register_templates_1=__webpack_require__(61893),set_game_pf2e_1=__webpack_require__(54206),check_1=__webpack_require__(11848),roll_1=__webpack_require__(20129),settings_1=__webpack_require__(93896),_util_1=__webpack_require__(6945);exports.Init={listen:()=>{Hooks.once("init",(()=>{var _a,_b,_c;if(console.log("PF2e System | Initializing Pathfinder 2nd Edition System"),CONFIG.PF2E=config_1.PF2ECONFIG,null!==(_a=(_c=CONFIG.debug).ruleElement)&&void 0!==_a||(_c.ruleElement=!1),CONFIG.Dice.rolls.push(check_1.CheckRoll,check_1.StrikeAttackRoll,roll_1.DamageRoll),CONFIG.AmbientLight.layerClass=canvas_1.LightingLayerPF2e,CONFIG.AmbientLight.objectClass=canvas_1.AmbientLightPF2e,CONFIG.MeasuredTemplate.objectClass=canvas_1.MeasuredTemplatePF2e,CONFIG.MeasuredTemplate.layerClass=canvas_1.TemplateLayerPF2e,CONFIG.MeasuredTemplate.defaults.angle=90,CONFIG.MeasuredTemplate.defaults.width=1,CONFIG.Token.objectClass=canvas_1.TokenPF2e,CONFIG.Token.layerClass=canvas_1.TokenLayerPF2e,CONFIG.Canvas.groups.effects.groupClass=canvas_1.EffectsCanvasGroupPF2e,CONFIG.Canvas.layers.lighting.layerClass=canvas_1.LightingLayerPF2e,CONFIG.Canvas.layers.templates.layerClass=canvas_1.TemplateLayerPF2e,CONFIG.Canvas.layers.tokens.layerClass=canvas_1.TokenLayerPF2e,(0,modes_1.setPerceptionModes)(),CONFIG.time.roundTime=6,CONFIG.Combat.initiative.decimals=0,CONFIG.ui.actors=ui_1.ActorDirectoryPF2e,CONFIG.ui.combat=ui_1.EncounterTrackerPF2e,CONFIG.ui.chat=ui_1.ChatLogPF2e,CONFIG.ui.compendium=ui_1.CompendiumDirectoryPF2e,CONFIG.ui.hotbar=hotbar_1.HotbarPF2e,CONFIG.specialStatusEffects.BLIND="blinded",null!==document.querySelector("#ui-top")){const uiTop=document.querySelector("#ui-top"),template=document.createElement("template");template.setAttribute("id","pf2e-effects-panel"),null==uiTop||uiTop.insertAdjacentElement("afterend",template)}CONFIG.TinyMCE.extended_valid_elements="pf2-action[action|glyph]",CONFIG.TinyMCE.content_css=CONFIG.TinyMCE.content_css.concat("systems/pf2e/styles/main.css"),CONFIG.TinyMCE.style_formats=(null!==(_b=CONFIG.TinyMCE.style_formats)&&void 0!==_b?_b:[]).concat({title:"PF2E",items:[{title:"Icons A D T F R",inline:"span",classes:["pf2-icon"],wrapper:!0},{title:"Inline Header",block:"h4",classes:"inline-header"},{title:"Info Block",block:"section",classes:"info",wrapper:!0,exact:!0,merge_siblings:!1},{title:"Stat Block",block:"section",classes:"statblock",wrapper:!0,exact:!0,merge_siblings:!1},{title:"Trait",block:"section",classes:"traits",wrapper:!0},{title:"Written Note",block:"p",classes:"message"},{title:"GM Text Block",block:"div",wrapper:!0,attributes:{"data-visibility":"gm"}},{title:"GM Text Inline",inline:"span",attributes:{"data-visibility":"gm"}}]}),CONFIG.TextEditor.enrichers.push({pattern:new RegExp("@(Check|Localize|Template)\\[([^\\]]+)\\](?:{([^}]+)})?","g"),enricher:(match,options)=>game.pf2e.TextEditor.enrichString(match,options)}),(0,register_fonts_1.registerFonts)(),(0,handlebars_1.registerHandlebarsHelpers)(),(0,register_keybindings_1.registerKeybindings)(),(0,settings_1.registerSettings)(),(0,register_templates_1.registerTemplates)(),values_1.MystifiedTraits.compile(),set_game_pf2e_1.SetGamePF2e.onInit();for(const element of(0,_util_1.htmlQueryAll)(document.head,"link[rel=stylesheet]")){const href=element.getAttribute("href");(null==href?void 0:href.startsWith("modules/"))&&href.endsWith("tagify.css")&&element.setAttribute("disabled","")}}))}}},68743:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.LightingRefresh=void 0;const scene_darkness_adjuster_1=__webpack_require__(39940);exports.LightingRefresh={listen:()=>{Hooks.on("lightingRefresh",(()=>{scene_darkness_adjuster_1.SceneDarknessAdjuster.instance.onLightingRefresh(canvas.darknessLevel)}))}}},36081:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Load=void 0;const _actor_1=__webpack_require__(85530),automatic_bonus_progression_1=__webpack_require__(7908),_item_1=__webpack_require__(10843),active_effect_1=__webpack_require__(2680),chat_message_1=__webpack_require__(40405),actors_1=__webpack_require__(44642),encounter_1=__webpack_require__(49938),macro_1=__webpack_require__(49151),user_1=__webpack_require__(81781),_scene_1=__webpack_require__(12789),____1=__webpack_require__(41019);exports.Load={listen(){CONFIG.ActiveEffect.documentClass=active_effect_1.ActiveEffectPF2e,CONFIG.Actor.collection=actors_1.ActorsPF2e,CONFIG.Actor.documentClass=_actor_1.ActorPF2e,CONFIG.AmbientLight.documentClass=_scene_1.AmbientLightDocumentPF2e,CONFIG.ChatMessage.documentClass=chat_message_1.ChatMessagePF2e,CONFIG.Combat.documentClass=encounter_1.EncounterPF2e,CONFIG.Combatant.documentClass=encounter_1.CombatantPF2e,CONFIG.Item.documentClass=_item_1.ItemPF2e,CONFIG.Macro.documentClass=macro_1.MacroPF2e,CONFIG.MeasuredTemplate.documentClass=_scene_1.MeasuredTemplateDocumentPF2e,CONFIG.Scene.documentClass=_scene_1.ScenePF2e,CONFIG.Tile.documentClass=_scene_1.TileDocumentPF2e,CONFIG.Token.documentClass=_scene_1.TokenDocumentPF2e,CONFIG.Token.prototypeSheetClass=_scene_1.TokenConfigPF2e,CONFIG.User.documentClass=user_1.UserPF2e,Actor.DEFAULT_ICON="systems/pf2e/icons/default-icons/mystery-man.svg",Roll.MATH_PROXY=mergeObject(Roll.MATH_PROXY,{eq:(a,b)=>a===b,gt:(a,b)=>a>b,gte:(a,b)=>a>=b,lt:(a,b)=>a<b,lte:(a,b)=>a<=b,ne:(a,b)=>a!==b,ternary:(condition,ifTrue,ifFalse)=>condition?ifTrue:ifFalse}),window.AutomaticBonusProgression=automatic_bonus_progression_1.AutomaticBonusProgression,(0,____1.monkeyPatchFoundry)(),document.addEventListener("mouseup",(()=>{const element=document.activeElement;element instanceof HTMLButtonElement&&!element.classList.contains("pm-dropdown")&&element.blur()}))}}},41558:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Ready=void 0;const helpers_1=__webpack_require__(89503),migration_summary_1=__webpack_require__(96735),scene_darkness_adjuster_1=__webpack_require__(39940),set_as_initiative_1=__webpack_require__(938),migration_1=__webpack_require__(63051),runner_1=__webpack_require__(46842),register_module_art_1=__webpack_require__(88786),set_game_pf2e_1=__webpack_require__(54206),socket_1=__webpack_require__(33684),store_versions_1=__webpack_require__(32268),dragstart_handler_1=__webpack_require__(61529);exports.Ready={listen:()=>{Hooks.once("ready",(()=>{var _a;console.log("PF2e System | Starting Pathfinder 2nd Edition System"),console.debug("PF2e System | Build mode: production");const currentVersion=game.settings.get("pf2e","worldSchemaVersion");(0,store_versions_1.storeInitialWorldVersions)().then((async()=>{if(!game.user.hasRole(CONST.USER_ROLES.GAMEMASTER))return;const migrationRunner=new runner_1.MigrationRunner(migration_1.MigrationList.constructFromVersion(currentVersion));migrationRunner.needsMigration()&&(currentVersion&&currentVersion<runner_1.MigrationRunner.MINIMUM_SAFE_VERSION&&ui.notifications.error("Your PF2E system data is from too old a Foundry version and cannot be reliably migrated to the latest version. The process will be attempted, but errors may occur.",{permanent:!0}),await migrationRunner.runMigration(),(new migration_summary_1.MigrationSummary).render(!0));const previous=game.settings.get("pf2e","worldSystemVersion"),current=game.system.version;foundry.utils.isNewerVersion(current,previous)&&await game.settings.set("pf2e","worldSystemVersion",current);const abandonedModules=new Set(["foundry_community_macros","pf2e-lootgen","pf2e-toolbox"]),subV9Modules=Array.from(game.modules.values()).filter((m=>m.active&&(m.esmodules.size>0||m.scripts.size>0)&&!!m.compatibility.verified&&(abandonedModules.has(m.id)||!foundry.utils.isNewerVersion(m.compatibility.verified,"0.8.9"))));for(const badModule of subV9Modules){const message=game.i18n.format("PF2E.ErrorMessage.SubV9Module",{module:badModule.title});ui.notifications.warn(message),console.warn(message)}}));for(const li of document.querySelectorAll("#chat-log > li"))set_as_initiative_1.SetAsInitiative.listen($(li));(0,socket_1.activateSocketListener)(),(0,dragstart_handler_1.extendDragData)(),set_game_pf2e_1.SetGamePF2e.onReady(),canvas.ready&&game.user.isGM&&!(null===(_a=game.modules.get("perfect-vision"))||void 0===_a?void 0:_a.active)&&game.settings.get("pf2e","gmVision")&&(CONFIG.Canvas.darknessColor=CONFIG.PF2E.Canvas.darkness.gmVision,canvas.colorManager.initialize()),game.pf2e.ConditionManager.initialize(),game.scenes.apps.push(scene_darkness_adjuster_1.SceneDarknessAdjuster.instance),game.system.documentTypes.Item.sort(((typeA,typeB)=>{var _a,_b;return game.i18n.localize(null!==(_a=CONFIG.Item.typeLabels[typeA])&&void 0!==_a?_a:"").localeCompare(game.i18n.localize(null!==(_b=CONFIG.Item.typeLabels[typeB])&&void 0!==_b?_b:""))})),(0,register_module_art_1.registerModuleArt)();const participants=game.combats.contents.flatMap((e=>e.combatants.contents)),fightyActors=new Set(participants.flatMap((c=>{var _a;return null!==(_a=c.actor)&&void 0!==_a?_a:[]})));(0,helpers_1.resetAndRerenderActors)(fightyActors);for(const familiar of game.actors.filter((a=>"familiar"===a.type)))familiar.reset();Hooks.callAll("pf2e.systemReady")}))}}},83671:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.RenderActorDirectory=void 0,exports.RenderActorDirectory={listen:()=>{Hooks.on("renderActorDirectory",(async()=>{game.ready&&game.pf2e.compendiumBrowser.injectActorDirectory()}))}}},37538:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.RenderChatMessage=void 0;const chat_message_1=__webpack_require__(40405),cards_1=__webpack_require__(60780),degree_of_success_1=__webpack_require__(7066),set_as_initiative_1=__webpack_require__(938),inline_roll_links_1=__webpack_require__(27542),_util_1=__webpack_require__(6945);exports.RenderChatMessage={listen:()=>{Hooks.on("renderChatMessage",(async(message,$html)=>{var _a;if(!(message instanceof chat_message_1.ChatMessagePF2e))return;const html=$html[0],targetDC=html.querySelector(".target-dc");""===(null==targetDC?void 0:targetDC.innerHTML.trim())&&targetDC.remove();const dcResult=html.querySelector(".dc-result");""===(null==dcResult?void 0:dcResult.innerHTML.trim())&&dcResult.remove(),cards_1.ChatCards.listen($html),inline_roll_links_1.InlineRollLinks.listen($html[0],message),degree_of_success_1.DegreeOfSuccessHighlights.listen(message,$html),canvas.ready&&set_as_initiative_1.SetAsInitiative.listen($html);try{const $adjustedDC=$html.find(".adjusted-dc[data-circumstances]");if(1===$adjustedDC.length){const circumstances=JSON.parse(null!==(_a=$adjustedDC.attr("data-circumstances"))&&void 0!==_a?_a:"");if(!Array.isArray(circumstances))throw(0,_util_1.ErrorPF2e)("Malformed adjustments array");const content=circumstances.map((a=>{const sign=a.value>=0?"+":"";return $("<div>").text(`${a.label}: ${sign}${a.value}`)})).reduce((($concatted,$a)=>$concatted.append($a)),$("<div>")).prop("outerHTML");$adjustedDC.tooltipster({content,contentAsHTML:!0,theme:"crb-hover"})}}catch(error){error instanceof Error&&console.error(error.message)}$html.find(".tag[data-material], .tag[data-slug], .tag[data-trait]").each(((_idx,span)=>{const $tag=$(span),description=$tag.attr("data-description");description&&$tag.tooltipster({content:game.i18n.localize(description),maxWidth:400,theme:"crb-hover"})}))}))}}},41471:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.RenderCombatTrackerConfig=void 0,exports.RenderCombatTrackerConfig={listen:()=>{Hooks.on("renderCombatTrackerConfig",(async(app,$html)=>{$("#combat-config").css({height:""});const $formGroups=$html.find(".form-group"),$iconFormGroup=$formGroups.last().clone();$iconFormGroup.find("label").text(game.i18n.localize("PF2E.SETTINGS.DeathIcon.Name")),$iconFormGroup.find("p.notes").text(game.i18n.localize("PF2E.SETTINGS.DeathIcon.Hint"));const replacement=await renderTemplate("systems/pf2e/templates/sidebar/encounter-tracker/config.html",{value:game.settings.get("pf2e","deathIcon")});$iconFormGroup.find("input").replaceWith(replacement);const $deadAtZeroFormGroup=$formGroups.first().clone();$deadAtZeroFormGroup.find("label").text(game.i18n.localize("PF2E.SETTINGS.Automation.ActorsDeadAtZero.Name")),$deadAtZeroFormGroup.find("p.notes").text(game.i18n.localize("PF2E.SETTINGS.Automation.ActorsDeadAtZero.Hint"));const options=["neither","npcsOnly"].map((value=>$("<option>").val(value).text(game.i18n.localize(CONFIG.PF2E.SETTINGS.automation.actorsDeadAtZero[value])).prop("outerHTML"))).join("");$deadAtZeroFormGroup.find("select").attr({name:"actorsDeadAtZero"}).html(options).val(game.settings.get("pf2e","automation.actorsDeadAtZero")),$formGroups.last().after($iconFormGroup,$deadAtZeroFormGroup),app.activateListeners($html)}))}}},11287:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.RenderDialog=void 0;const values_1=__webpack_require__(66870),values_2=__webpack_require__(31225),inline_roll_links_1=__webpack_require__(27542),localize_1=__webpack_require__(41332);function extractOptGroup(select,label,types){const filtered=[...select.querySelectorAll(":scope > option").values()].filter((option=>!types||types.includes(option.value))),optgroup=document.createElement("optgroup");optgroup.label=label;for(const physicalElement of filtered)optgroup.appendChild(physicalElement);return optgroup}exports.RenderDialog={listen:()=>{Hooks.on("renderDialog",((_dialog,$html)=>{inline_roll_links_1.InlineRollLinks.listen($html);const element=$html[0];if(element.classList.contains("dialog-item-create")){const select=element.querySelector("select[name=type]"),categories=localize_1.LocalizePF2e.translations.PF2E.Item.CreationDialog.Categories;select&&(select.append(extractOptGroup(select,categories.Physical,[...values_1.PHYSICAL_ITEM_TYPES,"kit"])),select.append(extractOptGroup(select,categories.Character,Array.from(values_2.PC_ITEM_TYPES))),select.append(extractOptGroup(select,categories.Other)),select.querySelector("option").selected=!0)}}))}}},7109:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.RenderJournalPageSheet=void 0,exports.RenderJournalPageSheet={listen:()=>{Hooks.on("renderJournalPageSheet",((sheet,$html)=>{var _a;const pageEl=null===(_a=$html.get(0))||void 0===_a?void 0:_a.closest(".journal-entry-page"),entry=sheet.object.parent,parentSheetClass=null==entry?void 0:entry.sheet.constructor;if(!parentSheetClass||!pageEl)return;const theme=parentSheetClass.theme?String(parentSheetClass.theme):null;theme&&pageEl.classList.add(theme)}))}}},97451:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.RenderJournalTextPageSheet=void 0;const inline_roll_links_1=__webpack_require__(27542),user_visibility_1=__webpack_require__(96498);exports.RenderJournalTextPageSheet={listen:()=>{Hooks.on("renderJournalTextPageSheet",((sheet,$html)=>{const content=$html.filter(".journal-page-content").get(0);content&&(inline_roll_links_1.InlineRollLinks.listen(content,sheet.document),user_visibility_1.UserVisibilityPF2e.process(content,sheet))}))}}},37870:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.RenderSettings=void 0;const migration_summary_1=__webpack_require__(96735),_util_1=__webpack_require__(6945);exports.RenderSettings={listen:()=>{Hooks.on("renderSettings",(async(_app,$html)=>{var _a;const html=$html[0],systemRow=html.querySelector(".settings-sidebar li.system"),systemInfo=null==systemRow?void 0:systemRow.cloneNode(!1);if(!(systemInfo instanceof HTMLLIElement))throw(0,_util_1.ErrorPF2e)("Unexpected error attaching system information to settings sidebar");systemInfo.classList.remove("system"),systemInfo.classList.add("system-info");const links=[{url:"https://github.com/foundryvtt/pf2e/blob/release/CHANGELOG.md",label:"PF2E.SETTINGS.Sidebar.Changelog"},{url:"https://github.com/foundryvtt/pf2e/wiki",label:"PF2E.SETTINGS.Sidebar.Wiki"},{url:"https://discord.gg/SajryVzCyf",label:"PF2E.SETTINGS.Sidebar.Discord"}].map((data=>{const anchor=document.createElement("a");return anchor.href=data.url,anchor.innerText=game.i18n.localize(data.label),anchor.target="_blank",anchor}));if(systemInfo.append(...links),null==systemRow||systemRow.after(systemInfo),!game.user.hasRole("GAMEMASTER"))return;const license=document.createElement("div");license.id="pf2e-license";const licenseButton=document.createElement("button");licenseButton.type="button",licenseButton.append((0,_util_1.fontAwesomeIcon)("balance-scale"),game.i18n.localize("PF2E.LicenseViewer.Label")),licenseButton.addEventListener("click",(()=>{game.pf2e.licenseViewer.render(!0)})),license.append(licenseButton);const troubleshooting=document.createElement("div");troubleshooting.id="pf2e-troubleshooting";const shootButton=document.createElement("button");shootButton.type="button",shootButton.append((0,_util_1.fontAwesomeIcon)("wrench"),game.i18n.localize("PF2E.Migrations.Troubleshooting")),shootButton.addEventListener("click",(()=>{new migration_summary_1.MigrationSummary({troubleshoot:!0}).render(!0)})),troubleshooting.append(shootButton);const header=document.createElement("h2");header.innerText="Pathfinder 2e",null===(_a=html.querySelector("#settings-documentation"))||void 0===_a||_a.after(header,license,troubleshooting)}))}}},80138:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.RenderTokenHUD=void 0,exports.RenderTokenHUD={listen:()=>{Hooks.on("renderTokenHUD",((_app,$html,data)=>{game.pf2e.StatusEffects.onRenderTokenHUD($html[0],data)}))}}},14869:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.Setup=void 0;const localize_1=__webpack_require__(41332),register_sheets_1=__webpack_require__(89714),homebrew_1=__webpack_require__(27608),set_game_pf2e_1=__webpack_require__(54206);exports.Setup={listen:()=>{Hooks.once("setup",(()=>{localize_1.LocalizePF2e.ready=!0,(0,register_sheets_1.registerSheets)(),CONFIG.controlIcons.defeated=game.settings.get("pf2e","deathIcon"),game.pf2e.StatusEffects.initialize();const homebrew=new homebrew_1.HomebrewElements;homebrew.refreshTags(),homebrew.registerModuleTags(),set_game_pf2e_1.SetGamePF2e.onSetup(),game.settings.settings.get("core.chatBubblesPan").default=!1,game.settings.settings.get("core.notesDisplayToggle").default=!0;const defaultTokenSettingsDefaults=game.settings.settings.get("core.defaultToken").default;defaultTokenSettingsDefaults.displayName=CONST.TOKEN_DISPLAY_MODES.OWNER_HOVER,defaultTokenSettingsDefaults.displayBars=CONST.TOKEN_DISPLAY_MODES.OWNER_HOVER}))}}},98488:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.UpdateWorldTime=void 0,exports.UpdateWorldTime={listen:()=>{Hooks.on("updateWorldTime",(async(_total,diff)=>{var _a;(null===(_a=game.combat)||void 0===_a?void 0:_a.started)||game.pf2e.effectTracker.refresh({resetItemData:!0});const worldClock=game.pf2e.worldClock;setTimeout((()=>worldClock.render(!1)),1),await worldClock.animateDarkness(diff)}))}}},30889:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.getIncomeForLevel=exports.earnIncome=exports.calculateDC=void 0;const helpers_1=__webpack_require__(73715),dc_1=__webpack_require__(84372);Object.defineProperty(exports,"calculateDC",{enumerable:!0,get:function(){return dc_1.calculateDC}});const degree_of_success_1=__webpack_require__(54870);function buildRewards(...rewards){var _a,_b,_c;const[trained,expert,master,legendary]=rewards;return{1:new helpers_1.CoinsPF2e(trained),2:new helpers_1.CoinsPF2e(null!=expert?expert:trained),3:new helpers_1.CoinsPF2e(null!==(_a=null!=master?master:expert)&&void 0!==_a?_a:trained),4:new helpers_1.CoinsPF2e(null!==(_c=null!==(_b=null!=legendary?legendary:master)&&void 0!==_b?_b:expert)&&void 0!==_c?_c:trained)}}const earnIncomeTable={0:{failure:{cp:1},rewards:buildRewards({cp:5})},1:{failure:{cp:2},rewards:buildRewards({sp:2})},2:{failure:{cp:4},rewards:buildRewards({sp:3})},3:{failure:{cp:8},rewards:buildRewards({sp:5})},4:{failure:{sp:1},rewards:buildRewards({sp:7},{sp:8})},5:{failure:{sp:2},rewards:buildRewards({sp:9},{gp:1})},6:{failure:{sp:3},rewards:buildRewards({gp:1,sp:5},{gp:2})},7:{failure:{sp:4},rewards:buildRewards({gp:2},{gp:2,sp:5})},8:{failure:{sp:5},rewards:buildRewards({gp:2,sp:5},{gp:3})},9:{failure:{sp:6},rewards:buildRewards({gp:3},{gp:4})},10:{failure:{sp:7},rewards:buildRewards({gp:4},{gp:5},{gp:6})},11:{failure:{sp:8},rewards:buildRewards({gp:5},{gp:6},{gp:8})},12:{failure:{sp:9},rewards:buildRewards({gp:6},{gp:8},{gp:10})},13:{failure:{gp:1},rewards:buildRewards({gp:7},{gp:10},{gp:15})},14:{failure:{gp:1,sp:5},rewards:buildRewards({gp:8},{gp:15},{gp:20})},15:{failure:{gp:2},rewards:buildRewards({gp:10},{gp:20},{gp:28})},16:{failure:{gp:2,sp:5},rewards:buildRewards({gp:13},{gp:25},{gp:36},{gp:40})},17:{failure:{gp:3},rewards:buildRewards({gp:15},{gp:30},{gp:45},{gp:55})},18:{failure:{gp:4},rewards:buildRewards({gp:20},{gp:45},{gp:70},{gp:90})},19:{failure:{gp:6},rewards:buildRewards({gp:30},{gp:60},{gp:100},{gp:130})},20:{failure:{gp:8},rewards:buildRewards({gp:40},{gp:75},{gp:150},{gp:200})},21:{failure:{cp:0},rewards:buildRewards({gp:50},{gp:90},{gp:175},{gp:300})}};function getIncomeForLevel(level){const income=earnIncomeTable[Math.clamped(level,0,21)];return{failure:new helpers_1.CoinsPF2e(income.failure),rewards:income.rewards}}exports.getIncomeForLevel=getIncomeForLevel,exports.earnIncome=function({level,days,rollBrief,proficiency,options,dc}){const degree=new degree_of_success_1.DegreeOfSuccess(rollBrief,dc),result={rewards:new helpers_1.CoinsPF2e,degreeOfSuccess:degree.value};return degree.value===degree_of_success_1.DegreeOfSuccess.CRITICAL_SUCCESS?result.rewards=getIncomeForLevel(level+1).rewards[proficiency]:degree.value===degree_of_success_1.DegreeOfSuccess.SUCCESS?result.rewards=getIncomeForLevel(level).rewards[proficiency]:degree.value===degree_of_success_1.DegreeOfSuccess.FAILURE&&(result.rewards=getIncomeForLevel(level).failure),function({result,options,level,proficiency}){options.useLoreAsExperiencedProfessional&&(result.degreeOfSuccess===degree_of_success_1.DegreeOfSuccess.CRITICAL_FAILURE?(result.degreeOfSuccess=degree_of_success_1.DegreeOfSuccess.FAILURE,result.rewards=new helpers_1.CoinsPF2e(getIncomeForLevel(level).failure)):result.degreeOfSuccess===degree_of_success_1.DegreeOfSuccess.FAILURE&&1!==proficiency&&(result.rewards=new helpers_1.CoinsPF2e(result.rewards).scale(2)))}({result,options,level,proficiency}),{rewards:{perDay:result.rewards,combined:new helpers_1.CoinsPF2e(result.rewards).scale(days)},degreeOfSuccess:result.degreeOfSuccess,daysSpentWorking:days,level,dc,roll:degree.rollTotal}}},10998:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.runEarnIncome=exports.askSkillPopupTemplate=void 0;const chat_message_1=__webpack_require__(40405),dc_1=__webpack_require__(84372),degree_of_success_1=__webpack_require__(54870),calculate_1=__webpack_require__(30889);function escapeHtml(text){const p=document.createElement("p");return p.innerText=text,p.innerHTML}function isExperiencedProfessional(actor){return actor.itemTypes.feat.some((i=>"experienced-professional"===i.slug))}function coinsToString(coins,degreeOfSuccess){return 0===degreeOfSuccess?"none":coins.toString()}function chatTemplate(skillName,earnIncomeResult){const degreeOfSuccess=function(degreeIndex){const degreeSlug=degree_of_success_1.DEGREE_OF_SUCCESS_STRINGS[degreeIndex];return game.i18n.localize(`PF2E.Check.Result.Degree.Check.${degreeSlug}`)}(earnIncomeResult.degreeOfSuccess),payPerDay=escapeHtml(coinsToString(earnIncomeResult.rewards.perDay,earnIncomeResult.degreeOfSuccess)),combinedPay=escapeHtml(coinsToString(earnIncomeResult.rewards.combined,earnIncomeResult.degreeOfSuccess)),level=earnIncomeResult.level,daysSpentWorking=earnIncomeResult.daysSpentWorking,forDays=daysSpentWorking>1?`<p><strong>Salary for ${daysSpentWorking} days</strong> ${combinedPay}</p>`:"";return`\n    <div class="pf2e chat-card">\n        <header class="card-header flexrow">\n            <img src="systems/pf2e/icons/equipment/treasure/currency/gold-pieces.webp" title="Income" width="36" height="36">\n            <h3>Earn Income Level ${level}</h3>\n        </header>\n        <div class="card-content">\n            <p><strong>Result</strong> <span style="color: ${earnIncomeResult.degreeOfSuccess>1?"darkgreen":"darkred"}">${degreeOfSuccess} (DC: ${earnIncomeResult.dc}, Roll: ${earnIncomeResult.roll})</span></p>\n            <p><strong>Skill</strong> ${escapeHtml(skillName)}</p>\n            <p><strong>Salary per day</strong> ${payPerDay}</p>\n            ${forDays}\n        </div>\n    </div>\n    `}function calculateIncome({actor,skill,rollBrief,level,days,dc}){var _a;const options={useLoreAsExperiencedProfessional:isExperiencedProfessional(actor)&&!!skill.lore},proficiency=Math.max(1,null!==(_a=skill.rank)&&void 0!==_a?_a:1),result=(0,calculate_1.earnIncome)({level,days,rollBrief,proficiency,options,dc});!function(skillName,earnIncomeResult){const content=chatTemplate(skillName,earnIncomeResult);chat_message_1.ChatMessagePF2e.create({user:game.user.id,content,speaker:ChatMessage.getSpeaker()})}(skill.label,result)}exports.runEarnIncome=function({actor,event,skill,level,days}){const dc=(0,dc_1.calculateDC)(level,{proficiencyWithoutLevel:"ProficiencyWithoutLevel"===game.settings.get("pf2e","proficiencyVariant")}),options=new Set(actor.getRollOptions(["all","skill-check",skill.slug]));options.add("action:earn-income"),game.pf2e.Check.roll(new game.pf2e.CheckModifier(`Earn Income: ${skill.label}`,skill,[]),{actor,type:"skill-check",dc:{value:dc},options},event,(roll=>{const dieValue=roll.dice[0].results[0].result,modifier=roll.total-dieValue;calculateIncome({actor,skill,rollBrief:{dieValue,modifier},level,days,dc})}))},exports.askSkillPopupTemplate=function(skills){const level=Number(localStorage.getItem("earnIncomeLevel"))||0,days=Number(localStorage.getItem("earnIncomeDays"))||1,skillAcronym=localStorage.getItem("earnIncomeSkillAcronym"),assurance="true"===localStorage.getItem("earnIncomeAssurance");return`\n    <form>\n    <div class="form-group">\n        <label>Trained Skills/Lores</label>\n        <select name="skillAcronym">\n            ${skills.map((skill=>{const skillName=escapeHtml(skill.label),selected=skillAcronym===skill.slug?"selected":"";return`<option value="${skill.slug}" ${selected}>${skillName}</option>`})).join("")}\n        </select>\n    </div>\n    <div class="form-group">\n        <label>Use Assurance</label>\n        <input name="assurance" type="checkbox" ${assurance?"checked":""}>\n    </div>\n    <div class="form-group">\n        <label>Level</label>\n        <select name="level">\n            ${Array(21).fill(0).map(((_,index)=>`<option value="${index}" ${index===level?"selected":""}>${index}</option>`)).join("")}\n        </select>\n    </div>\n    <div class="form-group">\n        <label>Days</label>\n        <input type="number" name="days" value="${days}">\n    </div>\n    </form>\n    `}},48369:function(__unused_webpack_module,exports,__webpack_require__){var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k);var desc=Object.getOwnPropertyDescriptor(m,k);desc&&!("get"in desc?!m.__esModule:desc.writable||desc.configurable)||(desc={enumerable:!0,get:function(){return m[k]}}),Object.defineProperty(o,k2,desc)}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)"default"===p||Object.prototype.hasOwnProperty.call(exports,p)||__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:!0}),exports.showEarnIncomePopup=void 0,__exportStar(__webpack_require__(30889),exports);var macro_1=__webpack_require__(6321);Object.defineProperty(exports,"showEarnIncomePopup",{enumerable:!0,get:function(){return macro_1.showEarnIncomePopup}})},6321:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.showEarnIncomePopup=void 0;const _util_1=__webpack_require__(6945),helpers_1=__webpack_require__(10998);exports.showEarnIncomePopup=function(actor){if(!(null==actor?void 0:actor.isOfType("character")))return ui.notifications.error("You must select at least one PC");const skills=Object.values(actor.skills).filter((s=>!!(null==s?void 0:s.proficient)));new Dialog({title:"Earn Income",content:(0,helpers_1.askSkillPopupTemplate)(skills),buttons:{no:{icon:(0,_util_1.fontAwesomeIcon)("times").outerHTML,label:"Cancel"},yes:{icon:(0,_util_1.fontAwesomeIcon)("coins").outerHTML,label:"Earn Income",callback:($html,event)=>{var _a,_b,_c,_d;const html=$html[0],level=Number(null===(_a=html.querySelector("[name=level]"))||void 0===_a?void 0:_a.value)||1,days=Number(null===(_b=html.querySelector("[name=days]"))||void 0===_b?void 0:_b.value)||1,skillAcronym=null!==(_d=null===(_c=html.querySelector("[name=skillAcronym]"))||void 0===_c?void 0:_c.value)&&void 0!==_d?_d:"soc",skill=skills.find((s=>s.slug===skillAcronym));if(!skill)throw(0,_util_1.ErrorPF2e)("Skill not found");localStorage.setItem("earnIncomeLevel",level.toString()),localStorage.setItem("earnIncomeDays",days.toString()),localStorage.setItem("earnIncomeSkillAcronym",skillAcronym),(0,helpers_1.runEarnIncome)({actor,event,skill,level,days})}}},default:"yes"}).render(!0)}},26325:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.encouragingWords=void 0;const _actor_1=__webpack_require__(85530),chat_message_1=__webpack_require__(40405),localize_1=__webpack_require__(41332);exports.encouragingWords=function(options){const translations=localize_1.LocalizePF2e.translations.PF2E.Actions.EncouragingWords,actors=Array.isArray(options.actors)?options.actors:[options.actors],actor=actors[0];if(actors.length>1||!(actor instanceof _actor_1.CharacterPF2e))return void ui.notifications.error(translations.BadArgs);const encouragingWordsMacro=async(DC,bonus,dip)=>{const options=actor.getRollOptions(["all","skill-check","diplomacy"]);options.push(translations.Title),options.push("action:encourage-words");const dc={value:DC};dip.roll({dc,options,callback:async roll=>{var _a,_b,_c;let healFormula,successLabel;const degreeOfSuccess=null!==(_a=roll.data.degreeOfSuccess)&&void 0!==_a?_a:0,bonusString=bonus>0?`+ ${bonus}`:"";if(3===degreeOfSuccess?(healFormula=`2d8${bonusString}`,successLabel=translations.CritSuccess):2===degreeOfSuccess?(healFormula=`1d8${bonusString}`,successLabel=translations.Success):1===degreeOfSuccess?successLabel=translations.Failure:0===degreeOfSuccess&&(healFormula="1d8",successLabel=translations.CritFailure),healFormula){const healRoll=await new Roll(healFormula).roll({async:!0}),rollType=degreeOfSuccess>1?translations.Recovery:translations.Damage,token=null!==(_c=null===(_b=actor.getActiveTokens().shift())||void 0===_b?void 0:_b.document)&&void 0!==_c?_c:null;chat_message_1.ChatMessagePF2e.create({speaker:chat_message_1.ChatMessagePF2e.getSpeaker({actor,token}),type:CONST.CHAT_MESSAGE_TYPES.ROLL,flavor:`<strong>${rollType} ${translations.Title}</strong> (${successLabel})`,roll:healRoll.toJSON()})}}})};new Dialog({title:translations.Title,content:`\n    <div>${translations.ContentMain}</div>\n    <hr/>\n    <form>\n    <div class="form-group">\n    <label>${translations.ContentLabel1}</label>\n    <select id="dc-type" name="dc-type">\n    <option value="1">${translations.ContentOption1}</option>\n    <option value="2">${translations.ContentOption2}</option>\n    <option value="3">${translations.ContentOption3}</option>\n    <option value="4">${translations.ContentOption4}</option>\n    </select>\n    </div>\n    </form>\n    <form>\n    <div class="form-group">\n    <label>${translations.ContentLabel2}</label>\n    <input id="modifier" name="modifier" type="number"/>\n    </div>\n    </form>\n    `,buttons:{yes:{icon:'<i class="fas fa-hand-holding-dipical"></i>',label:translations.Title,callback:$html=>{const{dip}=actor.system.skills,{name}=actor,mod=Number($html.find("[name=modifier]").val())||0,requestedProf=Number($html.find("[name=dc-type]").val())||1;let usedProf=0;usedProf=requestedProf<=dip.rank?requestedProf:dip.rank;(0,[()=>ui.notifications.warn(game.i18n.format(translations.NotTrained,{name})),()=>encouragingWordsMacro(15+mod,0,dip),()=>encouragingWordsMacro(20+mod,5,dip),()=>encouragingWordsMacro(30+mod,15,dip),()=>encouragingWordsMacro(40+mod,25,dip)][usedProf])()}},no:{icon:'<i class="fas fa-times"></i>',label:translations.Cancel}},default:"yes"}).render(!0)}},22247:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.createToggleEffectMacro=exports.createSkillMacro=exports.rollActionMacro=exports.createActionMacro=exports.rollItemMacro=exports.createItemMacro=void 0;const macro_1=__webpack_require__(49151),chat_message_1=__webpack_require__(40405),values_1=__webpack_require__(8382),localize_1=__webpack_require__(41332);exports.createItemMacro=async function(item,slot){var _a;const command=`game.pf2e.rollItemMacro("${item._id}");`,macro=null!==(_a=game.macros.find((macro=>macro.name===item.name&&macro.command===command)))&&void 0!==_a?_a:await macro_1.MacroPF2e.create({command,name:item.name,type:"script",img:item.img,flags:{pf2e:{itemMacro:!0}}},{renderSheet:!1});game.user.assignHotbarMacro(null!=macro?macro:null,slot)},exports.rollItemMacro=function(itemId){var _a,_b,_c,_d,_e;const speaker=ChatMessage.getSpeaker(),actor=null!==(_c=null===(_b=canvas.tokens.get(null!==(_a=speaker.token)&&void 0!==_a?_a:""))||void 0===_b?void 0:_b.actor)&&void 0!==_c?_c:game.actors.get(null!==(_d=speaker.actor)&&void 0!==_d?_d:""),item=null===(_e=null==actor?void 0:actor.items)||void 0===_e?void 0:_e.get(itemId);return item?item.toChat():ui.notifications.warn(`Your controlled Actor does not have an item with ID ${itemId}`)},exports.createActionMacro=async function(actionIndex,actorId,slot){var _a;const actor=game.actors.get(actorId,{strict:!0}),action=actor.isOfType("character","npc")?actor.system.actions[actionIndex]:null;if(!action)return;const macroName=`${game.i18n.localize("PF2E.WeaponStrikeLabel")}: ${action.slug}`,command=`game.pf2e.rollActionMacro("${actorId}", ${actionIndex}, ${JSON.stringify(action.slug)})`,actionMacro=null!==(_a=game.macros.find((macro=>macro.name===macroName&&macro.command===command)))&&void 0!==_a?_a:await macro_1.MacroPF2e.create({command,name:macroName,type:"script",img:action.imageUrl,flags:{pf2e:{actionMacro:!0}}},{renderSheet:!1});game.user.assignHotbarMacro(null!=actionMacro?actionMacro:null,slot)},exports.rollActionMacro=async function(actorId,_actionIndex,actionSlug){var _a,_b;const actor=game.actors.get(actorId);if(!(null==actor?void 0:actor.isOfType("character","npc")))return ui.notifications.error("PF2E.MacroActionNoActorError",{localize:!0});const strikes=actor.system.actions,strike=strikes.find((s=>s.slug===actionSlug));if((null==strike?void 0:strike.slug)!==actionSlug)return ui.notifications.error("PF2E.MacroActionNoActionError",{localize:!0});const templateData={actor,strike,strikeIndex:strikes.indexOf(strike),strikeDescription:await game.pf2e.TextEditor.enrichHTML(game.i18n.localize(strike.description),{async:!0})},content=await renderTemplate("systems/pf2e/templates/chat/strike-card.html",templateData),token=null!==(_b=null!==(_a=actor.token)&&void 0!==_a?_a:actor.getActiveTokens(!0,!0).shift())&&void 0!==_b?_b:null,chatData={speaker:chat_message_1.ChatMessagePF2e.getSpeaker({actor,token}),content,type:CONST.CHAT_MESSAGE_TYPES.OTHER,flags:{core:{canPopout:!0}}},rollMode=game.settings.get("core","rollMode");["gmroll","blindroll"].includes(rollMode)&&(chatData.whisper=ChatMessage.getWhisperRecipients("GM").map((u=>u.id))),"blindroll"===rollMode&&(chatData.blind=!0),chat_message_1.ChatMessagePF2e.create(chatData)},exports.createSkillMacro=async function(skill,skillName,actorId,slot){var _a,_b;const command=`\nconst a = game.actors.get("${actorId}");\nif (a) {\n    const opts = a.getRollOptions(["all", "skill-check", "${null!==(_a=values_1.SKILL_DICTIONARY[skill])&&void 0!==_a?_a:skill}"]);\n    a.system.skills["${skill}"]?.roll(event, opts);\n} else {\n    ui.notifications.error(game.i18n.localize("PF2E.MacroActionNoActorError"));\n}`,macroName=game.i18n.format("PF2E.SkillCheckWithName",{skillName}),skillMacro=null!==(_b=game.macros.find((macro=>macro.name===macroName&&macro.command===command)))&&void 0!==_b?_b:await macro_1.MacroPF2e.create({command,name:macroName,type:"script",img:"icons/svg/d20-grey.svg",flags:{pf2e:{skillMacro:!0}}},{renderSheet:!1});game.user.assignHotbarMacro(null!=skillMacro?skillMacro:null,slot)},exports.createToggleEffectMacro=async function(effect,slot){var _a;const uuid=effect.uuid.startsWith("Actor")?effect.sourceId:effect.uuid;if(!uuid){const message=localize_1.LocalizePF2e.translations.PF2E.ErrorMessage.CantCreateEffectMacro;return void ui.notifications.error(game.i18n.localize(message))}const command=`\nconst actors = canvas.tokens.controlled.flatMap((token) => token.actor ?? []);\nif (actors.length === 0 && game.user.character) actors.push(game.user.character);\nif (actors.length === 0) {\n    const message = game.i18n.localize("PF2E.ErrorMessage.NoTokenSelected");\n    return ui.notifications.error(message);\n}\n\nconst ITEM_UUID = "${uuid}"; // ${effect.name}\nconst source = (await fromUuid(ITEM_UUID)).toObject();\nsource.flags = mergeObject(source.flags ?? {}, { core: { sourceId: ITEM_UUID } });\n\nfor (const actor of actors) {\n    const existing = actor.itemTypes.effect.find((e) => e.flags.core?.sourceId === ITEM_UUID);\n    if (existing) {\n        await existing.delete();\n    } else {\n        await actor.createEmbeddedDocuments("Item", [source]);\n    }\n}\n`,toggleMacro=null!==(_a=game.macros.contents.find((macro=>macro.name===effect.name&&macro.command===command)))&&void 0!==_a?_a:await macro_1.MacroPF2e.create({command,name:effect.name,type:"script",img:effect.img},{renderSheet:!1});game.user.assignHotbarMacro(null!=toggleMacro?toggleMacro:null,slot)}},13822:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.calculateXP=exports.treatWounds=exports.launchTravelSheet=exports.steelYourResolve=exports.stealthForSelected=exports.restForTheNight=exports.raiseAShield=exports.perceptionForSelected=exports.rollItemMacro=exports.rollActionMacro=exports.encouragingWords=exports.showEarnIncomePopup=void 0;var earn_income_1=__webpack_require__(48369);Object.defineProperty(exports,"showEarnIncomePopup",{enumerable:!0,get:function(){return earn_income_1.showEarnIncomePopup}});var encouraging_words_1=__webpack_require__(26325);Object.defineProperty(exports,"encouragingWords",{enumerable:!0,get:function(){return encouraging_words_1.encouragingWords}});var hotbar_1=__webpack_require__(22247);Object.defineProperty(exports,"rollActionMacro",{enumerable:!0,get:function(){return hotbar_1.rollActionMacro}}),Object.defineProperty(exports,"rollItemMacro",{enumerable:!0,get:function(){return hotbar_1.rollItemMacro}});var perception_for_selected_tokens_1=__webpack_require__(26423);Object.defineProperty(exports,"perceptionForSelected",{enumerable:!0,get:function(){return perception_for_selected_tokens_1.perceptionForSelected}});var raise_a_shield_1=__webpack_require__(67590);Object.defineProperty(exports,"raiseAShield",{enumerable:!0,get:function(){return raise_a_shield_1.raiseAShield}});var rest_for_the_night_1=__webpack_require__(27397);Object.defineProperty(exports,"restForTheNight",{enumerable:!0,get:function(){return rest_for_the_night_1.restForTheNight}});var stealth_for_selected_tokens_1=__webpack_require__(62670);Object.defineProperty(exports,"stealthForSelected",{enumerable:!0,get:function(){return stealth_for_selected_tokens_1.stealthForSelected}});var steel_your_resolve_1=__webpack_require__(41233);Object.defineProperty(exports,"steelYourResolve",{enumerable:!0,get:function(){return steel_your_resolve_1.steelYourResolve}});var travel_1=__webpack_require__(43722);Object.defineProperty(exports,"launchTravelSheet",{enumerable:!0,get:function(){return travel_1.launchTravelSheet}});var treat_wounds_1=__webpack_require__(29740);Object.defineProperty(exports,"treatWounds",{enumerable:!0,get:function(){return treat_wounds_1.treatWounds}});var xp_1=__webpack_require__(44706);Object.defineProperty(exports,"calculateXP",{enumerable:!0,get:function(){return xp_1.calculateXP}})},26423:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.perceptionForSelected=void 0;const sheet_util_1=__webpack_require__(15806);exports.perceptionForSelected=async function(event){const actors=canvas.tokens.controlled.filter((t=>!!t.actor&&["character","npc","familiar"].includes(t.actor.type))).map((t=>t.actor));if(0===actors.length)return void ui.notifications.error("You must select at least one PC/NPC token.");const argsFromEvent=(0,sheet_util_1.eventToRollParams)(event);for(const actor of actors)await actor.perception.roll({...argsFromEvent,traits:["secret"]})}},67590:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.raiseAShield=void 0;const _actor_1=__webpack_require__(85530),_item_1=__webpack_require__(10843),chat_message_1=__webpack_require__(40405),localize_1=__webpack_require__(41332),_util_1=__webpack_require__(6945),ITEM_UUID="Compendium.pf2e.equipment-effects.2YgXoHvJfrDHucMr",TEMPLATES_flavor="./systems/pf2e/templates/chat/action/flavor.html",TEMPLATES_content="./systems/pf2e/templates/chat/action/content.html";exports.raiseAShield=async function(options){var _a,_b;const translations=localize_1.LocalizePF2e.translations.PF2E.Actions.RaiseAShield,actors=Array.isArray(options.actors)?options.actors:[options.actors],actor=actors[0];if(actors.length>1||!(actor instanceof _actor_1.CharacterPF2e||actor instanceof _actor_1.NPCPF2e))return void ui.notifications.error(translations.BadArgs);const shield=actor.heldShield,speaker=chat_message_1.ChatMessagePF2e.getSpeaker({actor}),isSuccess=await(async()=>{const existingEffect=actor.itemTypes.effect.find((e=>{var _a;return(null===(_a=e.flags.core)||void 0===_a?void 0:_a.sourceId)===ITEM_UUID}));if(existingEffect)return await existingEffect.delete(),!1;if(!1===(null==shield?void 0:shield.isBroken)){const effect=await fromUuid(ITEM_UUID);if(!(effect instanceof _item_1.EffectPF2e))throw(0,_util_1.ErrorPF2e)("Raise a Shield effect not found");return await actor.createEmbeddedDocuments("Item",[effect.toObject()]),!0}return(null==shield?void 0:shield.isBroken)?(ui.notifications.warn(game.i18n.format(translations.ShieldIsBroken,{actor:speaker.alias,shield:shield.name})),!1):(ui.notifications.warn(game.i18n.format(translations.NoShieldEquipped,{actor:speaker.alias})),!1)})();if(isSuccess){const combatActor=(null===(_a=game.combat)||void 0===_a?void 0:_a.started)&&(null===(_b=game.combat.combatant)||void 0===_b?void 0:_b.actor)||null,[actionType,glyph]=combatActor&&combatActor!==actor?["Reaction","R"]:["SingleAction","1"],title=translations[`${actionType}Title`],content=await renderTemplate(TEMPLATES_content,{imgPath:shield.img,message:game.i18n.format(translations.Content,{actor:speaker.alias})}),flavor=await renderTemplate(TEMPLATES_flavor,{action:{title,typeNumber:glyph}});await chat_message_1.ChatMessagePF2e.create({type:CONST.CHAT_MESSAGE_TYPES.EMOTE,speaker,flavor,content})}}},27397:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.restForTheNight=void 0;const chat_message_1=__webpack_require__(40405),localize_1=__webpack_require__(41332),luxon_1=__webpack_require__(87883);exports.restForTheNight=async function(options){var _a,_b,_c;const actors=Array.isArray(options.actors)?options.actors:[options.actors],characters=actors.filter((a=>"character"===(null==a?void 0:a.data.type)));if(0===actors.length)return ui.notifications.error(game.i18n.localize("PF2E.ErrorMessage.NoPCTokenSelected")),[];const translations=localize_1.LocalizePF2e.translations.PF2E.Action.RestForTheNight,promptMessage=(()=>{const element=document.createElement("p");return element.innerText=translations.Prompt,element.outerHTML})();if(!await Dialog.confirm({title:translations.Label,content:promptMessage,defaultYes:!0}))return[];const messages=[];for(const actor of characters){const actorUpdates={attributes:{},resources:{}},itemUpdates=[],statements=[],{abilities,attributes,hitPoints,level}=actor,conModifier=abilities.con.mod,maxRestored=Math.max(conModifier,1)*level*hitPoints.recoveryMultiplier+hitPoints.recoveryAddend,hpLost=attributes.hp.max-attributes.hp.value,hpRestored=hpLost>=maxRestored?maxRestored:hpLost;hpRestored>0&&(actorUpdates.attributes.hp={value:attributes.hp.value+=hpRestored},statements.push(game.i18n.format(translations.Message.HitPoints,{hitPoints:hpRestored})));const RECOVERABLE_CONDITIONS=["doomed","drained","fatigued","wounded"],conditionChanges={doomed:null,drained:null,fatigued:null,wounded:null};actor.hasCondition("fatigued")&&(await actor.decreaseCondition("fatigued"),conditionChanges.fatigued="removed");for(const slug of["doomed","drained"]){const condition=actor.getCondition(slug);if(!condition)continue;const newValue=(null!==(_a=condition.value)&&void 0!==_a?_a:1)-1;await actor.decreaseCondition(slug),conditionChanges[slug]=0===newValue?"removed":"reduced"}actor.hasCondition("wounded")&&attributes.hp.value===attributes.hp.max&&(await actor.decreaseCondition("wounded",{forceRemove:!0}),conditionChanges.wounded="removed");const wands=actor.itemTypes.consumable.filter((i=>"wand"===i.consumableType&&i.uses.value<i.uses.max));itemUpdates.push(...wands.map((wand=>({_id:wand.id,"system.charges.value":1}))));const wandRecharged=itemUpdates.length>0,reagents=actor.system.resources.crafting.infusedReagents;reagents&&reagents.value<reagents.max&&(actorUpdates.resources.crafting={infusedReagents:{value:reagents.max}},statements.push(game.i18n.localize(translations.Message.InfusedReagents)));const spellcastingRecharge=actor.spellcasting.recharge();itemUpdates.push(...spellcastingRecharge.itemUpdates),(null===(_b=spellcastingRecharge.actorUpdates)||void 0===_b?void 0:_b["system.resources.focus.value"])&&(actorUpdates.resources.focus={value:null===(_c=spellcastingRecharge.actorUpdates)||void 0===_c?void 0:_c["system.resources.focus.value"]});const withFrequency=[...actor.itemTypes.action,...actor.itemTypes.feat].filter((a=>a.frequency&&("day"===a.frequency.per||luxon_1.Duration.fromISO(a.frequency.per)<=luxon_1.Duration.fromISO("PT8H"))&&a.frequency.value<a.frequency.max));withFrequency.length&&(statements.push(game.i18n.localize(translations.Message.Frequencies)),itemUpdates.push(...withFrequency.map((a=>({_id:a.id,"system.frequency.value":a.frequency.max})))));const staminaEnabled=!!game.settings.get("pf2e","staminaVariant"),stamina=attributes.sp,resolve=attributes.resolve;staminaEnabled&&(stamina.value<stamina.max&&(actorUpdates.attributes.sp={value:stamina.max},statements.push(game.i18n.localize(translations.Message.StaminaPoints))),resolve.value<resolve.max&&(actorUpdates.attributes.resolve={value:resolve.max},statements.push(game.i18n.localize(translations.Message.Resolve))));const temporaryItems=actor.inventory.filter((i=>i.isTemporary)).map((i=>i.id)),hasActorUpdates=Object.keys({...actorUpdates.attributes,...actorUpdates.resources}).length>0,hasItemUpdates=itemUpdates.length>0,removeTempItems=temporaryItems.length>0;hasActorUpdates&&await actor.update({system:actorUpdates},{render:!1}),hasItemUpdates&&await actor.updateEmbeddedDocuments("Item",itemUpdates,{render:!1}),removeTempItems&&(await actor.deleteEmbeddedDocuments("Item",temporaryItems,{render:!1}),statements.push(game.i18n.localize(translations.Message.TemporaryItems))),spellcastingRecharge.actorUpdates&&statements.push(game.i18n.localize(translations.Message.FocusPoints)),spellcastingRecharge.itemUpdates.length>0&&statements.push(game.i18n.localize(translations.Message.SpellSlots)),wandRecharged&&statements.push(game.i18n.localize(translations.Message.WandsCharges));const reducedConditions=RECOVERABLE_CONDITIONS.filter((c=>"reduced"===conditionChanges[c]));for(const slug of reducedConditions){const{name}=game.pf2e.ConditionManager.getCondition(slug);statements.push(game.i18n.format(translations.Message.ConditionReduced,{condition:name}))}const removedConditions=RECOVERABLE_CONDITIONS.filter((c=>"removed"===conditionChanges[c]));for(const slug of removedConditions){const{name}=game.pf2e.ConditionManager.getCondition(slug);statements.push(game.i18n.format(translations.Message.ConditionRemoved,{condition:name}))}const actorAwakens=game.i18n.format(translations.Message.Awakens,{actor:actor.name}),recoveryList=document.createElement("ul");recoveryList.append(...statements.map((statement=>{const listItem=document.createElement("li");return listItem.innerText=statement,listItem})));const content=[actorAwakens,recoveryList.outerHTML].join("\n");messages.push({user:game.user.id,content,speaker:{alias:actor.name}}),await actor.sheet.render()}return chat_message_1.ChatMessagePF2e.createDocuments(messages)}},62670:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.stealthForSelected=void 0;const sheet_util_1=__webpack_require__(15806);exports.stealthForSelected=async function(event){const actors=canvas.tokens.controlled.filter((t=>!!t.actor&&["character","npc","familiar"].includes(t.actor.type))).map((t=>t.actor));if(0===actors.length)return void ui.notifications.error("You must select at least one PC/NPC token.");const argsFromEvent=(0,sheet_util_1.eventToRollParams)(event);for(const actor of actors)await actor.skills.stealth.roll({...argsFromEvent,traits:["secret"]})}},41233:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.steelYourResolve=void 0;const character_1=__webpack_require__(886),localize_1=__webpack_require__(41332);exports.steelYourResolve=function(options){const translations=localize_1.LocalizePF2e.translations.PF2E.Actions.SteelYourResolve,actors=Array.isArray(options.actors)?options.actors:[options.actors],actor=actors[0];if(actors.length>1||!(actor instanceof character_1.CharacterPF2e))return void ui.notifications.error(translations.BadArgs);const toChat=(alias,content)=>{ChatMessage.create({user:game.user.id,content,speaker:{alias}})},title=translations.Title,content=translations.Content;game.settings.get("pf2e","staminaVariant")?Dialog.confirm({title,content,yes:()=>{const{resolve,sp}=actor.system.attributes,spRatio=`${sp.value}/${sp.max}`,recoverStamina=game.i18n.format(translations.RecoverStamina,{name:actor.name,ratio:spRatio}),noStamina=game.i18n.format(translations.NoStamina,{name:actor.name});if(resolve.value>0){toChat(actor.name,recoverStamina);const newSP=sp.value+Math.floor(sp.max/2);actor.update({"system.attributes.sp.value":Math.min(newSP,sp.max),"system.attributes.resolve.value":resolve.value-1})}else toChat(actor.name,noStamina)},defaultYes:!0}):ui.notifications.error(translations.StaminaNotEnabled)}},43722:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.launchTravelSheet=void 0;var travel_speed_sheet_1=__webpack_require__(20017);Object.defineProperty(exports,"launchTravelSheet",{enumerable:!0,get:function(){return travel_speed_sheet_1.launchTravelSheet}})},20017:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.launchTravelSheet=void 0;const travel_speed_1=__webpack_require__(5595),_util_1=__webpack_require__(6945);class TravelSpeedSheet extends FormApplication{constructor(){super(...arguments),this.formData=void 0}static get defaultOptions(){const options=super.defaultOptions;return options.id="travel-duration",options.classes=["travel-duration"],options.title=game.i18n.localize("PF2E.TravelSpeed.Title"),options.template="systems/pf2e/templates/gm/travel/travel-speed-sheet.html",options.width="auto",options.submitOnChange=!0,options.closeOnSubmit=!1,options}async _updateObject(_event,formData){const data=expandObject(formData);data.actors=function(data){return Object.entries(data).sort((([a],[b])=>parseInt(a)-parseInt(b))).map((([_,a])=>a))}(data.actors),this.formData=data,this.render(!0)}actorFormToSheetData(actor,data){return{requiresDetectionMode:"Search"===data.explorationActivity||"DetectMagic"===data.explorationActivity,detectionMode:data.detectionMode,explorationActivity:data.explorationActivity,explorationSpeed:parseFloat((0,travel_speed_1.calculateNormalizedCharacterSpeed)(data.speed,parseExplorationActivity(data.explorationActivity),parseDetectionModeData(data.detectionMode),parseExplorationOptions(actor)).toFixed(2)),speed:data.speed,name:actor.name}}getInitialActorData(actor){return this.actorFormToSheetData(actor,{detectionMode:"before",explorationActivity:"Search",speed:actor.system.attributes.speed.total})}formToSheetData(actors,data){const journey=[{terrainSlowdown:{difficult:data.difficultTerrainSlowdown,greaterDifficult:data.greaterDifficultTerrainSlowdown,normal:data.normalTerrainSlowdown},terrain:parseTerrainData(data.terrain),distance:{value:data.distance,unit:parseDistanceUnit(data.distanceUnit)}}],actorFormData=(0,_util_1.zip)(actors,data.actors,((actor,actorData)=>this.actorFormToSheetData(actor,actorData))),partySpeedInFeet=Math.min(...actorFormData.map((data=>data.explorationSpeed))),velocity=(0,travel_speed_1.speedToVelocity)(partySpeedInFeet);return{travelDuration:(0,travel_speed_1.calculateTravelDuration)({journey,hoursPerDay:data.hoursPerDay,velocity,hustleDurationInMinutes:data.hustleMinutes}),distance:data.distance,actors:actorFormData,normalTerrainSlowdown:data.normalTerrainSlowdown,difficultTerrainSlowdown:data.difficultTerrainSlowdown,greaterDifficultTerrainSlowdown:data.greaterDifficultTerrainSlowdown,distanceUnit:data.distanceUnit,terrain:data.terrain,partySpeedInFeet,hustleMinutes:data.hustleMinutes,hoursPerDay:data.hoursPerDay}}getInitialFormData(actors){return this.formToSheetData(actors,{actors:actors.map((actor=>this.getInitialActorData(actor))),terrain:"normal",distanceUnit:"miles",normalTerrainSlowdown:{denominator:1,numerator:1},difficultTerrainSlowdown:{denominator:1,numerator:2},greaterDifficultTerrainSlowdown:{denominator:1,numerator:3},distance:1,hustleMinutes:getHustleMinutes(actors),hoursPerDay:8})}getData(){const sheetData=super.getData();let data;return data=void 0===this.formData?this.getInitialFormData(this.options.actors):this.formToSheetData(this.options.actors,this.formData),Object.assign(sheetData,data),sheetData}}function parseDistanceUnit(unit){return"feet"===unit?travel_speed_1.LengthUnit.FEET:travel_speed_1.LengthUnit.MILES}function parseTerrainData(terrain){return"normal"===terrain?travel_speed_1.Terrain.NORMAL:"difficult"===terrain?travel_speed_1.Terrain.DIFFICULT:travel_speed_1.Terrain.GREATER_DIFFICULT}function parseDetectionModeData(detectionMode){return"none"===detectionMode?travel_speed_1.DetectionMode.NONE:"before"===detectionMode?travel_speed_1.DetectionMode.DETECT_BEFORE_WALKING_INTO_IT:travel_speed_1.DetectionMode.DETECT_EVERYTHING}function parseExplorationActivity(activity){return"AvoidNotice"===activity?travel_speed_1.ExplorationActivities.AVOID_NOTICE:"Defend"===activity?travel_speed_1.ExplorationActivities.DEFEND:"DetectMagic"===activity?travel_speed_1.ExplorationActivities.DETECT_MAGIC:"Scout"===activity?travel_speed_1.ExplorationActivities.SCOUT:"Search"===activity?travel_speed_1.ExplorationActivities.SEARCH:"None"===activity?travel_speed_1.ExplorationActivities.NONE:travel_speed_1.ExplorationActivities.HALF_SPEED}function getHustleMinutes(actors){return Math.min(...actors.map((actor=>10*Math.max(1,actor.system.abilities.con.mod))))}function hasFeat(actor,slug){return actor.itemTypes.feat.some((feat=>feat.slug===slug))}function parseExplorationOptions(actor){return{practicedDefender:hasFeat(actor,"practiced-defender"),swiftSneak:hasFeat(actor,"swift-sneak"),legendarySneak:hasFeat(actor,"legendary-sneak"),expeditiousSearch:hasFeat(actor,"expeditious-search"),expeditiousSearchLegendary:hasFeat(actor,"expeditious-search")&&4===actor.attributes.perception.rank}}exports.launchTravelSheet=function(actors){new TravelSpeedSheet({},{actors}).render(!0)}},5595:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.calculateTravelDuration=exports.Terrain=exports.speedToVelocity=exports.TimeUnit=exports.LengthUnit=exports.calculateNormalizedCharacterSpeed=exports.DetectionMode=exports.ExplorationActivities=void 0;const _util_1=__webpack_require__(6945);var ExplorationActivities,DetectionMode,LengthUnit;!function(ExplorationActivities){ExplorationActivities[ExplorationActivities.NONE=0]="NONE",ExplorationActivities[ExplorationActivities.HALF_SPEED=1]="HALF_SPEED",ExplorationActivities[ExplorationActivities.AVOID_NOTICE=2]="AVOID_NOTICE",ExplorationActivities[ExplorationActivities.DEFEND=3]="DEFEND",ExplorationActivities[ExplorationActivities.DETECT_MAGIC=4]="DETECT_MAGIC",ExplorationActivities[ExplorationActivities.SCOUT=5]="SCOUT",ExplorationActivities[ExplorationActivities.SEARCH=6]="SEARCH"}(ExplorationActivities=exports.ExplorationActivities||(exports.ExplorationActivities={})),function(DetectionMode){DetectionMode[DetectionMode.NONE=0]="NONE",DetectionMode[DetectionMode.DETECT_EVERYTHING=1]="DETECT_EVERYTHING",DetectionMode[DetectionMode.DETECT_BEFORE_WALKING_INTO_IT=2]="DETECT_BEFORE_WALKING_INTO_IT"}(DetectionMode=exports.DetectionMode||(exports.DetectionMode={})),exports.calculateNormalizedCharacterSpeed=function(defaultSpeedInFeet,activity,detectionMode,explorationOptions){return Math.max(5,function(defaultSpeedInFeet,activity,detectionMode,explorationOptions){const halvedSpeed=defaultSpeedInFeet/2;if(function(activity,explorationOptions){return activity===ExplorationActivities.AVOID_NOTICE&&(explorationOptions.legendarySneak||explorationOptions.swiftSneak)}(activity,explorationOptions)||function(activity,explorationOptions){return activity===ExplorationActivities.DEFEND&&explorationOptions.practicedDefender}(activity,explorationOptions))return defaultSpeedInFeet;if(activity===ExplorationActivities.SEARCH){let searchSpeedFactor=1;return explorationOptions.expeditiousSearchLegendary?searchSpeedFactor=4:explorationOptions.expeditiousSearch&&(searchSpeedFactor=2),detectionMode===DetectionMode.DETECT_EVERYTHING?Math.min(halvedSpeed,30*searchSpeedFactor):detectionMode===DetectionMode.DETECT_BEFORE_WALKING_INTO_IT?Math.min(halvedSpeed,15*searchSpeedFactor):halvedSpeed}return activity===ExplorationActivities.DETECT_MAGIC?detectionMode===DetectionMode.DETECT_EVERYTHING?Math.min(halvedSpeed,30):detectionMode===DetectionMode.DETECT_BEFORE_WALKING_INTO_IT?Math.min(halvedSpeed,15):halvedSpeed:activity===ExplorationActivities.NONE?defaultSpeedInFeet:halvedSpeed}(defaultSpeedInFeet,activity,detectionMode,explorationOptions))},function(LengthUnit){LengthUnit[LengthUnit.MILES=0]="MILES",LengthUnit[LengthUnit.FEET=1]="FEET"}(LengthUnit=exports.LengthUnit||(exports.LengthUnit={}));function toFeet(distance){return distance.unit===LengthUnit.MILES?6e3*distance.value:distance.value}var TimeUnit,Terrain;function toFeetPerMinute(velocity){return velocity.time===TimeUnit.MINUTE?toFeet(velocity.distance):toFeetPerMinute({distance:{unit:velocity.distance.unit,value:velocity.distance.value/60},time:TimeUnit.MINUTE})}function increaseDistanceByTerrain(trip){const feet=toFeet(trip.distance);return trip.terrain===Terrain.DIFFICULT?feet*trip.terrainSlowdown.difficult.numerator/trip.terrainSlowdown.difficult.denominator:trip.terrain===Terrain.GREATER_DIFFICULT?feet*trip.terrainSlowdown.greaterDifficult.numerator/trip.terrainSlowdown.greaterDifficult.denominator:feet*trip.terrainSlowdown.normal.numerator/trip.terrainSlowdown.normal.denominator}!function(TimeUnit){TimeUnit[TimeUnit.MINUTE=0]="MINUTE",TimeUnit[TimeUnit.HOUR=1]="HOUR"}(TimeUnit=exports.TimeUnit||(exports.TimeUnit={})),exports.speedToVelocity=function(speedInFeet){return{distance:{unit:LengthUnit.FEET,value:10*speedInFeet},time:TimeUnit.MINUTE}},function(Terrain){Terrain[Terrain.NORMAL=0]="NORMAL",Terrain[Terrain.DIFFICULT=1]="DIFFICULT",Terrain[Terrain.GREATER_DIFFICULT=2]="GREATER_DIFFICULT"}(Terrain=exports.Terrain||(exports.Terrain={}));exports.calculateTravelDuration=function({journey,velocity,hustleDurationInMinutes=0,hoursPerDay=8}){return function({distanceInFeet,feetPerMinute,hustleDurationInMinutes,hoursPerDay=8}){const minutesPerDay=60*hoursPerDay,minutesPerWeek=7*minutesPerDay,hustleDuration=Math.min(hustleDurationInMinutes,minutesPerDay),averageSpeed=(2*feetPerMinute*hustleDuration+feetPerMinute*(minutesPerDay-hustleDuration))/minutesPerDay,totalMinutes=Math.round(distanceInFeet/averageSpeed),weeks=Math.floor(totalMinutes/minutesPerWeek),days=Math.floor((totalMinutes-weeks*minutesPerWeek)/minutesPerDay),remainingMinutesMovingAtDoubleSpeed=(distanceInFeet-weeks*minutesPerWeek*averageSpeed-days*minutesPerDay*averageSpeed)/(2*feetPerMinute),remainingMinutesSpentHustling=Math.min(remainingMinutesMovingAtDoubleSpeed,hustleDurationInMinutes)+2*Math.max(0,remainingMinutesMovingAtDoubleSpeed-hustleDurationInMinutes),hours=Math.floor(remainingMinutesSpentHustling/60);return{weeks,days,hours,minutes:Math.round(remainingMinutesSpentHustling-60*hours)}}({distanceInFeet:(0,_util_1.sum)(journey.map(increaseDistanceByTerrain)),feetPerMinute:toFeetPerMinute(velocity),hustleDurationInMinutes,hoursPerDay})}},29740:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.treatWounds=void 0;const chat_message_1=__webpack_require__(40405),sheet_util_1=__webpack_require__(15806);function CheckFeat(actor,slug){return!!actor.items.find((i=>i.slug===slug&&"feat"===i.type))}exports.treatWounds=async function(options){const actor=(Array.isArray(options.actors)?options.actors:[options.actors])[0];if(!actor||!actor.isOfType("creature"))return void ui.notifications.error("PF2E.ErrorMessage.NoPCTokenSelected");const chirurgeon=CheckFeat(actor,"chirurgeon"),naturalMedicine=CheckFeat(actor,"natural-medicine"),dialog=new Dialog({title:game.i18n.localize("PF2E.Actions.TreatWounds.Label"),content:`\n<div>${game.i18n.localize("PF2E.Actions.TreatWounds.Label")}</div>\n<hr/>\n<form>\n<div class="form-group">\n<label>${game.i18n.localize("PF2E.Actions.TreatWounds.SkillSelect")}</label>\n<select id="skill" name="skill"${chirurgeon||naturalMedicine?"":" disabled"}>\n<option value="medicine">Medicine</option>\n${chirurgeon?'<option value="crafting">Crafting</option>':""}\n${naturalMedicine?'<option value="nature">Nature</option>':""}\n</select>\n</div>\n</form>\n<form>\n<div class="form-group">\n<label>Medicine DC:</label>\n<select id="dc-type" name="dc-type">\n<option value="1">${game.i18n.localize("PF2E.Actions.TreatWounds.DC.Trained")}</option>\n<option value="2">${game.i18n.localize("PF2E.Actions.TreatWounds.DC.Expert")}</option>\n<option value="3">${game.i18n.localize("PF2E.Actions.TreatWounds.DC.Master")}</option>\n<option value="4">${game.i18n.localize("PF2E.Actions.TreatWounds.DC.Legendary")}</option>\n</select>\n</div>\n</form>\n<form>\n<div class="form-group">\n<label>${game.i18n.localize("PF2E.Actions.TreatWounds.DC.Mod")}</label>\n<input id="modifier" name="modifier" type="number"/>\n</div>\n</form>\n${CheckFeat(actor,"risky-surgery")?`<form><div class="form-group">\n<label>${game.i18n.localize("PF2E.Actions.TreatWounds.Feats.RiskySurgery")}</label>\n<input type="checkbox" id="risky_surgery_bool" name="risky_surgery_bool"></input>\n</div></form>`:""}\n${CheckFeat(actor,"mortal-healing")?`<form><div class="form-group">\n<label>${game.i18n.localize("PF2E.Actions.TreatWounds.Feats.MortalHealing")}</label>\n<input type="checkbox" id="mortal_healing_bool" name="mortal_healing_bool" checked></input>\n</div></form>`:""}\n</form>\n`,buttons:{yes:{icon:'<i class="fas fa-hand-holding-medical"></i>',label:game.i18n.localize("PF2E.Actions.TreatWounds.Label"),callback:$html=>async function(actor,$html,event){var _a;const{name}=actor,mod=Number($html.find('[name="modifier"]').val())||0,requestedProf=Number($html.find('[name="dc-type"]').val())||1,riskysurgery=$html.find('[name="risky_surgery_bool"]').prop("checked"),mortalhealing=$html.find('[name="mortal_healing_bool"]').prop("checked"),skillName=String($html.find('[name="skill"]').val()),skill=actor.skills[skillName];if(!(null==skill?void 0:skill.proficient))return void ui.notifications.warn(game.i18n.format("PF2E.Actions.TreatWounds.Error",{name}));const rank=null!==(_a=skill.rank)&&void 0!==_a?_a:1,usedProf=requestedProf<=rank?requestedProf:rank,medicBonus=CheckFeat(actor,"medic-dedication")?5*(usedProf-1):0,dcValue=[15,20,30,40][usedProf-1]+mod,bonus=[0,10,30,50][usedProf-1]+medicBonus,rollOptions=actor.getRollOptions(["all","skill-check","medicine"]);rollOptions.push("treat wounds"),rollOptions.push("action:treat-wounds"),riskysurgery&&rollOptions.push("risky-surgery");const modifiers=riskysurgery||mortalhealing?{success:"one-degree-better"}:void 0,dc={value:dcValue,visible:!0,modifiers};skill.check.roll({dc,...(0,sheet_util_1.eventToRollParams)(event),extraRollOptions:rollOptions,callback:async(_roll,outcome)=>{const successLabel=outcome?game.i18n.localize(`PF2E.Check.Result.Degree.Check.${outcome}`):"",magicHands=CheckFeat(actor,"magic-hands"),bonusString=bonus>0?`+ ${bonus}`:"",healFormula=(()=>{switch(outcome){case"criticalSuccess":return magicHands?`32${bonusString}`:`4d8${bonusString}`;case"success":return magicHands?`16${bonusString}`:`2d8${bonusString}`;case"criticalFailure":return"1d8";default:return null}})(),speaker=chat_message_1.ChatMessagePF2e.getSpeaker({actor});if(riskysurgery&&chat_message_1.ChatMessagePF2e.create({type:CONST.CHAT_MESSAGE_TYPES.ROLL,flavor:`<strong>${game.i18n.localize("PF2E.Actions.TreatWounds.Rolls.RiskySurgery")}</strong>`,roll:(await new Roll("{1d8}[slashing]").roll({async:!0})).toJSON(),speaker}),healFormula){const healRoll=await new Roll(`{${healFormula}}[healing]`).roll({async:!0}),rollType="criticalFailure"!==outcome?game.i18n.localize("PF2E.Actions.TreatWounds.Rolls.TreatWounds"):game.i18n.localize("PF2E.Actions.TreatWounds.Rolls.TreatWoundsCriticalFailure");chat_message_1.ChatMessagePF2e.create({type:CONST.CHAT_MESSAGE_TYPES.ROLL,flavor:`<strong>${rollType}</strong> (${successLabel})`,roll:healRoll.toJSON(),speaker})}}})}(actor,$html,options.event)},no:{icon:'<i class="fas fa-times"></i>',label:game.i18n.localize("Cancel")}},default:"yes"});dialog.render(!0)}},44706:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.calculateXP=void 0;const xpVariantCreatureDifferences=new Map([[-7,9],[-6,12],[-5,14],[-4,18],[-3,21],[-2,26],[-1,32],[0,40],[1,48],[2,60],[3,72],[4,90],[5,108],[6,135],[7,160]]),xpCreatureDifferences=new Map([[-4,10],[-3,15],[-2,20],[-1,30],[0,40],[1,60],[2,80],[3,120],[4,160]]),xpSimpleHazardDifferences=new Map([[-4,2],[-3,3],[-2,4],[-1,6],[0,8],[1,12],[2,16],[3,24],[4,32]]);function getXPFromMap(partyLevel,entityLevel,values){var _a;const difference=entityLevel+1-(partyLevel+1),range=Math.floor(values.size/2),boundedDifference=Math.clamped(difference,0-range,range);return null!==(_a=values.get(boundedDifference))&&void 0!==_a?_a:0}function calculateCreatureXP(partyLevel,npcLevel,dcOptions){return dcOptions.proficiencyWithoutLevel?getXPFromMap(partyLevel,npcLevel,xpVariantCreatureDifferences):getXPFromMap(partyLevel,npcLevel,xpCreatureDifferences)}function generateEncounterBudgets(partySize){const budget=20*partySize;return{trivial:Math.floor(.5*budget),low:Math.floor(.75*budget),moderate:budget,severe:Math.floor(1.5*budget),extreme:Math.floor(2*budget)}}const rewardEncounterBudgets=generateEncounterBudgets(4);exports.calculateXP=function(partyLevel,partySize,npcLevels,hazards,dcOptions){const creatureChallenge=npcLevels.map((level=>calculateCreatureXP(partyLevel,level,dcOptions))).reduce(((a,b)=>a+b),0),hazardChallenge=hazards.map((hazard=>function(partyLevel,hazard,dcOptions){return hazard.isComplex?calculateCreatureXP(partyLevel,hazard.level,dcOptions):getXPFromMap(partyLevel,hazard.level,xpSimpleHazardDifferences)}(partyLevel,hazard,dcOptions))).reduce(((a,b)=>a+b),0),totalXP=creatureChallenge+hazardChallenge,encounterBudgets=generateEncounterBudgets(partySize),rating=(challenge=totalXP)<=(budgets=encounterBudgets).trivial?"trivial":challenge<=budgets.low?"low":challenge<=budgets.moderate?"moderate":challenge<=budgets.severe?"severe":"extreme";var challenge,budgets;const ratingXP=rewardEncounterBudgets[rating];return{partyLevel,partySize,totalXP,encounterBudgets,rating,ratingXP,xpPerPlayer:Math.floor(totalXP/partySize*4)}}},30969:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.registerFonts=void 0,exports.registerFonts=function(){CONFIG.fontDefinitions.Eczar={editor:!0,fonts:[{urls:["systems/pf2e/fonts/eczar-v16-latin-ext_latin-regular.woff2"],style:"normal",weight:"400"},{urls:["systems/pf2e/fonts/eczar-v16-latin-ext_latin-500.woff2"],style:"normal",weight:"500"},{urls:["systems/pf2e/fonts/eczar-v16-latin-ext_latin-600.woff2"],style:"normal",weight:"600"},{urls:["systems/pf2e/fonts/eczar-v16-latin-ext_latin-700.woff2"],style:"normal",weight:"700"},{urls:["systems/pf2e/fonts/eczar-v16-latin-ext_latin-800.woff2"],style:"normal",weight:"800"}]},CONFIG.fontDefinitions.Gelasio={editor:!1,fonts:[{urls:["systems/pf2e/fonts/gelasio-v9-latin-ext_latin-regular.woff2"],style:"normal",weight:"400"},{urls:["systems/pf2e/fonts/gelasio-v9-latin-ext_latin-italic.woff2"],style:"italic",weight:"400"},{urls:["systems/pf2e/fonts/gelasio-v9-latin-ext_latin-500.woff2"],style:"normal",weight:"500"},{urls:["systems/pf2e/fonts/gelasio-v9-latin-ext_latin-500italic.woff2"],style:"italic",weight:"500"},{urls:["systems/pf2e/fonts/gelasio-v9-latin-ext_latin-600.woff2"],style:"normal",weight:"600"},{urls:["systems/pf2e/fonts/gelasio-v9-latin-ext_latin-600italic.woff2"],style:"italic",weight:"600"},{urls:["systems/pf2e/fonts/gelasio-v9-latin-ext_latin-700.woff2"],style:"normal",weight:"700"},{urls:["systems/pf2e/fonts/gelasio-v9-latin-ext_latin-700italic.woff2"],style:"italic",weight:"700"}]},CONFIG.fontDefinitions["La Belle Aurore"]={editor:!0,fonts:[{urls:["systems/pf2e/fonts/la-belle-aurore-v16-latin-regular.woff2"],style:"normal",weight:"400"}]},CONFIG.fontDefinitions.Pathfinder2eActions={editor:!1,fonts:[{urls:["systems/pf2e/fonts/Pathfinder2eActions.ttf"]}]},CONFIG.fontDefinitions.Roboto={editor:!0,fonts:[{urls:["systems/pf2e/fonts/roboto-v30-latin-ext_latin_cyrillic-regular.woff2"],style:"normal",weight:"400"},{urls:["systems/pf2e/fonts/roboto-v30-latin-ext_latin_cyrillic-italic.woff2"],style:"italic",weight:"400"},{urls:["systems/pf2e/fonts/roboto-v30-latin-ext_latin_cyrillic-500.woff2"],style:"normal",weight:"500"},{urls:["systems/pf2e/fonts/roboto-v30-latin-ext_latin_cyrillic-500italic.woff2"],style:"italic",weight:"500"},{urls:["systems/pf2e/fonts/roboto-v30-latin-ext_latin_cyrillic-700.woff2"],style:"normal",weight:"700"},{urls:["systems/pf2e/fonts/roboto-v30-latin-ext_latin_cyrillic-700italic.woff2"],style:"italic",weight:"700"},{urls:["systems/pf2e/fonts/roboto-v30-latin-ext_latin_cyrillic-900.woff2"],style:"normal",weight:"900"},{urls:["systems/pf2e/fonts/roboto-v30-latin-ext_latin_cyrillic-900italic.woff2"],style:"italic",weight:"900"}]},CONFIG.fontDefinitions["Roboto Condensed"]={editor:!1,fonts:[{urls:["systems/pf2e/fonts/roboto-condensed-v24-latin-ext_latin_cyrillic-regular.woff2"],style:"normal",weight:"400"},{urls:["systems/pf2e/fonts/roboto-condensed-v24-latin-ext_latin_cyrillic-italic.woff2"],style:"italic",weight:"400"},{urls:["systems/pf2e/fonts/roboto-condensed-v24-latin-ext_latin_cyrillic-700.woff2"],style:"normal",weight:"700"},{urls:["systems/pf2e/fonts/roboto-condensed-v24-latin-ext_latin_cyrillic-700italic.woff2"],style:"italic",weight:"700"}]},CONFIG.fontDefinitions["Roboto Mono"]={editor:!1,fonts:[{urls:["systems/pf2e/fonts/roboto-mono-v21-latin-ext_latin_cyrillic-regular.woff2"],style:"normal",weight:"400"},{urls:["systems/pf2e/fonts/roboto-mono-v21-latin-ext_latin_cyrillic-500.woff2"],style:"normal",weight:"500"},{urls:["systems/pf2e/fonts/roboto-mono-v21-latin-ext_latin_cyrillic-700.woff2"],style:"italic",weight:"700"}]},CONFIG.fontDefinitions.Signika={editor:!0,fonts:[{urls:["systems/pf2e/fonts/signika-v19-latin-ext_latin-regular.woff2"],style:"normal",weight:"400"},{urls:["systems/pf2e/fonts/signika-v19-latin-ext_latin-500.woff2"],style:"normal",weight:"500"},{urls:["systems/pf2e/fonts/signika-v19-latin-ext_latin-600.woff2"],style:"normal",weight:"600"},{urls:["systems/pf2e/fonts/signika-v19-latin-ext_latin-700.woff2"],style:"normal",weight:"700"}]},CONFIG.fontDefinitions.Vollkorn={editor:!0,fonts:[{urls:["systems/pf2e/fonts/vollkorn-v20-latin-ext_latin_cyrillic-regular.woff2"],style:"normal",weight:"400"},{urls:["systems/pf2e/fonts/vollkorn-v20-latin-ext_latin_cyrillic-500.woff2"],style:"normal",weight:"500"},{urls:["systems/pf2e/fonts/vollkorn-v20-latin-ext_latin_cyrillic-700.woff2"],style:"normal",weight:"600"},{urls:["systems/pf2e/fonts/vollkorn-v20-latin-ext_latin_cyrillic-900.woff2"],style:"normal",weight:"700"}]},delete CONFIG.fontDefinitions.Courier,delete CONFIG.fontDefinitions.Times,CONFIG._fontFamilies=[]}},45560:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.registerKeybindings=void 0,exports.registerKeybindings=function(){var _a;game.keybindings.register("pf2e","cycle-token-stack",{name:"PF2E.Keybinding.CycleTokenStack.Label",hint:"PF2E.Keybinding.CycleTokenStack.Hint",editable:[{key:"KeyZ",modifiers:[]}],onUp:()=>canvas.tokens.cycleStack()}),(null===(_a=game.modules.get("perfect-vision"))||void 0===_a?void 0:_a.active)||game.keybindings.register("pf2e","gm-vision",{name:"PF2E.Keybinding.GMVision.Label",hint:"PF2E.Keybinding.GMVision.Hint",editable:[{key:"KeyG",modifiers:["Control"]}],restricted:!0,onDown:context=>(context.event.preventDefault(),!0),onUp:()=>{var _a,_b;if("lighting"===(null===(_a=ui.controls.control)||void 0===_a?void 0:_a.name)){const toggle=ui.controls.control.tools.find((t=>"gm-vision"===t.name));null===(_b=null==toggle?void 0:toggle.onClick)||void 0===_b||_b.call(toggle)}else game.settings.set("pf2e","gmVision",!game.settings.get("pf2e","gmVision"));return!0}})}},88786:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.registerModuleArt=void 0;const _util_1=__webpack_require__(6945);async function getArtMap(art){if(!art)return null;if(isModuleArt(art))return art;if("string"==typeof art)try{const response=await fetch(art);if(!response.ok)return console.warn(`PF2e System | Failed loading art mapping file at ${art}`),null;const map=await response.json();return isModuleArt(map)?map:null}catch(error){error instanceof Error&&console.warn(`PF2e System | ${error.message}`)}return null}function isModuleArt(record){return(0,_util_1.isObject)(record)&&Object.values(record).every((packToArt=>(0,_util_1.isObject)(packToArt)&&Object.values(packToArt).every((art=>(0,_util_1.isObject)(art)&&"string"==typeof art.actor&&("string"==typeof art.token||(0,_util_1.isObject)(art.token)&&"string"==typeof art.token.img&&(void 0===art.token.scale||"number"==typeof art.token.scale))))))}exports.registerModuleArt=async function(){var _a,_b;game.pf2e.system.moduleArt.map.clear();const activeModules=[...game.modules.entries()].filter((([_key,m])=>m.active));for(const[moduleKey,foundryModule]of activeModules){const moduleArt=await getArtMap(null===(_b=null===(_a=foundryModule.flags)||void 0===_a?void 0:_a[moduleKey])||void 0===_b?void 0:_b["pf2e-art"]);if(moduleArt)for(const[packName,art]of Object.entries(moduleArt)){const pack=game.packs.get(`pf2e.${packName}`);if(!pack){console.warn(`PF2e System | Failed pack lookup from module art registration (${moduleKey}): ${packName}`);continue}const index=pack.indexed?pack.index:await pack.getIndex();for(const[actorId,paths]of Object.entries(art)){const record=index.get(actorId);record&&(record.img=paths.actor,game.pf2e.system.moduleArt.map.set(`Compendium.pf2e.${packName}.${actorId}`,paths))}}}}},89714:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.registerSheets=void 0;const sheet_1=__webpack_require__(39481),sheet_2=__webpack_require__(46949),sheet_3=__webpack_require__(13945),sheet_4=__webpack_require__(58693),sheet_5=__webpack_require__(89536),sheet_6=__webpack_require__(46014),_item_1=__webpack_require__(10843),sheet_7=__webpack_require__(46047),user_1=__webpack_require__(81781),sheet_8=__webpack_require__(42261),_scene_1=__webpack_require__(12789),sheet_9=__webpack_require__(77664),localize_1=__webpack_require__(41332);exports.registerSheets=function(){const sheetLabel=localize_1.LocalizePF2e.translations.PF2E.SheetLabel;DocumentSheetConfig.unregisterSheet(JournalEntry,"core",JournalSheet),DocumentSheetConfig.registerSheet(JournalEntry,"pf2e",sheet_7.JournalSheetPF2e,{label:()=>game.i18n.format("SHEETS.DefaultDocumentSheet",{document:game.i18n.localize("DOCUMENT.JournalEntry")}),makeDefault:!0}),DocumentSheetConfig.unregisterSheet(JournalEntryPage,"core",JournalTextTinyMCESheet),DocumentSheetConfig.registerSheet(JournalEntryPage,"pf2e",sheet_7.JournalTextTinyMCESheetPF2e,{types:["text"],label:game.i18n.localize("EDITOR.TinyMCE")}),DocumentSheetConfig.registerSheet(Scene,"pf2e",sheet_9.SceneConfigPF2e,{makeDefault:!0}),DocumentSheetConfig.registerSheet(_scene_1.TokenDocumentPF2e,"pf2e",_scene_1.TokenConfigPF2e,{makeDefault:!0}),Actors.unregisterSheet("core",ActorSheet);const localizeType=type=>{const entityType=type in CONFIG.PF2E.Actor.documentClasses?"ACTOR":"ITEM",camelized=type[0].toUpperCase()+type.slice(1).toLowerCase();return game.i18n.localize(`${entityType}.Type${camelized}`)};Actors.registerSheet("pf2e",sheet_1.CharacterSheetPF2e,{types:["character"],label:game.i18n.format(sheetLabel,{type:localizeType("character")}),makeDefault:!0}),Actors.registerSheet("pf2e",sheet_5.NPCSheetPF2e,{types:["npc"],label:game.i18n.format(sheetLabel,{type:localizeType("npc")}),makeDefault:!0}),Actors.registerSheet("pf2e",sheet_3.HazardSheetPF2e,{types:["hazard"],label:game.i18n.format(sheetLabel,{type:localizeType("hazard")})}),Actors.registerSheet("pf2e",sheet_4.LootSheetPF2e,{types:["loot"],label:game.i18n.format(sheetLabel,{type:localizeType("loot")}),makeDefault:!0}),Actors.registerSheet("pf2e",sheet_2.FamiliarSheetPF2e,{types:["familiar"],label:game.i18n.format(sheetLabel,{type:localizeType("familiar")}),makeDefault:!0}),Actors.registerSheet("pf2e",sheet_6.VehicleSheetPF2e,{types:["vehicle"],label:game.i18n.format(sheetLabel,{type:localizeType("vehicle")}),makeDefault:!0}),Items.unregisterSheet("core",ItemSheet);const itemTypes=["condition","lore","spellcastingEntry"];for(const itemType of itemTypes)Items.registerSheet("pf2e",_item_1.ItemSheetPF2e,{types:[itemType],label:game.i18n.format(sheetLabel,{type:localizeType(itemType)}),makeDefault:!0});const sheetEntries=[["action",_item_1.ActionSheetPF2e],["ancestry",_item_1.AncestrySheetPF2e],["armor",_item_1.ArmorSheetPF2e],["background",_item_1.BackgroundSheetPF2e],["backpack",_item_1.ContainerSheetPF2e],["book",_item_1.BookSheetPF2e],["class",_item_1.ClassSheetPF2e],["consumable",_item_1.ConsumableSheetPF2e],["deity",_item_1.DeitySheetPF2e],["effect",_item_1.EffectSheetPF2e],["equipment",_item_1.EquipmentSheetPF2e],["feat",_item_1.FeatSheetPF2e],["heritage",_item_1.HeritageSheetPF2e],["kit",_item_1.KitSheetPF2e],["melee",_item_1.MeleeSheetPF2e],["spell",_item_1.SpellSheetPF2e],["treasure",_item_1.TreasureSheetPF2e],["weapon",_item_1.WeaponSheetPF2e]];for(const[type,Sheet]of sheetEntries)Items.registerSheet("pf2e",Sheet,{types:[type],label:game.i18n.format(sheetLabel,{type:localizeType(type)}),makeDefault:!0});for(const itemType of _item_1.PHYSICAL_ITEM_TYPES)sheetEntries.some((([type,_sheet])=>itemType===type))||Items.registerSheet("pf2e",_item_1.PhysicalItemSheetPF2e,{types:[itemType],label:game.i18n.format(sheetLabel,{type:localizeType(itemType)}),makeDefault:!0});DocumentSheetConfig.unregisterSheet(User,"core",UserConfig),DocumentSheetConfig.registerSheet(user_1.UserPF2e,"pf2e",sheet_8.UserConfigPF2e,{makeDefault:!0,label:()=>game.i18n.format("SHEETS.DefaultDocumentSheet",{document:game.i18n.localize("DOCUMENT.User")})})}},61893:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.registerTemplates=void 0,exports.registerTemplates=function(){loadTemplates(["systems/pf2e/templates/actors/character/partials/modifiers-tooltip.html","systems/pf2e/templates/actors/character/partials/traits.html","systems/pf2e/templates/actors/character/partials/background.html","systems/pf2e/templates/actors/character/partials/abilities.html","systems/pf2e/templates/actors/character/partials/header.html","systems/pf2e/templates/actors/character/partials/granted-feat.html","systems/pf2e/templates/actors/character/sidebar/armor-class.html","systems/pf2e/templates/actors/character/sidebar/class-dc.html","systems/pf2e/templates/actors/character/sidebar/health.html","systems/pf2e/templates/actors/character/sidebar/stamina.html","systems/pf2e/templates/actors/character/sidebar/resistances.html","systems/pf2e/templates/actors/character/sidebar/perception.html","systems/pf2e/templates/actors/character/sidebar/initiative.html","systems/pf2e/templates/actors/character/sidebar/saves.html","systems/pf2e/templates/actors/character/tabs/general.html","systems/pf2e/templates/actors/character/tabs/actions.html","systems/pf2e/templates/actors/character/tabs/biography.html","systems/pf2e/templates/actors/character/tabs/effects.html","systems/pf2e/templates/actors/character/tabs/feats.html","systems/pf2e/templates/actors/character/tabs/inventory.html","systems/pf2e/templates/actors/character/tabs/pfs.html","systems/pf2e/templates/actors/character/tabs/proficiencies.html","systems/pf2e/templates/actors/character/tabs/spellcasting.html","systems/pf2e/templates/actors/character/tabs/crafting.html","systems/pf2e/templates/actors/hazard/partials/header.html","systems/pf2e/templates/actors/hazard/partials/sidebar.html","systems/pf2e/templates/actors/partials/coinage.html","systems/pf2e/templates/actors/partials/inventory.html","systems/pf2e/templates/actors/partials/item-line.html","systems/pf2e/templates/actors/partials/carry-type.html","systems/pf2e/templates/actors/partials/conditions.html","systems/pf2e/templates/actors/partials/dying-pips.html","systems/pf2e/templates/actors/crafting-entry-alchemical.html","systems/pf2e/templates/actors/crafting-entry-list.html","systems/pf2e/templates/actors/spellcasting-spell-list.html","systems/pf2e/templates/actors/character/partials/proficiencylevels-dropdown.html","systems/pf2e/templates/actors/character/icons/d20.html","systems/pf2e/templates/actors/character/icons/pfs.html","systems/pf2e/templates/actors/character/icons/plus.html","systems/pf2e/templates/actors/partials/images/header_stroke.html","systems/pf2e/templates/actors/partials/images/header_stroke_large.html","systems/pf2e/templates/actors/npc/tabs/main.html","systems/pf2e/templates/actors/npc/tabs/inventory.html","systems/pf2e/templates/actors/npc/tabs/effects.html","systems/pf2e/templates/actors/npc/tabs/spells.html","systems/pf2e/templates/actors/npc/tabs/notes.html","systems/pf2e/templates/actors/npc/partials/header.html","systems/pf2e/templates/actors/npc/partials/sidebar.html","systems/pf2e/templates/actors/npc/partials/action.html","systems/pf2e/templates/actors/npc/partials/attack.html","systems/pf2e/templates/items/rules-panel.html","systems/pf2e/templates/items/action-details.html","systems/pf2e/templates/items/ancestry-details.html","systems/pf2e/templates/items/ancestry-sidebar.html","systems/pf2e/templates/items/armor-details.html","systems/pf2e/templates/items/armor-sidebar.html","systems/pf2e/templates/items/background-details.html","systems/pf2e/templates/items/backpack-details.html","systems/pf2e/templates/items/backpack-sidebar.html","systems/pf2e/templates/items/book-details.html","systems/pf2e/templates/items/book-sidebar.html","systems/pf2e/templates/items/treasure-sidebar.html","systems/pf2e/templates/items/class-details.html","systems/pf2e/templates/items/consumable-details.html","systems/pf2e/templates/items/consumable-sidebar.html","systems/pf2e/templates/items/condition-details.html","systems/pf2e/templates/items/condition-sidebar.html","systems/pf2e/templates/items/deity-details.html","systems/pf2e/templates/items/effect-sidebar.html","systems/pf2e/templates/items/equipment-details.html","systems/pf2e/templates/items/equipment-sidebar.html","systems/pf2e/templates/items/feat-details.html","systems/pf2e/templates/items/feat-sidebar.html","systems/pf2e/templates/items/heritage-sidebar.html","systems/pf2e/templates/items/kit-details.html","systems/pf2e/templates/items/kit-sidebar.html","systems/pf2e/templates/items/lore-details.html","systems/pf2e/templates/items/lore-sidebar.html","systems/pf2e/templates/items/mystify-panel.html","systems/pf2e/templates/items/spell-details.html","systems/pf2e/templates/items/spell-overlay.html","systems/pf2e/templates/items/spell-sidebar.html","systems/pf2e/templates/items/melee-details.html","systems/pf2e/templates/items/weapon-details.html","systems/pf2e/templates/items/weapon-sidebar.html","systems/pf2e/templates/items/activation-panel.html","systems/pf2e/templates/actors/loot/inventory.html","systems/pf2e/templates/actors/loot/sidebar.html","systems/pf2e/templates/actors/vehicle/vehicle-sheet.html","systems/pf2e/templates/actors/vehicle/vehicle-header.html","systems/pf2e/templates/actors/vehicle/sidebar/vehicle-health.html","systems/pf2e/templates/actors/vehicle/sidebar/vehicle-armorclass.html","systems/pf2e/templates/actors/vehicle/sidebar/vehicle-saves.html","systems/pf2e/templates/actors/vehicle/sidebar/vehicle-resistances.html","systems/pf2e/templates/actors/vehicle/tabs/vehicle-details.html","systems/pf2e/templates/actors/vehicle/tabs/vehicle-actions.html","systems/pf2e/templates/actors/vehicle/tabs/vehicle-inventory.html","systems/pf2e/templates/actors/vehicle/tabs/vehicle-description.html","systems/pf2e/templates/compendium-browser/browser-settings.html","systems/pf2e/templates/compendium-browser/filters.html","systems/pf2e/templates/system/actions/repair/chat-button-partial.html","systems/pf2e/templates/system/actions/repair/repair-result-partial.html","systems/pf2e/templates/system/actions/repair/item-heading-partial.html","systems/pf2e/templates/scene/token/partials/appearance.html","systems/pf2e/templates/scene/token/partials/identity.html","systems/pf2e/templates/scene/token/partials/lighting.html"])}},54206:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.SetGamePF2e=void 0;const automatic_bonus_progression_1=__webpack_require__(7908),modifiers_1=__webpack_require__(92823),helpers_1=__webpack_require__(73715),compendium_browser_1=__webpack_require__(79472),effects_panel_1=__webpack_require__(78614),license_viewer_1=__webpack_require__(86513),world_clock_1=__webpack_require__(53959),status_effects_1=__webpack_require__(49780),rules_1=__webpack_require__(37434),dice_1=__webpack_require__(18235),macros_1=__webpack_require__(13822),remigrate_1=__webpack_require__(59431),action_macros_1=__webpack_require__(2604),conditions_1=__webpack_require__(71881),effect_tracker_1=__webpack_require__(42621),check_1=__webpack_require__(11848),text_editor_1=__webpack_require__(21047),_util_1=__webpack_require__(6945),register_module_art_1=__webpack_require__(88786);exports.SetGamePF2e={onInit:()=>{var _a;const actions={encouragingWords:macros_1.encouragingWords,raiseAShield:macros_1.raiseAShield,restForTheNight:macros_1.restForTheNight,earnIncome:macros_1.showEarnIncomePopup,steelYourResolve:macros_1.steelYourResolve,treatWounds:macros_1.treatWounds,...action_macros_1.ActionMacros},initSafe={Check:check_1.CheckPF2e,CheckModifier:modifiers_1.CheckModifier,Coins:helpers_1.CoinsPF2e,ConditionManager:conditions_1.ConditionManager,Dice:dice_1.DicePF2e,Modifier:modifiers_1.ModifierPF2e,ModifierType:modifiers_1.MODIFIER_TYPE,RuleElement:rules_1.RuleElementPF2e,RuleElements:rules_1.RuleElements,StatisticModifier:modifiers_1.StatisticModifier,StatusEffects:status_effects_1.StatusEffects,TextEditor:text_editor_1.TextEditorPF2e,actions,effectPanel:new effects_panel_1.EffectsPanel,effectTracker:new effect_tracker_1.EffectTracker,gm:{calculateXP:macros_1.calculateXP,launchTravelSheet:macros_1.launchTravelSheet,perceptionForSelected:macros_1.perceptionForSelected,stealthForSelected:macros_1.stealthForSelected},licenseViewer:new license_viewer_1.LicenseViewer,rollActionMacro:macros_1.rollActionMacro,rollItemMacro:macros_1.rollItemMacro,system:{moduleArt:{map:new Map,refresh:register_module_art_1.registerModuleArt},remigrate:remigrate_1.remigrate,sluggify:_util_1.sluggify},variantRules:{AutomaticBonusProgression:automatic_bonus_progression_1.AutomaticBonusProgression}};game.pf2e=mergeObject(null!==(_a=game.pf2e)&&void 0!==_a?_a:{},initSafe)},onSetup:()=>{},onReady:()=>{game.pf2e.compendiumBrowser=new compendium_browser_1.CompendiumBrowser,game.pf2e.worldClock=new world_clock_1.WorldClock}}},15806:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.eventToRollParams=void 0,exports.eventToRollParams=function(event){const skipDefault=!game.user.settings.showRollDialogs,params={skipDialog:event.shiftKey?!skipDefault:skipDefault};return(event.ctrlKey||event.metaKey)&&(params.rollMode="blindroll"),params}},33684:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.activateSocketListener=void 0;const item_transfer_1=__webpack_require__(46485),_util_1=__webpack_require__(6945);exports.activateSocketListener=function(){game.socket.on("system.pf2e",(async(...[message,userId])=>{var _a;const sender=game.users.get(userId,{strict:!0});switch(message.request){case"itemTransfer":if(game.user.isGM){console.debug(`PF2e System | Received item-transfer request from ${sender.name}`);const{data}=message;new item_transfer_1.ItemTransfer(data.source,data.target,data.quantity,data.containerId).enact(sender)}break;case"refreshSceneControls":game.user.isGM||message.data.layer!==(null===(_a=ui.controls.control)||void 0===_a?void 0:_a.layer)||(console.debug("PF2e System | Refreshing Scene Controls"),ui.controls.initialize({layer:message.data.layer}));break;default:throw(0,_util_1.ErrorPF2e)(`Received unrecognized socket emission: ${message.request}`)}}))}},32268:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.storeInitialWorldVersions=void 0;const runner_1=__webpack_require__(46842);exports.storeInitialWorldVersions=async function(){if(!game.user.hasRole(CONST.USER_ROLES.GAMEMASTER))return;if(game.settings.storage.get("world").getItem("pf2e.worldSystemVersion")||await game.settings.set("pf2e","worldSystemVersion",game.system.version),!game.settings.storage.get("world").getItem("pf2e.worldSchemaVersion")){const minimumVersion=runner_1.MigrationRunner.RECOMMENDED_SAFE_VERSION,currentVersion=0===game.actors.size?game.settings.get("pf2e","worldSchemaVersion"):Math.max(Math.min(...new Set(game.actors.map((actor=>{var _a;return null!==(_a=actor.schemaVersion)&&void 0!==_a?_a:minimumVersion})))),minimumVersion);await game.settings.set("pf2e","worldSchemaVersion",currentVersion)}}},61529:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.extendDragData=void 0;const check_1=__webpack_require__(11848),_util_1=__webpack_require__(6945);exports.extendDragData=function(){document.body.addEventListener("dragstart",(event=>{var _a,_b,_c;const{dataTransfer,target}=event;if(!(dataTransfer&&target instanceof HTMLAnchorElement&&target.classList.contains("content-link")))return;const data=JSON.parse(dataTransfer.getData("text/plain"));if("Item"!==data.type)return;const match=target.innerText.trim().match(/[0-9]+/);match&&(data.value=Number(match[0]));const containerElement=(0,_util_1.htmlClosest)(target,"[data-cast-level]"),castLevel=Number(null==containerElement?void 0:containerElement.dataset.castLevel);castLevel>0&&(data.level=castLevel);const messageId=null===(_a=(0,_util_1.htmlClosest)(target,"li.chat-message"))||void 0===_a?void 0:_a.dataset.messageId,message=game.messages.get(null!=messageId?messageId:"");if(null==message?void 0:message.actor){const{actor,token,target}=message,roll=message.rolls.at(-1);data.context={origin:{actor:actor.uuid,token:null!==(_b=null==token?void 0:token.uuid)&&void 0!==_b?_b:null},target:target?{actor:target.actor.uuid,token:target.token.uuid}:null,roll:roll?{total:roll.total,degreeOfSuccess:roll instanceof check_1.CheckRoll&&null!==(_c=roll.degreeOfSuccess)&&void 0!==_c?_c:null}:null}}dataTransfer.setData("text/plain",JSON.stringify(data))}))}},59431:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.remigrate=void 0;const runner_1=__webpack_require__(46842),migration_1=__webpack_require__(63051),localize_1=__webpack_require__(41332);exports.remigrate=async function(versionRange){if(!game.ready)return void ui.notifications.warn(game.i18n.localize("PF2E.Migrations.WorldNotReady"));const translations=localize_1.LocalizePF2e.translations.PF2E.Migrations;if(game.user.role!==CONST.USER_ROLES.GAMEMASTER)return void ui.notifications.error(game.i18n.localize(translations.OnlyGMCanUse));const migrations=migration_1.MigrationList.constructRange(versionRange.from,versionRange.to);if(0===migrations.length||versionRange.from<runner_1.MigrationRunner.RECOMMENDED_SAFE_VERSION)return void ui.notifications.error(game.i18n.format(translations.OutsideSchemaRange,{minimum:runner_1.MigrationRunner.RECOMMENDED_SAFE_VERSION,maximum:runner_1.MigrationRunner.LATEST_SCHEMA_VERSION}));const runner=new runner_1.MigrationRunner(migrations);await runner.runMigration(!0)}},27542:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.InlineRollLinks=void 0;const _actor_1=__webpack_require__(85530),values_1=__webpack_require__(8382),ghost_measured_template_1=__webpack_require__(70543),statistic_1=__webpack_require__(77486),chat_message_1=__webpack_require__(40405),dc_1=__webpack_require__(84372),sheet_util_1=__webpack_require__(15806),_util_1=__webpack_require__(6945),token_actor_utils_1=__webpack_require__(35442),_scene_1=__webpack_require__(12789),inlineSelector=["action","check","effect-area","repost"].map((keyword=>`[data-pf2-${keyword}]`)).join(",");exports.InlineRollLinks={injectRepostElement:(links,foundryDoc)=>{for(const link of links){foundryDoc&&!foundryDoc.isOwner||link.classList.add("with-repost");const repostButtons=(0,_util_1.htmlQueryAll)(link,"i[data-pf2-repost]");if(repostButtons.length>0){if(foundryDoc&&!foundryDoc.isOwner){for(const button of repostButtons)button.remove();link.classList.remove("with-repost")}continue}if(foundryDoc&&!foundryDoc.isOwner)continue;const newButton=document.createElement("i");newButton.classList.add("fas","fa-comment-alt"),newButton.setAttribute("data-pf2-repost",""),newButton.setAttribute("title",game.i18n.localize("PF2E.Repost")),link.appendChild(newButton)}},listen:($html,foundryDoc)=>{const html=$html instanceof HTMLElement?$html:$html[0];$html instanceof HTMLElement&&($html=$($html));const links=(0,_util_1.htmlQueryAll)(html,inlineSelector).filter((l=>"SPAN"===l.nodeName));exports.InlineRollLinks.injectRepostElement(links,foundryDoc);const $repostLinks=$html.find("i.fas.fa-comment-alt").filter(inlineSelector),documentFromDOM=html=>{var _a,_b,_c;if(foundryDoc instanceof chat_message_1.ChatMessagePF2e)return null!==(_b=null!==(_a=foundryDoc.actor)&&void 0!==_a?_a:foundryDoc.journalEntry)&&void 0!==_b?_b:null;if(foundryDoc instanceof _actor_1.ActorPF2e||foundryDoc instanceof JournalEntry||foundryDoc instanceof JournalEntryPage)return foundryDoc;const sheet=ui.windows[Number(null===(_c=html.closest(".app.sheet"))||void 0===_c?void 0:_c.dataset.appid)];return sheet.document instanceof _actor_1.ActorPF2e||sheet.document instanceof JournalEntry?sheet.document:null};$repostLinks.filter("i[data-pf2-repost]").on("click",(event=>{const target=event.currentTarget,parent=target.parentElement,document=documentFromDOM(target);parent&&exports.InlineRollLinks.repostAction(parent,document),event.stopPropagation()}));const $links=$(links);$links.filter("[data-pf2-action]").on("click",(event=>{var _a,_b;const $target=$(event.currentTarget),{pf2Action,pf2Glyph,pf2Variant,pf2Dc,pf2ShowDc}=null!==(_b=null===(_a=$target[0])||void 0===_a?void 0:_a.dataset)&&void 0!==_b?_b:{},action=game.pf2e.actions[pf2Action?(0,_util_1.sluggify)(pf2Action,{camel:"dromedary"}):""],visibility=null!=pf2ShowDc?pf2ShowDc:"all";pf2Action&&action?action({event,glyph:pf2Glyph,variant:pf2Variant,difficultyClass:pf2Dc?{scope:"check",value:Number(pf2Dc)||0,visibility}:void 0}):console.warn(`PF2e System | Skip executing unknown action '${pf2Action}'`)})),$links.filter("[data-pf2-check]").on("click",(event=>{var _a;const{pf2Check,pf2Dc,pf2Traits,pf2Label,pf2Adjustment}=event.currentTarget.dataset,actors=(0,token_actor_utils_1.getSelectedOrOwnActors)();if(0===actors.length)return void ui.notifications.error(game.i18n.localize("PF2E.UI.errorTargetToken"));const creatureActors=actors.filter((actor=>actor.isOfType("creature"))),parsedTraits=null==pf2Traits?void 0:pf2Traits.split(",").map((trait=>trait.trim())).filter((trait=>!!trait)),eventRollParams=(0,sheet_util_1.eventToRollParams)(event);switch(pf2Check){case"perception":for(const actor of creatureActors){const perceptionCheck=actor.system.attributes.perception;if(perceptionCheck){const dc=Number.isInteger(Number(pf2Dc))?{label:pf2Label,value:Number(pf2Dc)}:null,options=actor.getRollOptions(["all","perception"]);parsedTraits&&options.push(...parsedTraits),perceptionCheck.roll({event,options,dc})}else console.warn(`PF2e System | Skip rolling perception for '${actor}'`)}break;case"flat":for(const actor of actors){const flatCheck=new statistic_1.Statistic(actor,{label:"",slug:"flat-check",modifiers:[],check:{type:"flat-check"},domains:["all","flat-check"]});if(flatCheck){const dc=Number.isInteger(Number(pf2Dc))?{label:pf2Label,value:Number(pf2Dc)}:null;flatCheck.check.roll({...eventRollParams,extraRollOptions:parsedTraits,dc})}else console.warn(`PF2e System | Skip rolling flat check for "${actor}"`)}break;case"will":case"fortitude":case"reflex":{const document=documentFromDOM(html);for(const actor of actors){const savingThrow=null===(_a=actor.saves)||void 0===_a?void 0:_a[pf2Check];if(pf2Check&&savingThrow){const dc=Number.isInteger(Number(pf2Dc))?{label:pf2Label,value:Number(pf2Dc)}:null;savingThrow.check.roll({...eventRollParams,extraRollOptions:parsedTraits,origin:document instanceof _actor_1.ActorPF2e?document:null,dc})}else console.warn(`PF2e System | Skip rolling unknown saving throw '${pf2Check}'`)}break}default:{const skillName=(0,_util_1.objectHasKey)(values_1.SKILL_DICTIONARY,pf2Check)?values_1.SKILL_DICTIONARY[pf2Check]:null!=pf2Check?pf2Check:"";for(const actor of creatureActors){const skill=actor.skills[skillName];if(skillName&&skill){const dcValue="@self.level"===pf2Dc?(()=>{const proficiencyWithoutLevel="ProficiencyWithoutLevel"===game.settings.get("pf2e","proficiencyVariant"),level=actor.level,adjustment=Number(pf2Adjustment)||0;return(0,dc_1.calculateDC)(level,{proficiencyWithoutLevel})+adjustment})():Number(pf2Dc),dc=dcValue>0?{label:pf2Label,value:dcValue}:null;skill.check.roll({...eventRollParams,extraRollOptions:parsedTraits,dc})}else console.warn(`PF2e System | Skip rolling unknown skill check or untrained lore '${skill}'`)}}}})),$links.filter("[data-pf2-effect-area]").on("click",(async event=>{var _a,_b;const{pf2EffectArea,pf2Distance,pf2TemplateData,pf2Traits,pf2Width}=event.currentTarget.dataset,templateConversion={burst:"circle",emanation:"circle",line:"ray",cone:"cone",rect:"rect"};if("string"==typeof pf2EffectArea){const templateData=JSON.parse(null!=pf2TemplateData?pf2TemplateData:"{}");templateData.distance||(templateData.distance=Number(pf2Distance)),templateData.fillColor||(templateData.fillColor=game.user.color),templateData.t=templateConversion[pf2EffectArea],"ray"===templateData.t?templateData.width=Number(pf2Width)||CONFIG.MeasuredTemplate.defaults.width*(null!==(_b=null===(_a=canvas.dimensions)||void 0===_a?void 0:_a.distance)&&void 0!==_b?_b:1):"cone"===templateData.t&&(templateData.angle=CONFIG.MeasuredTemplate.defaults.angle),pf2Traits&&(templateData.flags={pf2e:{origin:{traits:pf2Traits.split(",")}}});const templateDoc=new _scene_1.MeasuredTemplateDocumentPF2e(templateData,{parent:canvas.scene}),ghostTemplate=new ghost_measured_template_1.GhostTemplate(templateDoc);await ghostTemplate.drawPreview()}else console.warn("PF2e System | Could not create template'")}))},repostAction:(target,document=null)=>{var _a,_b,_c,_d,_e;if(!["pf2Action","pf2Check","pf2EffectArea"].some((d=>d in target.dataset)))return;const flavor=null!==(_b=null===(_a=target.attributes.getNamedItem("data-pf2-repost-flavor"))||void 0===_a?void 0:_a.value)&&void 0!==_b?_b:"",showDC=null!==(_d=null===(_c=target.attributes.getNamedItem("data-pf2-show-dc"))||void 0===_c?void 0:_c.value)&&void 0!==_d?_d:(null==document?void 0:document.hasPlayerOwner)?"all":"gm",speaker=document instanceof _actor_1.ActorPF2e?chat_message_1.ChatMessagePF2e.getSpeaker({actor:document,token:null!==(_e=document.token)&&void 0!==_e?_e:document.getActiveTokens(!1,!0).shift()}):chat_message_1.ChatMessagePF2e.getSpeaker(),flags=document instanceof JournalEntry?{pf2e:{journalEntry:document.uuid}}:{};chat_message_1.ChatMessagePF2e.create({speaker,content:`<span data-visibility="${showDC}">${flavor}</span> ${target.outerHTML}`.trim(),flags})}}},96498:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.UserVisibilityPF2e=void 0;const _util_1=__webpack_require__(6945);exports.UserVisibilityPF2e=class UserVisibilityPF2e{static process($html,options={}){var _a,_b,_c,_d,_e,_f,_g;const html=$html instanceof HTMLElement?$html:$html[0];$html instanceof HTMLElement&&($html=$($html));const visibilityElements=(0,_util_1.htmlQueryAll)(html,"[data-visibility]");for(const element of visibilityElements.filter((e=>"none"===e.dataset.visibility)))element.remove();const{message}=options,document=null!==(_d=null!==(_c=null!==(_b=null!==(_a=options.document)&&void 0!==_a?_a:null==message?void 0:message.actor)&&void 0!==_b?_b:null==message?void 0:message.journalEntry)&&void 0!==_c?_c:message)&&void 0!==_d?_d:null;if(document){const elements=visibilityElements.filter((e=>"owner"===e.dataset.visibility));for(const element of elements){const whoseData=null!==(_e=element.dataset.whose)&&void 0!==_e?_e:"self";"self"!==whoseData?(null==message?void 0:message.target)&&"target"===whoseData&&(element.dataset.visibility=null===(_f=message.target.actor.hasPlayerOwner)||void 0===_f||_f?"all":"gm"):element.dataset.visibility=document.hasPlayerOwner?"all":"gm"}}const hasOwnership=null!==(_g=null==document?void 0:document.isOwner)&&void 0!==_g?_g:game.user.isGM,dcSetting=game.settings.get("pf2e","metagame_showDC"),$saveButtons=$html.find("button[data-action=save]");if(!(null==document?void 0:document.hasPlayerOwner)&&!hasOwnership&&!dcSetting?$saveButtons.each(((_idx,elem)=>{const saveType=elem.dataset.save;if((0,_util_1.objectHasKey)(CONFIG.PF2E.saves,saveType)){const saveName=game.i18n.localize(CONFIG.PF2E.saves[saveType]);elem.innerText=game.i18n.format("PF2E.SavingThrowWithName",{saveName})}})):(null==document?void 0:document.hasPlayerOwner)||dcSetting||$saveButtons.each(((_idx,elem)=>{$(elem).addClass("hidden-to-others")})),$html.find("[data-owner-title]").each(((_idx,element)=>{if(hasOwnership){const value=element.dataset.ownerTitle;element.setAttribute("title",value)}else element.removeAttribute("data-owner-title")})),!game.user.isGM)for(const element of visibilityElements.filter((e=>"gm"===e.dataset.visibility)))element.remove()}static processMessageSender(message,html){var _a,_b;const tokenSetsNameVisibility=game.settings.get("pf2e","metagame_tokenSetsNameVisibility"),token=null==message?void 0:message.token;if(token&&tokenSetsNameVisibility){const sender=html.querySelector("h4.message-sender"),nameToHide=token.name.trim(),shouldHideName=!token.playersCanSeeName&&(null==sender?void 0:sender.innerText.trim())===nameToHide;sender&&shouldHideName&&(game.user.isGM?sender.dataset.visibility="gm":sender.innerText=null!==(_b=null===(_a=message.user)||void 0===_a?void 0:_a.name)&&void 0!==_b?_b:"Gamemaster")}}}},41019:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.monkeyPatchFoundry=void 0;const text_editor_1=__webpack_require__(21047);exports.monkeyPatchFoundry=function(){TextEditor.enrichHTML=text_editor_1.TextEditorPF2e.enrichHTML}},88075:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.htmlQueryAll=exports.htmlQuery=exports.htmlClosest=void 0,exports.htmlQuery=function(parent,selectors){return parent instanceof Element?parent.querySelector(selectors):null},exports.htmlQueryAll=function(parent,selectors){return parent instanceof Element?Array.from(parent.querySelectorAll(selectors)):[]},exports.htmlClosest=function(child,selectors){return child instanceof Element?child.closest(selectors):null}},16539:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.isTokenUUID=exports.isItemUUID=exports.fromUUIDs=void 0;const _actor_1=__webpack_require__(85530),_item_1=__webpack_require__(10843),misc_1=__webpack_require__(68129);exports.fromUUIDs=async function(uuids){const actors=[],items=[],docsOrIndices=uuids.map((u=>[u,fromUuidSync(u)]));for(const[uuid,docOrIndex]of docsOrIndices)if(docOrIndex instanceof _actor_1.ActorPF2e)actors.push(docOrIndex);else if(docOrIndex instanceof _item_1.ItemPF2e)items.push(docOrIndex);else if(docOrIndex){const document=await fromUuid(uuid);document instanceof _actor_1.ActorPF2e?actors.push(document):document instanceof _item_1.ItemPF2e&&items.push(document)}return actors.length>0?actors:items},exports.isItemUUID=function(uuid){if("string"!=typeof uuid)return!1;if(uuid.startsWith("Item."))return!0;const[type,scope,packId,id]=uuid.split(".");if("Compendium"!==type)return!1;if(!(scope&&packId&&id))throw(0,misc_1.ErrorPF2e)(`Unable to parse UUID: ${uuid}`);const pack=game.packs.get(`${scope}.${packId}`);return"Item"===(null==pack?void 0:pack.documentName)},exports.isTokenUUID=function(uuid){return"string"==typeof uuid&&/^Scene\.[A-Za-z0-9]{16}\.Token\.[A-Za-z0-9]{16}$/.test(uuid)}},6945:function(__unused_webpack_module,exports,__webpack_require__){var __createBinding=this&&this.__createBinding||(Object.create?function(o,m,k,k2){void 0===k2&&(k2=k);var desc=Object.getOwnPropertyDescriptor(m,k);desc&&!("get"in desc?!m.__esModule:desc.writable||desc.configurable)||(desc={enumerable:!0,get:function(){return m[k]}}),Object.defineProperty(o,k2,desc)}:function(o,m,k,k2){void 0===k2&&(k2=k),o[k2]=m[k]}),__exportStar=this&&this.__exportStar||function(m,exports){for(var p in m)"default"===p||Object.prototype.hasOwnProperty.call(exports,p)||__createBinding(exports,m,p)};Object.defineProperty(exports,"__esModule",{value:!0}),__exportStar(__webpack_require__(88075),exports),__exportStar(__webpack_require__(68129),exports),__exportStar(__webpack_require__(20664),exports)},68129:(__unused_webpack_module,exports,__webpack_require__)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.zip=exports.tupleHasValue=exports.sum=exports.sortedStringify=exports.sortStringRecord=exports.sortObjByKey=exports.sortLabeledRecord=exports.sluggify=exports.setHasElement=exports.recursiveReplaceString=exports.pick=exports.parseHTML=exports.padArray=exports.ordinal=exports.objectHasKey=exports.localizeList=exports.isObject=exports.isBlank=exports.groupBy=exports.getActionIcon=exports.getActionGlyph=exports.fontAwesomeIcon=exports.applyNTimes=exports.addSign=exports.ErrorPF2e=void 0;const localize_1=__webpack_require__(41332);exports.groupBy=function(array,criterion){const result=new Map;for(const elem of array){const key=criterion(elem),group=result.get(key);group?group.push(elem):result.set(key,[elem])}return result},exports.padArray=function(array,requiredLength,padWith){const result=[...array];for(let i=array.length;i<requiredLength;i+=1)result.push(padWith);return result},exports.isBlank=function(text){return null==text||""===text.trim()},exports.addSign=function(number){return number<0?`${number}`:number>0?`+${number}`:"0"},exports.sum=function(values){return values.reduce(((a,b)=>a+b),0)},exports.zip=function(a,b,zipFunction){return a.length>b.length?b.map(((elem,index)=>zipFunction(a[index],elem))):a.map(((elem,index)=>zipFunction(elem,b[index])))},exports.applyNTimes=function(func,times,start){let result=start;for(let i=0;i<times;i+=1)result=func(result);return result},exports.objectHasKey=function(obj,key){return("string"==typeof key||"number"==typeof key)&&key in obj},exports.tupleHasValue=function(array,value){return array.includes(value)},exports.setHasElement=function(set,value){return set.has(value)},exports.pick=function(obj,keys){return keys.reduce(((result,key)=>(key in obj&&(result[key]=obj[key]),result)),{})};const wordCharacter=String.raw`[\p{Alphabetic}\p{Mark}\p{Decimal_Number}\p{Join_Control}]`,nonWordCharacter=String.raw`[^\p{Alphabetic}\p{Mark}\p{Decimal_Number}\p{Join_Control}]`,nonWordCharacterRE=new RegExp(nonWordCharacter,"gu"),wordBoundary=String.raw`(?:${wordCharacter})(?=${nonWordCharacter})|(?:${nonWordCharacter})(?=${wordCharacter})`,nonWordBoundary=String.raw`(?:${wordCharacter})(?=${wordCharacter})`,lowerCaseLetter=String.raw`\p{Lowercase_Letter}`,upperCaseLetter=String.raw`\p{Uppercase_Letter}`,lowerCaseThenUpperCaseRE=new RegExp(`(${lowerCaseLetter})(${upperCaseLetter}${nonWordBoundary})`,"gu"),nonWordCharacterHyphenOrSpaceRE=/[^-\p{White_Space}\p{Alphabetic}\p{Mark}\p{Decimal_Number}\p{Join_Control}]/gu,upperOrWordBoundariedLowerRE=new RegExp(`${upperCaseLetter}|(?:${wordBoundary})${lowerCaseLetter}`,"gu");exports.sluggify=function sluggify(text,{camel=null}={}){if("string"!=typeof text)return console.warn("Non-string argument passed to `sluggify`"),"";switch(camel){case null:return text.replace(lowerCaseThenUpperCaseRE,"$1-$2").toLowerCase().replace(/['’]/g,"").replace(nonWordCharacterRE," ").trim().replace(/[-\s]+/g,"-");case"bactrian":{const dromedary=sluggify(text,{camel:"dromedary"});return dromedary.charAt(0).toUpperCase()+dromedary.slice(1)}case"dromedary":return text.replace(nonWordCharacterHyphenOrSpaceRE,"").replace(/[-_]+/g," ").replace(upperOrWordBoundariedLowerRE,((part,index)=>0===index?part.toLowerCase():part.toUpperCase())).replace(/\s+/g,"");default:throw ErrorPF2e("I don't think that's a real camel.")}},exports.parseHTML=function(unparsed){const fragment=document.createElement("template");fragment.innerHTML=unparsed;const element=fragment.content.firstElementChild;if(!(element instanceof HTMLElement))throw ErrorPF2e("Unexpected error parsing HTML");return element};const actionImgMap={1:"systems/pf2e/icons/actions/OneAction.webp",2:"systems/pf2e/icons/actions/TwoActions.webp",3:"systems/pf2e/icons/actions/ThreeActions.webp","1 or 2":"systems/pf2e/icons/actions/OneTwoActions.webp","1 to 3":"systems/pf2e/icons/actions/OneThreeActions.webp","2 or 3":"systems/pf2e/icons/actions/TwoThreeActions.webp",free:"systems/pf2e/icons/actions/FreeAction.webp",reaction:"systems/pf2e/icons/actions/Reaction.webp",passive:"systems/pf2e/icons/actions/Passive.webp"};exports.getActionIcon=function(action,fallback="systems/pf2e/icons/default-icons/mystery-man.svg"){var _a;if(null===action)return actionImgMap.passive;const value="object"!=typeof action?action:"action"===action.type?action.value:action.type,sanitized=String(null!=value?value:"").toLowerCase().trim();return null!==(_a=actionImgMap[sanitized])&&void 0!==_a?_a:fallback};const actionGlyphMap={0:"F",free:"F",1:"A",2:"D",3:"T","1 or 2":"A/D","1 to 3":"A - T","2 or 3":"D/T",reaction:"R"};function ErrorPF2e(message){return Error(`PF2e System | ${message}`)}function isObject(value){return"object"==typeof value&&null!==value}function sortObjByKey(value){return isObject(value)?Array.isArray(value)?value.map(sortObjByKey):Object.keys(value).sort().reduce(((o,key)=>{const v=value[key];return o[key]=sortObjByKey(v),o}),{}):value}exports.getActionGlyph=function(action){var _a;if(!action&&0!==action)return"";const value="object"!=typeof action?action:"action"===action.type?action.value:action.type,sanitized=String(null!=value?value:"").toLowerCase().trim();return null!==(_a=actionGlyphMap[sanitized])&&void 0!==_a?_a:""},exports.ErrorPF2e=ErrorPF2e,exports.ordinal=function(value){const suffix=localize_1.LocalizePF2e.translations.PF2E.OrdinalSuffixes[new Intl.PluralRules(game.i18n.lang,{type:"ordinal"}).select(value)];return game.i18n.format("PF2E.OrdinalNumber",{value,suffix})},exports.localizeList=function(items){const parts=localize_1.LocalizePF2e.translations.PF2E.ListPartsOr;if(0===items.length)return"";if(1===items.length)return items[0];if(2===items.length)return game.i18n.format(parts.two,{first:items[0],second:items[1]});let result=game.i18n.format(parts.start,{first:items[0],second:"{second}"});for(let i=1;i<=items.length-2;i++)if(i===items.length-2){const end=game.i18n.format(parts.end,{first:items[i],second:items[items.length-1]});result=result.replace("{second}",end)}else{const newSegment=game.i18n.format(parts.middle,{first:items[i],second:"{second}"});result=result.replace("{second}",newSegment)}return result},exports.fontAwesomeIcon=function(glyph,{style="solid",fixedWidth=!1}={}){const styleClass=`fa-${style}`,glyphClass=glyph.startsWith("fa-")?glyph:`fa-${glyph}`,icon=document.createElement("i");return icon.classList.add(styleClass,glyphClass),fixedWidth&&icon.classList.add("fa-fw"),icon},exports.isObject=isObject,exports.sortLabeledRecord=function(record){return Object.entries(record).sort(((a,b)=>a[1].label.localeCompare(b[1].label,game.i18n.lang))).reduce(((copy,[key,value])=>mergeObject(copy,{[key]:value})),{})},exports.sortStringRecord=function(record){return Object.entries(record).sort(((a,b)=>a[1].localeCompare(b[1],game.i18n.lang))).reduce(((copy,[key,value])=>mergeObject(copy,{[key]:value})),{})},exports.sortObjByKey=sortObjByKey,exports.sortedStringify=function(obj){return JSON.stringify(sortObjByKey(obj))},exports.recursiveReplaceString=function recursiveReplaceString(source,replace){const clone=isObject(source)?deepClone(source):source;if("string"==typeof clone)return replace(clone);if(isObject(clone))for(const[key,value]of Object.entries(clone))Array.isArray(value)?clone[key]=value.map((e=>"string"==typeof e||isObject(e)?recursiveReplaceString(e,replace):e)):("string"==typeof value||isObject(value))&&(clone[key]=recursiveReplaceString(value,replace));return clone}},20664:function(__unused_webpack_module,exports,__webpack_require__){var __importDefault=this&&this.__importDefault||function(mod){return mod&&mod.__esModule?mod:{default:mod}};Object.defineProperty(exports,"__esModule",{value:!0}),exports.traitSlugToObject=exports.tagify=void 0;const tagify_1=__importDefault(__webpack_require__(88537)),misc_1=__webpack_require__(68129);exports.traitSlugToObject=function(trait,dictionary){var _a;const traitObject={name:trait,label:null!==(_a=dictionary[trait])&&void 0!==_a?_a:trait};return(0,misc_1.objectHasKey)(CONFIG.PF2E.traitsDescriptions,trait)&&(traitObject.description=CONFIG.PF2E.traitsDescriptions[trait]),traitObject},exports.tagify=function(input,{whitelist,maxTags}={}){if("JSON"!==(null==input?void 0:input.dataset.dtype))throw(0,misc_1.ErrorPF2e)("Usable only on input elements with JSON data-dtype");const whitelistTransformed=whitelist?function(whitelist){return Array.isArray(whitelist)?whitelist:Object.entries(whitelist).map((([key,locPath])=>({id:key,value:game.i18n.localize("string"==typeof locPath?locPath:locPath.label)}))).sort(((a,b)=>a.value.localeCompare(b.value,game.i18n.lang)))}(whitelist):[],maxItems=whitelist?Object.keys(whitelistTransformed).length:void 0,tagify=new tagify_1.default(input,{enforceWhitelist:!!whitelist,keepInvalidTags:!1,skipInvalid:!!whitelist,maxTags:null!=maxTags?maxTags:maxItems,dropdown:{enabled:0,maxItems,searchKeys:["id","value"]},whitelist:whitelistTransformed});return input.name&&(tagify.DOM.scope.dataset.name=input.name),tagify.DOM.input.blur(),tagify}},35442:(__unused_webpack_module,exports)=>{Object.defineProperty(exports,"__esModule",{value:!0}),exports.getSelectedOrOwnActors=void 0,exports.getSelectedOrOwnActors=function(types,useOwnCharacter=!0){const actors=canvas.tokens.controlled.flatMap((token=>token.actor?token.actor:[])).filter((actor=>actor.isOwner)).filter((actor=>!types||actor.isOfType(...types)));return 0===actors.length&&game.user.character&&useOwnCharacter&&actors.push(game.user.character),actors}},67515:module=>{module.exports=JSON.parse('{"ACTOR":{"TypeAnimalCompanion":"Animal Companion","TypeCharacter":"Player Character","TypeEidolon":"Eidolon","TypeFamiliar":"Familiar","TypeHazard":"Hazard","TypeLoot":"Loot","TypeNpc":"NPC","TypeVehicle":"Vehicle"},"ITEM":{"TypeAction":"Action","TypeAncestry":"Ancestry","TypeArmor":"Armor","TypeBackground":"Background","TypeBackpack":"Container","TypeBook":"Book","TypeClass":"Class","TypeCondition":"Condition","TypeConsumable":"Consumable","TypeDeity":"Deity","TypeEffect":"Effect","TypeEquipment":"Equipment","TypeFeat":"Feat/Feature","TypeHeritage":"Heritage","TypeKit":"Kit","TypeLore":"Lore Skill","TypeMelee":"NPC Attack","TypeSpell":"Spell","TypeSpellcastingentry":"Spellcasting Entry","TypeTreasure":"Treasure","TypeWeapon":"Weapon"},"COMBAT":{"Begin":"Begin Encounter","CombatantNotInScene":"The participant {name} is not present in your currently viewed scene.","CombatantRemove":"Remove Participant","CombatantStatus":"Participant Status","CombatantUpdate":"Update Participant","End":"End Encounter","EndConfirmation":"End this encounter and empty the turn tracker?","EndTitle":"End Encounter?","NoneActive":"There is no active Encounter in your currently viewed Scene.","NoneRemaining":"There are no participants remaining in this Encounter that are not defeated.","ResourceHint":"Choose an attribute to track for each participant.","Settings":"Encounter Tracker Settings","SidebarTitle":"Encounter Tracker","SkipDefeatedHint":"Automatically bypass participants marked as defeated?","UnknownCombatant":"Unknown Participant"},"COMPENDIUM":{"Search":"Search Compendiums"},"CONTROLS":{"AdjustSceneDarkness":"Adjust Scene Darkness","EffectPanel":"Effects Panel","WorldClock":"World Clock"},"DOCUMENT":{"Combat":"Encounter","Combats":"Encounters"},"SIDEBAR":{"TabCombat":"Encounter Tracker"},"PF2E":{"AbilityBoost":"Ability Boost","AbilityBoostLevels":"Ability Boost Levels","AbilityCha":"Charisma","AbilityCon":"Constitution","AbilityDex":"Dexterity","AbilityFlaw":"Flaw","AbilityInt":"Intelligence","AbilityModifierLabel":"Ability Modifier","AbilityScoresHeader":"Ability Scores","AbilityFree":"Free","AbilityId":{"cha":"Cha","con":"Con","dex":"Dex","int":"Int","str":"Str","wis":"Wis"},"AbilityStr":"Strength","AbilityCheck":{"str":"Strength Check","dex":"Dexterity Check","con":"Constitution Check","int":"Intelligence Check","wis":"Wisdom Check","cha":"Charisma Check"},"AbilityTitle":"Ability","AbilityWis":"Wisdom","AccessoryPropertyRuneCalled":"Called","AccessoryPropertyRuneDragonsBreath":"Dragon\'s Breath","AccessoryPropertyRuneGreaterPaired":"Greater Paired","AccessoryPropertyRuneGreaterWindCatcher":"Greater Wind-Catcher","AccessoryPropertyRuneMajorPaired":"Major Paired","AccessoryPropertyRunePaired":"Paired","AccessoryPropertyRunePresentable":"Presentable","AccessoryPropertyRuneSnagging":"Snagging","AccessoryPropertyRuneSoftLanding":"Soft-Landing","AccessoryPropertyRuneSpellBastion":"Spell-Bastion","AccessoryPropertyRuneWindCatcher":"Wind-Catcher","Action":{"RestForTheNight":{"Label":"Rest for the Night","Prompt":"Rest for the night?","Message":{"Awakens":"{actor} awakens well-rested.","ConditionReduced":"{condition} reduced by 1.","ConditionRemoved":"No longer {condition}.","FocusPoints":"Focus points restored.","Frequencies":"Action frequencies refreshed.","HitPoints":"{hitPoints} hit points restored.","InfusedReagents":"Infused reagents restored.","Resolve":"Resolve restored.","SpellSlots":"All spell slots restored.","StaminaPoints":"Stamina points restored.","TemporaryItems":"Temporary items removed.","WandsCharges":"Wands recharged."}},"Strike":{"MeleeLabel":"Melee Strike: {weapon}","RangedLabel":"Ranged Strike: {weapon}","OutOfRange":"The target is out of range."}},"ActionActionTypeLabel":"Action Type","ActionActionsLabel":"Actions","ActionBrowserSearchHint":"You can search for name or custom attributes. Possible searchable attributes are:<br> source, spellType, level, school, components, materials, target, range, time, duration, damage, damageType, save, concentration, ritual, ability and classes. <br>Example: \'fire, damage:d6\' to show all spells that have fire in their name and a d6 in the damage","ActionCategoryDefensive":"Defensive","ActionCategoryInteraction":"Interaction","ActionCategoryLabel":"Action Category","ActionCategoryOffensive":"Offensive","ActionDeathNoteLabel":"Death Note","ActionNumber1":"One","ActionNumber2":"Two","ActionNumber3":"Three","ActionSkillRequirementLabel":"Requirement","ActionTypeAction":"Action","ActionTypeSingle":"Single Action","ActionTypeFree":"Free Action","ActionTypePassive":"Passive","ActionTypeReaction":"Reaction","ActionWeaponLabel":"Associated Weapon","Actions":{"ArcaneSlam":{"Modifier":{"SizeDifference":"Size Difference"},"Notes":{"NoTarget":"<strong>Size Difference</strong> You take a -2 circumstance penalty to your check if the target is one size larger than you and a -4 circumstance penalty if it\'s larger than that. You gain a +2 circumstance bonus to your check if the target is one size smaller than you and a +4 circumstance bonus if it\'s smaller than that.","criticalSuccess":"<strong>Critical Success</strong> You slam the foe down and the magical energy overwhelms it. The creature is knocked @UUID[Compendium.pf2e.conditionitems.j91X7x0XSomq8d60]{prone}, becomes @UUID[Compendium.pf2e.conditionitems.TkIyaNPgTZFBCCuh]{dazzled} for 1 round, and takes damage equal to [[/r 2d6 + @abilities.str.mod # Damage: Arcane Slam]]{2d6 plus your Strength modifier}. The foe is no longer @UUID[Compendium.pf2e.conditionitems.kWc1fhmv9LBiTuei]{grabbed} or @UUID[Compendium.pf2e.conditionitems.VcDeM8A5oI6VqhbM]{restrained} by you.","success":"<strong>Success</strong> You slam the foe down. The creature is knocked @UUID[Compendium.pf2e.conditionitems.j91X7x0XSomq8d60]{prone} and takes damage equal to your [[/r @abilities.str.mod # Damage: Arcane Slam]]{Strength modifier}. The foe is no longer @UUID[Compendium.pf2e.conditionitems.kWc1fhmv9LBiTuei]{grabbed} or @UUID[Compendium.pf2e.conditionitems.VcDeM8A5oI6VqhbM]{restrained} by you.","failure":"<strong>Failure</strong> You are unable to slam the creature, but your hold on the creature remains.","criticalFailure":"<strong>Critical Failure</strong> The creature breaks free and is no longer @UUID[Compendium.pf2e.conditionitems.kWc1fhmv9LBiTuei]{grabbed} or @UUID[Compendium.pf2e.conditionitems.VcDeM8A5oI6VqhbM]{restrained} by you."},"Title":"Arcane Slam"},"AvoidNotice":{"Notes":{"criticalSuccess":"<strong>Critical Success</strong> You\'re @UUID[Compendium.pf2e.conditionitems.VRSef5y1LmL2Hkjf]{undetected} by the creature during your movement and remain undetected by the creature at the end of it.<br/><br/>See the @UUID[Compendium.pf2e.actionspf2e.VMozDqMMuK5kpoX4]{Sneak} action for details.","success":"<strong>Success</strong> You\'re @UUID[Compendium.pf2e.conditionitems.VRSef5y1LmL2Hkjf]{undetected} by the creature during your movement and remain undetected by the creature at the end of it.<br/><br/>See the @UUID[Compendium.pf2e.actionspf2e.VMozDqMMuK5kpoX4]{Sneak} action for details."},"Title":"Avoid Notice"},"Balance":{"Notes":{"criticalSuccess":"<strong>Critical Success</strong> You move up to your Speed.","success":"<strong>Success</strong> You move up to your Speed, treating it as difficult terrain (every 5 feet costs 10 feet of movement).","failure":"<strong>Failure</strong> You must remain stationary to keep your balance (wasting the action) or you fall. If you fall, your turn ends.","criticalFailure":"<strong>Critical Failure</strong> You fall and your turn ends."},"Title":"Balance"},"BonMot":{"Notes":{"criticalSuccess":"<strong>Critical Success</strong> The target is distracted and takes a -3 status penalty to Perception and Will saves for 1 minute. The target can end the effect early with a retort to your Bon Mot. This can either be a single action that has the concentrate trait or an appropriate skill action to frame their retort. The GM determines which skill actions qualify, though they must take at least 1 action. Typically, the retort needs to use a linguistic Charisma-based skill action. @UUID[Compendium.pf2e.feat-effects.CtrZFI3RV0yPNzTv]{Effect: Bon Mot (Critical Success)}","success":"<strong>Success</strong> The target is distracted and takes a -2 status penalty to Perception and Will saves for 1 minute. The target can end the effect early with a retort to your Bon Mot. This can either be a single action that has the concentrate trait or an appropriate skill action to frame their retort. The GM determines which skill actions qualify, though they must take at least 1 action. Typically, the retort needs to use a linguistic Charisma-based skill action. @UUID[Compendium.pf2e.feat-effects.GoSls6SKCFmSoDxT]{Effect: Bon Mot}","criticalFailure":"<strong>Critical Failure</strong> Your quip is atrocious. You take the same penalty an enemy would take had you succeeded. This ends after 1 minute or if you issue another Bon Mot and succeed. @UUID[Compendium.pf2e.feat-effects.GoSls6SKCFmSoDxT]{Effect: Bon Mot}"},"Title":"Bon Mot"},"Climb":{"Notes":{"criticalSuccess":"<strong>Critical Success</strong> You move up, across, or safely down the incline for 5 feet plus 5 feet per 20 feet of your land Speed (a total of 10 feet for most PCs).","success":"<strong>Success</strong> You move up, across, or safely down the incline for 5 feet per 20 feet of your land Speed (a total of 5 feet for most PCs, minimum 5 feet if your Speed is below 20 feet).","criticalFailure":"<strong>Critical Failure</strong> You fall. If you began the climb on stable ground, you fall and land @UUID[Compendium.pf2e.conditionitems.j91X7x0XSomq8d60]{Prone}."},"Title":"Climb"},"Coerce":{"Notes":{"criticalSuccess":"<strong>Critical Success</strong> The target gives you the information you seek or agrees to follow your directives so long as they aren\'t likely to harm the target in any way. The target continues to comply for an amount of time determined by the GM but not exceeding 1 day, at which point the target becomes unfriendly (if they weren\'t already unfriendly or hostile). However, the target is too scared of you to retaliate—at least in the short term.","success":"<strong>Success</strong> As critical success, but once the target becomes unfriendly, they might decide to act against you—for example, by reporting you to the authorities or assisting your enemies.","failure":"<strong>Failure</strong> The target doesn\'t do what you say, and if they were not already unfriendly or hostile, they become unfriendly.","criticalFailure":"<strong>Critical Failure</strong> The target refuses to comply, becomes hostile if they weren\'t already, and can\'t be Coerced by you for at least 1 week."},"Title":"Coerce"},"Craft":{"SelectItemDialog":{"CancelButtonLabel":"Cancel","CraftButtonLabel":"Craft","DropItemZoneLabel":"Drag item here...","Title":"Select item to Craft"},"SelectSpellDialog":{"CraftButtonLabel":"Craft","Title":"Select Spell"},"Error":{"ItemReferenceMismatch":"Only accepts physical items for Craft from a compendium or the world\'s Item Directory."},"Notes":{"criticalSuccess":"<strong>Critical Success</strong> Your attempt is successful. Each additional day spent Crafting reduces the materials needed to complete the item by an amount based on your level + 1 and your proficiency rank in Crafting.","success":"<strong>Success</strong> Your attempt is successful. Each additional day spent Crafting reduces the materials needed to complete the item by an amount based on your level and your proficiency rank.","failure":"<strong>Failure</strong> You fail to complete the item. You can salvage the raw materials you supplied for their full value. If you want to try again, you must start over.","criticalFailure":"<strong>Critical Failure</strong> You fail to complete the item. You ruin 10% of the raw materials you supplied, but you can salvage the rest. If you want to try again, you must start over."},"Title":"Craft","Warning":{"NotPhysicalItem":"Specified item {item} is not a physical item.","MissingItem":"Unable to Craft unknown item with ID {uuid}.","CantAddItem":"Could not add items","InsufficientCoins":"Insufficient coins"},"Details":{"Discount":"Discount Per Day:","DaysForNoCost":"Days until no Additional Cost:","PayMaterials":"Pay {cost} Material Costs and Craft","PayFull":"Pay {cost} Full Costs and Craft","LostMaterials":"Lose {cost} of Materials","ReceiveItem":"Receive Item"},"Information":{"PayAndReceive":"{actorName} pays {cost} crafting costs and receives {quantity}x {itemName}.","ReceiveItem":"{actorName} receives {quantity}x {itemName}.","LoseMaterials":"{actorName} loses {cost} of materials."}},"CommandAnAnimal":{"Notes":{"criticalSuccess":"<strong>Critical Success</strong> The animal does as you command on its next turn.","success":"<strong>Success</strong> The animal does as you command on its next turn.","failure":"<strong>Failure</strong> The animal is hesitant or resistant, and it does nothing.","criticalFailure":"<strong>Critical Failure</strong> The animal misbehaves or misunderstands, and it takes some other action determined by the GM."},"Title":"Command an Animal"},"CreateADiversion":{"DistractingWords":"Create a Diversion - Distracting Words","Gesture":"Create a Diversion - Gesture","Notes":{"criticalSuccess":"<strong>Critical Success</strong> You become @UUID[Compendium.pf2e.conditionitems.iU0fEDdBp3rXpTMC]{Hidden} to each creature whose Perception DC is less than or equal to your result. (The hidden condition allows you to @UUID[Compendium.pf2e.actionspf2e.VMozDqMMuK5kpoX4]{Sneak} away.) This lasts until the end of your turn or until you do anything except Step or use the @UUID[Compendium.pf2e.actionspf2e.XMcnh4cSI32tljXa]{Hide} or the @UUID[Compendium.pf2e.actionspf2e.VMozDqMMuK5kpoX4]{Sneak} action of the Stealth skill. If you Strike a creature, the creature remains @UUID[Compendium.pf2e.conditionitems.AJh5ex99aV6VTggg]{Flat-Footed} against that attack, and you then become @UUID[Compendium.pf2e.conditionitems.1wQY3JYyhMYeeV2G]{Observed}. If you do anything else, you become @UUID[Compendium.pf2e.conditionitems.1wQY3JYyhMYeeV2G]{Observed} just before you act unless the GM determines otherwise.","success":"<strong>Success</strong> You become @UUID[Compendium.pf2e.conditionitems.iU0fEDdBp3rXpTMC]{Hidden} to each creature whose Perception DC is less than or equal to your result. (The hidden condition allows you to @UUID[Compendium.pf2e.actionspf2e.VMozDqMMuK5kpoX4]{Sneak} away.) This lasts until the end of your turn or until you do anything except Step or use the @UUID[Compendium.pf2e.actionspf2e.XMcnh4cSI32tljXa]{Hide} or the @UUID[Compendium.pf2e.actionspf2e.VMozDqMMuK5kpoX4]{Sneak} action of the Stealth skill. If you Strike a creature, the creature remains @UUID[Compendium.pf2e.conditionitems.AJh5ex99aV6VTggg]{Flat-Footed} against that attack, and you then become @UUID[Compendium.pf2e.conditionitems.1wQY3JYyhMYeeV2G]{Observed}. If you do anything else, you become @UUID[Compendium.pf2e.conditionitems.1wQY3JYyhMYeeV2G]{Observed} just before you act unless the GM determines otherwise.","failure":"<strong>Failure</strong> You don\'t divert the attention of any creatures whose Perception DC exceeds your result, and those creatures are aware you were trying to trick them.","criticalFailure":"<strong>Critical Failure</strong> You don\'t divert the attention of any creatures whose Perception DC exceeds your result, and those creatures are aware you were trying to trick them."},"Trick":"Create a Diversion - Trick"},"Demoralize":{"Notes":{"criticalSuccess":"<strong>Critical Success</strong> The target becomes @UUID[Compendium.pf2e.conditionitems.TBSHQspnbcqxsmjL]{Frightened 2}.","success":"<strong>Success</strong> The target becomes @UUID[Compendium.pf2e.conditionitems.TBSHQspnbcqxsmjL]{Frightened 1}."},"Title":"Demoralize"},"Disarm":{"EffectLabel":"Using weapon with loose grip","Notes":{"criticalSuccess":"<strong>Critical Success</strong> You knock the item out of the opponent\'s grasp. It falls to the ground in the opponent\'s space.","success":"<strong>Success</strong> You weaken your opponent\'s grasp on the item. Until the start of that creature\'s turn, attempts to Disarm the opponent of that item gain a +2 circumstance bonus, and the target takes a -2 circumstance penalty to attacks with the item or other checks requiring a firm grasp on the item. @UUID[Compendium.pf2e.equipment-effects.z3ATL8DcRVrT0Uzt]{Effect: Disarm (Success)}","criticalFailure":"<strong>Critical Failure</strong> You lose your balance and become @UUID[Compendium.pf2e.conditionitems.AJh5ex99aV6VTggg]{Flat-Footed} until the start of your next turn."},"Title":"Disarm"},"EncouragingWords":{"Title":"Encouraging Words","ContentMain":"Select a target DC. Remember that you can\'t attempt a heal above your proficiency. Attempting to do so will downgrade the DC and amount healed to the highest you\'re capable of.","ContentLabel1":"Diplomacy DC:","ContentLabel2":"DC Modifier:","ContentOption1":"Trained DC 15","ContentOption2":"Expert DC 20, +5 Stamina","ContentOption3":"Master DC 30, +15 Stamina","ContentOption4":"Legendary DC 40, +25 Stamina","BadArgs":"This action must be performed with exactly one character or NPC.","NotTrained":"{name} is not trained in Diplomacy and doesn\'t know how to use Encouraging Words.","StaminaNotEnabled":"The Stamina variant is not enabled.","CritSuccess":"Critical Success","Success":"Success","Failure":"Failure","CritFailure":"Critical Failure","Recovery":"Stamina Recovery","Damage":"Damage","Cancel":"Cancel"},"Feint":{"Notes":{"criticalSuccess":"<strong>Critical Success</strong> You throw your enemy\'s defenses against you entirely off. The target is @UUID[Compendium.pf2e.conditionitems.AJh5ex99aV6VTggg]{Flat-Footed} against melee attacks that you attempt against it until the end of your next turn.","success":"<strong>Success</strong> Your foe is fooled, but only momentarily. The target is @UUID[Compendium.pf2e.conditionitems.AJh5ex99aV6VTggg]{Flat-Footed} against the next melee attack that you attempt against it before the end of your current turn.","criticalFailure":"<strong>Critical Failure</strong> Your feint backfires. You are @UUID[Compendium.pf2e.conditionitems.AJh5ex99aV6VTggg]{Flat-Footed} against melee attacks the target attempts against you until the end of your next turn."},"Title":"Feint"},"ForceOpen":{"Notes":{"criticalSuccess":"<strong>Critical Success</strong> You open the door, window, container, or gate and can avoid damaging it in the process.","success":"<strong>Success</strong> You break the door, window, container, or gate open, and the door, window, container, or gate gains the @UUID[Compendium.pf2e.conditionitems.6dNUvdb1dhToNDj3]{Broken} condition. If it\'s especially sturdy, the GM might have it take damage but not be broken.","criticalFailure":"<strong>Critical Failure</strong> Your attempt jams the door, window, container, or gate shut, imposing a -2 circumstance penalty on future attempts to Force it Open."},"Title":"Force Open","NoCrowbarPenalty":"No Crowbar"},"GatherInformation":{"Notes":{"criticalSuccess":"<strong>Critical Success</strong> You collect information about the individual or topic. The GM determines the specifics.","success":"<strong>Success</strong> You collect information about the individual or topic. The GM determines the specifics.","criticalFailure":"<strong>Critical Failure</strong> You collect incorrect information about the individual or topic."},"Title":"Gather Information"},"Grapple":{"Notes":{"criticalSuccess":"<strong>Critical Success</strong> Your opponent is @UUID[Compendium.pf2e.conditionitems.VcDeM8A5oI6VqhbM]{Restrained} until the end of your next turn unless you move or your opponent @UUID[Compendium.pf2e.actionspf2e.SkZAQRkLLkmBQNB9]{Escapes}.","success":"<strong>Success</strong> Your opponent is @UUID[Compendium.pf2e.conditionitems.kWc1fhmv9LBiTuei]{Grabbed} until the end of your next turn unless you move or your opponent @UUID[Compendium.pf2e.actionspf2e.SkZAQRkLLkmBQNB9]{Escapes}.","failure":"<strong>Failure</strong> You fail to grab your opponent. If you already had the opponent @UUID[Compendium.pf2e.conditionitems.kWc1fhmv9LBiTuei]{Grabbed} or @UUID[Compendium.pf2e.conditionitems.VcDeM8A5oI6VqhbM]{Restrained} using a Grapple, those conditions on that creature end.","criticalFailure":"<strong>Critical Failure</strong> If you already had the opponent @UUID[Compendium.pf2e.conditionitems.kWc1fhmv9LBiTuei]{Grabbed} or @UUID[Compendium.pf2e.conditionitems.VcDeM8A5oI6VqhbM]{Restrained}, it breaks free. Your target can either grab you, as if it succeeded at using the @UUID[Compendium.pf2e.actionspf2e.PMbdMWc2QroouFGD]{Grapple} action against you, or force you to fall and land @UUID[Compendium.pf2e.conditionitems.j91X7x0XSomq8d60]{Prone}."},"Title":"Grapple"},"Hide":{"Notes":{"criticalSuccess":"<strong>Critical Success</strong> If the creature could see you, you\'re now @UUID[Compendium.pf2e.conditionitems.iU0fEDdBp3rXpTMC]{Hidden} from it instead of observed. If you were @UUID[Compendium.pf2e.conditionitems.iU0fEDdBp3rXpTMC]{Hidden} from or @UUID[Compendium.pf2e.conditionitems.VRSef5y1LmL2Hkjf]{Undetected} by the creature, you retain that condition.","success":"<strong>Success</strong> If the creature could see you, you\'re now @UUID[Compendium.pf2e.conditionitems.iU0fEDdBp3rXpTMC]{Hidden} from it instead of observed. If you were @UUID[Compendium.pf2e.conditionitems.iU0fEDdBp3rXpTMC]{Hidden} from or @UUID[Compendium.pf2e.conditionitems.VRSef5y1LmL2Hkjf]{Undetected} by the creature, you retain that condition."},"Title":"Hide"},"HighJump":{"Notes":{"criticalSuccess":"<strong>Critical Success</strong> Increase the maximum vertical distance to 8 feet, or increase the maximum vertical distance to 5 feet and maximum horizontal distance to 10 feet.","success":"<strong>Success</strong> Increase the maximum vertical distance to 5 feet.","failure":"<strong>Failure</strong> You @UUID[Compendium.pf2e.actionspf2e.d5I6018Mci2SWokk]{Leap} normally.","criticalFailure":"<strong>Critical Failure</strong> You don\'t @UUID[Compendium.pf2e.actionspf2e.d5I6018Mci2SWokk]{Leap} at all, and instead you fall @UUID[Compendium.pf2e.conditionitems.j91X7x0XSomq8d60]{Prone} in your space."},"Title":"High Jump"},"Interact":{"Title":"Interact","Parenthetical":"Interact {purpose}","Draw1H":{"Title":"Draw (1H)","Description":"{actor} draws their {weapon}."},"Draw2H":{"Title":"Draw (2H)","Description":"{actor} draws their {weapon}."},"PickUp1H":{"Title":"Pick Up (1H)","Description":"{actor} picks up {weapon} from the ground."},"PickUp2H":{"Title":"Pick Up (2H)","Description":"{actor} picks up {weapon} from the ground."},"Grip":{"Title":"Change Grip (2H)","Description":"{actor} grips their {weapon} with two hands."},"Retrieve1H":{"Title":"Retrieve (1H)","Description":"{actor} retrieves their {weapon}."},"Retrieve2H":{"Title":"Retrieve (1H)","Description":"{actor} retrieves their {weapon}."},"Sheathe":{"Title":"Sheathe","Description":"{actor} sheathes their {weapon}."}},"Impersonate":{"Notes":{"criticalSuccess":"<strong>Critical Success</strong> You trick the creature into thinking you\'re the person you\'re disguised as. You might have to attempt a new check if your behavior changes.","success":"<strong>Success</strong> You trick the creature into thinking you\'re the person you\'re disguised as. You might have to attempt a new check if your behavior changes.","failure":"<strong>Failure</strong> The creature can tell you\'re not who you claim to be.","criticalFailure":"<strong>Critical Failure</strong> The creature can tell you\'re not who you claim to be, and it recognizes you if it would know you without a disguise."},"Title":"Impersonate"},"Lie":{"Notes":{"criticalSuccess":"<strong>Critical Success</strong> The target believes your lie.","success":"<strong>Success</strong> The target believes your lie.","failure":"<strong>Failure</strong> The target doesn\'t believe your lie and gains a +4 circumstance bonus against your attempts to Lie for the duration of your conversation. The target is also more likely to be suspicious of you in the future.","criticalFailure":"<strong>Critical Failure</strong> The target doesn\'t believe your lie and gains a +4 circumstance bonus against your attempts to Lie for the duration of your conversation. The target is also more likely to be suspicious of you in the future."},"Title":"Lie"},"LongJump":{"Notes":{"criticalSuccess":"<strong>Critical Success</strong> Increase the maximum horizontal distance you @UUID[Compendium.pf2e.actionspf2e.d5I6018Mci2SWokk]{Leap} to the desired distance.","success":"<strong>Success</strong> Increase the maximum horizontal distance you @UUID[Compendium.pf2e.actionspf2e.d5I6018Mci2SWokk]{Leap} to the desired distance.","failure":"<strong>Failure</strong> You @UUID[Compendium.pf2e.actionspf2e.d5I6018Mci2SWokk]{Leap} normally.","criticalFailure":"<strong>Critical Failure</strong> You @UUID[Compendium.pf2e.actionspf2e.d5I6018Mci2SWokk]{Leap} normally, but then fall and land @UUID[Compendium.pf2e.conditionitems.j91X7x0XSomq8d60]{Prone}."},"Title":"Long Jump"},"MakeAnImpression":{"Notes":{"criticalSuccess":"<strong>Critical Success</strong> The target\'s attitude toward you improves by two steps.","success":"<strong>Success</strong> The target\'s attitude toward you improves by one step.","criticalFailure":"<strong>Critical Failure</strong> The target\'s attitude toward you decreases by one step."},"Title":"Make an Impression"},"ManeuverInFlight":{"Notes":{"criticalSuccess":"<strong>Critical Success</strong> You succeed at the maneuver.","success":"<strong>Success</strong> You succeed at the maneuver.","failure":"<strong>Failure</strong> Your maneuver fails. The GM chooses if you simply can\'t move or if some other detrimental effect happens. The outcome should be appropriate for the maneuver you attempted (for instance, being blown off course if you were trying to fly against a strong wind).","criticalFailure":"<strong>Critical Failure</strong> As failure, but the consequence is more dire."},"Title":"Maneuver in Flight"},"PickALock":{"Notes":{"criticalSuccess":"<strong>Critical Success</strong> You unlock the lock, or you achieve two successes toward opening a complex lock. You leave no trace of your tampering.","success":"<strong>Success</strong> You open the lock, or you achieve one success toward opening a complex lock.","criticalFailure":"<strong>Critical Failure</strong> You break your tools. Fixing them requires using Crafting to @UUID[Compendium.pf2e.actionspf2e.bT3skovyLUtP22ME]{Repair} them or else swapping in replacement picks (costing 3 sp, or 3 gp for infiltrator thieves\' tools)."},"Title":"Pick a Lock"},"RaiseAShield":{"SingleActionTitle":"Raise a Shield","ReactionTitle":"Reactive Shield","Content":"{actor} raises their shield.","BadArgs":"This action must be performed with exactly one character or NPC.","NoShieldEquipped":"{actor} must have a shield equipped.","ShieldIsBroken":"{actor}\'s {shield} is broken.","ShieldIsDestroyed":"{actor}\'s {shield} is destroyed."},"Release":{"Title":"Release","Drop":{"Title":"Drop","Description":"{actor} drops their {weapon} onto the ground."},"Grip":{"Title":"Change Grip (1H)","Description":"{actor} releases a hand from their {weapon}."}},"Repair":{"Chat":{"ItemRepaired":"{itemName} was repaired for {repairedDamage} points of damage for a total of {afterRepairHitPoints} out of {maximumHitPoints} Hit Points.","ItemDamaged":"{itemName} was dealt {damageDealt} points of damage for a total of {afterDamageHitPoints} out of {maximumHitPoints} Hit Points."},"Error":{"ItemReferenceMismatch":"Only accepts physical items for Repair from an actor."},"Labels":{"DamageMitigatedByHardness":"The critically failed Repair attempt caused no damage to the item due to hardness.","DealItemDamage":"Deal {value} damage to item","Hardness":"Hardness","ItemLevelRepairDC":"Item level {level} repair DC","RestoreItemHitPoints":"Restore {value} Hit Points to item","RollItemDamage":"Roll {value} damage"},"Notes":{"criticalSuccess":"<strong>Critical Success</strong> You restore 10 Hit Points to the item, plus an additional 10 Hit Points per proficiency rank you have in Crafting (a total of 20 HP if you\'re trained, 30 HP if you\'re an expert, 40 HP if you\'re a master, or 50 HP if you\'re legendary).","success":"<strong>Success</strong> You restore 5 Hit Points to the item, plus an additional 5 per proficiency rank you have in Crafting (for a total of 10 HP if you are trained, 15 HP if you\'re an expert, 20 HP if you\'re a master, or 25 HP if you\'re legendary).","criticalFailure":"<strong>Critical Failure</strong> You deal 2d6 damage to the item. Apply the item\'s Hardness to this damage."},"SelectItemDialog":{"CancelButtonLabel":"Cancel","RepairButtonLabel":"Repair","DropItemZoneLabel":"Drag item here...","Title":"Select item to Repair"},"Title":"Repair","Warning":{"NotPhysicalItem":"Specified item {item} is not a physical item."}},"Request":{"Notes":{"criticalSuccess":"<strong>Critical Success</strong> The target agrees to your request without qualifications.","success":"<strong>Success</strong> The target agrees to your request, but they might demand added provisions or alterations to the request.","failure":"<strong>Failure</strong> The target refuses the request, though they might propose an alternative that is less extreme.","criticalFailure":"<strong>Critical Failure</strong> Not only does the target refuse the request, but their attitude toward you decreases by one step due to the temerity of the request."},"Title":"Request"},"Seek":{"Notes":{"criticalSuccess":"<strong>Critical Success</strong> If you were searching for creatures, any @UUID[Compendium.pf2e.conditionitems.VRSef5y1LmL2Hkjf]{Undetected} or @UUID[Compendium.pf2e.conditionitems.iU0fEDdBp3rXpTMC]{Hidden} creature you critically succeeded against becomes @UUID[Compendium.pf2e.conditionitems.1wQY3JYyhMYeeV2G]{Observed} by you. If you were searching for an object, you learn its location.","success":"<strong>Success</strong> If you were searching for creatures, any @UUID[Compendium.pf2e.conditionitems.VRSef5y1LmL2Hkjf]{Undetected} creature you succeeded against becomes @UUID[Compendium.pf2e.conditionitems.iU0fEDdBp3rXpTMC]{Hidden} from you instead of @UUID[Compendium.pf2e.conditionitems.VRSef5y1LmL2Hkjf]{Undetected}, and any @UUID[Compendium.pf2e.conditionitems.iU0fEDdBp3rXpTMC]{Hidden} creature you succeeded against becomes @UUID[Compendium.pf2e.conditionitems.1wQY3JYyhMYeeV2G]{Observed} by you. If you were searching for an object, you learn its location or get a clue to its whereabouts, as determined by the GM."},"Title":"Seek"},"SenseDirection":{"Modifier":{"NoCompass":"No Compass"},"Notes":{"criticalSuccess":"<strong>Critical Success</strong> You get an excellent sense of where you are. If you are in an environment with cardinal directions, you know them exactly.","success":"<strong>Success</strong> You gain enough orientation to avoid becoming hopelessly lost. If you are in an environment with cardinal directions, you have a sense of those directions."},"Title":"Sense Direction"},"SenseMotive":{"Notes":{"criticalSuccess":"<strong>Critical Success</strong> You determine the creature\'s true intentions and get a solid idea of any mental magic affecting it.","success":"<strong>Success</strong> You can tell whether the creature is behaving normally, but you don\'t know its exact intentions or what magic might be affecting it.","failure":"<strong>Failure</strong> You detect what a deceptive creature wants you to believe. If they\'re not being deceptive, you believe they\'re behaving normally.","criticalFailure":"<strong>Critical Failure</strong> You get a false sense of the creature\'s intentions."},"Title":"Sense Motive"},"ShieldBlock":{"SelectAShield":"Select a shield"},"Shove":{"Notes":{"criticalSuccess":"<strong>Critical Success</strong> You push your opponent up to 10 feet away from you. You can Stride after it, but you must move the same distance and in the same direction.","success":"<strong>Success</strong> You push your opponent back 5 feet. You can Stride after it, but you must move the same distance and in the same direction.","criticalFailure":"<strong>Critical Failure</strong> You lose your balance, fall, and land @UUID[Compendium.pf2e.conditionitems.j91X7x0XSomq8d60]{Prone}."},"Title":"Shove"},"Sneak":{"Notes":{"criticalSuccess":"<strong>Critical Success</strong> You\'re undetected by the creature during your movement and remain undetected by the creature at the end of it.","success":"<strong>Success</strong> You\'re undetected by the creature during your movement and remain undetected by the creature at the end of it.","failure":"<strong>Failure</strong> A telltale sound or other sign gives your position away, though you still remain unseen. You\'re hidden from the creature throughout your movement and remain so","criticalFailure":"<strong>Critical Failure</strong> You\'re spotted! You\'re observed by the creature throughout your movement and remain so. If you\'re invisible and were hidden from the creature, instead of being observed you\'re hidden throughout your movement and remain so."},"Title":"Sneak"},"Squeeze":{"Notes":{"criticalSuccess":"<strong>Critical Success</strong> You squeeze through the tight space in 1 minute per 10 feet of squeezing.","success":"<strong>Success</strong> You squeeze through in 1 minute per 5 feet.","criticalFailure":"<strong>Critical Failure</strong> You become stuck in the tight space. While you\'re stuck, you can spend 1 minute attempting another Acrobatics check at the same DC. Any result on that check other than a critical failure causes you to become unstuck."},"Title":"Squeeze"},"SteelYourResolve":{"Title":"Steel Your Resolve","Content":"Spend a resolve point and regain stamina?","BadArgs":"This action must be performed with exactly one character or NPC.","StaminaNotEnabled":"The Stamina variant is not enabled.","NoStamina":"{name} is tired and needs to go to bed! No resolve points remaining.","RecoverStamina":"{name} has {ratio} SP and spends a resolve point, recovering half their maximum Stamina."},"Swim":{"Notes":{"criticalSuccess":"<strong>Critical Success</strong> You move through the water 10 feet, plus 5 feet per 20 feet of your land Speed (a total of 15 feet for most PCs).","success":"<strong>Success</strong> You move through the water 5 feet, plus 5 feet per 20 feet of your land Speed (a total of 10 feet for most PCs).","criticalFailure":"<strong>Critical Failure</strong> You make no progress, and if you\'re holding your breath, you lose 1 round of air."},"Title":"Swim"},"Tamper":{"Notes":{"criticalSuccess":"<strong>Critical Success</strong> Your tampering is incredibly effective. If you tampered with a weapon, the enemy takes a -2 circumstance penalty to attack rolls and damage rolls with that weapon. If you tampered with armor, the armor hampers the enemy\'s movement, making the enemy flat-footed and inflicting a -10-foot penalty to its Speeds. The effect lasts until the enemy Interacts to remove it, regardless of which one you used. @UUID[Compendium.pf2e.feat-effects.rzcpTJU9MvW1x1gz]{Effect: Armor Tampered With (Critical Success)} @UUID[Compendium.pf2e.feat-effects.o7qm13OmaYOMwgib]{Effect: Weapon Tampered With (Critical Success)}","success":"<strong>Success</strong> Your tampering is temporarily effective. As critical success, but the effect ends at the start of your next turn, even if the enemy doesn\'t Interact to end it. @UUID[Compendium.pf2e.feat-effects.IfRkgjyh0JzGalIy]{Effect: Armor Tampered With (Success)} @UUID[Compendium.pf2e.feat-effects.4QWayYR3JSL9bk2T]{Effect: Weapon Tampered With (Success)}","criticalFailure":"<strong>Critical Failure</strong> Your tampering backfires dramatically, creating a small explosion from your own tools or gear. You take [[/r {@details.level.value}[fire] # Tamper Backfire]]{fire damage equal to your level}."},"Title":"Tamper"},"Track":{"Notes":{"criticalSuccess":"<strong>Critical Success</strong> You find the trail or continue to follow the one you\'re already following.","success":"<strong>Success</strong> You find the trail or continue to follow the one you\'re already following.","failure":"<strong>Failure</strong> You lose the trail but can try again after a 1-hour delay.","criticalFailure":"<strong>Critical Failure</strong> You lose the trail and can\'t try again for 24 hours."},"Title":"Track"},"TreatDisease":{"Notes":{"criticalSuccess":"<strong>Critical Success</strong> You grant the creature a +4 circumstance bonus to its next saving throw against the disease.<br/>@UUID[Compendium.pf2e.equipment-effects.id20P4pj7zDKeLmy]{Effect: Treat Disease (Critical Success)}","success":"<strong>Success</strong> You grant the creature a +2 circumstance bonus to its next saving throw against the disease.<br/>@UUID[Compendium.pf2e.equipment-effects.Ee2xfKX1yyqGIDZj]{Effect: Treat Disease (Success)}","criticalFailure":"<strong>Critical Failure</strong> Your efforts cause the creature to take a -2 circumstance penalty to its next save against the disease.<br/>@UUID[Compendium.pf2e.equipment-effects.5oYKYXAexr0vhx84]{Effect: Treat Disease (Critical Failure)}"},"Title":"Treat Disease"},"TreatPoison":{"Notes":{"criticalSuccess":"<strong>Critical Success</strong> You grant the creature a +4 circumstance bonus to its next saving throw against the poison.<br/>@UUID[Compendium.pf2e.equipment-effects.XwCBalKJf3CiEiFa]{Effect: Treat Poison (Critical Success)}","success":"<strong>Success</strong> You grant the creature a +2 circumstance bonus to its next saving throw against the poison.<br/>@UUID[Compendium.pf2e.equipment-effects.XWenziR7J3mwKV4W]{Effect: Treat Poison (Success)}","criticalFailure":"<strong>Critical Failure</strong> Your efforts cause the creature to take a -2 circumstance penalty to its next save against the poison.<br/>@UUID[Compendium.pf2e.equipment-effects.ESuBosh3t1pXEcBj]{Effect: Treat Poison (Critical Failure)}"},"Title":"Treat Poison"},"TreatWounds":{"Content":"Select a target DC. Remember that you can\'t attempt a heal above your proficiency. Attempting to do so will downgrade the DC and amount healed to the highest you\'re capable of.","DC":{"Mod":"DC Modifier:","Trained":"Trained DC 15","Expert":"Expert DC 20, +10 Healing","Master":"Master DC 30, +30 Healing","Legendary":"Legendary DC 40, +50 Healing"},"Error":"Token {name} does not have the medicine skill","Feats":{"RiskySurgery":"Risky Surgery","MortalHealing":"Mortal Healing"},"Label":"Treat Wounds","Rolls":{"RiskySurgery":"Damage Roll: Risky Surgery","TreatWounds":"Healing Roll: Treat Wounds","TreatWoundsCriticalFailure":"Damage Roll: Treat Wounds"},"SkillSelect":"Treat Wounds Skill:"},"Trip":{"Notes":{"criticalSuccess":"<strong>Critical Success</strong> The target falls and lands @UUID[Compendium.pf2e.conditionitems.j91X7x0XSomq8d60]{Prone} and takes [[/r 1d6[bludgeoning] # Bludgeoning damage]]{1d6} bludgeoning damage.","success":"<strong>Success</strong> The target falls and lands @UUID[Compendium.pf2e.conditionitems.j91X7x0XSomq8d60]{Prone}.","criticalFailure":"<strong>Critical Failure</strong> You lose your balance and fall and land @UUID[Compendium.pf2e.conditionitems.j91X7x0XSomq8d60]{Prone}."},"Title":"Trip"},"TumbleThrough":{"Notes":{"criticalSuccess":"<strong>Critical Success</strong> You move through the enemy\'s space, treating the squares in its space as difficult terrain (every 5 feet costs 10 feet of movement). If you don\'t have enough Speed to move all the way through its space, you get the same effect as a failure.","success":"<strong>Success</strong> You move through the enemy\'s space, treating the squares in its space as difficult terrain (every 5 feet costs 10 feet of movement). If you don\'t have enough Speed to move all the way through its space, you get the same effect as a failure.","failure":"<strong>Failure</strong> Your movement ends, and you trigger reactions as if you had moved out of the square you started in.","criticalFailure":"<strong>Critical Failure</strong> Your movement ends, and you trigger reactions as if you had moved out of the square you started in."},"Title":"Tumble Through"},"WhirlingThrow":{"Notes":{"criticalSuccess":"<strong>Critical Success</strong> You throw the creature the desired distance and it lands @UUID[Compendium.pf2e.conditionitems.j91X7x0XSomq8d60]{Prone}.","success":"<strong>Success</strong> You throw the creature the desired distance.","failure":"<strong>Failure</strong> You don\'t throw the creature.","criticalFailure":"<strong>Critical Failure</strong> You don\'t throw the creature, and it\'s no longer @UUID[Compendium.pf2e.conditionitems.kWc1fhmv9LBiTuei]{Grabbed} or @UUID[Compendium.pf2e.conditionitems.VcDeM8A5oI6VqhbM]{Restrained} by you."},"Title":"Whirling Throw"}},"ActionsCheck":{"acrobatics":"Acrobatics Check","arcana":"Arcana Check","athletics":"Athletics Check","crafting":"Crafting Check","deception":"Deception Check","diplomacy":"Diplomacy Check","intimidation":"Intimidation Check","medicine":"Medicine Check","nature":"Nature Check","occultism":"Occultism Check","perception":"Perception Check","performance":"Performance Check","religion":"Religion Check","society":"Society Check","stealth":"Stealth Check","survival":"Survival Check","thievery":"Thievery Check"},"ActionsWarning":{"DeceptionUnknownVariant":"Unknown variant \'{variant}\' used for Deception, use either distracting words, gesture, or trick.","NoActor":"Select at least one token before rolling, or assign a default character."},"ActionsActionsHeader":"Actions","ActionsFreeActionsHeader":"Free Actions","ActionsReactionsHeader":"Reactions","Actor":{"ApplyDamage":{"AtFullHealth":"{actor} is already at full health.","DamagedForN":"{actor} takes {hpDamage} damage.","ShieldAbsorbsAll":"{actor} is unscathed, their shield completely absorbing {absorbedDamage} damage.","DamagedForNShield":"{actor}\'s shield absorbs {absorbedDamage} damage, with an additional {hpDamage} making it through.","HealedForN":"{actor} is healed for {hpDamage} damage.","ShieldDamagedForN":"Their shield is also damaged for {shieldDamage}.","ShieldDamagedForNBroken":"Their shield also takes {shieldDamage} damage, breaking it.","ShieldDamagedForNDestroyed":"Their shield also takes {shieldDamage} damage, destroying it.","ShieldNotRaised":"{actor} has not raised their shield.","TakesNoDamage":"{actor} takes no damage."},"Character":{"AbilityBuilder":{"Title":"Assign your boosts","Boost":"Boost","Boosts":"Boosts","Flaw":"Flaw","Flaws":"Flaws","KeyIcon":"Key","VoluntaryFlaw":{"Title":"Voluntary Flaw","Description":"Select two voluntary flaws to gain a free boost."},"BackgroundBoostDescription":"Two boosts: one must be {a} or {b}.","AbilityScoreMethod":{"Title":"Ability Score Method","Description":"Switching method resets your ability score distribution.","UseCustomLabel":"Use Custom"},"AncestryMissingHelp":"Choose an ancestry to select boosts.","BackgroundMissingHelp":"Choose a background to select boosts.","ClassMissingHelp":"Choose a class to select boosts.","NotSelected":"Not Selected","Complete":"Complete"},"AncestryClass":"{ancestry} {class}","ClassDC":{"Label":"Class DC","Plural":"Class DCs"},"Configure":{"Title":"Configure Character","ShowBasicUnarmed":{"Label":"Show Basic Unarmed Attack","Hint":"A PC always has available an unspecific unarmed attack using any part of their body. The attack may be hidden from view if the player never intends to use it."}},"Rest":{"Label":"Rest for the Night"}},"Creature":{"Alliance":{"Default":"Ownership Default ({alliance})","Opposition":"Opposition","Party":"Party","Neutral":"Neutral"},"Configure":{"Alliance":{"Label":"Alliance","Hint":"A creature can be in opposition to the party, allied with it, or neutral. This impacts some mechanics during an encounter, such as flanking."}},"CriticalSpecialization":"Critical Specialization","Spellcasting":{"Cantrips":"Cantrips","InvalidProficiency":"Invalid","MagicItemTypesLabel":"Magic Item Types","ValidItemTypes":{"All":"All Magic Items","Scroll":"Scrolls Only"}},"SpellPreparation":{"Title":"{actor}: Spell Preparation","Hint":"To prepare a spell, drag one from this list to a slot on the actor sheet.","HintFlexible":"To prepare a spell, enable it here. To prepare a cantrip, drag one from this list to a slot on the actor sheet. "},"Sense":{"Acuity":{"Label":"Acuity","Precise":"Precise","Imprecise":"Imprecise","Vague":"Vague"},"Label":"Senses","RangeLabel":"Range","NoRangeLimit":"No Limit","Type":{"Darkvision":"Darkvision","Echolocation":"Echolocation","GreaterDarkvision":"Greater Darkvision","Hearing":"Hearing","Lifesense":"Lifesense","LowLightVision":"Low-Light Vision","Motionsense":"Motionsense","Scent":"Scent","SeeInvisibility":"See Invisibility","Spiritsense":"Spiritsense","Tremorsense":"Tremorsense","Wavesense":"Wavesense"},"WithAcuity":"{sense} ({acuity})","WithAcuityAndRange":"{sense} ({acuity} {range} Ft)"}},"Dead":"Dead","Hazard":{"TitleEdit":"{name} (Edit Mode)","Level":"Hazard {level}","EmitsSound":{"Title":"Emits Sound?","Hint":"Whether this hazard emits sound and can be sensed via hearing","True":"Always","False":"Never","Encounter":"During Encounters"},"Simple":"Simple"},"NPC":{"Configure":{"Title":"Configure NPC","Lootable":{"Label":"Lootable?","Hint":"Set whether this NPC becomes lootable by players upon its demise. The global default can be configured in <a>Automation Settings</a>.","DefaultLootable":"Global Default (Lootable)","DefaultNotLootable":"Global Default (Not Lootable)","Lootable":"Lootable","NotLootable":"Not Lootable"}},"GenerateAttack":{"Label":"Generate Attack","Confirm":{"Title":"Regenerate attack","Content":"An attack has already been generated for this weapon. Would you like to replace it?"},"Notification":"Generated NPC attack: {attack}"}},"Plural":"Actors"},"ActorSizeGargantuan":"Gargantuan","ActorSizeHuge":"Huge","ActorSizeLarge":"Large","ActorSizeMedium":"Medium","ActorSizeSmall":"Small","ActorSizeTiny":"Tiny","AddCoinsCombineStacksLabel":"Combine Stacks","AddCoinsTitle":"Add Coins","AddCombatProficiency":{"Title":"Add Combat Proficiency","Message":"Select a weapon group or base weapon"},"AddModifierTitle":"Add Modifier","RemoveModifierTitle":"Remove Modifier","AddShortLabel":"Add","AddSpellTitle":"Add Spell","AddSpellcastingEntryTitle":"Add Spellcasting Entry","AdditionalSkills":"Additional Skills","AdditionalLanguagePlusInt":"(plus Intelligence)","Age":"Age","AgeTitle":"The age of your character","Alignment":"Alignment","AlignmentCE":"Chaotic Evil","AlignmentCG":"Chaotic Good","AlignmentCN":"Chaotic Neutral","AlignmentLE":"Lawful Evil","AlignmentLG":"Lawful Good","AlignmentLN":"Lawful Neutral","AlignmentN":"Neutral","AlignmentNE":"Neutral Evil","AlignmentNG":"Neutral Good","AlignmentTitle":"Your alignment","AllSavesLabel":"All Saves","AncestryFeatures":"Ancestry Features","AncestryHP":"Ancestry HP","AncestryTitle":"Your character\'s ancestry","AncestryFeatLevels":"Ancestry Feat Levels","AreaLabel":"Area","AreaSize10":"10 Foot","AreaSize100":"100 Foot","AreaSize1000":"1000 Foot","AreaSize120":"120 Foot","AreaSize15":"15 Foot","AreaSize20":"20 Foot","AreaSize25":"25 Foot","AreaSize30":"30 Foot","AreaSize360":"360 Foot","AreaSize40":"40 Foot","AreaSize45":"45 Foot","AreaSize5":"5 Foot","AreaSize50":"50 Foot","AreaSize500":"500 Foot","AreaSize60":"60 Foot","AreaSize75":"75 Foot","AreaSize80":"80 Foot","AreaSize90":"90 Foot","AreaSize1Mile":"1 Mile","AreaSizeQuarterMile":"Quarter Mile","AreaTypeBurst":"Burst","AreaTypeCone":"Cone","AreaTypeCube":"Cube","AreaTypeEmanation":"Emanation","AreaTypeLine":"Line","AreaTypeSquare":"Square","ArmorArmorLabel":"AC Bonus","ArmorArmorTypeLabel":"Category","ArmorBaseLabel":"Base","ArmorCheckLabel":"Check Penalty","ArmorCheckPenalty":"Armor Check Penalty","ArmorClassBase":"Base Armor Class 10","ArmorClassLabel":"Armor Class","ArmorClassShortLabel":"AC","ArmorDexLabel":"Dex Modifier Cap","ArmorGreaterResilientRune":"Greater Resilient","ArmorGreaterStrikingRune":"Greater Striking","ArmorGroupChain":"Chain","ArmorGroupCloth":"Cloth","ArmorGroupComposite":"Composite","ArmorGroupLabel":"Group","ArmorGroupLeather":"Leather","ArmorGroupPlate":"Plate","ArmorMajorResilientRune":"Major Resilient","ArmorMajorStrikingRune":"Major Striking","ArmorPotencyRune1":"Armor Potency (+1)","ArmorPotencyRune2":"Armor Potency (+2)","ArmorPotencyRune3":"Armor Potency (+3)","ArmorPotencyRune4":"Armor Potency (+4)","ArmorPropertyRuneAcidResistant":"Acid-Resistant","ArmorPropertyRuneAntimagic":"Antimagic","ArmorPropertyRuneBitter":"Bitter","ArmorPropertyRuneColdResistant":"Cold-Resistant","ArmorPropertyRuneDeathless":"Deathless","ArmorPropertyRuneDread":"Lesser Dread","ArmorPropertyRuneElectricityResistant":"Electricity-Resistant","ArmorPropertyRuneEthereal":"Ethereal","ArmorPropertyRuneFireResistant":"Fire-Resistant","ArmorPropertyRuneFortification":"Fortification","ArmorPropertyRuneGlamered":"Glamered","ArmorPropertyRuneGreaterAcidResistant":"Greater Acid-Resistant","ArmorPropertyRuneGreaterColdResistant":"Greater Cold-Resistant","ArmorPropertyRuneGreaterDread":"Greater Dread","ArmorPropertyRuneGreaterElectricityResistant":"Greater Electricity-Resistant","ArmorPropertyRuneGreaterFireResistant":"Greater Fire-Resistant","ArmorPropertyRuneGreaterFortification":"Greater Fortification","ArmorPropertyRuneGreaterInvisibility":"Greater Invisibility","ArmorPropertyRuneGreaterReady":"Greater Ready","ArmorPropertyRuneGreaterWinged":"Greater Winged","ArmorPropertyRuneGreaterShadow":"Greater Shadow","ArmorPropertyRuneGreaterSlick":"Greater Slick","ArmorPropertyRuneGreaterStanching":"Greater Stanching","ArmorPropertyRuneImplacable":"Implacable","ArmorPropertyRuneInvisibility":"Invisibility","ArmorPropertyRuneMajorShadow":"Major Shadow","ArmorPropertyRuneMajorSlick":"Major Slick","ArmorPropertyRuneMajorStanching":"Major Stanching","ArmorPropertyRuneModerateDread":"Moderate Dread","ArmorPropertyRuneReady":"Ready","ArmorPropertyRuneRockBraced":"Rock-Braced","ArmorPropertyRuneShadow":"Shadow","ArmorPropertyRuneSinisterKnight":"Sinister Knight","ArmorPropertyRuneSlick":"Slick","ArmorPropertyRuneSoaring":"Soaring","ArmorPropertyRuneStanching":"Stanching","ArmorPropertyRuneTrueStanching":"True Stanching","ArmorPropertyRuneWinged":"Winged","ArmorResilientRune":"Resilient","ArmorSpeedLabel":"Speed Penalty","ArmorStrengthLabel":"Strength Threshold","ArmorStrengthRequiredLabel":"Strength required","ArmorStrikingRune":"Striking","ArmorTypeHeavy":"Heavy Armor","ArmorTypeLight":"Light Armor","ArmorTypeMedium":"Medium Armor","ArmorTypeShield":"Shield","ArmorTypeUnarmored":"Unarmored","AttackEffectConstrict":"Constrict","AttackEffectGrab":"Grab","AttackEffectGreaterConstrict":"Improved Constrict","AttackEffectImprovedGrab":"Improved Grab","AttackEffectImprovedKnockdown":"Improved Knockdown","AttackEffectImprovedPush":"Improved Push","AttackEffectKnockdown":"Knockdown","AttackEffectPush":"Push","AttackEffectTrip":"Trip","AttackLabel":"Attack","AttitudeLabel":"Attitude","Attitudes":{"Hostile":"Hostile","Unfriendly":"Unfriendly","Indifferent":"Indifferent","Friendly":"Friendly","Helpful":"Helpful"},"AutomaticBonusProgression":{"attackPotency":"Attack Potency","defensePotency":"Defense Potency","devastatingAttacks":"Devastating Attacks","perceptionPotency":"Perception Potency","savePotency":"Save Potency"},"Background":"Background","BackgroundSkillFeats":"Skill Feats","BackgroundTitle":"Your character\'s background","BaseModifier":"Base Modifier","BaseWeapons":"Base Weapons","BestiaryBrowserSearchHint":"You can search for name or custom attributes. Possible searchable attributes are:<br> source, spellType, level, school, components, materials, target, range, time, duration, damage, damageType, save, concentration, ritual, ability and classes. <br>Example: \'fire, damage:d6\' to show all spells that have fire in their name and a d6 in the damage","Biography":"Biography","BiographyAllies":"Allies","BiographyAlliesTitle":"Your character\'s allies","BiographyAppearance":"Appearance","BiographyAppearanceTitle":"What your character looks like","BiographyAttitude":"Attitude","BiographyAttitudeTitle":"What your character behaves like","BiographyBackStory":"Backstory","BiographyBackStoryTitle":"Your character\'s story","BiographyBeliefs":"Beliefs","BiographyBeliefsTitle":"What your character believes","BiographyBirthPlace":"Birth Place","BiographyBirthPlaceTitle":"Where your character was born","BiographyCampaignNotesHeader":"Campaign Notes","BiographyCampaignNotes":"Notes","BiographyCampaignNotesTitle":"Anything you want","BiographyCatchphrases":"Catchphrases","BiographyCatchphrasesTitle":"Your character\'s catchphrases","BiographyDislikes":"Dislikes","BiographyDislikesTitle":"What your character dislikes","BiographyEnemies":"Enemies","BiographyEnemiesTitle":"Your character\'s enemies","BiographyLikes":"Likes","BiographyLikesTitle":"What your character likes","BiographyOrganizations":"Organizations","BiographyOrganizationsTitle":"Your character\'s organizations","BiographyPersonalityHeader":"Personality","BonusBulk":"Bonus Bulk Maximum","BonusBulkTitle":"Add or subtract from your bulk limit","BonusEncumbranceBulkLabel":"Add Encumbered Bulk","BonusLimitBulkLabel":"Add Max Bulk","BonusHPLabel":"Bonus HP","BonusHPperLevel":"Bonus HP per Level","BonusHPperLevelTitle":"Applies once for every level (CON mod is added separately)","BonusLabel":{"ability":"Ability Bonus","proficiency":"Proficiency Bonus","circumstance":"Circumstance Bonus","item":"Item Bonus","status":"Status Bonus","untyped":"Untyped Bonus"},"BonusSPLabel":"Bonus SP","BonusSPperLevel":"Bonus SP per Level","BonusSPperLevelTitle":"Applies once for every level (CON mod is added separately)","BrowseLabel":"Browse","BrowserClearFilter":"Clear Filter","BrowserClearFilters":"Clear All Filters","BrowserFilterAlignments":"Alignments","BrowserFilterAncestries":"Ancestries","BrowserFilterArmorFilters":"Armor Filters","BrowserFilterCastingTime":"Casting time","BrowserFilterCategory":"Feat Types","BrowserFilterClass":"Classes","BrowserFilterComplexity":"Hazard Complexities","BrowserFilterConsumable":"Consumable Type","BrowserFilterInventoryTypes":"Inventory Types","BrowserFilterLevels":"Levels","BrowserFilterProficiencyRequirements":"Proficiency Requirements","BrowserFilterSchools":"Schools","BrowserFilterRarities":"Rarities","BrowserFilterSizes":"Sizes","BrowserFilterSkills":"Skills","BrowserFilterSource":"Source","BrowserFilterSpellCategories":"Categories","BrowserFilterTraditions":"Traditions","BrowserFilterTraits":"Traits","BrowserFilterWeaponFilters":"Weapon Filters","BrowserSearchPlaceholder":"Search Text","BrowserSearchTitle":"Right click for guide","BrowserSortyByLabel":"Sort by","BrowserSortyByLevelLabel":"Level","BrowserSortyByPriceLabel":"Price","BrowserSortyByNameLabel":"Name","BrowserWarnPackNotLoaded":"Compendium \\"{pack}\\" could not be loaded.","BulkCapacityLabel":"Holds Bulk Amount","BulkLabel":"Carried Bulk","BulkMaxLabel":"Max Bulk","BulkReductionLabel":"Reduce Bulk By","BulkShortLabel":"Bulk","BulkTypeLight":"Light","CapacityBarLabel":"Capacity","CarryType":{"held1":"Held 1H","held2":"Held 2H","worn":"Worn","worn-in-slot":"Worn (In Slot)","stowed":"Stowed","dropped":"Dropped"},"CastLabel":"Cast","CharacterDetails":"Character Details","CharacterLevelLabel":"Level","CharacterNamePlaceholder":"Character Name","CharacterTraits":"Character Traits","CharacterTraitsHeader":"Traits & Other Details","ChatRollDetails":{"Select":"Inspect Roll","Title":"Roll Inspector","RollOptions":"Roll Options","ModifiersEmpty":"No Modifiers"},"Check":{"DC":{"Label":{"AdjustedTarget":"<target>Target: {target}</target> <dc>({dcType} <preadjusted>{preadjusted}</preadjusted> <adjusted>{adjusted}</adjusted>)</dc>","NoChangeTarget":"<target>Target: {target}</target> <dc>({dcType} <adjusted>{adjusted}</adjusted>)</dc>","NoTarget":"<dc>{dcType} {dc}</dc>","WithTarget":"<target>Target: {target}</target> <dc>({dcType} {dc})</dc>"},"Specific":{"ac":"AC","athletics":"Athletics DC","deception":"Deception DC","fortitude":"Fortitude DC","perception":"Perception DC","reflex":"Reflex DC","stealth":"Stealth DC","will":"Will DC"},"Unspecific":"DC"},"Label":"Check","Result":{"Degree":{"Attack":{"criticalSuccess":"Critical Hit","success":"Hit","failure":"Miss","criticalFailure":"Critical Miss"},"Check":{"criticalSuccess":"Critical Success","success":"Success","failure":"Failure","criticalFailure":"Critical Failure"}},"Label":"Result: <degree>{degree}</degree> <offset>by {offset}</offset>","AdjustedLabel":"Result: <degree>{degree}</degree> <offset>by {offset}</offset> ({adjustment})"},"Specific":{"Perception":{"Label":"Perception Check","Secret":"Perception Check (Secret)"},"Recovery":"Recovery Check"}},"CircumstanceBonusShortLabel":"Circumstance","CircumstanceBonusTitle":"Circumstance Bonus","Class":"Class","ClassFeatLevels":"Class Feat Levels","ClassFeatures":"Class Features","ClassHP":"Class HP","ClassTitle":"Your character\'s class","ClickToSetInitiative":"Click to set initiative to selected token(s).","ClickToSetInitiativeContext":"Set as Initiative","ClipboardNotification":"Copied \\"{clipText}\\" to the clipboard.","CompendiumBrowser":{"AddedItem":"Added {item} to the selected actor(s).","AddedItemToCharacter":"Added {item} to {character}.","BoughtItemWithCharacter":"Purchased {item} with {character}.","FailedToBuyItemWithCharacter":"Could not purchase {item} with {character}.","BoughtItemWithAllCharacters":"Purchased {item} with all selected actor(s).","FailedToBuyItemWithSomeCharacters":"Could not purchase {item} with some of the selected actor(s).","BestiaryBrowser":"Bestiary Browser","Hint":"Use the tabs above to select a compendium","ProgressBar":{"LoadingPack":"Loading {pack}","LoadingComplete":"Loading complete"},"TabAction":"Actions","TabBestiary":"Bestiaries","TabEquipment":"Equipment","TabFeat":"Feats","TabHazard":"Hazards","TabSpell":"Spells","TabSettings":"Load Packs","TakeLabel":"Take Item","BuyLabel":"Buy Item","Title":"Compendium Browser"},"Condition":{"ActiveLabel":"Active","RemovableLabel":"Removable","PerpetualLabel":"Perpetual Condition","DurationTextLabel":"Duration","DurationNumberLabel":"Rounds","HasValueLabel":"Has Value","ValueLabel":"Value","ImmutableLabel":"Immutable","ImmutableTitle":"Value cannot be reduced."},"ConditionsLabel":"Conditions","ConditionTypeBlinded":"Blinded","ConditionTypeBroken":"Broken","ConditionTypeClumsy":"Clumsy","ConditionTypeConcealed":"Concealed","ConditionTypeConfused":"Confused","ConditionTypeControlled":"Controlled","ConditionTypeDazzled":"Dazzled","ConditionTypeDeafened":"Deafened","ConditionTypeDoomed":"Doomed","ConditionTypeDrained":"Drained","ConditionTypeDying":"Dying","ConditionTypeEncumbered":"Encumbered","ConditionTypeEnfeebled":"Enfeebled","ConditionTypeFascinated":"Fascinated","ConditionTypeFatigued":"Fatigued","ConditionTypeFlatFooted":"Flat-Footed","ConditionTypeFleeing":"Fleeing","ConditionTypeFriendly":"Friendly","ConditionTypeFrightened":"Frightened","ConditionTypeGrabbed":"Grabbed","ConditionTypeHelpful":"Helpful","ConditionTypeHidden":"Hidden","ConditionTypeHostile":"Hostile","ConditionTypeImmobilized":"Immobilized","ConditionTypeIndifferent":"Indifferent","ConditionTypeInvisible":"Invisible","ConditionTypeObserved":"Observed","ConditionTypeParalyzed":"Paralyzed","ConditionTypePersistent":"Persistent Damage","ConditionTypePersistentShort":"Persistent","ConditionTypePetrified":"Petrified","ConditionTypeProne":"Prone","ConditionTypeQuickened":"Quickened","ConditionTypeRestrained":"Restrained","ConditionTypeSickened":"Sickened","ConditionTypeSlowed":"Slowed","ConditionTypeStunned":"Stunned","ConditionTypeStupefied":"Stupefied","ConditionTypeUnconscious":"Unconscious","ConditionTypeUndetected":"Undetected","ConditionTypeUnfriendly":"Unfriendly","ConditionTypeUnnoticed":"Unnoticed","ConditionTypeWounded":"Wounded","ConsumableAutoDestroyLabel":"Auto Destroy","ConsumableAutoUseLabel":"Auto Use","ConsumableChargesLabel":"Charges","ConsumableConsumeLabel":"On Consume","ConsumableHeading":"Consumable","ConsumableNoChargesLabel":"No Charges","ConsumableTypeAmmo":"Ammunition","ConsumableTypeDrug":"Drug","ConsumableTypeElixir":"Elixir","ConsumableTypeLabel":"Consumable Type","ConsumableTypeMutagen":"Mutagen","ConsumableTypeOil":"Oil","ConsumableTypeOther":"Other","ConsumableTypePoison":"Poison","ConsumableTypePotion":"Potion","ConsumableTypeScroll":"Scroll","ConsumableTypeSnare":"Snare","ConsumableTypeTalisman":"Talisman","ConsumableTypeTool":"Tool","ConsumableTypeWand":"Wand","ConsumableUseLabel":"Use","ConsumableMessage":{"UseSingle":"Uses {name}","UseMulti":"Uses {name}, {current} remain","UseExhausted":"Exhausted {name}"},"ConsumableCompatibleLabel":"Compatible","ConsumableIncompatibleLabel":"Incompatible","CoreSkillsHeader":"Core Skills","Counteract":"Counteract","Counteractable":"Counteractable","CounteractDescription":{"Hint":"If you\'re counteracting an affliction, the DC is in the affliction\'s stat block. If it\'s a spell, use the caster\'s DC. The GM can also calculate a DC based on the target effect\'s level.","CritSuccess":"Counteract the target if its counteract level is {level} or less.","Success":"Counteract the target if its counteract level is {level} or less.","Failure":"Counteract the target if its counteract level is less than {level}.","CritFailure":"You fail to counteract the target."},"CraftingTab":{"Alchemical":{"AdvancedAlchemy":"Advanced Alchemy","AdvancedAlchemyLevel":"Advanced Alchemy Level","InfusedReagents":"Infused Reagents","ReagentCost":"Reagent Cost","ToggleSignatureItem":"Toggle Signature Item","TotalCost":"Total Cost"},"Alerts":{"CharacterLevel":"Item level exceeds character level.","ItemMissingTraits":"Item is not compatible with crafting entry item requirements.","MaxItemLevel":"Item level exceeds maximum item level for entry.","MaxSlots":"Crafting entry\'s allowed slots are full.","MissingReagents":"Insufficient infused reagents to complete crafting.","FormulaExpended":"Prepared formula has already been crafted."},"CraftQuantityTitle":"Quantity","ExpendFormula":"Expend Formula","ToggleFreeCrafting":"Toggle Free Crafting","ToggleQuickAlchemy":"Quick Alchemy","UndeletableTooltip":"This crafting formula is part of another item and cannot be individually deleted.","QuickAddTitle":"Add this formula to one or more crafting entries","NoEligibleEntry":"No eligible crafting entry was found."},"CraftDCTitle":"DC","CraftItemTitle":"Craft","CreateActionTitle":"Create Action","CreateAttackTitle":"Create Attack","CreateFeatTitle":"Create Feat","CreateFormulaTitle":"Create Formula","CreateItemTitle":"Create Item","CreateLabelUniversal":"Create","CreateSkillTitle":"Create Skill","CreateSpellTitle":"Create Spell","CritFailure":"<strong>Critical Failure</strong>","CritSuccess":"<strong>Critical Success</strong>","CriticalDamageLabel":"Critical","CriticalHitCardButtonTitle":"Draw a Critical Hit Card","CriticalFumbleCardButtonTitle":"Draw a Critical Fumble Card","CurrencyAbbreviations":{"cp":"cp","gp":"gp","pp":"pp","sp":"sp"},"CurrencyCP":"Copper","CurrencyGP":"Gold","CurrencyPP":"Platinum","CurrencySP":"Silver","CurrentHPTitle":"Your current hit points","CurrentHitPointsShortLabel":"Current HP","CurrentStaminaPointsShortLabel":"Current SP","CurrentStaminaTitle":"The amount of stamina points you have","Damage":{"Base":"Base","NoDamageFormulaLabel":"No damage"},"DamageCategoriesLabel":"Damage Categories","DamageDieD10":"d10","DamageDieD12":"d12","DamageDieD4":"d4","DamageDieD6":"d6","DamageDieD8":"d8","DamageLabel":"Damage","DamageRoll":"Damage Roll","DCAdjustmentIncrediblyEasy":"incredibly easy","DCAdjustmentVeryEasy":"very easy","DCAdjustmentEasy":"easy","DCAdjustmentNormal":"normal","DCAdjustmentHard":"hard","DCAdjustmentVeryHard":"very hard","DCAdjustmentIncrediblyHard":"incredibly hard","DCBase":"Base DC 10","DCWithValue":"DC {dc} {text}","DCWithValueAndVisibility":"<span data-visibility=\\"{role}\\">DC {dc}</span> {text}","DecrementEffectTitle":"Decrease Effect Level","DefensesLabel":"Defenses","Deity":"Deity","DeityTitle":"Your deity","DeleteConditionQuestion":"Are you sure you want to delete {condition}?","DeleteConditionTitle":"Delete Condition","DeleteItemQuestion":"Are you sure you want to delete:","DeleteItemTitle":"Delete Item","DeleteShortLabel":"Delete","DeleteSpellcastEntryQuestion":"Are you sure you want to delete this spellcasting entry?","DeleteSpellcastEntryWarning":"WARNING: All spells in this spellcasting entry will also be deleted.","DenominationLabel":"Denomination","DetailsHeading":"Details","DragDropFeats":"Drag & Drop feats to add","Duration":{"PT1M":"minute","PT10M":"10 minutes","PT1H":"hour","PT24H":"24 hours","day":"day","P1W":"week"},"Encounter":{"Broadcast":{"TempHP":{"PluralNew":"{actor} now has {newQuantity} temporary hit points{wasAt} from {item}.","SingleNew":"{actor} now has {newQuantity} temporary hit point{wasAt} from {item}.","WasAt":" (was at {oldQuantity})"},"FastHealing":{"FastHealingLabel":"Received Fast Healing","RegenerationLabel":"Received Regeneration","DeactivatedBy":"Deactivated by {types}"}},"Budget":{"EncounterBudget":"Encounter Budget","PartySize":"Party Size","PartyLevel":"Party Level","Threat":"Threat","Reward":"Reward","XPBudget":"XP Budget","XPNeeded":"XP Needed","Threats":{"trivial":"Trivial","low":"Low","moderate":"Moderate","severe":"Severe","extreme":"Extreme"}},"CreatureXPAndRole":{"CreatureXPAndRole":"Creature XP and Role","CreatureLevel":"Creature Level","SuggestedRole":"Suggested Role","CreatureLevels":{"0":"Any standard creature or low-threat boss","1":"Low- or moderate-threat boss","2":"Moderate- or severe-threat boss","3":"Severe- or extreme-threat boss","4":"Extreme-threat solo boss","-4":"Low-threat lackey","-3":"Low- or moderate-threat lackey","-2":"Any lackey or standard creature","-1":"Any standard creature"}},"ExcludingFromInitiative":"Excluding {type} {actor} from initiative.","HasNoInitiativeScore":"{actor} has no initiative score.","HideName":"Hide Name","NoActiveEncounter":"There is no active encounter.","NoTokenInScene":"{actor} has no token in the scene.","RevealName":"Reveal Name"},"Edit":"Edit","EditHazardLabel":"Edit Hazard?","EditItemTitle":"Edit Item","EditLabel":"Edit?","EditNPCLabel":"Edit NPC?","EffectsLabel":"Effects","EffectPanel":{"AppliedBy":"Applied by: {condition-list}","DecrementToolTip":"[Right Click] Decrease value","Expired":"Expired","IncrementToolTip":"[Left Click] Increase value","RemainingDuration":{"MultipleYears":"{years} years remaining","SingleYear":"1 year remaining","MultipleWeeks":"{weeks} weeks remaining","SingleWeek":"1 week remaining","MultipleDays":"{days} days remaining","MultipleHours":"{hours} hours remaining","MultipleMinutes":"{minutes} minutes remaining","MultipleRounds":"{rounds} rounds remaining","SingleRound":"1 round remaining","MultipleSeconds":"{seconds} seconds remaining","SingleSecond":"1 second remaining","ZeroRoundsExpireTurnEnd":"0 rounds remaining, expires end of initiative {initiative}","ZeroRoundsExpireTurnStart":"0 rounds remaining, expires start of initiative {initiative}"},"RemoveToolTip":"[Right Click] Remove effect","Unidentified":"Unidentified","Sustained":"Sustained?","UnlimitedDuration":"Unlimited duration","UntilEncounterEnds":"Until encounter ends"},"EmptySlot":"Empty Slot","EquipmentEquippedLabel":"Equipped","EquippedBulkLabel":"Worn Bulk","EquippedSameBulkValue":"Same as Carried","ErrorMessage":{"CantCreateEffectMacro":"An effect for a toggle macro must come from a compendium or world item.","CantImportTooHighVersion":"Unable to import {sourceName}: its schema version ({sourceSchemaVersion}) is higher than this world\'s ({worldSchemaVersion}).","CantMoveItemDestination":"You are not allowed to move items to this character.","CantMoveItemSource":"You are not allowed to move items from this character.","MinimumProfLevelSetByFeatures":"The selected proficiency is below proficiency set by features.","NoTokenSelected":"Select at least one token.","NoPCTokenSelected":"Select at least one token associated with a PC.","NoCreatureTokenSelected":"Select at least one token associated with a creature.","NoUpdatePermission":"You lack permission to update this actor.","NotEnoughAmmo":"You don\'t have enough ammo to make this strike.","NotEnoughCoins":"Insufficient Coins","SubV9Module":"{module} is unmaintained and may introduce stability issues to your game.","WeaponNoDamage":"This weapon deals no damage.","WeaponQuantityZero":"You have no more of these weapons equipped.","RuleElementSyntax":"Syntax error in rule element definition: {message}"},"Ethnicity":"Ethnicity","ExpendSpellTitle":"Expend Spell","Failure":"<strong>Failure</strong>","FeatActionTypeLabel":"Action Type","FeatActionsLabel":"Number of Actions","FeatAncestryHeader":"Ancestry Feats","FeatArchetypeHeader":"Archetype Feats","FeatBackgroundShort":"BG","FeatBonusHeader":"Bonus Feats","FeatBrowserSearchHint":"You can search for name or custom attributes. Possible searchable attributes are:<br> source, spellType, level, school, components, materials, target, range, time, duration, damage, damageType, save, concentration, ritual, ability and classes. <br>Example: \'fire, damage:d6\' to show all spells that have fire in their name and a d6 in the damage","FeatCampaignHeader":"Campaign Feats","FeatClassHeader":"Class Feats","FeatDualClassHeader":"Dual Class Feats","FeatGeneralHeader":"General Feats","FeatPFSBoonHeader":"Society Boons","FeatDeityBoonHeader":"Deity Boons","FeatDeityBoonCursesHeader":"Deity Boons/Curses","FeatCurseHeader":"Curses","FeatLevelLabel":"Level","FeatPrereqLabel":"Prerequisites","FeatSkillHeader":"Skill Feats","FeatTypeAncestry":"Ancestry Feat","FeatTypeAncestryfeature":"Ancestry Feature","FeatTypeArchetype":"Archetype Feat","FeatTypeBonus":"Bonus Feat","FeatTypeClass":"Class Feat","FeatTypeClassfeature":"Class Feature","FeatTypeCurse":"Curse","FeatTypeDeityboon":"Deity Boon","FeatTypeGeneral":"General Feat","FeatTypeLabel":"Feat Type","FeatTypePfsboon":"Society Boon","FeatTypeSkill":"Skill Feat","FeaturesAncestryHeader":"Ancestry Features","FeaturesClassHeader":"Class Features","Feet":"feet","FlatBonusHP":"Flat Bonus HP","FlatBonusHPTitle":"Adds a static number to your HP","FlatBonusHPperLevel":"Bonus HP / Lvl","FlatBonusSP":"Flat Bonus SP","FlatBonusSPTitle":"Adds a static number to your SP","FlatBonusSPperLevel":"Bonus SP / Lvl","FlatCheck":"Flat Check","Focus":{"label":"Focus Points","NotEnoughFocusPointsError":"You do not have enough focus points to cast this spell.","pointLabel":"Points","pointTitle":"Your remaining Focus Points","Pool":"Focus Pool","poolTitle":"The size of your Focus Pool","Outdated":"Old value of the focus pool as a reminder. Click to delete.","Previous":"Previous","Spells":"Focus Spells"},"Foot":"Foot","FormulaKnownTitle":"Known Formulas","FormulaListEmpty":"Empty (drag formula/item here)","FormulaPlaceholder":"Formula","FormulaSheet":{"DescriptionUnknown":"This formula is completely filled with drawings of small stick men, stains from some unknown liquid, non-sensical rhymes written in children\'s letters, and other seemingly random markings. It must have been made by goblins, and makes no sense to you.<hr><strong>Note</strong> This formula is referencing a missing or invalid item.","NameEmpty":"Empty Formula","NamePrefix":"Formula of {name}","NameUnknown":"Unknown Formula"},"Frequency":{"Label":"Frequency","AtWill":"At-Will","per":"per"},"GenderPronoun":"Gender/Pronouns","GenderPronounTitle":"Your gender/pronouns","GeneralFeatLevels":"General Feat Levels","GreaterWeaponSpecialization":" Greater Weapon Specialization","HardnessLabel":"Hardness","HazardDescriptionLabel":"Description","HazardDescriptionTitle":"This explains what the hazard looks like and might include special rules","HazardDisableLabel":"Disable","HazardHardnessLabel":"Hardness","HazardHardnessTitle":"Hazard damage is reduced by this hardness value","HazardResetLabel":"Reset","HazardResetTitle":"If the hazard can be reset, that information is here","HazardRoutineLabel":"Routine","HazardRoutineTitle":"This section describes what a complex hazard does on each of its turns during an encounter; the number in parentheses after the word \\"Routine\\" indicates how many actions the hazard can use each turn. Simple hazards don\'t have this entry","HealingTypeTemporaryHealing":"Healing (Temporary)","Height":"Height","HeightTitle":"Your height","Heritage":"Heritage","HeritageTitle":"Your character\'s heritage","HeroPointsLabel":"Hero Points","HeroPointRatio":{"One":"1/{max} Hero Point","Many":"{value}/{max} Hero Points"},"HitPointsHeader":"Hit Points","HitPointsShortLabel":"HP","HitPointsDetailsLabel":"HP Details","HitPointsDetailsTitle":"Additional information related to Hit Points such as Fast Healing or Regeneration","ImageLabel":"Image","ImmunitiesLabel":"Immunities","IncrementEffectTitle":"Increase Effect Level","InitiativeHeader":"Initiative bonus","InitativeIsNow":"{name}\'s Initiative is now {value}!","InitiativeLabel":"Initiative","InitiativeWithSkill":"Initiative: {skillName}","InlineCheck":{"BasicWithSave":"Basic {save}","DCWithName":"{name} DC","Errors":{"TypeMissing":"Error in @Check: type parameter is mandatory"}},"InlineTemplateErrors":{"TypeMissing":"Error in @Template: type parameter is mandatory","DistanceMissing":"Error in @Template: distance parameter is mandatory","TypeUnsupported":"Error in @Template: type {type} is not supported","DistanceNoNumber":"Error in @Template: dimension {distance} is not a number","WidthNoNumber":"Error in @Template: width {width} is not a number"},"InventoryArmorHeader":"Armor","InventoryBackpackHeader":"Containers","InventoryConsumablesHeader":"Consumables","InventoryEquipmentHeader":"Equipment","InventoryTreasureHeader":"Treasure","InventoryWeaponsHeader":"Weapons","InventroyBrowserSearchHint":"You can search for name or custom attributes. Possible searchable attributes are:<br> source, spellType, level, school, components, materials, target, range, time, duration, damage, damageType, save, concentration, ritual, ability and classes. <br>Example: \'fire, damage:d6\' to show all spells that have fire in their name and a d6 in the damage","InvestedLabel":"Invested","Item":{"Activation":{"Label":"Activation","Add":"Add Activation","Command":"command","CommandSheetLabel":"Command","Envision":"envision","EnvisionSheetLabel":"Envision","Interact":"Interact","Cast":"Cast a Spell"},"ABC":{"InvalidDrop":"{badType} cannot be dropped here (must be {goodType})"},"Ancestry":{"Vision":{"Label":"Vision","Normal":"Normal Vision"}},"Armor":{"Base":{"armored-coat":"Armored Coat","breastplate":"Breastplate","chain-mail":"Chain Mail","chain-shirt":"Chain Shirt","explorers-clothing":"Explorer\'s Clothing","full-plate":"Full Plate","half-plate":"Half Plate","hellknight-plate":"Hellknight Plate","hide-armor":"Hide Armor","leather-armor":"Leather Armor","padded-armor":"Padded Armor","scale-mail":"Scale Mail","splint-mail":"Splint Mail","studded-leather-armor":"Studded Leather Armor"}},"Backpack":{"StowingLabel":"Is Stowing Container?"},"CannotAddType":"{type} items cannot be added to this actor.","Condition":{"Flanked":"Flat-Footed (Flanked)"},"CreationDialog":{"Categories":{"Character":"Character Building","Physical":"Physical Items","Other":"Other"}},"Deity":{"Alignment":"Alignment","Category":{"Label":"Category","Hint":"Pantheons of deities and philosophies & spiritualities not associated with any deity can be followed instead of a particular deity. Clerics and Champions must follow a deity or pantheon.","Pantheon":"Pantheon","Philosophy":"Philosophy"},"ClericSpells":{"Label":"Cleric Spells","Hint":"To add a spell, drag and drop one onto this sheet.","DropError":"A deity\'s cleric spells may not include cantrips, focus spells, or rituals."},"DivineAbility":{"Label":"Divine Ability","Hint":"If choosing the Raised by Belief background, its ability boost options come from a deity."},"DivineSkill":"Divine Skill","DivineFont":{"Label":"Divine Font","Harm":"Harm","Heal":"Heal"},"FavoredWeapons":{"Label":"Favored Weapon(s)","Hint":"Almost all deities have a single favored weapon, but a few have both a favored weapon and unarmed attack."},"FollowerAlignments":"Follower Alignments","Domains":{"Primary":"Primary Domains","Alternate":{"Label":"Alternate Domains","Hint":"A cleric can take the Expanded Domain Initiate feat to gain access to one of their deity\'s alternate domains."}},"Domain":{"Abomination":{"Label":"Abomination","Description":"You seek to instill abhorrence and horror in those around you."},"Air":{"Label":"Air","Description":"You can control winds and the weather. "},"AirApocryphal":{"Label":"Air (apocryphal)","Description":"You can control winds and the weather. Not all clerical traditions are taught among the orthodoxy. Some are whispered in secret, passed down from a priest to trusted acolytes or scribed in tomes left behind by splinter factions."},"Ambition":{"Label":"Ambition","Description":"You strive to keep up with and outpace the competition."},"AmbitionApocryphal":{"Label":"Ambition (apocryphal)","Description":"You strive to keep up with and outpace the competition. Not all clerical traditions are taught among the orthodoxy. Some are whispered in secret, passed down from a priest to trusted acolytes or scribed in tomes left behind by splinter factions."},"Change":{"Label":"Change","Description":"You can restructure the physical and metaphysical."},"Cities":{"Label":"Cities","Description":"You have powers over urban environments and denizens."},"Cold":{"Label":"Cold","Description":"You control ice, snow, and freezing temperatures."},"Confidence":{"Label":"Confidence","Description":"You overcome your fear and project pride."},"ConfidenceApocryphal":{"Label":"Confidence (apocryphal)","Description":"You overcome your fear and project pride. Not all clerical traditions are taught among the orthodoxy. Some are whispered in secret, passed down from a priest to trusted acolytes or scribed in tomes left behind by splinter factions."},"Creation":{"Label":"Creation","Description":"You have divine abilities related to crafting and art."},"Darkness":{"Label":"Darkness","Description":"You operate in the darkness and take away the light."},"DarknessApocryphal":{"Label":"Darkness (apocryphal)","Description":"You operate in the darkness and take away the light. Not all clerical traditions are taught among the orthodoxy. Some are whispered in secret, passed down from a priest to trusted acolytes or scribed in tomes left behind by splinter factions."},"Death":{"Label":"Death","Description":"You have the power to end lives and destroy undead."},"DeathApocryphal":{"Label":"Death (apocryphal)","Description":"You have the power to end lives and destroy undead. Not all clerical traditions are taught among the orthodoxy. Some are whispered in secret, passed down from a priest to trusted acolytes or scribed in tomes left behind by splinter factions."},"Decay":{"Label":"Decay","Description":"You have the power to spoil and deteriorate matter."},"Delirium":{"Label":"Delirium","Description":"You can bring about hallucinations and restlessness."},"Destruction":{"Label":"Destruction","Description":"You are a conduit for divine devastation."},"Dreams":{"Label":"Dreams","Description":"You have the power to enter and manipulate dreams."},"Dust":{"Label":"Dust","Description":"You have the power to dry and crumble what opposes you."},"Duty":{"Label":"Duty","Description":"You defend oaths and carry out your divine missions with great dedication."},"Earth":{"Label":"Earth","Description":"You control soil and stone."},"Family":{"Label":"Family","Description":"You aid and protect your family and community more effectively."},"Fate":{"Label":"Fate","Description":"You see and understand hidden inevitabilities."},"FateApocryphal":{"Label":"Fate (apocryphal)","Description":"You see and understand hidden inevitabilities. Not all clerical traditions are taught among the orthodoxy. Some are whispered in secret, passed down from a priest to trusted acolytes or scribed in tomes left behind by splinter factions."},"Fire":{"Label":"Fire","Description":"You control flame."},"FireApocryphal":{"Label":"Fire (apocryphal)","Description":"You control flame. Not all clerical traditions are taught among the orthodoxy. Some are whispered in secret, passed down from a priest to trusted acolytes or scribed in tomes left behind by splinter factions."},"Freedom":{"Label":"Freedom","Description":"You liberate yourself and others from shackles and constraints."},"Glyph":{"Label":"Glyph","Description":"You wield power over written words and symbols."},"Healing":{"Label":"Healing","Description":"Your healing magic is particularly potent."},"Indulgence":{"Label":"Indulgence","Description":"You feast mightily and can shake off the effects of overindulging."},"IndulgenceApocryphal":{"Label":"Indulgence (apocryphal)","Description":"You feast mightily and can shake off the effects of overindulging. Not all clerical traditions are taught among the orthodoxy. Some are whispered in secret, passed down from a priest to trusted acolytes or scribed in tomes left behind by splinter factions."},"Knowledge":{"Label":"Knowledge","Description":"You receive divine insights."},"KnowledgeApocryphal":{"Label":"Knowledge (apocryphal)","Description":"You receive divine insights. Not all clerical traditions are taught among the orthodoxy. Some are whispered in secret, passed down from a priest to trusted acolytes or scribed in tomes left behind by splinter factions."},"Lightning":{"Label":"Lightning","Description":"You control electricity, thunder, and storms."},"Luck":{"Label":"Luck","Description":"You\'re unnaturally lucky and keep out of harm\'s way."},"Magic":{"Label":"Magic","Description":"You perform the unexpected and inexplicable."},"Might":{"Label":"Might","Description":"Your physical power is bolstered by divine strength."},"MightApocryphal":{"Label":"Might (apocryphal)","Description":"Your physical power is bolstered by divine strength. Not all clerical traditions are taught among the orthodoxy. Some are whispered in secret, passed down from a priest to trusted acolytes or scribed in tomes left behind by splinter factions."},"Moon":{"Label":"Moon","Description":"You command powers associated with the moon."},"Naga":{"Label":"Naga","Description":"Like the serpentine nagas, you\'re in tune with cosmic forces that Ravithra once controlled."},"Nature":{"Label":"Nature","Description":"You hold power over animals and plants."},"Nightmares":{"Label":"Nightmares","Description":"You fill minds with horror and dread."},"Pain":{"Label":"Pain","Description":"You punish those who displease you with the sharp sting of pain."},"Passion":{"Label":"Passion","Description":"You evoke passion, whether as love or lust."},"Perfection":{"Label":"Perfection","Description":"You strive to perfect your mind, body, and spirit."},"Plague":{"Label":"Plague","Description":"You wield disease and pestilence like a weapon."},"Protection":{"Label":"Protection","Description":"You ward yourself and others."},"Repose":{"Label":"Repose","Description":"You ease mental burdens."},"Secrecy":{"Label":"Secrecy","Description":"You protect secrets and keep them hidden."},"SecrecyApocryphal":{"Label":"Secrecy (apocryphal)","Description":"You protect secrets and keep them hidden. Not all clerical traditions are taught among the orthodoxy. Some are whispered in secret, passed down from a priest to trusted acolytes or scribed in tomes left behind by splinter factions."},"Sorrow":{"Label":"Sorrow","Description":"You have a painful connection to melancholy and sadness."},"Soul":{"Label":"Soul","Description":"You wield power over the spiritual."},"Star":{"Label":"Star","Description":"You command the power of the stars."},"Sun":{"Label":"Sun","Description":"You harness the power of the sun and other light sources, and punish undead."},"Swarm":{"Label":"Swarm","Description":"You exert control over masses of creatures."},"Time":{"Label":"Time","Description":"You reign over the flow of time."},"Toil":{"Label":"Toil","Description":"You work constantly and refuse to let anything stand in your way."},"Travel":{"Label":"Travel","Description":"You have power over movement and journeys."},"TravelApocryphal":{"Label":"Travel (apocryphal)","Description":"You have power over movement and journeys. Not all clerical traditions are taught among the orthodoxy. Some are whispered in secret, passed down from a priest to trusted acolytes or scribed in tomes left behind by splinter factions."},"Trickery":{"Label":"Trickery","Description":"You deceive others and cause mischief."},"Truth":{"Label":"Truth","Description":"You pierce lies and discover the truth."},"Tyranny":{"Label":"Tyranny","Description":"You wield power to rule and enslave others."},"Undeath":{"Label":"Undeath","Description":"Your magic carries close ties to the undead."},"Vigil":{"Label":"Vigil","Description":"You watch over those long passed and guard their secrets."},"Void":{"Label":"Void","Description":"You draw power from emptiness."},"Water":{"Label":"Water","Description":"You control water and bodies of water."},"WaterApocryphal":{"Label":"Water (apocryphal)","Description":"You control water and bodies of water. Not all clerical traditions are taught among the orthodoxy. Some are whispered in secret, passed down from a priest to trusted acolytes or scribed in tomes left behind by splinter factions."},"Wealth":{"Label":"Wealth","Description":"You hold power over wealth, trade, and treasure."},"Wyrmkin":{"Label":"Wyrmkin","Description":"You draw on the power of dragons, linnorms, and other powerful reptilian creatures."},"Zeal":{"Label":"Zeal","Description":"Your inner fire increases your combat prowess."}}},"Effect":{"Sustained":"Sustained","Expiry":{"ExpiresOn":"Expires On","StartOfTurn":"Start of Turn","EndOfTurn":"End of Turn"},"ShowTokenIcon":"Show token icon?","Unidentified":"Unidentified?","AddBadge":"Add Counter","BadgeType":{"Counter":"Counter"}},"Feat":{"OnlyLevel1":"Must be taken at level 1","TakeMultiple":{"Label":"Can be taken multiple times","Two":"Up to 2×","Three":"Up to 3×","Four":"Up to 4×","Five":"Up to 5x","NoLimit":"No limit"},"Warning":{"TakenAfterLevel1":"{item} must be taken at level 1, but {actor} is at level {actorLevel}.","TakenMoreThanOnce":"{item} may only be taken once, but {actor} has selected it an additional time.","TakenMoreThanMax":"{item} may only be {maxTaken} times, but {actor} has selected it {timesTaken} times.","InvalidCategory":"Cannot add feat \\"{item}\\" to {category}: feat type is invalid."},"Info":{"Added":"{item} was added to {category}."},"LevelLabel":"Feat"},"Heritage":{"AncestryNotFound":"The referenced ancestry item was not found.","DragAncestryHere":"Drag an ancestry item here to set this heritage\'s prerequisite ancestry.","NoneVersatile":"None (Versatile)","RemoveAncestry":"Remove prerequisite ancestry"},"IconLabel":"Icon","NameLabel":"Name","Physical":{"LevelLabel":"Item {level}","PriceLabel":"Price: {price}","OtherTag":{"Herbal":"Herbal","Improvised":"Improvised","Shoddy":"Shoddy"},"OtherTags":{"Label":"Other Tags","Hint":"These are tags indicating classifications in 2nd Edition rules that lack explicit status/definition but are still yet heavily relied upon. Some may be automatically added when other properties are present."},"Broken":"Broken","Destroyed":"Destroyed","Usage":{"WornParenthetical":"Worn ({where})","WornSlot":{"amulet":"Amulet","anklets":"Anklets","armbands":"Armbands","armor":"Armor","backpack":"Backpack","barding":"Barding","belt":"Belt","beltpouch":"Belt Pouch","bracelet":"Bracelet","bracers":"Bracers","circlet":"Circlet","cloak":"Cloak","clothing":"Clothing","collar":"Collar","crown":"Crown","epaulet":"Epaulet","eyepiece":"Eyepiece","garment":"Garment","gloves":"Gloves","headwear":"Headwear","horseshoes":"Horseshoes","mask":"Mask","necklace":"Necklace","onbelt":"OnBelt","ring":"Ring","saddle":"Saddle","shoes":"Shoes","wrist":"On Wrists"}}},"Plural":"Items","RemovalPrevented":"Removal of {item} is prevented by {preventer}.","SidebarSummary":"{type} Summary","Spell":{"PlaceMeasuredTemplate":"Place {size}-{unit} {shape}","Variants":{"DeleteDialogTitle":"Delete Spell Variant","DeleteDialogText":"Are you sure you want to delete \'{variantName}\'?","LabelPlural":"Spell Variants","SelectVariantLabel":"Select Variant","SelectOtherVariantLabel":"Select Other Variant","SheetTitle":"{originalName} (Variant)"},"Warning":{"InvalidLevel":"Attempted to add spell {name} at {targetLevel}, but spell is {baseLevel}."}},"Weapon":{"CriticalSpecialization":{"axe":"Choose one creature adjacent to the initial target and within reach. If its AC is lower than your attack roll result for the critical hit, you deal damage to that creature equal to the result of the weapon damage die you rolled (including extra dice for its potency rune, if any). This amount isn\'t doubled, and no bonuses or other additional dice apply to this damage.","bomb":"Increase the radius of the bomb\'s splash damage (if any) to 10 feet.","bow":"If the target of the critical hit is adjacent to a surface, it gets stuck to that surface by the missile. The target is @UUID[Compendium.pf2e.conditionitems.eIcWbB5o3pP6OIMe]{Immobilized} and must spend an Interact action to attempt a @Check[type:athletics|dc:10|name:Pull the Missile Free|showDC:all] check to pull the missile free; it can\'t move from its space until it succeeds. The creature doesn\'t become stuck if it is incorporeal, is liquid (like a water elemental or some oozes), or could otherwise escape without effort","brawling":"The target must succeed at a @Check[type:fortitude|dc:resolve(@actor.attributes.classDC.value)|basic:true|name:Brawling Critical Specialization|showDC:all] save or be @UUID[Compendium.pf2e.conditionitems.xYTAsEpcJE1Ccni3]{Slowed 1} until the end of your next turn.","club":"You knock the target away from you up to 10 feet (you choose the distance). This is forced movement.","dart":"The target takes @Localize[PF2E.PersistentDamage.Bleed1d6.success]. You gain an item bonus to this bleed damage equal to the weapon\'s item bonus to attack rolls.","firearm":"The target must succeed at a @Check[type:fortitude|dc:resolve(@actor.attributes.classDC.value)|basic:true|name:Firearm Critical Specialization|showDC:all] save or be @UUID[Compendium.pf2e.conditionitems.dfCMdR4wnpbYNTix]{Stunned 1}.","flail":"The target is knocked @UUID[Compendium.pf2e.conditionitems.j91X7x0XSomq8d60]{Prone}.","hammer":"The target is knocked @UUID[Compendium.pf2e.conditionitems.j91X7x0XSomq8d60]{Prone}.","knife":"The target takes @Localize[PF2E.PersistentDamage.Bleed1d6.success]. You gain an item bonus to this bleed damage equal to the weapon\'s item bonus to attack rolls.","pick":"The weapon viciously pierces the target, who takes 2 additional damage per weapon damage die.","polearm":"The target is moved 5 feet in a direction of your choice. This is forced movement.","shield":"You knock the target back from you 5 feet. This is forced movement.","sling":"The target must succeed at a @Check[type:fortitude|dc:resolve(@actor.attributes.classDC.value)|basic:true|name:Sling Critical Specialization|showDC:all] save or be @UUID[Compendium.pf2e.conditionitems.dfCMdR4wnpbYNTix]{Stunned 1}.","spear":"The weapon pierces the target, weakening its attacks. The target is @UUID[Compendium.pf2e.conditionitems.i3OJZU2nk64Df3xm]{Clumsy 1} until the start of your next turn.","sword":"The target is made off-balance by your attack, becoming @UUID[Compendium.pf2e.conditionitems.AJh5ex99aV6VTggg]{Flat-Footed} until the start of your next turn."},"FromMaterialAndRunes":"Precious materials and runes on this item have adjusted its {property} to {value}.","GeneratedName":{"Hint":"This is the name of the base weapon. For most weapons, the base is used to generate a fuller name, taking into account the material composition and/or runes. Giving this weapon a custom name or marking it as \\"specific\\" will prevent the generated name from appearing.","Potency":"+{potency} {base}","PotencyOneProperty":"+{potency} {property1} {base}","PotencyTwoProperties":"+{potency} {property1} {property2} {base}","PotencyThreeProperties":"+{potency} {property1} {property2} {property3} {base}","PotencyFourProperties":"+{potency} {property1} {property2} {property3} {property4} {base}","Material":"{material} {base}","PotencyMaterial":"+{potency} {material} {base}","PotencyOnePropertyMaterial":"+{potency} {property1} {material} {base}","PotencyTwoPropertiesMaterial":"+{potency} {property1} {property2} {material} {base}","PotencyThreePropertiesMaterial":"+{potency} {property1} {property2} {property3} {material} {base}","PotencyFourPropertiesMaterial":"+{potency} {property1} {property2} {property3} {property4} {material} {base}","PotencyStriking":"+{potency} {striking} {base}","PotencyStrikingMaterial":"+{potency} {striking} {material} {base}","PotencyStrikingOneProperty":"+{potency} {striking} {property1} {base}","PotencyStrikingOnePropertyMaterial":"+{potency} {striking} {property1} {material} {base}","PotencyStrikingTwoProperties":"+{potency} {striking} {property1} {property2} {base}","PotencyStrikingTwoPropertiesMaterial":"+{potency} {striking} {property1} {property2} {material} {base}","PotencyStrikingThreeProperties":"+{potency} {striking} {property1} {property2} {property3} {base}","PotencyStrikingThreePropertiesMaterial":"+{potency} {striking} {property1} {property2} {property3} {material} {base}","PotencyStrikingFourProperties":"+{potency} {striking} {property1} {property2} {property3} {property4} {base}","PotencyStrikingFourPropertiesMaterial":"+{potency} {striking} {property1} {property2} {property3} {property4} {material} {base}","OneProperty":"{property1} {base}","OnePropertyMaterial":"{property1} {material} {base}","TwoProperties":"{property1} {property2} {base}","TwoPropertiesMaterial":"{property1} {property2} {material} {base}","ThreeProperties":"{property1} {property2} {property3} {base}","ThreePropertiesMaterial":"{property1} {property2} {property3} {material} {base}","FourProperties":"{property1} {property2} {property3} {property4} {base}","FourPropertiesMaterial":"{property1} {property2} {property3} {property4} {material} {base}","Striking":"{striking} {base}","StrikingMaterial":"{striking} {material} {base}"},"HandsLabel":"Hands","MandatoryMelee":"This weapon has a trait that can only be used with melee weapons.","MaterialAndRunes":{"MaterialOption":"{type} ({grade})","Title":"Material Composition and Runes","Hint":"Precious material and runes allow for in-depth customization of a weapon. Besides improving its ability to harm enemies, they also affect the weapon\'s level, rarity, price, and name. To suppress a weapon\'s renaming, give it any custom name or mark it as a <i>specific magic weapon</i>."},"MeleeUsage":{"Label":"Melee Usage","Hint":"A combination weapon has a firearm form or usage and a melee weapon form or usage. Switching between the melee weapon usage and the firearm usage requires an Interact action. However, if your last action was a successful melee Strike against a foe using a combination weapon, you can make a firearm Strike with the combination weapon against that foe without fully switching to the firearm usage, firing the firearm just as you hit with the melee attack. In this case, the combination weapon returns to its melee usage after the firearm Strike."},"NoRangeMelee":"None (Melee)","RangeIncrementN":{"Label":"Range Increment {range} ft.","Hint":"Ranged and thrown weapons have a range increment. Attacks with these weapons work normally up to that distance. Attack rolls beyond a weapon\'s range increment take a -2 penalty for each additional multiple of that increment between you and the target. Attacks beyond the sixth range increment are impossible."},"ReloadOneMinute":"1 min","SpecificMagicWeapon":{"Label":"Specific Magic Weapon","Hint":"Marking this weapon as a <i>specific magic weapon</i> indicates that it does more than what its material composition and runes allow. The name, level, rarity, and price will no longer be overridden from a precious material or runes at the time of marking. Those material and runes will, however, serve as a baseline for level, rarity, and price adjustments from later upgrades."},"ThrownUsage":{"Label":"Thrown Usage"}},"Rules":{"Apply":"Apply","Close":"Close"},"WorldItemWarning":"This is a World Item and will not work if saved in a compendium"},"ItemBonus0":"0","ItemBonus1":"+1 Weapon Potency","ItemBonus2":"+2 Weapon Potency","ItemBonus3":"+3 Weapon Potency","ItemBonusLabel":"Item Bonus","ItemBonusMinus2":"Shoddy (-2)","ItemBonusShortLabel":"Item","ItemDescription":"Description","ItemDetails":"Details","ItemLevel":"{type} {level}","ItemMystified":"Mystified","ItemMystification":"Mystification","ItemNamePlaceholder":"Name","ItemNotSupportedOnActor":"Item not supported on actor","ItemRules":"Rules","ItemNewRuleElement":"New Rule Element","ItemNewSkillVariant":"New Skill Variant","ItemRemoveRuleElement":"Remove Rule Element","ItemSourceIDLabel":"Source ID:","ItemTitle":"Item","ItemUUIDLabel":"UUID:","ItemsLabel":"Items","KeyAbility":"Key Ability Score","KeyAbilityLabel":"Key Ability","Keybinding":{"CycleTokenStack":{"Label":"Cycle Token Stack","Hint":"Cycle the Z indices of a mouse-hovered stack of tokens, pushing the top to the bottom."},"GMVision":{"Label":"GM Vision","Hint":"Brighten dark scenes for easier viewing."}},"KitItems":"Items","KitWorldItem":"This item is not found in a Compendium and will not work in other worlds","LackCastConsumableCapability":"{actor} lacks the proficiency to use {spell} and does not have the Trick Magic Item feat.","LanguageAbyssal":"Abyssal","LanguageAdlet":"Adlet","LanguageAkitonian":"Akitonian","LanguageAklo":"Aklo","LanguageAlghollthu":"Alghollthu","LanguageAmurrun":"Amurrun","LanguageAnadi":"Anadi","LanguageAncientOsiriani":"Ancient Osiriani","LanguageAndroffan":"Androffan","LanguageAnugobu":"Anugobu","LanguageAquan":"Aquan","LanguageArboreal":"Arboreal","LanguageArcadian":"Arcadian","LanguageAuran":"Auran","LanguageAzlanti":"Azlanti","LanguageBoggard":"Boggard","LanguageCalda":"Calda","LanguageCaligni":"Caligni","LanguageCelestial":"Celestial","LanguageDestrachan":"Destrachan","LanguageCommon":"Common","LanguageCyclops":"Cyclops","LanguageDaemonic":"Daemonic","LanguageDraconic":"Draconic","LanguageDruidic":"Druidic","LanguageDrooni":"Drooni","LanguageDwarven":"Dwarven","LanguageDziriak":"D\'ziriak","LanguageFormian":"Formian","LanguageEkujae":"Ekujae shape-script","LanguageElven":"Elven","LanguageErutaki":"Erutaki","LanguageGarundi":"Garundi","LanguageGirtablilu":"Girtablilu","LanguageGnoll":"Gnoll","LanguageGnomish":"Gnomish","LanguageGoblin":"Goblin","LanguageGoloma":"Goloma","LanguageGrioth":"Grioth","LanguageGrippli":"Grippli","LanguageHalfling":"Halfling","LanguageHallit":"Hallit","LanguageHwan":"Hwan","LanguageIblydan":"Iblydan","LanguageIgnan":"Ignan","LanguageIkeshti":"Ikeshti","LanguageInfernal":"Infernal","LanguageIruxi":"Iruxi","LanguageJistkan":"Jistkan","LanguageJotun":"Jotun","LanguageJyoti":"Jyoti","LanguageKaava":"Kaava","LanguageKashrishi":"Kashrishi","LanguageKelish":"Kelish","LanguageKibwani":"Kibwani","LanguageKitsune":"Kitsune","LanguageKovintal":"Kovintal","LanguageLirgeni":"Lirgeni","LanguageMahwek":"Mahwek","LanguageMiGo":"Mi-Go","LanguageMinaten":"Minatan","LanguageMinkaian":"Minkaian","LanguageMunavri":"Munavri","LanguageMwangi":"Mwangi","LanguageMzunu":"Mzunu","LanguageNagaji":"Nagaji","LanguageNecril":"Necril","LanguageOcotan":"Ocotan","LanguageOkaiyan":"Okaiyan","LanguageOrcish":"Orcish","LanguageOsiriani":"Osiriani","LanguageProtean":"Protean","LanguageRasu":"Rasu","LanguageRatajin":"Ratajin","LanguageRazatlani":"Razatlani","LanguageRequian":"Requian","LanguageRussian":"Russian","LanguageSamsaran":"Samsaran","LanguageSasquatch":"Sasquatch","LanguageSenzar":"Senzar","LanguageShadowtongue":"Shadowtongue","LanguageShae":"Shae","LanguageShisk":"Shisk","LanguageShoanti":"Shoanti","LanguageShobhad":"Shobhad","LanguageShoony":"Shoony","LanguageSkald":"Skald","LanguageSphinx":"Sphinx","LanguageStrix":"Strix","LanguageSylvan":"Sylvan","LanguageTaldane":"Taldane","LanguageTekritanin":"Tekritanin","LanguageTengu":"Tengu","LanguageTerran":"Terran","LanguageThassilonian":"Thassilonian","LanguageTien":"Tien","LanguageUndercommon":"Undercommon","LanguageUtopian":"Utopian","LanguageVanara":"Vanara","LanguageVarisian":"Varisian","LanguageVarki":"Varki","LanguageVishkanyan":"Vishkanyan","LanguageVudrani":"Vudrani","LanguageWyrwood":"Wyrwood","LanguageXanmba":"Xanmba","LanguageYithian":"Yithian","LanguageYsoki":"Ysoki","Languages":"Languages","LanguagesAdditional":"Additional Languages","LevelLabel":"Level","LevelN":"Level {level}","Level1":"Level 1","Level2":"Level 2","Level3":"Level 3","Level4":"Level 4","Level5":"Level 5","Level6":"Level 6","Level7":"Level 7","Level8":"Level 8","Level9":"Level 9","Level10":"Level 10","Level11":"Level 11","Level12":"Level 12","Level13":"Level 13","Level14":"Level 14","Level15":"Level 15","Level16":"Level 16","Level17":"Level 17","Level18":"Level 18","Level19":"Level 19","Level20":"Level 20","LevelRange":"Levels {minLevel} - {level}","LicenseViewer":{"Label":"Legal Notice","LandingPageText":"Use the tabs above to read the legal information"},"ListPartsOr":{"two":"{first} or {second}","start":"{first}, {second}","middle":"{first}, {second}","end":"{first}, or {second}"},"Lore":"Lore","LoreProficiencyDisclaimer":"Informational only. Will not change the skill modifier.","LoreSkillsHeader":"Lore Skills","LoreSkillFormat":"{name} Lore","AddLoreSkill":"Add lore skill","NewLoreSkill":"New skill","Macro":{"Plural":"Macros"},"MacroActionNoActorError":"This actor no longer exists!","MacroActionNoActionError":"This action no longer exists!","MagicTraditionLabel":"Magic Tradition","MagicTraditionUseSpellLabel":"Use Spell Tradition","MAPAbbreviationLabel":"MAP {penalty}","MartialAdvanced":"Advanced Weapons","MartialHeavy":"Heavy Armor","MartialLight":"Light Armor","MartialMartial":"Martial Weapons","MartialMedium":"Medium Armor","MartialSimple":"Simple Weapons","MartialSkillsHeader":"Weapon and Armor Proficiencies","MartialUnarmed":"Unarmed","MartialUnarmored":"Unarmored","MasterAbility":{"cha":"Master Charisma","con":"Master Constitution","dex":"Master Dexterity","int":"Master Intelligence","str":"Master Strength","wis":"Master Wisdom"},"MasterArmorClass":"Master Armor Class {base}","MasterLevel":"Master Level","MasterLevelHP":"Master Level","MasterSavingThrow":{"fortitude":"Master Fortitude","reflex":"Master Reflex","will":"Master Will"},"MaxHPTitle":"Your maximum hit points. This field is automatically calculated.","MaxHPTitleNPC":"Maximum hit points.","MaxHitPointsBaseLabel":"Base Max HP {base}","MaxHitPointsShortLabel":"Max HP","MaxStaminaPointsShortLabel":"Max SP","MaxStaminaTitle":"Your maximum stamina points","MaxHitPointsHeader":"Maximum Hit Points","MetalStrikes":"Metal Strikes","Migrations":{"Finished":"PF2E System Migration to version {version} completed!","Starting":"Applying PF2E System Migration to version {version}. Please be patient and do not close your game or shut down your server.","OnlyGMCanUse":"Only a gamemaster can use this tool.","WorldNotReady":"Game world not ready: try again in a few seconds.","OutsideSchemaRange":"The specified range is outside the system\'s schema version range (between {minimum} and {maximum}).","Summary":{"Documents":"Documents","HelpResources":"An unexpected error was encountered while migrating some actors or items. If you would like further assistance, feel free to report an issue at the <a href=\\"https://github.com/foundryvtt/pf2e/issues\\">system repository</a> or visit us on <a href=\\"https://discord.gg/SajryVzCyf\\">Discord</a> for community support.","Migrated":"Migrated","Remigrate":"Remigrate","Title":"Migration Summary","Total":"Total","Troubleshoot":{"Title":"System Troubleshooting","Hint":"Here you can run a remigration, which will attempt to automatically fix issues with actors and items."}},"Troubleshooting":"Troubleshooting"},"ModifierTitle":"Modifier","ModifiersTitle":"Modifiers","ModifierNamePlaceholder":"Name","ModifierTypeTitle":"[Type]","ModifierType":{"ability":"Ability","proficiency":"Proficiency","circumstance":"Circumstance","item":"Item","potency":"Potency","status":"Status","untyped":"Untyped"},"MultipleAttackPenalty":"Multiple Attack Penalty","MysticStrikes":"Mystical Strikes","Nationality":"Nationality","NPCAttackMelee":"Melee","NPCAttackRanged":"Ranged","NPCNotesLabel":"Notes/Conditions","NPCNotesTitle":"Write any notes for this NPC here.","NPCWeaponAddDamage":"Add Damage Part","NPCWeaponAttackEffect":"Additional Attack Effects","NPCWeaponAttackLabel":"Attack Modifier","NPCWeaponDamageLabel":"Damage Formula","NPCWeaponDamageTypeLabel":"Damage Type","NegligibleOption":"Negligible","NewLabel":"New","NewPlaceholders":{"Action":"New Action","Ancestry":"New Ancestry","Armor":"New Armor","Background":"New Background","Backpack":"New Container","Condition":"New Condition","Consumable":"New Consumable","Equipment":"New Equipment","Feat":"New Feat","Kit":"New Kit","Lore":"New Lore","Melee":"New Attack","Spell":"New Spell","SpellcastingEntry":"New Spellcasting Entry","Skill":"New Skill","Treasure":"New Treasure","Weapon":"New Weapon"},"NoAmmoLabel":"No Ammo","NoStackGroup":"Does not stack","NoneOption":"None","OneDegreeBetter":"one degree better","OneDegreeWorse":"one degree worse","TwoDegreesBetter":"two degrees better","TwoDegreesWorse":"two degrees worse","OpenActionBrowserTitle":"Open Action Browser","OpenInventoryBrowser":"Open Inventory Browser","OpenItemTitle":"Toggle Container Contents","OpenSpellBrowserTitle":"Open Spell Browser","OK":"OK","OrdinalNumber":"{value}{suffix}","OrdinalSuffixes":{"zero":"th","one":"st","two":"nd","few":"rd","other":"th","many":"th"},"OrphanedSpellsHeader":"Orphaned Spells (move to spellcasting entry above)","OverridesTitle":"Overrides","PenaltyLabel":{"ability":"Ability Penalty","proficiency":"Proficiency Penalty","circumstance":"Circumstance Penalty","item":"Item Penalty","status":"Status Penalty","untyped":"Untyped Penalty"},"PerceptionCheck":"Perception Check","PerceptionHeader":"Perception","PerceptionLabel":"Perception","PFS":{"CharacterNumber":"Character #","CurrentFaction":"Current Faction","LevelBump":"Level Bump","OrganizedPlayNumber":"Organized Play #","Reputation":"Reputation","Factions":{"EA":"Envoy\'s Alliance","GA":"Grand Archive","HH":"Horizon Hunters","VS":"Vigilant Seal","RO":"Radiant Oath","VW":"Verdant Wheel"},"School":{"None":"Field-Commissioned Agent","Scrolls":"Scrolls","Spells":"Spells","Swords":"Swords"}},"Playlist":{"Plural":"Playlists"},"PotencyRuneLabel":"Potency Rune","PreciousMaterialAbysium":"Abysium","PreciousMaterialAbysiumDescription":"A blue-green metal with an eerie green luminescence, abysium radiates power that\'s inimical to life. Careless exposure to the material can lead to long‑term damage to the immune system; as such, mining abysium is hazardous, as large quantities of the metal in an area cause all nearby creatures to become sick. A creature carrying an abysium object is sickened 1 for a standard‑grade object of light Bulk, sickened 2 for a standard‑grade object of 1 Bulk or more or a high-grade object of light Bulk, or sickened 3 for a high‑grade object of 1 Bulk or more. This and all other sickening effects of abysium are poison effects. Crafters can use 1 abysium chunk to create up to 6 doses of poisonous abysium powder. Unscrupulous smiths have harnessed abysium\'s toxic properties to create noxious weapons and deadly substances. All objects crafted from abysium shed dim light in a 10‑foot radius.","PreciousMaterialAdamantine":"Adamantine","PreciousMaterialAdamantineDescription":"Mined from rocks that fell from the heavens, adamantine is one of the hardest metals known. It has a shiny, black appearance, and it is prized for its amazing resiliency and ability to hold an incredibly sharp edge.","PreciousMaterialColdIron":"Cold Iron","PreciousMaterialColdIronDescription":"Weapons made from cold iron are deadly to demons and fey alike. Cold iron looks like normal iron but is mined from particularly pure sources and shaped with little or no heat. This process is extremely difficult, especially for high-grade cold iron items.","PreciousMaterialDarkwood":"Darkwood","PreciousMaterialDarkwoodDescription":"Darkwood is a very lightweight wood found primarily in old- growth forests in south-central Avistan; it is dark as ebony but has a slight purple tint. A darkwood item\'s Bulk is reduced by 1 (or to light Bulk if its normal Bulk is 1, with no effect on an item that normally has light Bulk). The Price of an item made of darkwood is based on the item\'s normal Bulk, not its reduced Bulk for being made of darkwood, but reduce the Bulk before making any further Bulk adjustments for the size of the item.","PreciousMaterialDjezet":"Djezet","PreciousMaterialDjezetDescription":"This rust red metal is liquid at room temperature, making it challenging for all but the most skilled metallurgists to craft with and earning it the name \\"quickiron\\" in some places. Djezet is also extremely reactive to magic, even in its solid, workable alloyed form. It glows when targeted by magic, and objects crafted with djezet alloys glow with scarlet striations, which lead some smiths to nickname it \\"tiger iron.\\" When targeted by spells, objects crafted from djezet alloys exhibit these glowing red markings that last for 1 round or the duration of the spell, whichever is longer. A djezet mass contains enough djezet to refine into up to two djezet doses.","PreciousMaterialDragonhide":"Dragonhide","PreciousMaterialDragonhideDescription":"The hide and scales of a dragon can be used to Craft any item normally made of ordinary leather or hide. Dragonhide varies in color from blue to glittering gold, depending on the dragon it came from. Due to the scales\' resiliency, it can also be used to Craft armor usually made out of metal plates (such as a breastplate, half plate, and full plate), allowing such armor to be made without metal. Dragonhide objects are immune to one damage type, depending on the type of dragon.","PreciousMaterialGradeLabel":"Precious Material Grade","PreciousMaterialGrisantianPelt":"Grisantian Pelt","PreciousMaterialGrisantianPeltDescription":"This supernaturally tough animal skin is gold and shines in sunlight. It can be used to make any item usually made of cloth, leather, or hide. This material is immune to fire, and its Hardness is doubled against piercing or slashing damage. Up to 4 Bulk of grisantian pelt can be harvested from a single creature (this is usually more than enough for 4 suits of standard grade armor or 2 suit of high-grade armor).","PreciousMaterialHighGrade":"High-Grade","PreciousMaterialInubrix":"Inubrix","PreciousMaterialInubrixDescription":"This pale, malleable metal\'s unusual molecular structure allows it to partially pass through iron and steel without touching them. While this property is useful for making weapons that bypass metal armor, inubrix is barely sturdier than lead. Even in an alloyed state, this skymetal is so fragile that it\'s difficult to use in crafting reliable shields and less than ideal for crafting armor.","PreciousMaterialLabel":"Precious Material","PreciousMaterialLowGrade":"Low-Grade","PreciousMaterialMithral":"Mithral","PreciousMaterialMithralDescription":"Mithral is renowned for its lightness, durability, and effectiveness against a range of creatures including devils and lycanthropes. It has the same sheen as silver but a slightly lighter hue. Mithral weapons and armor are treated as if they were silver for the purpose of damaging creatures with weakness to silver. A metal item made of mithral is lighter than one made of iron or steel: the item\'s Bulk is reduced by 1 (reduced to light Bulk if its normal Bulk is 1, with no effect on an item that normally has light Bulk). The Price of an item made of this material is based on the item\'s normal Bulk, not its reduced Bulk for being made of mithral, but reduce the Bulk before making any further Bulk adjustments for the size of the item.","PreciousMaterialNoqual":"Noqual","PreciousMaterialNoqualDescription":"Light and strong, noqual also demonstrates a powerful resistance to magic. A side effect of this resistance is that making magical weapons out of noqual requires complex and expensive alchemical treatments. Kevoth‑Kul, the Black Sovereign of Numeria, has developed an alloy of noqual and cold iron known as sovereign steel to help mitigate this property. The metal\'s crystalline appearance might suggest that it\'s fragile, but the pale‑green material can be worked similarly to iron. Objects made of noqual have a +4 circumstance bonus on saves against magic that the item attempts and grant their bonus to saves the owner makes specifically to protect the item from magic (such as against the rusting grasp spell).","PreciousMaterialOrichalcum":"Orichalcum","PreciousMaterialOrichalcumDescription":"The most rare and valuable skymetal, orichalcum is coveted for its incredible time-related magical properties. This dull, coppery metal isn\'t as physically sturdy as adamantine, but orichalcum\'s time-bending properties protect it, granting it greater Hardness and Hit Points. If an orichalcum item takes damage but isn\'t destroyed, it repairs itself completely 24 hours later.","PreciousMaterialPeachwood":"Peachwood","PreciousMaterialPeachwoodDescription":"Peachwood weapons have a particularly auburn tinge to them when under direct sunlight. Peachwood is treated as darkwood for any undead creatures\' resistances or weaknesses related to darkwood (allowing a peachwood weapon to bypass a jiang-shi\'s resistance, for example). In addition, peachwood weapons bypass a small portion of the resistances of any undead creature. Strikes with a peachwood weapon treat an undead\'s resistances against physical damage as 2 lower for standard-grade peachwood, and 4 lower for high-grade.","PreciousMaterialSiccatite":"Siccatite","PreciousMaterialSiccatiteDescription":"In its raw state, this silvery ore is either scalding hot or freezing cold. Metallurgists disagree over whether siccatite is two related substances or one substance that determines its temperature output via some unknown process. Whatever the reason, the extreme temperature of the material means it must be handled carefully. Hot siccatite can easily ignite flammables such as paper and dry brush, and cold siccatite left in moist areas quickly surrounds itself with a thick layer of ice. A creature that comes into physical contact with a significant amount of siccatite takes 1 energy Damage for each round of continued contact (either fire or cold damage, for hot and cold siccatite respectively).","PreciousMaterialSilver":"Silver","PreciousMaterialSilverDescription":"Silver weapons are a bane to creatures ranging from devils to werewolves. Silver items are less durable than steel items, and low-grade silver items are usually merely silver-plated.","PreciousMaterialSisterstoneDescription":"Sisterstone is a term used for two closely related ores infused by the spiritual runoff in the Field of Maidens, dusk sisterstone and scarlet sisterstone. They have the same physical properties except for color-dusk sisterstone is a pale orange while scarlet sisterstone is orange-red. When near an object made of the other type of sisterstone, they both begin exuding spiritual energy that repels undead.","PreciousMaterialSisterstoneDusk":"Sisterstone (Dusk)","PreciousMaterialSisterstoneScarlet":"Sisterstone (Scarlet)","PreciousMaterialSovereignSteel":"Sovereign Steel","PreciousMaterialSovereignSteelDescription":"Created by Black Sovereign Kevoth-Kul, this unique alloy of cold iron and the skymetal noqual can provide protection from magical assault. The process of cold-forging the two materials together is quite complicated and precise. Characters in search of sovereign steel weapons and armor will almost assuredly have to travel to Starfall to procure gear made from this rare alloy. While some believe it possible to craft shields of sovereign steel as well, in one of his fits, Kevoth-Kul yelled that he had no use for them and banned anyone from making such a thing. So far, his smiths have been too afraid to confirm whether or not it was a joke. All sovereign steel items (including weapon and armor below) have a +4 circumstance bonus on saves against magic that the item makes, and grant their bonus to saves the owner makes specifically to protect the item from magic (such as against the rusting grasp spell).","PreciousMaterialStandardGrade":"Standard-Grade","PreciousMaterialWarpglass":"Warpglass","PreciousMaterialWarpglassDescription":"This bizarre substance is fashioned from the raw, chaotic quintessence of the Maelstrom. It can be fashioned into weapons and items, but is too unstable to make into useful armor or shields. Raw warpglass is an opalescent glassy material with surprising strength. When worked, it changes its appearance-though not its properties-to appear as random striations of other metals and types of stone.","PreparationTypeInnate":"Innate","PreparationTypePrepared":"Prepared","PreparationTypeSpontaneous":"Spontaneous","PreparationTypeItems":"Items Only","Prerequisite1":"Prerequisite 1","Prerequisite2":"Prerequisite 2","Prerequisite3":"Prerequisite 3","Prerequisite4":"Prerequisite 4","Prerequisite5":"Prerequisite 5","PriceLabel":"Price","ProficiencyLabel":"Proficiency","ProficiencyLevel0":"Untrained","ProficiencyLevel1":"Trained","ProficiencyLevel2":"Expert","ProficiencyLevel3":"Master","ProficiencyLevel4":"Legendary","ProficiencyRankLabel":"Prof","PropertyRuneLabel1":"Property Rune (1st)","PropertyRuneLabel2":"Property Rune (2nd)","PropertyRuneLabel3":"Property Rune (3rd)","PropertyRuneLabel4":"Property Rune (4th)","QuantityLabel":"Quantity","QuantityShortLabel":"Qty.","RangePenalty":"Range Penalty","Rarity":"Rarity","Usage":"Usage","Reach":"Reach (feet)","RecallKnowledge":{"Label":"Recall Knowledge","Help":"You can attempt repeated Recall Knowledge actions to recall more information about a creature. These checks increase in difficulty as shown in the chart below. However, if you fail, or if no DC is listed, you can not attempt further Recall Knowledge checks against this creature.","Breakdown":"Attempts","BreakdownTitle":"Identify Creature Attempts","FirstAttempt":"1st DC","SecondAttempt":"2nd DC","ThirdAttempt":"3rd DC","FourthAttempt":"4th DC","FifthAttempt":"5th DC","SixthAttempt":"6th DC","SpecificLore":"Specific Lore","UnspecificLore":"Unspecific Lore","Skill":"Skill"},"Recovery":{"critFailure":"Increase your dying value by 2.","critSuccess":"Reduce your dying value by 2.","failure":"Increase your dying value by 1.","rollingDescription":"Recovery Check versus a DC {dc} (dying {dying})","success":"Reduce your dying value by 1."},"RemoveCoinsByValueLabel":"Remove value, not specific type","RemoveCoinsTitle":"Remove Coins","RemoveCombatProficiency":{"Title":"Remove Combat Proficiency","Message":"Remove {proficiency} proficiency?"},"RemoveSpellcastingEntryTitle":"Remove Spellcasting Entry","RepairItemTitle":"Attempt to Repair Item","Repost":"Post prompt to chat","RerollMenu":{"ErrorNoActor":"No actor is associated to the roll","ErrorCantDelete":"You are unable to delete the original roll.","HeroPoint":"Reroll using a Hero Point","KeepBest":"Reroll and keep the better result","KeepNew":"Reroll and keep the new result","KeepWorst":"Reroll and keep the worse result","MessageKeep":{"new":"Rerolled and kept the new result","best":"Rerolled and kept the better result","worst":"Rerolled and kept the worse result"},"MessageHeroPoint":"Rerolled using a Hero Point","WarnNoHeroPoint":"{name} has no Hero Points"},"ResiliencyRuneLabel":"Resilient Rune","ResistancesLabel":"Resistances","ResistancesExceptionLabel":"Except:","ResistancesExceptionPlaceholder":"e.g. except silver","ResolvePointsShortLabel":"Resolve","ResolveTitle":"The amount of resolve points you have","RestoreSpellTitle":"Restore Spell","Roll":{"Modifier":"Modifier","Type":"Type","Fortune":"Fortune","KeepHigher":"Keep Higher","KeepLower":"Keep Lower","FortuneTitle":"{title} Fortune","Misfortune":"Misfortune","MisfortuneTitle":"{title} Misfortune","None":"None","Roll":"Roll","Normal":"Normal","CriticalHit":"Critical Hit","Add":"Add","UntypedPenalty":"Untyped (penalty)"},"RollTable":{"Plural":"Rollable Tables"},"RollBonusPlaceholder":"e.g. +3 or +1d4","RollModeLabel":"Roll Mode","Scene":{"Plural":"Scenes"},"SETTINGS":{"Settings":"Settings","Sidebar":{"Wiki":"Wiki","Changelog":"Changelog","Discord":"Discord"},"critFumbleCards":{"hint":"Automatically draw a critical hit or fumble card on appropriate rolls.","name":"Critical Hit and Fumble Cards"},"critFumbleCardButtons":{"hint":"Show critical hit and fumble card draw buttons on attack rolls.","name":"Critical Hit and Fumble Card Buttons"},"DeathIcon":{"Name":"Death Icon","Hint":"Set the overlay icon used to mark dead actors."},"NathMode":{"Name":"Nath Mode","Hint":"Use better default token icons"},"TOTMToggles":{"Name":"Theater of the Mind Toggles","Hint":"Include additional toggles on actor sheets to facilitate Theater of the Mind play. Such toggles will allow for enabling certain abilities without targeting in Foundry."},"statusEffectKeepFoundry":{"hint":"Determines if you want to show the Foundry Icon set below the Pathfinder 2E icon set. This will trigger a reload.","name":"Status Icon Foundry Set"},"statusEffectShowCombatMessage":{"hint":"Show the status effects of the current combatant in chat each turn. If your game has more than one GM this setting should only be enabled for one of them.","name":"Show Status Effects in Combat"},"statusEffectType":{"blackWhite":"Black & white","default":"Full color","hint":"Determines which icon set is used for condition token effects.","legacy":"Legacy","name":"Condition Icon Set"},"Player":{"QuickRolls":{"DialogHint":"Always show this window before attempting checks."}},"User":{"EffectPanel":{"Name":"Show Effects Panel","Hint":"Show the Effects Panel when a token is selected."},"MonochromeDarkvision":{"Name":"Monochrome Darkvision","Hint":"If rules-based vision is enabled, depict areas of darkness in monochrome for tokens with darkvision. Note that some creatures, such as fetchlings, possess full-color darkvision and will not be affected."}},"WorldSchemaVersion":{"Name":"World Schema Version","Hint":"Records the schema version for documents in the PF2e system (don\'t modify this unless you know what you are doing)."},"IgnoreCoinBulk":{"Name":"Coins are weightless","Hint":"Toggle on to ignore currency weight."},"IdentifyMagicNotMatchingTraditionModifier":{"Name":"Identify Magic Skill Modifier","Hint":"Modifier to add to Identify Magic Skill DCs if the skill does not match the item\'s magic tradition","Choices":{"0":"0","2":"+2","5":"+5","10":"+10"}},"CritRule":{"Name":"Critical Damage Rule","Hint":"Use a different rule for doubling damage on a critical hit","Choices":{"Doubledamage":"Double the damage","Doubledice":"Double the number of dice"}},"CompendiumBrowserPacks":{"Name":"Compendium Browser Packs","Hint":"Settings to exclude packs from loading"},"EnabledRulesUI":{"Name":"Advanced Rule Element UI","Hint":"When enabled, show the advanced rule element UI on items. Be very careful with this, as it can break the actors and items if you are not sure what you are doing or make a mistake."},"ResetChanges":"Reset Changes","Automation":{"Name":"Automation","Label":"Manage Automation","Hint":"Decide how much and what kinds of automation should apply to your game world.","RulesBasedVision":{"Name":"Rules-based vision","Hint":"Apply vision mechanics consistent with Pathfinder 2e rules. Enabling this setting will remove the ability to configure Unrestricted Global Vision as well as Token Sight radii.","ManagedBy":"Managed by <rbv>rules-based vision</rbv>."},"EffectExpiration":{"Name":"Effects auto-expire","Hint":"Effects automatically disable attached rule elements when the duration expires."},"RemoveExpiredEffects":{"Name":"Remove expired effects","Hint":"Expired effects are automatically removed from actors (requires a GM to be logged in)."},"FlankingDetection":{"Name":"Flanking detection","Hint":"Flanking arrangements and abilities that predicate on it are managed by the system."},"ActorsDeadAtZero":{"Name":"NPCs dead at 0 HP","Hint":"Upon reaching zero hit points, NPCs are marked as dead.","Neither":"No","NPCsOnly":"Yes","PCsOnly":"PCs only","Both":"PCs and NPCs"},"LootableNPCs":{"Name":"NPCs are lootable","Hint":"Upon their demise, NPCs become lootable by players."}},"Homebrew":{"Name":"Homebrew Elements","Label":"Manage Homebrew Elements","Hint":"Add custom traits, languages, and other elements of a homebrew world.","Instructions":"These settings allow GMs to add traits, languages, and other elements to a homebrew world. To add such elements, simply type the desired terms in the appropriate fields, separated by commas or tab keystrokes. They will then appear in the appropriate places on actor and item sheets. To update a term, click it to make the desired changes.","ConfirmDelete":{"Title":"Delete Homebrew Element?","Message":"Delete Homebrew element <strong>{element}</strong>?"},"CreatureTraits":{"Name":"Creature Traits","Hint":"Traits that can be applied to any creature and some item types (e.g., Dragon, Gnome)"},"FeatTraits":{"Name":"Feat Traits","Hint":"Traits that can be applied to feats (e.g., Lineage, Monk) and actions"},"Languages":{"Name":"Languages","Hint":"Languages for characters to know or learn (e.g., Draconic, Gnomish)"},"MagicSchools":{"Name":"Magic Schools","Hint":"The magical schools to which all spells belong (e.g., Conjuration, Evocation)"},"SpellTraits":{"Name":"Spell Traits","Hint":" Traits that can be applied to any spell (e.g., Cursebound, Healing)"},"WeaponCategories":{"Name":"Weapon Categories","Hint":"The top level of Pathfinder 2e weapon taxonomy (e.g., Simple, Martial)"},"WeaponGroups":{"Name":"Weapon Groups","Hint":"The mid level of Pathfinder 2e weapon taxonomy (e.g, Crossbow, Sword)"},"BaseWeapons":{"Name":"Base Weapons","Hint":"The bottom level of Pathfinder 2e weapon taxonomy (e.g, Heavy Crossbow, Longsword)"},"WeaponTraits":{"Name":"Weapon Traits","Hint":"Traits applicable to weapons and NPC attacks"},"EquipmentTraits":{"Name":"Equipment Traits","Hint":"Traits applicable to equipment other than weapons"}},"Metagame":{"Name":"Metagame Information","Label":"Limit Metagame Information","Hint":"Limit what kinds of metagame information your players have access to.","TokenSetsNameVisibility":{"Name":"Tokens determine NPC name visibility","Hint":"If enabled, then for any NPC token whose nameplate isn\'t visible to players, its name will also be hidden from them in the encounter tracker and chat messages."},"PartyVision":{"Name":"Shared party vision","Hint":"If enabled, all players will mutually share token vision, regardless of permissions or token selection."},"SecretDamage":{"Name":"Hide damage taken message","Hint":"If enabled, only the GM will see the damage/healing taken messages that are generated by the damage chat cards for tokens not owned by a player."},"SecretCondition":{"Name":"Hide condition update message","Hint":"If enabled, only the GM will see the condition update and reminder messages that are generated for tokens not owned by a player."},"ShowDC":{"Name":"Show DCs on attacks and saves","Hint":"If enabled, players will see DCs of checks made against NPCs and other non-player-owned sources."},"ShowResults":{"Name":"Show results on attacks and saves","Hint":"If enabled, players will see the degree of success of checks made against NPCs and other non-player-owned sources."}},"Tokens":{"Autoscale":{"Name":"Scale tokens according to size","Hint":"If enabled, tokens will be scaled to 1.0 or (if belonging to a small creature) 0.8"}},"WorldClock":{"Name":"World Clock","Label":"Configure World Clock","Hint":"Configure the appearance of the World Clock application.","DateTheme":{"Name":"Date Theme","Hint":"Set the theme of the World Clock application.","AR":"Golarion (Absalom Reckoning)","IC":"Golarion (Imperial Calendar)","AD":"Earth (Gregorian Calendar)","CE":"Unthemed (Gregorian Calendar)"},"TimeConvention":{"Name":"Time Convention","Hint":"Display either a 24-hour or 12-hour clock.","TwentyFour":"24-Hour","Twelve":"12-Hour"},"ShowClockButton":{"Name":"Show clock button","Hint":"Set whether to show the clock button at all (requires refresh)."},"PlayersCanView":{"Name":"Player Access","Hint":"Set whether players can view the World Clock."},"SyncDarkness":{"Name":"Synchronize Darkness (World Default)","Hint":"Set whether any scene\'s Darkness Level will reflect the time of day."},"SyncDarknessScene":{"Name":"Synchronize Darkness (Current Scene)","Hint":"Set whether this scene\'s Darkness Level will reflect the time of day.","Enabled":"Enabled","Disabled":"Disabled","Default":"World Default ({worldDefault})","ManagedBy":"Synchronized with <wt>world time</wt>."},"ResetWorldTime":{"Name":"Reset World Date/Time","Button":"Reset","Hint":"Reset this world\'s time elapsed time to zero.","Confirm":{"Question":"Are you sure you want to reset this world\'s elapsed time?","Warning1":"Time-dependent game effects may be impacted.","Warning2":"This action cannot be undone."}}},"CampaignFeats":{"Name":"Campaign Feats","Hint":"Adds a section to all player sheets for campaign specific feats."},"Variant":{"Name":"Variant Rules","Label":"Toggle Variant Rules","Hint":"Enable and configure variant rules like Proficiency Without Level or the Stamina system.","AbilityScore":{"Title":"Ability Score Variants","GradualBoosts":{"Name":"Gradual Ability Boosts","Hint":"Spread out ability score boosts across multiple levels. Players gain a boost every level except 6, 11, and 16."}},"Stamina":{"Title":"Stamina","Name":"Stamina Variant Rules","Hint":"Play with the stamina variant from Gamemastery Guide pg 200","Choices":{"0":"Do not use Stamina","1":"Use Stamina"}},"AncestryParagon":{"Title":"Ancestry Paragon","Name":"Ancestry Paragon Variant Rules","Hint":"Grant additional feat slots for the ancestry paragon variant from Gamemastery Guide pg 194"},"FreeArchetype":{"Title":"Free Archetype","Name":"Free Archetype Variant Rules","Hint":"Grant additional feat slots for the free archetype variant from Gamemastery Guide pg 194"},"DualClass":{"Title":"Dual Class","Name":"Dual Class Variant Rules","Hint":"Grant additional feat slots for the dual class variant from Gamemastery Guide pg 192. This variant only adds feat slots, and always adds a level 1 feat slot."},"AutomaticBonus":{"Title":"Automatic Bonus Progression","Name":"Automatic Bonus Variant Rules","Hint":"Reload Required: Support for Automatic Bonus Progression variant rules, except skills/apex ability.","Choices":{"noABP":"Do not use ABP","ABPFundamentalPotency":"ABP: Allow Property Runes","ABPRulesAsWritten":"ABP: Disallow Property Runes "}},"Proficiency":{"Title":"Proficiency without Level","Name":"Proficiency without Level Variant Rules","Hint":"Play with the proficiency without level variant from Gamemastery Guide pg 198.","Choices":{"ProficiencyWithLevel":"Use Default rules","ProficiencyWithoutLevel":"Use Variant rules"}},"UntrainedModifier":{"Name":"Untrained proficiency modifier","Hint":"Adjust to your liking to compliment the proficiency without level variant rules, recommended with variant rules is -2. Requires recalculation by reload or modifying a value per actor."},"TrainedModifier":{"Name":"Trained proficiency modifier","Hint":"Adjust to your liking to compliment the proficiency without level variant rules. Requires recalculation by reload or modifying a value per actor."},"ExpertModifier":{"Name":"Expert proficiency modifier","Hint":"Adjust to your liking to compliment the proficiency without level variant rules. Requires recalculation by reload or modifying a value per actor."},"MasterModifier":{"Name":"Master proficiency modifier","Hint":"Adjust to your liking to compliment the proficiency without level variant rules. Requires recalculation by reload or modifying a value per actor."},"LegendaryModifier":{"Name":"Legendary proficiency modifier","Hint":"Adjust to your liking to compliment the proficiency without level variant rules. Requires recalculation by reload or modifying a value per actor."},"Title":"Variant Rules Settings"}},"SaveDCLabel":"Save DC {dc} {type}","SaveDCLabelBasic":"Save DC {dc} basic {type}","SavesFortitude":"Fortitude","SavesFortitudeShort":"Fort","SavesHeader":"Saves","SavesReflex":"Reflex","SavesReflexShort":"Ref","SavesWill":"Will","SavesWillShort":"Will","SavingThrowWithName":"{saveName} Saving Throw","ScoreTitle":"Score","ScrollFromSpell":"Scroll of {name} (Level {level})","ScrollWandPopup":{"10thLevelWand":"10th level wands don\'t exist","itemTypeLabel":"Consumable type: ","label":"Create a scroll or wand from the dropped spell","scroll":"Scroll","spellLevelLabel":"Heightened Level: ","submit":"Create item","title":"Create a scroll or wand","wand":"Wand"},"SelectLabel":"Select","SellAllTreasureTitle":"Sell All Treasure","SellAllTreasureQuestion":"Convert all treasure items into coins","Senses":"Senses","SettingsColorBlue":"Bluegray","SettingsColorLabel":"UI Theme","SettingsColorNotes":"UI themes are most visible on the sidebar and chat cards.","SettingsColorOriginal":"Original","SettingsColorRed":"Darkred","SettingsColorFoundry-UI":"Work in Progress","SettingsQuickRollsLabel":"Preview D20 Rolls","SettingsQuickRollsNotes":"If disabled, dialogs to preview D20 rolls will appear only when a roll button is shift-clicked.","SettingsDataUriHighlightLabel":"Highlight images that use data: URI","SettingsDataUriHighlightNotes":"Images that use a data: URI are embedded in the character sheet. This has a negative performance impact on the character. If enabled, such images will be highlighted with a red border to make it easy to find and remove them.<br>This setting is only active for the current session.","SheetLabel":"{type} Sheet","SheetLabelDataEntry":"{type} Sheet (data entry)","SheetLabelNew":"{type} Sheet (preview)","SheetLabelOld":"{type} Sheet (legacy)","ShieldACBonusTitle":"The AC bonus of your shield (when you use the raise shield action)","ShieldBrokenThresholdLabel":"Broken Threshold","ShieldBTShortLabel":"BT","ShieldBTTitle":"Your shield\'s Broken Threshold","ShieldCurrentLabel":"Shield HP","ShieldCurrentTitle":"Your shield\'s current Hit Points","ShieldHardnessLabel":"Hardness","ShieldHardnessShortLabel":"H","ShieldHardnessTitle":"Shield damage is reduced by this hardness value","ShieldLabel":"Shield","ShieldMaxLabel":"Max","ShieldMaxTitle":"Your shield\'s max Hit Points","SidebarAppearanceLabel":"Appearance","Size":"Size","SizeLabel":"Size","SkillAcr":"Acrobatics","SkillAcrobatics":"Acrobatics","SkillArc":"Arcana","SkillArcana":"Arcana","SkillAth":"Athletics","SkillAthletics":"Athletics","SkillCheckWithName":"Skill Check: {skillName}","SkillCra":"Crafting","SkillCrafting":"Crafting","SkillDec":"Deception","SkillDeception":"Deception","SkillDip":"Diplomacy","SkillDiplomacy":"Diplomacy","SkillIntimidation":"Intimidation","SkillItm":"Intimidation","SkillLabel":"Skill","SkillLore":"Lore","SkillMed":"Medicine","SkillMedicine":"Medicine","SkillNat":"Nature","SkillNature":"Nature","SkillOcc":"Occultism","SkillOccultism":"Occultism","SkillPerformance":"Performance","SkillPrf":"Performance","SkillRel":"Religion","SkillReligion":"Religion","SkillSoc":"Society","SkillSociety":"Society","SkillSte":"Stealth","SkillStealth":"Stealth","SkillSur":"Survival","SkillSurvival":"Survival","SkillThi":"Thievery","SkillThievery":"Thievery","SkillsLabel":"Skills","SkillPotencyHeader":"Skill Potencies","SkillFeatLevels":"Skill Feat Levels","SkillIncreaseLevels":"Skill Increase Levels","Source":{"AuthorLabel":"Author","AuthorPlaceholder":"Author","Label":"Source","SourcePlaceholder":"Book"},"SpecialLabel":"Special","SpecialSensesLabel":"Special Senses","Speed":"Speed","SpeedFeet":"Speed (feet)","SpeedBaseLabel":"Base {type} Speed","SpeedLabel":"{type} Speed","SpeedTitle":"Your character\'s speed","SpeedTypes":"Speed Types","SpeedTypesBurrow":"Burrow","SpeedTypesClimb":"Climb","SpeedTypesFly":"Fly","SpeedTypesLand":"Land","SpeedTypesSwim":"Swim","SpeedTypesTitle":"Alternative movement types","SpellAbilityLabel":"Spell Ability","SpellAbilityModLabel":"+ Mod","SpellArea":"Area: {areaSize} {areaUnit} {areaType}","SpellAttackWithTradition":"{tradition} Spell Attack","SpellAttackLabel":"Spell Attack","SpellBasicSaveOption":"Basic","SpellBrowserSearchHint":"You can search for name or custom attributes. Possible searchable attributes are:<br> source, spellType, level, school, components, materials, target, range, time, duration, damage, damageType, save, concentration, ritual, ability and classes. <br>Example: \'fire, damage:d6\' to show all spells that have fire in their name and a d6 in the damage","SpellCantripLabel":"Cantrip","SpellCastingFormat":"{traditionSpells} {preparationType} Spells","SpellcastingSettings":{"Title":"Spellcasting Settings","AutoHeightenLabel":"Auto Heighten Level","AutoHeightenDefault":"Default (Use Actor Level)"},"SpellComponentF":"Focus","SpellComponentM":"Material","SpellComponentS":"Somatic","SpellComponentV":"Verbal","SpellComponentShortF":"F","SpellComponentShortM":"M","SpellComponentShortS":"S","SpellComponentShortV":"V","SpellComponentsLabel":"Components","SpellSlotEmpty":"Empty Slot (drag spell here)","SpellSlotNotEnoughError":"Cannot cast {name} at the {level}, not enough spell slots","SpellSlotExpendedError":"Cannot cast {name}, spell is already expended","SpellPrimaryCheckLabel":"Primary Check","SpellSecondaryChecksLabel":"Secondary Checks","SpellSecondaryCasters":"Secondary Casters","SpellConcentrationLabel":"Concentration","SpellCostLabel":"Cost","SpellDamageLabel":"Spell Damage","SpellDCBase":"Base Spell DC 10","SpellDurationLabel":"Duration","SpellFocusLabel":"Focus","SpellFlexibleLabel":"Flexible","SpellFlexibleAvailable":"Flexible: {value} / {max}","SpellCollectionAdd":"Add to Spell Collection","SpellCollectionRemove":"Remove from Spell Collection","SpellLabel":"Spell","SpellLabelPlural":"Spells","SpellLevel":"{level} Level","SpellLevel1":"1st Level","SpellLevel10":"10th Level","SpellLevel2":"2nd Level","SpellLevel3":"3rd Level","SpellLevel4":"4th Level","SpellLevel5":"5th Level","SpellLevel6":"6th Level","SpellLevel7":"7th Level","SpellLevel8":"8th Level","SpellLevel9":"9th Level","SpellLevelLabel":"Spell Level","SpellLevelBase":"Base: {level}","SpellLevelHeightened":"Heightened: +{heightened}","SpellPreparedLabel":"Prepared","SpellRangeLabel":"Range","SpellRequirementsLabel":"Requirements","SpellRitualLabel":"Ritual","SpellSaveLabel":"Spell DC","SpellScalingInterval":{"Header":"Scaling (Interval)","Label":"Interval","Selection":"Heightened (+{interval})","Add":"Add Heightening (Interval)"},"SpellScalingOverlay":{"Label":"Heightened Level","Selection":"Heightened ({level})","Add":"Add Heightening (Fixed)"},"SpellScalingLabel":"Scaling","SpellSchoolLabel":"School","SpellTargetLabel":"Targets","SpellTimeLabel":"Cast Time","SpellTraditionsLabel":"Traditions","SpellTypeAttack":"Spell Attack","SpellTypeFocus":"Focus","SpellTypeHeal":"Healing","SpellTypeRitual":"Ritual","SpellTypeLabel":"Spell Type","SpellTypeSave":"Saving Throw","SpellTypeUtility":"Utility","SpellCategorySpell":"Spell","SpellUsesLabel":"Uses","SpellUnlimitedLabel":"Unlimited","SpellCategoryFocus":"Focus","SpellCategoryRitual":"Ritual","SpellCategoryFocusCantrip":"Focus Cantrip","SpellCategoryLabel":"Spell Category","SpellcastingTypeLabel":"Spellcasting Type","SpellsActionHeader":"Action","SpellsSchoolHeader":"School","StackGroupArrows":"Arrows","StackGroupRounds5":"Rounds (5)","StackGroupRounds10":"Rounds (10)","StackGroupBlowgunDarts":"Blowgun Darts","StackGroupBolts":"Bolts","StackGroupCoins":"Coins","StackGroupGems":"Gems","StackGroupLabel":"Stacks With","StackGroupRations":"Rations","StackGroupSacks":"Sacks","StackGroupSlingBullets":"Sling Bullets","StackGroupWoodenTaws":"Wooden Taws","StaminaPointsHeader":"Stamina Points","StaminaPointsShortLabel":"Stamina","StatusBonusShortLabel":"Status","StatusBonusTitle":"Status Bonus","StatusEffects":"{name}\'s status effects:","StealthLabel":"Stealth","StrikesLabel":"Strikes","Strike":{"Default":{"Description":"You attack with a weapon you&apos;re wielding or with an unarmed attack, targeting one creature within your reach (for a melee attack) or within range (for a ranged attack). Roll the attack roll for the weapon or unarmed attack you are using, and compare the result to the target creature&apos;s AC to determine the effect.","CriticalSuccess":"As success, but you deal double damage.","Success":"You deal damage according to the weapon or unarmed attack, including any modifiers, bonuses, and penalties you have to damage."},"Fist":{"Label":"Fist"},"Unarmed":{"Description":"You attack with an unarmed attack, targeting one creature within your reach. Roll the attack roll for the unarmed attack you are using, and compare the result to the target creature&apos;s AC to determine the effect.","Success":"You deal damage according to the unarmed attack, including any modifiers, bonuses, and penalties you have to damage."},"Melee":{"Description":"You attack with a weapon you&apos;re wielding, targeting one creature within your reach. Roll the attack roll for the weapon you are using, and compare the result to the target creature&apos;s AC to determine the effect.","Success":"You deal damage according to the weapon, including any modifiers, bonuses, and penalties you have to damage."},"Ranged":{"Description":"You attack with a weapon you&apos;re wielding, targeting one creature within range. Roll the attack roll for the weapon you are using, and compare the result to the target creature&apos;s AC to determine the effect.","Success":"You deal damage according to the weapon, including any modifiers, bonuses, and penalties you have to damage.","NoAmmo":"No ammunition is assigned to {weapon}. Check the Actions tab of {actor}\'s sheet."},"Combined":{"Description":"You attack with a weapon you&apos;re wielding, targeting one creature within your reach (for a melee attack) or within range (for a ranged attack). Roll the attack roll for the weapon or unarmed attack you are using, and compare the result to the target creature&apos;s AC to determine the effect.","Success":"You deal damage according to the weapon, including any modifiers, bonuses, and penalties you have to damage."}},"StrikingRuneLabel":"Striking Rune","Success":"<strong>Success</strong>","TabActionsLabel":"Actions","TabActionsDowntimeLabel":"Downtime","TabActionsEncounterLabel":"Encounter","TabActionsExplorationLabel":"Exploration","TabCharacterLabel":"Character","TabCraftingLabel":"Crafting","TabDescriptionLabel":"Description","TabDetailsLabel":"Details","TabEffectsLabel":"Effects","TabFeatsLabel":"Feats","TabInventoryLabel":"Inventory","TabManageTabsLabel":"Manage Tabs","TabPathfinderSociety":"Pathfinder Society","TabSkillsLabel":"Proficiencies","TabSpellbookLabel":"Spellcasting","TempHPTitle":"The amount of temporary hit points you have","TempHitPointsShortLabel":"Temp HP","TemplateLabel":"{size}-{unit} {shape}","TemporaryItemToolTip":"This item is temporary and will expire after a duration or during daily preparations. It has no value and cannot be sold.","Time":{"Duration":"Duration","Unit":{"Seconds":"Seconds","Rounds":"Rounds","Minutes":"Minutes","Hours":"Hours","Days":"Days","Weeks":"Weeks","Unlimited":"Unlimited","UntilEncounterEnds":"Until encounter ends"}},"ToggleEffectUnidentified":"Toggle Whether Effect Is Unidentified","TogglesLabel":"Toggles","ToggleSignatureSpellTitle":"Toggle Signature Spell","ToggleSpellVisibilityTitle":"Spell Preparation","ToggleSlotlessSpellLevelsTitle":"Toggle visibility of spell levels without slots","ToggleUnreadyStrikes":"Toggle unequipped weapons","ToggleWithName":"Toggle: {property}","Token":{"Appearance":"Appearance","Size":{"Label":"Size","Dimensions":"Dimensions","LinkToActorSize":{"Label":"Link to Actor Size","Hint":"Keep this token\'s dimensions consistent with its actor\'s size category"}}},"TotalTreasure":"Total Treasure","TotalCoinage":"Total Coinage","TotalWealth":"Total Wealth","TrainedSkillsLabel":"Trained Skills","Traits":"Traits","TraitAasimar":"Aasimar","TraitAberration":"Aberration","TraitAbjuration":"Abjuration","TraitAcid":"Acid","TraitAdditive1":"Additive 1","TraitAdditive2":"Additive 2","TraitAdditive3":"Additive 3","TraitAdjustment":"Adjustment","TraitAeon":"Aeon","TraitAesir":"Aesir","TraitAffixedToArmor":"Affixed to Armor","TraitAffixedToArmorOrAWeapon":"Affixed to Armor or a Weapon","TraitAffixedToMediumHeavyArmor":"Affixed to Medium or Heavy Armor","TraitAffixedToArmorOrTravelersClothing":"Affixed to Armor or Travelers Clothing","TraitAffixededToCrossbowOrFirearm":"Affixed to Crossbow or Firearm","TraitAffixededToFirearm":"Affixed to Firearm","TraitAffixededToFirearmWithAReloadOf1":"Affixed to a Firearm With a Reload of 1","TraitAffixededToFirearmWithTheKickbackTrait":"Affixed to a Firearm With the Kickback Trait","TraitAffixedToHeadgear":"Affixed to Headgear","TraitAffixedToWeapon":"Affixed to a Weapon","TraitAffixedToARangedWeapon":"Affixed to a Ranged Weapon","TraitAffixedToAShield":"Affixed to a Shield","TraitAffixededToATwoHandedFirearmOrCrossbow":"Affixed to a Two-Handed Firearm or Crossbow","TraitAftermath":"Aftermath","TraitAgathion":"Agathion","TraitAgile":"Agile","TraitAir":"Air","TraitAlchemical":"Alchemical","TraitAlchemist":"Alchemist","TraitAll":"All","TraitAmphibious":"Amphibious","TraitAmp":"Amp","TraitAnadi":"Anadi","TraitAndroid":"Android","TraitAngel":"Angel","TraitAnimal":"Animal","TraitAnugobu":"Anugobu","TraitApex":"Apex","TraitAphorite":"Aphorite","TraitAppliedToAWindPoweredVehicle":"Applied to a wind-powered vehicle","TraitAppliedToAnyItemOfLightOrNegligibleBulk":"Applied to any item of light or negligible Bulk","TraitAppliedToAnyVisibleArticleOfClothing":"Applied to any visible article of clothing","TraitAppliedToBeltCapeCloakOrScarf":"Applied to belt, cape, cloak, or scarf","TraitAppliedToBootsCapeCloakOrUmbrella":"Applied to boots, cape, cloak, or umbrella","TraitAppliedToDuelingCapeOrShield":"Applied to dueling cape or shield","TraitAppliedToBucklerShield":"Applied to a buckler or a shield","TraitAppliedToShield":"Applied to shield","TraitAquatic":"Aquatic","TraitArcane":"Arcane","TraitArchetype":"Archetype","TraitArchon":"Archon","TraitAreaDamage":"Area Damage","TraitArtifact":"Artifact","TraitAstral":"Astral","TraitAsura":"Asura","TraitAttached":"Attached","TraitAttachedToAThrownWeapon":"Attached to a Thrown Weapon","TraitAttachedToShield":"Attached to Shield","TraitAttachedToCrossbowOrFirearm":"Attached to Crossbow or Firearm","TraitAttachedToCrossbowOrFirearmFiringMechanism":"Attached to Crossbow or Firearm (Firing Mechanism)","TraitAttachedToCrossbowOrFirearmScope":"Attached to Crossbow or Firearm (Scope)","TraitAttachedToFirearm":"Attached To Firearm","TraitAttachedToFirearmFiringMechanism":"Attached To Firearm (Firing Mechanism)","TraitAttachedToFirearmScope":"Attached To Firearm (Scope)","TraitAttack":"Attack","TraitAuditory":"Auditory","TraitAutomaton":"Automaton","TraitAura":"Aura","TraitAxeVulnerability":"Axe Vulnerability","TraitAzarketi":"Azarketi","TraitAzata":"Azata","TraitBackstabber":"Backstabber","TraitBackswing":"Backswing","TraitBarbarian":"Barbarian","TraitBard":"Bard","TraitBeast":"Beast","TraitBeastkin":"Beastkin","TraitBleed":"Bleed","TraitBludgeoning":"Bludgeoning","TraitBoggard":"Boggard","TraitBomb":"Bomb","TraitBrutal":"Brutal","TraitBulwark":"Bulwark","TraitCaligni":"Caligni","TraitCantrip":"Cantrip","TraitCapacity3":"Capacity 3","TraitCapacity4":"Capacity 4","TraitCapacity5":"Capacity 5","TraitCatalyst":"Catalyst","TraitCatfolk":"Catfolk","TraitCelestial":"Celestial","TraitChampion":"Champion","TraitChangeling":"Changeling","TraitChaotic":"Chaotic","TraitCharauKa":"Charau-ka","TraitCharm":"Charm","TraitCircus":"Circus","TraitCleric":"Cleric","TraitClimbing":"Climbing","TraitClockwork":"Clockwork","TraitCobbled":"Cobbled","TraitCold":"Cold","TraitColdiron":"Cold Iron","TraitCombination":"Combination","TraitComfort":"Comfort","TraitCommon":"Common","TraitComplex":"Complex","TraitCompanion":"Companion","TraitComposition":"Composition","TraitConcealable":"Concealable","TraitConcentrate":"Concentrate","TraitConcussive":"Concussive","TraitConfusion":"Confusion","TraitConjuration":"Conjuration","TraitConrasu":"Conrasu","TraitConstruct":"Construct","TraitConsecration":"Consecration","TraitConsumable":"Consumable","TraitContact":"Contact","TraitContingency":"Contingency","TraitContract":"Contract","TraitCouatl":"Couatl","TraitCriticalFusion":"Critical Fusion","TraitCriticalHits":"Critical Hits","TraitCurse":"Curse","TraitCursed":"Cursed","TraitCursebound":"Cursebound","TraitDaemon":"Daemon","TraitDarkness":"Darkness","TraitDarvakka":"Darvakka","TraitDeadlyD10":"Deadly d10","TraitDeadlyD12":"Deadly d12","TraitDeadlyD6":"Deadly d6","TraitDeadlyD8":"Deadly d8","TraitDeadly2D8":"Deadly 2d8","TraitDeadly2D10":"Deadly 2d10","TraitDeadly2D12":"Deadly 2d12","TraitDeadly3D8":"Deadly 3d8","TraitDeadly3D10":"Deadly 3d10","TraitDeadly3D12":"Deadly 3d12","TraitDeadly4D8":"Deadly 4d8","TraitDeadly4D10":"Deadly 4d10","TraitDeadly4D12":"Deadly 4d12","TraitDeath":"Death","TraitDeathEffects":"Death Effects","TraitDedication":"Dedication","TraitDemon":"Demon","TraitDero":"Dero","TraitDescriptionAasimar":"A creature with this trait is a member of the aasimar ancestry.","TraitDescriptionAbjuration":"Effects and magic items with this trait are associated with the abjuration school of magic, typically involving protection or wards.","TraitDescriptionAcid":"Effects with this trait deal acid damage. Creatures with this trait have a magical connection to acid.","TraitDescriptionAdditive":"Feats with the additive trait allow you to spend actions to add special substances to bombs or elixirs. You can add only one additive to a single alchemical item, and attempting to add another spoils the item. You can typically use actions with the additive trait only when you\'re creating an infused alchemical item, and some can be used only with the Quick Alchemy action. The additive trait is always followed by a level, such as additive 2. An additive adds its level to the level of the alchemical item you\'re modifying; the result is the new level of the mixture. The mixture\'s item level must be no higher than your advanced alchemy level","TraitDescriptionAeon":"These monitors are the self-styled defenders of reality. Traditional aeons have dualistic natures and forms, and they hold a dichotomy of interests, though axiomites and inevitables do not. Aeons other than axiomites and inevitables communicate via a strange telepathic hodgepodge of sensory sending called envisioning.","TraitDescriptionAesir":"Aesir are often-bellicose monitors of the chaotic planes, honing their skill in battle and preparing for a final confrontation at the end of the multiverse.","TraitDescriptionAftermath":"This trait describes feats that represent special abilities gained after exposure to the weird and deadly.","TraitDescriptionAgathion":"This family of animal-featured celestials is native to the plane of Nirvana. Most agathions are neutral good, have darkvision, and have a weakness to evil damage.","TraitDescriptionAgile":"The multiple attack penalty you take with this weapon on the second attack on your turn is -4 instead of -5, and -8 instead of -10 on the third and subsequent attacks in the turn.","TraitDescriptionAir":"Effects with the air trait either manipulate or conjure air. Those that manipulate air have no effect in a vacuum or an area without air. Creatures with this trait consist primarily of air or have a magical connection to that element.","TraitDescriptionAlchemical":"Alchemical items are powered by reactions of alchemical reagents. Alchemical items aren\'t magical and don\'t radiate a magical aura.","TraitDescriptionAlchemist":"This indicates abilities from the alchemist class.","TraitDescriptionAmphibious":"An amphibious creature can breathe in water and in air, even outside of its preferred environment, usually indefinitely but at least for hours. These creatures often have a swim Speed. Their bludgeoning and slashing unarmed Strikes don\'t take the usual -2 penalty for being underwater.","TraitDescriptionAmp":"An amp is a special thoughtform that modifies the properties of your psi cantrips. Psi cantrips each have their own amp, and feats with the amp trait provide different amps you can apply to psi cantrips in place of their normal amps.","TraitDescriptionAnadi":"A reclusive people from Garund who resemble spiders and can assume human forms.","TraitDescriptionAndroid":"A synthetic humanoid ancestry created by artificial means. Most common in Numeria.","TraitDescriptionAphorite":"A type of planar scion descended from a being from Axis, the Plane of Law.","TraitDescriptionArcane":"This magic comes from the arcane tradition, which is built on logic and rationality. Anything with this trait is magical.","TraitDescriptionArchetype":"This feat belongs to an archetype.","TraitDescriptionAttached":"An attached weapon must be combined with another piece of gear to be used. The trait lists what type of item the weapon must be attached to. You must be wielding or wearing the item the weapon is attached to in order to attack with it. For example, shield spikes are attached to a shield, allowing you to attack with the spikes instead of a shield bash, but only if you\'re wielding the shield. An attached weapon is usually bolted onto or built into the item it\'s attached to, and typically an item can have only one weapon attached to it. An attached weapon can be affixed to an item with 10 minutes of work and a successful @Check[type:crafting|dc:10] check; this includes the time needed to remove the weapon from a previous item, if necessary. If an item is destroyed, its attached weapon can usually be salvaged.","TraitDescriptionAttack":"An ability with this trait involves an attack. For each attack you make beyond the first on your turn, you take a multiple attack penalty.","TraitDescriptionAuditory":"Auditory actions and effects rely on sound. An action with the auditory trait can be successfully performed only if the creature using the action can speak or otherwise produce the required sounds. A spell or effect with the auditory trait has its effect only if the target can hear it. This applies only to sound-based parts of the effect, as determined by the GM. This is different from a sonic effect, which still affects targets who can\'t hear it (such as deaf targets) as long as the effect itself makes sound.","TraitDescriptionAura":"An aura is an emanation that continually ebbs out from you, af ecting creatures within a certain radius. Aura can also refer to the magical signature of an item or a creature with a strong alignment.","TraitDescriptionAutomaton":"A creature with this trait is a member of the automaton ancestry.","TraitDescriptionAzarketi":"Amphibious humanoids who live among the seas of the Inner Sea region, said to have descended from the people of Azlant. Sometimes known as gillmen or Low Azlanti.","TraitDescriptionBackstabber":"When you hit a flat-footed creature, this weapon deals 1 precision damage in addition to its normal damage. The precision damage increases to 2 if the weapon is a +3 weapon.","TraitDescriptionBackswing":"You can use the momentum from a missed attack with this weapon to lead into your next attack. After missing with this weapon on your turn, you gain a +1 circumstance bonus to your next attack with this weapon before the end of your turn.","TraitDescriptionBarbarian":"This indicates abilities from the barbarian class.","TraitDescriptionBard":"This indicates abilities from the bard class.","TraitDescriptionBeastkin":"Humanoids that can partially or fully transform into animal forms.","TraitDescriptionBomb":"An alchemical bomb combines volatile alchemical components that explode when the bomb hits a creature or object. Most alchemical bombs deal damage, though some produce other effects.","TraitDescriptionBulwark":"The armor covers you so completely that it provides benefits against some damaging effects. On Reflex saves to avoid a damaging effect, such as a fireball, you add a +3 modifier instead of your Dexterity modifier.","TraitDescriptionBrutal":"A ranged attack with this trait uses its Strength modifier instead of Dexterity on the attack roll.","TraitDescriptionCantrip":"A spell you can cast at will that is automatically heightened to half your level rounded up.","TraitDescriptionCapacity":"Weapons that have the capacity trait typically have multiple barrels or chambers capable of containing a round of ammunition. Capacity is always accompanied by a number indicating the number of barrels or chambers. After a capacity weapon is fired, you can select the next loaded barrel or chamber as an Interact action that doesn\'t require a free hand. Each barrel or chamber can be reloaded after it\'s fired as a separate Interact action.","TraitDescriptionCatfolk":"A creature with this trait is a member of the catfolk ancestry.","TraitDescriptionChampion":"This indicates abilities from the champion class.","TraitDescriptionChangeling":"A creature with this trait is a member of the changeling ancestry.","TraitDescriptionChaotic":"Chaotic effects often manipulate energy from chaos-aligned Outer Planes and are anathema to lawful divine servants or divine servants of lawful deities. A creature with this trait is chaotic in alignment. An ability with this trait can be selected or used only by chaotic creatures.","TraitDescriptionCharm":"Abilities that magically influence attitudes.","TraitDescriptionClass":"Archetypes with the class trait fundamentally diverge from your class\'s specialties but still fit within the theme of your class. You can select a class archetype only if your class meets the criteria listed in the archetype\'s prerequisites. Class archetypes always alter or replace some of a class\'s static class features in addition to any new feats they offer. It might be possible to take a class archetype at 1st level if it alters or replaces some of the class\'s initial class features. The 1st-level ability is presented much like a class feature and includes the class archetype\'s prerequisites and rules on how it changes your class. If you select this ability, you must take that archetype\'s dedication feat at 2nd level, and you proceed normally afterward. You can never have more than one class archetype.","TraitDescriptionCleric":"This indicates abilities from the cleric class.","TraitDescriptionClockwork":"Clockworks are intricate, complex constructs that can be programmed to perform specific functions.","TraitDescriptionClimbing":"The hand wielding the weapon is available to Climb.","TraitDescriptionCobbled":"This firearm is cobbled together and likely to misfire. No matter how well you upkeep it, on a failed attack roll, the attack misses and you must roll a @Check[type:flat|dc:5]. If you fail this check, the weapon misfires.","TraitDescriptionCold":"Effects with this trait deal cold damage. Creatures with this trait have a connection to magical cold.","TraitDescriptionCombination":"This is a trait for weapons that combine the functionality of melee weapons and firearms in unique or unusual ways. A combination weapon has both a firearm form or usage and a melee weapon form or usage.","TraitDescriptionComfort":"The armor is so comfortable that you can rest normally while wearing it.","TraitDescriptionCommon":"Anything that doesn\'t list another rarity trait (uncommon, rare, or unique) automatically has the common trait. This rarity indicates that an ability, item, or spell is available to all players who meet the prerequisites for it. A creature of this rarity is generally known and can be summoned with the appropriate summon spell.","TraitDescriptionCompanion":"An item with this trait can be worn by an animal companion or similar creature. A companion can have up to two items invested.","TraitDescriptionComplex":"A hazard with this trait takes turns in an encounter.","TraitDescriptionComposition":"To cast a composition cantrip or focus spell, you usually use a type of Performance. If the spell includes a verbal component, you must use an auditory performance, and if it includes a somatic component, you must use a visual one. The spell gains all the traits of the performance you used. You can cast only one composition spell each turn, and you can have only one active at a time. If you cast a new composition spell, any ongoing effects from your previous composition spell end immediately.","TraitDescriptionConcealable":"This weapon is designed to be inconspicuous or easily concealed. You gain a +2 circumstance bonus to Stealth checks and DCs to hide or conceal a weapon with this trait.","TraitDescriptionConcentrate":"An action with this trait requires a degree of mental concentration and discipline.","TraitDescriptionConcussive":"These weapons smash as much as puncture. When determining a creature\'s resistance or immunity to damage from this weapon, use the weaker of the target\'s resistance or immunity to piercing or to bludgeoning. For instance, if the creature were immune to piercing and had no resistance or immunity to bludgeoning damage, it would take full damage from a concussive weapon. Resistance or immunity to all physical damage, or all damage, applies as normal.","TraitDescriptionConjuration":"Effects and magic items with this trait are associated with the conjuration school of magic, typically involving summoning, creation, teleportation, or moving things from place to place.","TraitDescriptionConrasu":"A people that are made of cosmic force given consciousness and housed within unique exoskeletons.","TraitDescriptionConsecration":"A consecration spell enhances an area for an extended period of time. A given area can have only a single consecration effect at a time. The new effect attempts to counteract any existing one in areas of overlap.ation","TraitDescriptionConsumable":"An item with this trait can be used only once. Unless stated otherwise, it\'s destroyed after activation. Consumable items include alchemical items and magical consumables such as scrolls and talismans. When a character creates consumable items, they can make them in batches of four.","TraitDescriptionContingency":"Spells with this trait grant you an action during the spell\'s effects, typically a reaction with a special trigger. They typically have a long duration, such as 24 hours. You can have only one spell with the contingency trait, or one contingency spell, active at a time. If you cast another spell with the contingency trait or contingency, the newer casting supersedes the older.","TraitDescriptionConstruct":"A construct is an artificial creature empowered by a force other than necromancy. Constructs are often mindless; they are immune to bleed damage, death effects, disease, healing, necromancy, nonlethal attacks, poison, and the doomed, drained, fatigued, paralyzed, sickened, and unconscious conditions; and they may have Hardness based on the materials used to construct their bodies. Constructs are not living creatures, nor are they undead. When reduced to 0 Hit Points, a construct creature is destroyed.","TraitDescriptionContact":"This poison is delivered by contact with the skin.","TraitDescriptionContract":"A contract is a type of item that magically establishes an agreement between multiple parties and typically grants magical benefits.","TraitDescriptionCriticalFusion":"Critical fusion is a new trait for combination weapons that grants you two additional options for the critical specialization effect when using the combination weapon\'s melee version to make a melee attack while the firearm is loaded. If you choose to use one of them, they replace the melee usage\'s normal critical specialization effect. First, you can discharge the firearm to create a loud bang and concussion, using the critical specialization effect for firearms instead of the melee weapon group\'s critical specialization effect. Second, you can choose to discharge the firearm to increase the critical hit\'s momentum or shoot the foe as you attack them in melee, dealing 2 additional damage per weapon damage die. Both of these options discharge the firearm, which typically means you have to reload it before firing it again.","TraitDescriptionCurse":"A curse is an effect that places some long-term affliction on a creature. Curses are always magical and are typically the result of a spell or trap. Effects with this trait can be removed only by effects that specifically target curses.","TraitDescriptionCursed":"An item with this trait is cursed to cause trouble for its owner. A curse isn\'t detected when the item is identified, though a critical success reveals both the presence and exact nature of the curse. Cursed items can\'t be discarded once they\'ve been triggered or invested the first time. The item can be removed only if the curse is removed.","TraitDescriptionCursebound":"Spells with this trait increase the severity of your oracular curse when cast. Usually, only revelation spells have this trait. You can\'t cast a cursebound spell if you don\'t have an oracular curse.","TraitDescriptionDarkness":"Darkness effects extinguish non-magical light in the area, and can counteract less powerful magical light. You must usually target light magic with your darkness magic directly to counteract the light, but some darkness spells automatically attempt to counteract light.","TraitDescriptionDarvakka":"Entropic undead creatures twisted by the Shadow Plane and Negative Energy Plane.","TraitDescriptionDeadly":"On a critical hit, the weapon adds a weapon damage die of the listed size. Roll this after doubling the weapon\'s damage. This increases to two dice if the weapon has a greater striking rune and three dice if the weapon has a major striking rune. For instance, a rapier with a greater striking rune deals 2d8 extra piercing damage on a critical hit. An ability that changes the size of the weapon\'s normal damage dice doesn\'t change the size of its deadly die.","TraitDescriptionDeath":"An effect with the death trait kills you immediately if it reduces you to 0 HP. Some death effects can bring you closer to death or slay you outright without reducing you to 0 HP.","TraitDescriptionDedication":"You must select a feat with this trait to apply an archetype to your character.","TraitDescriptionDetection":"Effects with this trait attempt to determine the presence or location of a person, object, or aura.","TraitDescriptionDeviant":"This trait describes strange supernatural or paranormal abilities.","TraitDescriptionDhampir":"A creature with this trait is a member of the dhampir ancestry. These humanoids are the mortal offspring of vampires and members of other ancestries.","TraitDescriptionDisarm":"You can use this weapon to Disarm with the Athletics skill even if you don\'t have a free hand. This uses the weapon\'s reach (if different from your own) and adds the weapon\'s item bonus to attack rolls (if any) as an item bonus to the Athletics check. If you critically fail a check to Disarm using the weapon, you can drop the weapon to take the effects of a failure instead of a critical failure. On a critical success, you still need a free hand if you want to take the item.","TraitDescriptionDisease":"An effect with this trait applies one or more diseases. A disease is typically an affliction.","TraitDescriptionDivination":"The divination school of magic typically involves obtaining or transferring information, or predicting events.","TraitDescriptionDivine":"This magic comes from the divine tradition, drawing power from deities or similar sources. Anything with this trait is magical.","TraitDescriptionDoubleBarrel":"This weapon has two barrels that are each loaded separately. You can fire both barrels of a double barrel weapon in a single Strike to increase the weapon damage die by one step. If the weapon has the fatal trait, this increases the fatal die by one step.","TraitDescriptionDowntime":"An activity with this trait takes a day or more, and can be used only during downtime.","TraitDescriptionDrug":"An item with this trait is a drug, a poison that conveys short-term benefits in addition to harmful side effects and long-term consequences. Each time a creature uses a given drug it must also attempt a saving throw against addiction to that drug.","TraitDescriptionDruid":"This indicates abilities from the druid class.","TraitDescriptionDuskwalker":"A creature with this trait has the duskwalker versatile heritage. Duskwalkers are planar scions infused with the supernatural energy of psychopomps. An ability with this trait can be used or selected only by duskwalkers.","TraitDescriptionDwarf":"A creature with this trait is a member of the dwarf ancestry. Dwarves are stout folk who often live underground and typically have darkvision. An ability with this trait can be used or selected only by dwarves. An item with this trait is created and used by dwarves.","TraitDescriptionEarth":"Effects with the earth trait either manipulate or conjure earth. Those that manipulate earth have no effect in an area without earth. Creatures with this trait consist primarily of earth or have a magical connection to that element.","TraitDescriptionElectricity":"Effects with this trait deal electricity damage. A creature with this trait has a magical connection to electricity.","TraitDescriptionElf":"A creature with this trait is a member of the elf ancestry. Elves are mysterious people with rich traditions of magic and scholarship who typically have low-light vision. An ability with this trait can be used or selected only by elves. A weapon with this trait is created and used by elves.","TraitDescriptionEmotion":"This effect alters a creature\'s emotions. Effects with this trait always have the mental trait as well. Creatures with special training or that have mechanical or artificial intelligence are immune to emotion effects.","TraitDescriptionEnchantment":"Effects and magic items with this trait are associated with the enchantment school of magic, typically involving mind control, emotion alteration, and other mental effects.","TraitDescriptionEnvironment":"A hazard with this trait is something dangerous that\'s part of the natural world, such as quicksand or harmful mold.","TraitDescriptionEsoterica":"The esoterica trait is present in many thaumaturge feats and class features that incorporate the various talismans, supernatural trinkets, and other objects you carry with you. Abilities that have the esoterica trait require you to be in possession of your esoterica to use them. Normally, you\'re assumed to always have your esoterica with you, but in some rare circumstances, you might either not have them on hand or have your gear stripped from you.","TraitDescriptionEvil":"Evil effects often manipulate energy from evil-aligned Outer Planes and are antithetical to good divine servants or divine servants of good deities. A creature with this trait is evil in alignment. An ability with this trait can be selected or used only by evil creatures.","TraitDescriptionEvocation":"Effects and magic items with this trait are associated with the evocation school of magic, typically involving energy and elemental forces.","TraitDescriptionExploration":"An activity with this trait takes more than a turn to use, and can usually be used only during exploration mode.","TraitDescriptionExtradimensional":"This effect or item creates an extradimensional space. An extradimensional effect placed inside another extradimensional space ceases to function until it is removed.","TraitDescriptionFatalAim":"It\'s possible to hold the stock of this weapon under one arm so you can fire it with a single hand as long as the other hand isn\'t holding a weapon, shield, or anything else you would need to move and position, to ensure the weapon doesn\'t slip out from under your arm. However, if you use both hands, the weapon can make fatal attacks. When you wield the weapon in two hands, it gains the fatal trait with the listed damage die. Holding the weapon underarm stably enough to fire is significantly more complicated than just releasing one hand from the weapon, so to switch between the two grips, you must do so with an Interact action rather than Releasing or as part of reloading.","TraitDescriptionFatal":"The fatal trait includes a die size. On a critical hit, the weapon\'s damage die increases to that die size instead of the normal die size, and the weapon adds one additional damage die of the listed size.","TraitDescriptionFear":"Fear effects evoke the emotion of fear. Effects with this trait always have the mental and emotion traits as well.","TraitDescriptionFetchling":"A creature with this trait is a member of the fetchling ancestry. Fetchlings were once human, but generations of life on the Shadow Plane have transformed them.","TraitDescriptionFighter":"This indicates abilities from the fighter class.","TraitDescriptionFinesse":"You can use your Dexterity modifier instead of your Strength modifier on attack rolls using this melee weapon. You still use your Strength modifier when calculating damage.","TraitDescriptionFinisher":" Finishers are spectacular finishing moves. You can use a finisher only if you have panache, and you lose your panache immediately after performing a finisher. Once you use a finisher, you can\'t use actions that have the attack trait for the rest of your turn. Some finisher actions also grant an effect on a failure. If your finisher succeeds, you can choose to apply the failure effect instead.","TraitDescriptionFinite":"Planes with this trait consist of a limited amount of space.","TraitDescriptionFire":"Effects with the fire trait deal fire damage or either conjure or manipulate fire. Those that manipulate fire have no effect in an area without fire. Creatures with this trait consist primarily of fire or have a magical connection to that element.","TraitDescriptionFleshwarp":"A humanoid transformed so completely by outside forces that they are now a unique ancestry.","TraitDescriptionFlexible":"The armor is flexible enough that it doesn\'t hinder most actions. You don\'t apply its check penalty to Acrobatics or Athletics checks.","TraitDescriptionFlourish":"Flourish actions are actions that require too much exertion to perform a large number in a row. You can use only 1 action with the flourish trait per turn.","TraitDescriptionFocused":"An item with this trait can give you an additional Focus Point. This focus point is separate from your focus pool and doesn\'t count toward the cap on your focus pool. You can gain this benefit only if you have a focus pool, and there might be restrictions on how the point can be used. You can\'t gain more than 1 Focus Point per day from focused items.","TraitDescriptionForce":"Effects with this trait deal force damage or create objects made of pure magical force.","TraitDescriptionForceful":"This weapon becomes more dangerous as you build momentum. When you attack with it more than once on your turn, the second attack gains a circumstance bonus to damage equal to the number of weapon damage dice, and each subsequent attack gains a circumstance bonus to damage equal to double the number of weapon damage dice.","TraitDescriptionFortune":"A fortune effect beneficially alters how you roll your dice. You can never have more than one fortune effect alter a single roll. If multiple fortune effects would apply, you have to pick which to use. If a fortune effect and a misfortune effect would apply to the same roll, the two cancel each other out, and you roll normally.","TraitDescriptionFreeHand":"This weapon doesn\'t take up your hand, usually because it is built into your armor. A free-hand weapon can\'t be Disarmed. You can use the hand covered by your free-hand weapon to wield other items, perform manipulate actions, and so on. You can\'t attack with a free-hand weapon if you\'re wielding anything in that hand or otherwise using that hand. When you\'re not wielding anything and not otherwise using the hand, you can use abilities that require you to have a hand free as well as those that require you to be wielding a weapon in that hand. Each of your hands can have only one free-hand weapon on it.","TraitDescriptionGanzi":"A planar scion descended from a chaotic being of the Maelstrom, such as a protean.","TraitDescriptionGadget":"Gadgets are consumable technological inventions with innovative uses.","TraitDescriptionGenie":"The diverse families of genies hold positions of prominence on the Elemental Planes. They have powerful magical abilities.","TraitDescriptionGeniekin":"An umbrella term for planar scions descended from beings from the Elemental Planes.","TraitDescriptionGeneral":"A type of feat that any character can select, regardless of ancestry and class, as long as they meet the prerequisites. You can select a feat with this trait when your class grants a general feat.","TraitDescriptionGhoran":"An intelligent plant ancestry that maintain long lives by rejuvenating themselves from seeds.","TraitDescriptionGhul":"Greedy and gluttonous undead originally formed from genie.","TraitDescriptionGnoll":"Gnolls are humanoids that resemble hyenas.","TraitDescriptionGnome":"A creature with this trait is a member of the gnome ancestry. Gnomes are small people skilled at magic who seek out new experiences and usually have low-light vision. An ability with this trait can be used or selected only by gnomes. A weapon with this trait is created and used by gnomes.","TraitDescriptionGoblin":"A creature with this trait can come from multiple tribes of creatures, including goblins, hobgoblins, and bugbears. Goblins tend to have darkvision. An ability with this trait can be used or chosen only by goblins. A weapon with this trait is created and used by goblins.","TraitDescriptionGoloma":"Insular humanoids that bear countless eyes.","TraitDescriptionGood":"Good effects often manipulate energy from good-aligned Outer Planes and are antithetical to evil divine servants or divine servants of evil deities. A creature with this trait is good in alignment. An ability with this trait can be selected or used only by good creatures.","TraitDescriptionGrapple":"You can use this weapon to Grapple with the Athletics skill even if you don\'t have a free hand. This uses the weapon\'s reach (if different from your own) and adds the weapon\'s item bonus to attack rolls as an item bonus to the Athletics check. If you critically fail a check to Grapple using the weapon, you can drop the weapon to take the effects of a failure instead of a critical failure.","TraitDescriptionGrimoire":"Spellbooks are useful tools for any magic user to write down incantations and runes of power, but where most spellbooks are nothing more than ink on parchment, grimoires have absorbed the magic of the spells within—magic that knowledgeable spellcasters can use to augment their spells.","TraitDescriptionGrippli":"Gripplis are a family of frog-like humanoids","TraitDescriptionGunslinger":"This indicates abilities from the gunslinger class.","TraitDescriptionHalfElf":"A creature with this trait is part human and part elf. An ability with this trait can be used or selected only by half-elves.","TraitDescriptionHalfOrc":"A creature with this trait is part human and part orc. An ability with this trait can be used or selected only by half-orcs.","TraitDescriptionHalfling":"A creature with this trait is a member of the halfling ancestry. These small people are friendly wanderers considered to be lucky. An ability with this trait can be used or selected only by halflings. A weapon with this trait is created and used by halflings.","TraitDescriptionHampering":"A weapon with the hampering trait includes a disruptive limb or flange. You can use an Interact action to thrash the weapon in a square within the weapon\'s reach. That square becomes difficult terrain until you attack with the weapon, move, would otherwise stop thrashing it, or at the beginning of your next turn.","TraitDescriptionHaunt":"A hazard with this trait is a spiritual echo, often of someone with a tragic death. Putting a haunt to rest often involves resolving the haunt\'s unfinished business. A haunt that hasn\'t been properly put to rest always returns after a time.","TraitDescriptionHealing":"A healing effect restores a creature\'s body, typically by restoring Hit Points, but sometimes by removing diseases or other debilitating effects.","TraitDescriptionHex":"A hex is a type of focus spell a witch can cast.","TraitDescriptionHobgolin":"Hobgoblins are a sturdy, clever people with a propensity for militaristic order.","TraitDescriptionHuman":"A creature with this trait is a member of the human ancestry. Humans are a diverse array of people known for their adaptability. An ability with this trait can be used or selected only by humans.","TraitDescriptionHumanoid":"Humanoid creatures reason and act much like humans. They typically stand upright and have two arms and two legs.","TraitDescriptionIllusion":"Effects and magic items with this trait are associated with the illusion school of magic, typically involving false sensory stimuli.","TraitDescriptionIfrit":"A type of geniekin descended from a being from the Plane of Fire.","TraitDescriptionIncarnate":"A spell with the incarnate trait is similar in theme to spells that summon creatures, but it doesn\'t conjure a minion with the summoned trait. Instead, when summoned, the incarnate creature takes its Arrive action when you finish Casting the Spell. At the end of your next turn, the incarnate creature can either Step, Stride, or take the action for another movement type it has (such as Climb or Burrow), and then takes its Depart action. The spell then ends. The names of specific Arrive and Depart actions are listed in italics after the word “Arrive” or “Depart” respectively, along with any traits. A creature summoned by an incarnate spell acts in your interests, directs its effects away from you and your allies as much as possible, and might listen to your requests, but ultimately makes its own decisions. If the spell indicates that the incarnate makes a decision, the GM determines what the incarnate would do. It might even become more inclined to do precisely as you wish over multiple summonings. The incarnate is not fully a creature. It can\'t take any other actions, nor can it be targeted or harmed by Strikes, spells, or other effects unless they would be able to target or end a spell effect (such as dispel magic). It has a size for the purposes of determining its placement for effects, but it doesn\'t block movement. If applicable, its effects use your spell DCs and spell attack roll modifier.","TraitDescriptionIncapacitation":"An ability with this trait can take a character completely out of the fight or even kill them, and it\'s harder to use on a more powerful character. If a spell has the incapacitation trait, any creature of more than twice the spell\'s level treats the result of their check to prevent being incapacitated by the spell as one degree of success better, or the result of any check the spellcaster made to incapacitate them as one degree of success worse. If any other effect has the incapacitation trait, a creature of higher level than the item, creature, or hazard generating the effect gains the same benefits.","TraitDescriptionIncapacitationShort":"If the target level is higher than the ability level (or 2x spell level) treat the result as one degree better.","TraitDescriptionIncorporeal":"An incorporeal creature or object has no physical form. It can pass through solid objects, including walls. When inside an object, an incorporeal creature can\'t perceive, attack, or interact with anything outside the object, and if it starts its turn in an object, it is slowed 1. Corporeal creatures can pass through an incorporeal creature, but they can\'t end their movement in its space. An incorporeal creature can\'t attempt Strength-based checks against physical creatures or objects-only against incorporeal ones-unless those objects have the ghost touch property rune. Likewise, a corporeal creature can\'t attempt Strength-based checks against incorporeal creatures or objects. Incorporeal creatures usually have immunity to effects or conditions that require a physical body, like disease, poison, and precision damage. They usually have resistance against all damage (except force damage and damage from Strikes with the ghost touch property rune), with double the resistance against non-magical damage.","TraitDescriptionInfused":"You created an alchemical item with the infused trait using your infused reagents, and it has a limited time before it becomes inert. Any nonpermanent effects from your infused alchemical items, with the exception of afflictions such as slow-acting poisons, end when you make your daily preparations again.","TraitDescriptionIngested":"This poison is delivered when drunk or eaten.","TraitDescriptionInhaled":"This poison is delivered when breathed in.","TraitDescriptionInjection":"This weapon can be filled with an injury poison. Immediately after a successful attack with the weapon, you can inject the target with the loaded poison with a single Interact action. Refilling the weapon with a new substance requires three Interact actions, and uses both hands.","TraitDescriptionInjury":"This poison is delivered by damaging the recipient.","TraitDescriptionIntelligent":"An item with this trait is intelligent and has its own will and personality, as well as several statistics that most items don\'t have. Intelligent items can\'t be crafted by normal means, and they are always rare or unique.","TraitDescriptionInventor":"This indicates abilities from the inventor class.","TraitDescriptionInvested":"A character can wear only 10 magical items that have the invested trait. None of the magical effects of the item apply if the character hasn\'t invested it, nor can it be activated, though the character still gains any normal benefits from wearing the physical item (like a hat keeping rain off their head).","TraitDescriptionInvestigator":"This indicates abilities from the investigator class.","TraitDescriptionJoustingD6":"The weapon is suited for mounted combat with a harness or similar means. When mounted, if you moved at least 10 feet on the action before your attack, add a circumstance bonus to damage for that attack equal to the number of damage dice for the weapon. In addition, while mounted, you can wield the weapon in one hand, changing the damage die to the listed value.","TraitDescriptionKashrishi":"A stout ancestry bearing distinctive crystal horns and inherent psychic abilities.","TraitDescriptionKobold":"A creature with this trait is a member of the kobold ancestry.","TraitDescriptionKickback":"A kickback weapon is extra powerful and difficult to use due to its high recoil. A kickback weapon deals 1 additional damage with all attacks. Firing a kickback weapon gives a -2 circumstance penalty to the attack roll, but characters with 14 or more Strength ignore the penalty. Attaching a kickback weapon to a deployed bipod, tripod, or other stabilizer can lower or negate this penalty.","TraitDescriptionKitsune":"Shapeshifting humanoids whose true forms resemble foxes.","TraitDescriptionLawful":"Lawful effects often manipulate energy from law-aligned Outer Planes and are antithetical to chaotic divine servants or divine servants of chaotic deities. A creature with this trait is lawful in alignment. An ability with this trait can be selected or used by lawful creatures only.","TraitDescriptionLeshy":"A creature with this trait is a member of the leshy ancestry.","TraitDescriptionLight":"Light effects overcome non-magical darkness in the area, and can counteract magical darkness. You must usually target darkness magic with your light magic directly to counteract the darkness, but some light spells automatically attempt to counteract darkness.","TraitDescriptionLinguistic":"An effect with this trait depends on language comprehension. A linguistic effect that targets a creature works only if the target understands the language you are using.","TraitDescriptionLitany":"Litanies are special devotion spells, typically used by champions and requiring a single action, that usually give temporary immunity to further litanies.","TraitDescriptionLizardfolk":"These reptilian humanoids, also known as iruxi, are extremely adaptable and patient.","TraitDescriptionMagical":"Something with the magical trait is imbued with magical energies not tied to a specific tradition of magic. A magical item radiates a magic aura infused with its dominant school of magic. Some items or effects are closely tied to a particular tradition of magic. In these cases, the item has the arcane, divine, occult, or primal trait instead of the magical trait. Any of these traits indicate that the item is magical.","TraitDescriptionMagus":"This indicates abilities from the magus class.","TraitDescriptionManipulate":"You must physically manipulate an item or make gestures to use an action with this trait. Creatures without a suitable appendage can\'t perform actions with this trait. Manipulate actions often trigger reactions.","TraitDescriptionMechanical":"A hazard with this trait is a constructed physical object.","TraitDescriptionMental":"A mental effect can alter the target\'s mind. It has no effect on an object or a mindless creature.","TraitDescriptionMetal":"Effects with the metal trait either manipulate or conjure metal. Those that manipulate metal have no effect in an area without metal. Creatures with this trait consist primarily of metal or have a magical connection to that element.","TraitDescriptionMetamagic":"Actions with the metamagic trait, usually from metamagic feats, tweak the properties of your spells. You must use a metamagic action directly before Casting the Spell you want to alter. If you use any action (including free actions and reactions) other than Cast a Spell directly after, you waste the benefits of the metamagic action. Any additional effects added by a metamagic action are part of the spell\'s effect, not of the metamagic action itself.","TraitDescriptionMindless":"A mindless creature has either programmed or rudimentary mental attributes. Most, if not all, of their mental ability modifiers are -5. They are immune to all mental effects.","TraitDescriptionMindshift":"An action with this trait can always be altered to use the raw power of your mind. When you take this action, you can choose to replace any damage it deals with mental damage, give it the mental trait, and replace any save it requires with a Will save. The action loses any traits matching damage types it no longer deals.","TraitDescriptionMinion":"Minions are creatures that directly serve another creature. A creature with this trait can use only 2 actions per turn, doesn\'t have reactions, and can\'t act when it\'s not your turn. Your minion acts on your turn in combat, once per turn, when you spend an action to issue it commands. For an animal companion, you Command an Animal; for a minion that\'s a spell or magic item effect, like a summoned minion, you Sustain a Spell or Sustain an Activation; if not otherwise specified, you issue a verbal command as a single action with the auditory and concentrate traits. If given no commands, minions use no actions except to defend themselves or to escape obvious harm. If left unattended for long enough, typically 1 minute, mindless minions usually don\'t act, animals follow their instincts, and sapient minions act how they please. A minion can\'t control other creatures.","TraitDescriptionMisfortune":"A misfortune effect detrimentally alters how you roll your dice. You can never have more than one misfortune effect alter a single roll. If multiple misfortune effects would apply, the GM decides which is worse and applies it. If a fortune effect and a misfortune effect would apply to the same roll, the two cancel each other out, and you roll normally.","TraitDescriptionModification":"A feat with this trait alters the construction of your innovation. If you have the reconfigure class feature, you can retrain such a feat more easily.","TraitDescriptionModular":"The weapon has multiple configurations that you can switch between using an Interact action. Typically, switching between configurations of a modular weapon allows it to deal different types of damage (listed in the trait, such as “modular B, P, or S”), though it\'s possible for a modular weapon\'s description to list more complicated configurations.","TraitDescriptionMonk":"Abilities with this trait are from the monk class. A weapon with this trait is primarily used by monks.","TraitDescriptionMonkWeapon":"Many monks learn to use these weapons.","TraitDescriptionMorph":"Effects that slightly alter a creature\'s form have the morph trait. Any Strikes specifically granted by a morph effect are magical. You can be affected by multiple morph spells at once, but if you morph the same body part more than once, the second morph effect attempts to counteract the first (in the same manner as two polymorph effects, described in that trait). Your morph effects might also end if you are polymorphed and the polymorph effect invalidates or overrides your morph effect. The GM determines which morph effects can be used together and which can\'t.","TraitDescriptionMounted":"Mounted siege weapons take up a certain size and space, and typically have statistics to allow them to be attacked. They\'re used for large-scale warfare.","TraitDescriptionMove":"An action with this trait involves moving from one space to another.","TraitDescriptionMulticlass":"Archetypes with the multiclass trait represent diversifying your training into another class\'s specialties. You can\'t select a multiclass archetype\'s dedication feat if you are a member of the class of the same name.","TraitDescriptionNagaji":"A traditionalist ancestry with reptilian features and serpentine heads.","TraitDescriptionNecromancy":"Effects and magic items with this trait are associated with the necromancy school of magic, typically involving forces of life and death.","TraitDescriptionNegative":"Effects with this trait heal undead creatures with negative energy, deal negative damage to living creatures, or manipulate negative energy.","TraitDescriptionNoisy":"This armor is loud and likely to alert others to your presence when you\'re using the Avoid Notice exploration activity.","TraitDescriptionNone":"This trait has no description.","TraitDescriptionNonlethal":"Attacks with this weapon are nonlethal, and are used to knock creatures unconscious instead of kill them. You can use a nonlethal weapon to make a lethal attack with a -2 circumstance penalty.","TraitDescriptionOath":"Oaths add an additional tenet to your code. You can usually have only one feat with this trait.","TraitDescriptionOccult":"This magic comes from the occult tradition, calling upon bizarre and ephemeral mysteries. Anything with this trait is magical.","TraitDescriptionOlfactory":"An olfactory effect can affect only creatures that can smell it. This applies only to olfactory parts of the effect, as determined by the GM.","TraitDescriptionOpen":"These maneuvers work only as the first salvo on your turn. You can use an open only if you haven\'t used an action with the attack or open trait yet this turn.","TraitDescriptionOracle":"This indicates abilities from the oracle class.","TraitDescriptionOread":"A type of geniekin descended from a being from the Plane of Earth.","TraitDescriptionOrc":"A creature with this trait is a member of the orc ancestry. A weapon with this trait is a weapon which orcs craft and use.","TraitDescriptionParry":"This weapon can be used defensively to block attacks. While wielding this weapon, if your proficiency with it is trained or better, you can spend an Interact action to position your weapon defensively, gaining a +1 circumstance bonus to AC until the start of your next turn.","TraitDescriptionPeachwood":"Peachwood weapons have a particularly auburn tinge to them when under direct sunlight. Peachwood is treated as darkwood for any undead creatures\' resistances or weaknesses related to darkwood (allowing a peachwood weapon to bypass a jiang-shi\'s resistance, for example). In addition, peachwood weapons bypass a small portion of the resistances of any undead creature. Strikes with a peachwood weapon treat an undead\'s resistances against physical damage as 2 lower for standard-grade peachwood, and 4 lower for high-grade.","TraitDescriptionPlant":"Vegetable creatures have the plant trait. They are distinct from normal plants. Magical effects with this trait manipulate or conjure plants or plant matter in some way. Those that manipulate plants have no effect in an area with no plants.","TraitDescriptionPoison":"An effect with this trait delivers a poison or deals poison damage. An item with this trait is poisonous and might cause an affliction.","TraitDescriptionPolymorph":"These effects transform the target into a new form. A target can\'t be under the effect of more than one polymorph effect at a time. If it comes under the effect of a second polymorph effect, the second polymorph effect attempts to counteract the first. If it succeeds, it takes effect, and if it fails, the spell has no effect on that target. Any Strikes specifically granted by a polymorph effect are magical. Unless otherwise stated, polymorph spells don\'t allow the target to take on the appearance of a specific individual creature, but rather just a generic creature of a general type or ancestry. If you take on a battle form with a polymorph spell, the special statistics can be adjusted only by circumstance bonuses, status bonuses, and penalties. Unless otherwise noted, the battle form prevents you from casting spells, speaking, and using most manipulate actions that require hands. (If there\'s doubt about whether you can use an action, the GM decides.) Your gear is absorbed into you; the constant abilities of your gear still function, but you can\'t activate any items.","TraitDescriptionPortable":"Portable siege weapons, such as battering rams, can be more easily carried and have a role in both warfare and smaller conflicts or exploration.","TraitDescriptionPoppet":"A creature with this trait is a member of the poppet ancestry.","TraitDescriptionPositive":"Effects with this trait heal living creatures with positive energy, deal positive energy damage to undead, or manipulate positive energy.","TraitDescriptionPossession":"Effects with this trait allow a creature to project its mind and spirit into a target. A creature immune to mental effects can\'t use a possession effect. While possessing a target, a possessor\'s true body is unconscious (and can\'t wake up normally), unless the possession effect allows the creature to physically enter the target. Whenever the target takes damage, the possessor takes half that amount of damage as mental damage. A possessor loses the benefits of any of its active spells or abilities that affect its physical body, though it gains the benefits of the target\'s active spells and abilities that affect their body. A possessor can use any of the target\'s abilities that are purely physical, and it can\'t use any of its own abilities except spells and purely mental abilities. The GM decides whether an ability is purely physical or purely mental. A possessor uses the target\'s attack modifier, AC, Fortitude save, Reflex save, Perception, and physical skills, and its own Will save, mental skills, spell attack roll, and spell DC; benefits of invested items apply where relevant (the possessor\'s invested items apply when using its own values, and the target\'s invested items apply when using the target\'s values). A possessor gains no benefit from casting spells that normally affect only the caster, since it isn\'t in its own body. The possessor must use its own actions to make the possessed creature act. If a possessor reaches 0 Hit Points through any combination of damage to its true body and mental damage from the possession, it is knocked out as normal and the possession immediately ends. If the target reaches 0 Hit Points first, the possessor can either fall unconscious with the body and continue the possession or end the effect as a free action and return to its body. If the target dies, the possession ends immediately and the possessor is stunned for 1 minute.","TraitDescriptionPrecious":"Valuable materials with special properties have the precious trait. They can be substituted for base materials when you Craft items.","TraitDescriptionPrediction":"Effects with this trait determine what is likely to happen in the near future. Most predictions are divinations.","TraitDescriptionPress":"Actions with this trait allow you to follow up earlier attacks. An action with the press trait can be used only if you are currently affected by a multiple attack penalty. You can\'t use a press action when it\'s not your turn, even if you use the Ready activity. Some actions with the press trait also grant an effect on a failure. The effects that are added on a failure don\'t apply on a critical failure. If your press action succeeds, you can choose to apply the failure effect instead. (For example, you may wish to do this when an attack deals no damage due to resistance.)","TraitDescriptionPrimal":"This magic comes from the primal tradition, connecting to the natural world and instinct. Anything with this trait is magical.","TraitDescriptionPropulsive":"You add half your Strength modifier (if positive) to damage rolls with a propulsive ranged weapon. If you have a negative Strength modifier, you add your full Strength modifier instead.","TraitDescriptionPsyche":"Your psyche must be unleashed to use abilities that have the psyche trait, and they end automatically when your unleashed psyche subsides.","TraitDescriptionPsychic":"This indicates abilities from the psychic class.","TraitDescriptionRage":"You must be raging to use abilities with the rage trait, and they end automatically when you stop raging.","TraitDescriptionRange":"These attacks will either list a finite range or a range increment, which follows the normal rules for range increments.","TraitDescriptionRangedTrip":"This weapon can be used to Trip with the Athletics skill at a distance up to the weapon\'s first range increment. The skill check takes a -2 circumstance penalty. You can add the weapon\'s item bonus to attack rolls as a bonus to the check. As with using a melee weapon to trip, a ranged trip doesn\'t deal any damage when used to Trip.","TraitDescriptionRanger":"This indicates abilities from the ranger class.","TraitDescriptionRare":"This rarity indicates that a rules element is very difficult to find in the game world. A rare feat, spell, item or the like is available to players only if the GM decides to include it in the game, typically through discovery during play. Creatures with this trait are rare. They typically can\'t be summoned. The DC of Recall Knowledge checks related to these creatures is increased by 5.","TraitDescriptionRatfolk":"A creature with this trait is a member of the ratfolk ancestry.","TraitDescriptionReach":"Natural attacks with this trait can be used to attack creatures up to the listed distance away instead of only adjacent creatures. Weapons with this trait are long and can be used to attack creatures up to 10 feet away instead of only adjacent creatures. For creatures that already have reach with the limb or limbs that wield the weapon, the weapon increases their reach by 5 feet.","TraitDescriptionReckless":"Actions with the reckless trait run the risk of the pilot losing control of a vehicle. When performing a reckless action, the pilot must first attempt an appropriate piloting check to keep control of the vehicle.","TraitDescriptionReflection":"A creature with this trait has the reflection versatile heritage. Reflections are beings who are copies of living people, whether through cloning, planar duplication, or another mechanism. An ability with this trait can be used or selected only by reflections.","TraitDescriptionReload":"While all weapons need some amount of time to get into position, many ranged weapons also need to be loaded and reloaded. This entry indicates how many Interact actions it takes to reload such weapons. This can be 0 if drawing ammunition and firing the weapon are part of the same action. If an item takes 2 or more actions to reload, the GM determines whether they must be performed together as an activity, or you can spend some of those actions during one turn and the rest during your next turn.","TraitDescriptionRepeating":"A repeating weapon is typically a type of crossbow that has a shorter reload time. These weapons can\'t be loaded with individual bolts like other crossbows; instead, they require a magazine of specialized ammunition to be loaded into a special slot. Once that magazine is in place, the ammunition is automatically loaded each time the weapon is cocked to fire, reducing its reload to the value in its reload entry (typically 0). When the ammunition runs out, a new magazine must be loaded, which requires a free hand and 3 Interact actions (to remove the old magazine, retrieve the new magazine, and slot the new magazine in place). These actions don\'t need to be consecutive.","TraitDescriptionResonant":"This weapon can channel energy damage. You gain the Conduct Energy free action while wielding a resonant weapon.","TraitDescriptionRevelation":"Effects with this trait see things as they truly are.","TraitDescriptionRogue":"This indicates abilities from the rogue class.","TraitDescriptionSaggorak":"Ancient dwarven blacksmiths in Saggorak designed a series of spectacularly powerful runes. Only someone with legendary proficiency in Crafting, or a well-versed dwarven crafter from the city of Kovlar, can apply, transfer, or remove a rune with the Saggorak trait. Because of their considerable power, all Saggorak runes take up two property rune slots, and consequently they can be applied only to armor and weapons with at least a +2 potency rune.","TraitDescriptionScatter":"This weapon fires a cluster of pellets in a wide spray. Scatter always has an area listed with it, indicating the radius of the spray. On a hit, the primary target of attacks with a scatter weapon take the listed damage, and the target and all other creatures within the listed radius around it take 1 point of splash damage per weapon damage die.","TraitDescriptionScrying":"A scrying effect lets you see, hear, or otherwise get sensory information from a distance using a sensor or apparatus, rather than your own eyes and ears.","TraitDescriptionSecret":"The GM rolls the check for this ability in secret.","TraitDescriptionShadow":"This magic involves shadows or the energy of the Shadow Plane.","TraitDescriptionShisk":"Secretive humanoids covered in bony plumage that reside underground.","TraitDescriptionShoony":"A creature with this trait is a member of the shoony ancestry.","TraitDescriptionShove":"You can use this weapon to Shove with the Athletics skill even if you don\'t have a free hand. This uses the weapon\'s reach (if different from your own) and adds the weapon\'s item bonus to attack rolls as an item bonus to the Athletics check. If you critically fail a check to Shove using the weapon, you can drop the weapon to take the effects of a failure instead of a critical failure.","TraitDescriptionSkeleton":"This undead is made by animating a dead creature\'s skeleton with negative energy. An ability with this trait can be used or selected only by skeletons.","TraitDescriptionSkill":"A general feat with the skill trait improves your skills and their actions or gives you new actions for a skill. A feat with this trait can be selected when a class grants a skill feat or general feat. Archetype feats with the skill trait can be selected in place of a skill feat if you have that archetype\'s dedication feat.","TraitDescriptionSleep":"This effect can cause a creature to fall asleep or get drowsy.","TraitDescriptionSocial":"Actions and abilities with the social trait can be used only while a vigilante is in their social identity.","TraitDescriptionSonic":"An effect with the sonic trait functions only if it makes sound, meaning it has no effect in an area of silence or in a vacuum. This is different from an auditory spell, which is effective only if the target can hear it. A sonic effect might deal sonic damage.","TraitDescriptionSorcerer":"This indicates abilities from the sorcerer class.","TraitDescriptionSplash":"When you use a thrown weapon with the splash trait, you don\'t add your Strength modifier to the damage roll. If an attack with a splash weapon fails, succeeds, or critically succeeds, all creatures within 5 feet of the target (including the target) take the listed splash damage. On a failure (but not a critical failure), the target of the attack still takes the splash damage. Add splash damage together with the initial damage against the target before applying the target\'s weaknesses or resistances. You don\'t multiply splash damage on a critical hit.","TraitDescriptionSplash10":"When you use a thrown weapon with the splash trait, you don\'t add your Strength modifier to the damage roll. If an attack with a splash weapon fails, succeeds, or critically succeeds, all creatures within 10 feet of the target (including the target) take the listed splash damage. On a failure (but not a critical failure), the target of the attack still takes the splash damage. Add splash damage together with the initial damage against the target before applying the target\'s weaknesses or resistances. You don\'t multiply splash damage on a critical hit.","TraitDescriptionSprite":"A family of diminutive winged fey with a strong connection to primal magic.","TraitDescriptionStance":"A stance is a general combat strategy that you enter by using an action with the stance trait, and that you remain in for some time. A stance lasts until you get knocked out, until its requirements (if any) are violated, until the encounter ends, or until you enter a new stance, whichever comes first. After you use an action with the stance trait, you can\'t use another one for 1 round. You can enter or be in a stance only in encounter mode.","TraitDescriptionStaff":"This magic item holds spells of a particular theme and allows a spellcaster to cast additional spells by preparing the staff.","TraitDescriptionSteam":"Items with this trait are powered by engines that boil water to produce steam and move their components.","TraitDescriptionStrix":"Winged humanoids, most of whom live in and around Cheliax.","TraitDescriptionStructure":"An item with the structure trait creates a magical building or other structure when activated. The item must be activated on a plot of land free of other structures. The structure adapts to the natural terrain, adopting the structural requirements for being built there. The structure adjusts around small features such as ponds or spires of rock, but it can\'t be created on water or other nonsolid surfaces. If activated on snow, sand dunes, or other soft surfaces with a solid surface underneath, the structure\'s foundation (if any) reaches the solid ground. If an item with this trait is activated on a solid but unstable surface, such as a swamp or an area plagued by tremors, roll a @Check[type:flat|dc:3] each day; on a failure, the structure begins to sink or collapse. The structure doesn\'t harm creatures within the area when it appears, and it can\'t be created within a crowd or in a densely populated area. Any creature inadvertently caught inside the structure when the item is activated ends up unharmed inside the complete structure and always has a clear path of escape. A creature inside the structure when the activation ends isn\'t harmed, and it lands harmlessly on the ground if it was on an upper level of the structure.","TraitDescriptionSubjectiveGravity":"On planes with this trait, all bodies of mass can be centers of gravity with the same amount of force, but only if a non-mindless creature wills it.","TraitDescriptionSummoned":"A creature called by a spell or effect gains the summoned trait. A summoned creature can\'t summon other creatures, create things of value, or cast spells that require a cost. It has the minion trait. If it tries to Cast a Spell of equal or higher level than the spell that summoned it, it overpowers the summoning magic, causing its own spell to fail and the summon spell to end. Otherwise, the summoned creature uses the standard abilities for a creature of its kind. It generally attacks your enemies to the best of its ability. If you can communicate with it, you can attempt to command it, but the GM determines the degree to which it follows your commands. Immediately when you finish Casting the Spell, the summoned creature uses its 2 actions for that turn. A spawn or other creature generated from a summoned creature returns to its unaltered state (usually a corpse in the case of spawn) once the summoned creature is gone. If it\'s unclear what this state would be, the GM decides. Summoned creatures can be banished by various spells and effects. They are automatically banished if reduced to 0 Hit Points or if the spell that called them ends.","TraitDescriptionSummoner":"This indicates abilities from the Summoner class.","TraitDescriptionSuli":"Sulis are planar scions descended from jann.","TraitDescriptionSwashbuckler":"This indicates abilities from the Swashbuckler class.","TraitDescriptionSweep":"This weapon makes wide sweeping or spinning attacks, making it easier to attack multiple enemies. When you attack with this weapon, you gain a +1 circumstance bonus to your attack roll if you already attempted to attack a different target this turn using this weapon.","TraitDescriptionSylph":"A type of geniekin descended from a being from the Plane of Air.","TraitDescriptionTattoo":"A tattoo is a type of item that is drawn or cut into a creature\'s skin and usually takes the form of images or symbols.","TraitDescriptionTech":"Items with this trait are associated with the technology of Numeria.","TraitDescriptionTelepathy":"A creature with telepathy can communicate mentally with creatures. This doesn\'t give any special access to their thoughts, and communicates no more information than normal speech would.","TraitDescriptionTeleportation":"Teleportation effects allow you to instantaneously move from one point in space to another. Teleportation does not usually trigger reactions based on movement.","TraitDescriptionTengu":"A creature with this trait is a member of the tengu ancestry. Tengus are humanoids who resemble birds. An ability with this trait can be used or selected only by tengus. An item with this trait is created and used by tengus.","TraitDescriptionTethered":"This weapon is attached to a length of rope or chain that allows you to retrieve it after it has left your hand. If you have a free hand while wielding this weapon, you can use an Interact action to pull the weapon back into your grasp after you have thrown it as a ranged attack or after it has been disarmed (unless it is being held by another creature).","TraitDescriptionThaumaturge":"This indicates abilities from the thaumaturge class.","TraitDescriptionThrown":"You can throw this weapon as a ranged attack. A thrown weapon adds your Strength modifier to damage just like a melee weapon does. When this trait appears on a melee weapon, it also includes the range increment.","TraitDescriptionTiefling":"A creature with this trait is a member of the tiefling ancestry.","TraitDescriptionTransmutation":"Effects and magic items with this trait are associated with the transmutation school of magic, typically changing something\'s form.","TraitDescriptionTrap":"A hazard or item with this trait is constructed to hinder interlopers.","TraitDescriptionTrip":"You can use this weapon to Trip with the Athletics skill even if you don\'t have a free hand. This uses the weapon\'s reach (if different from your own) and adds the weapon\'s item bonus to attack rolls as an item bonus to the Athletics check. If you critically fail a check to Trip using the weapon, you can drop the weapon to take the effects of a failure instead of a critical failure.","TraitDescriptionTrueName":"Certain spells, feats, and items have the true name trait. This trait means they require you to know a creature\'s true name to use them.","TraitDescriptionTwin":"These weapons are used as a pair, complementing each other. When you attack with a twin weapon, you add a circumstance bonus to the damage roll equal to the weapon\'s number of damage dice if you have previously attacked with a different weapon of the same type this turn. The weapons must be of the same type to benefit from this trait, but they don\'t need to have the same runes.","TraitDescriptionTwoHand":"This weapon can be wielded with two hands. Doing so changes its weapon damage die to the indicated value. This change applies to all the weapon\'s damage dice, such as those from striking runes.","TraitDescriptionUnarmed":"An unarmed attack uses your body rather than a manufactured weapon. An unarmed attack isn\'t a weapon, though it\'s categorized with weapons for weapon groups, and it might have weapon traits. Since it\'s part of your body, an unarmed attack can\'t be Disarmed. It also doesn\'t take up a hand, though a fist or other grasping appendage follows the same rules as a free-hand weapon.","TraitDescriptionUncommon":"Something of uncommon rarity requires special training or comes from a particular culture or part of the world. Some character choices give access to uncommon options, and the GM can choose to allow access for anyone. Less is known about uncommon creatures than common creatures. They typically can\'t be summoned. The DC of Recall Knowledge checks related to these creature is increased by 2.","TraitDescriptionUndine":"A type of geniekin descended from a being from the Plane of Water.","TraitDescriptionUnique":"A rules element with this trait is one-of-a-kind. The DC of Recall Knowledge checks related to creatures with this trait is increased by 10.","TraitDescriptionUnstable":"Unstable actions rely on experimental functions of your innovation that even you can\'t fully predict. After an unstable action is used on an innovation, using another one is dangerous.","TraitDescriptionVanara":"An inquisitive ancestry with primate-like features and prehensile tails.","TraitDescriptionVersatile":"A versatile weapon can be used to deal a different type of damage than that listed in the Damage entry. This trait indicates the alternate damage type. For instance, a piercing weapon that is versatile S can be used to deal piercing or slashing damage. You choose the damage type each time you make an attack.","TraitDescriptionVirulent":"Afflictions with the virulent trait are harder to remove. You must succeed at two consecutive saves to reduce a virulent affliction\'s stage by 1. A critical success reduces a virulent affliction\'s stage by only 1 instead of by 2.","TraitDescription":"An ancestry with snake-like features and powerful venom.","TraitDescriptionVisual":"A visual effect can affect only creatures that can see it. This applies only to visible parts of the effect, as determined by the GM.","TraitDescriptionVolley":"This ranged weapon is less effective at close distances. Your attacks against targets that are at a distance within the range listed take a -2 penalty.","TraitDescriptionWater":"Effects with the water trait either manipulate or conjure water. Those that manipulate water have no effect in an area without water. Creatures with this trait consist primarily of water or have a magical connection to the element.","TraitDescriptionWildHunt":"Creatures with the wild hunt trait are never below 14th level. They possess greater darkvision, greensight, planar acclimation, wild gaze, instinctive cooperation, weakness to cold iron, the ability to speak with plants and animals, and their own specific wild hunt link.","TraitDescriptionWitch":"This indicates abilities from the witch class.","TraitDescriptionWizard":"This indicates abilities from the wizard class.","TraitDescriptionEidolon":"A creature with this trait is a summoner\'s eidolon. An item with this trait can be worn by an eidolon. An eidolon can have up to two items invested.","TraitDescriptionAdjustment":"Items with this trait are intended to alter existing pieces of equipment, typically armors, shields, and weapons. The given item will note which type of equipment it modifies. A piece of equipment can only be affected by a single adjustment at a time. Unless otherwise noted, adding or removing an adjustment requires using a 10-minute activity and a repair kit.","TraitDescriptionApex":"When you Invest an Item that has the apex trait, it improves one of your ability scores, either increasing it by 2 or to a total of 18, whichever grants the higher score. This gives you all the benefits of the new ability score until the investiture ends. An apex item grants this benefit only the first time it\'s invested within a 24-hour period, and you can benefit from only one apex item at a time. If you attempt to invest an apex item when you already have one invested, you don\'t gain the ability score increase, though you do gain any other effects of Investing the Item.","TraitDescriptionCatalyst":"Items with the catalyst trait are consumable material spell components that alter or magnify specific spells. Activating a catalyst is part of Casting the Spell. The catalyst might increase the number of actions required to Cast the Spell, as indicated in the catalyst\'s Activate entry. Additionally, the spell gains material components if it didn\'t have them already or adds the catalyst to its existing components. Because the catalyst becomes part of the material components, you can draw the catalyst as part of Casting the Spell.","TraitDescriptionElixir":"Elixirs are alchemical liquids that are used by drinking them.","TraitDescriptionFey":"Creatures of the First World are called the fey.","TraitDescriptionFulu":"Fulus are small paper charms that can be affixed to a suit of armor, a shield, a weapon, a creature, or even a structure. Some fulus are composed of multiple such charms, taking effect only once all have been affixed. Normal fulus have effects immediately once affixed, while fulu talismans have an effect only once activated. Once a fulu has been activated, it lasts for the given duration and then burns out. Unless otherwise noted, fulus expire one year after being created, reverting to mundane paper. All fulus have the fulu and consumable traits. Fulus also have a tradition trait—either arcane, divine, occult or primal—determined by the magical tradition of its creator. For example, a fulu created by a priest would have the divine trait, whereas a witch who dabbles in fate might create a fulu with the occult trait. Some fulus also have the talisman trait, if they work similarly to talismans (such as being affixed to a suit of armor, a shield, or a weapon. Each fulu\'s stat block indicates the type of item or creature it can be affixed to. Affixing or removing a fulu requires using the Affix a Fulu activity, or the Affix a Talisman action instead if the fulu is also a talisman.","TraitDescriptionMutagen":"An elixir with the mutagen trait temporarily transmogrifies the subject\'s body and alters its mind. A mutagen always conveys one or more beneficial effects paired with one or more detrimental effects. Mutagens are polymorph effects, meaning you can benefit from only one at a time.","TraitDescriptionOil":"Oils are magical gels, ointments, pastes, or salves that are typically applied to an object and are used up in the process.","TraitDescriptionPotion":"A potion is a magical liquid activated when you drink it.","TraitDescriptionScroll":"A scroll contains a single spell you can cast without a spell slot.","TraitDescriptionSnare":"Traps typically made by rangers, snares follow special rules that allow them to be constructed quickly and used on the battlefield.","TraitDescriptionSpellheart":"Spellhearts are permanent items that work similarly to talismans. You affix a spellheart using the Affix a Spellheart activity, which is otherwise identical to Affix a Talisman. The limit of one talisman per item remains—an item can have one spellheart or one talisman, not both. When casting a cantrip from a spellheart, you can use your own spell attack roll or spell DC if it\'s higher. Crafting a spellheart requires the spells the spellheart can cast. For example, a major five-feather wreath requires air walk, gale blast, and wall of wind.","TraitDescriptionTalisman":"A talisman is a small object affixed to armor, a shield, or a weapon (called the affixed item). You must be wielding or wearing an item to activate a talisman attached to it. Once activated, a talisman burns out permanently.","TraitDescriptionWand":"A wand contains a single spell which you can cast once per day.","TraitDetection":"Detection","TraitDevil":"Devil","TraitDeviant":"Deviant","TraitDhampir":"Dhampir","TraitDinosaur":"Dinosaur","TraitDisarm":"Disarm","TraitDisease":"Disease","TraitDiv":"Div","TraitDivination":"Divination","TraitDivine":"Divine","TraitDoubleBarrel":"Double Barrel","TraitDowntime":"Downtime","TraitDragon":"Dragon","TraitDream":"Dream","TraitDrow":"Drow","TraitDrug":"Drug","TraitDruid":"Druid","TraitDuergar":"Duergar","TraitDuskwalker":"Duskwalker","TraitDwarf":"Dwarf","TraitEachRuneAppliedToASeparateItemThatHasPockets":"Each rune applied to a separate item that has pockets","TraitEarth":"Earth","TraitEidolon":"Eidolon","TraitElectricity":"Electricity","TraitElemental":"Elemental","TraitElf":"Elf","TraitElixir":"Elixir","TraitEmotion":"Emotion","TraitEnchantment":"Enchantment","TraitEnergy":"Energy","TraitEnvironmental":"Environmental","TraitEsoterica":"Esoterica","TraitEthereal":"Ethereal","TraitEvil":"Evil","TraitEvocation":"Evocation","TraitEvolution":"Evolution","TraitExploration":"Exploration","TraitExtradimensional":"Extradimensional","TraitFatalAimD10":"Fatal Aim d10","TraitFatalAimD12":"Fatal Aim d12","TraitFatalD10":"Fatal d10","TraitFatalD12":"Fatal d12","TraitFatalD8":"Fatal d8","TraitFear":"Fear","TraitFearEffects":"Fear Effects","TraitFetchling":"Fetchling","TraitFey":"Fey","TraitFiend":"Fiend","TraitFighter":"Fighter","TraitFinesse":"Finesse","TraitFinisher":"Finisher","TraitFinite":"Finite","TraitFire":"Fire","TraitFleshwarp":"Fleshwarp","TraitFlexible":"Flexible","TraitFlourish":"Flourish","TraitFocused":"Focused","TraitForce":"Force","TraitForceful":"Forceful","TraitFormian":"Formian","TraitFortune":"Fortune","TraitFreeHand":"Free-Hand","TraitFulu":"Fulu","TraitFungus":"Fungus","TraitGadget":"Gadget","TraitGanzi":"Ganzi","TraitGeneral":"General","TraitGenie":"Genie","TraitGeniekin":"Geniekin","TraitGhoran":"Ghoran","TraitGhost":"Ghost","TraitGhoul":"Ghoul","TraitGhul":"Ghul","TraitGiant":"Giant","TraitGnoll":"Gnoll","TraitGnome":"Gnome","TraitGoblin":"Goblin","TraitGolem":"Golem","TraitGoloma":"Goloma","TraitGood":"Good","TraitGrapple":"Grapple","TraitGremlin":"Gremlin","TraitGrimoire":"Grimoire","TraitGrioth":"Grioth","TraitGrippli":"Grippli","TraitGunslinger":"Gunslinger","TraitHag":"Hag","TraitHalcyon":"Halcyon","TraitHalfElf":"Half-Elf","TraitHalfOrc":"Half-Orc","TraitHalfling":"Halfling","TraitHampering":"Hampering","TraitHantu":"Hantu","TraitHaunt":"Haunt","TraitHealing":"Healing","TraitHerald":"Herald","TraitHeritage":"Heritage","TraitHex":"Hex","TraitHobgoblin":"Hobgoblin","TraitHuman":"Human","TraitHumanoid":"Humanoid","TraitIfrit":"Ifrit","TraitIkeshti":"Ikeshti","TraitIllusion":"Illusion","TraitIncapacitation":"Incapacitation","TraitIncarnate":"Incarnate","TraitIncorporeal":"Incorporeal","TraitInevitable":"Inevitable","TraitInfused":"Infused","TraitIngested":"Ingested","TraitInhaled":"Inhaled","TraitInjection":"Injection","TraitInjury":"Injury","TraitIntelligent":"Intelligent","TraitInteract":"Interact","TraitInventor":"Inventor","TraitInvested":"Invested","TraitInvestigator":"Investigator","TraitJoustingD6":"Jousting d6","TraitKaiju":"Kaiju","TraitKami":"Kami","TraitKashrishi":"Kashrishi","TraitKickback":"Kickback","TraitKitsune":"Kitsune","TraitKobold":"Kobold","TraitKovintus":"Kovintus","TraitLawful":"Lawful","TraitLeshy":"Leshy","TraitLight":"Light","TraitLineage":"Lineage","TraitLinguistic":"Linguistic","TraitLitany":"Litany","TraitLizardfolk":"Lizardfolk","TraitLocathah":"Locathah","TraitMagic":"Magic","TraitMagical":"Magical","TraitMagus":"Magus","TraitManipulate":"Manipulate","TraitMechanical":"Mechanical","TraitMental":"Mental","TraitMerfolk":"Merfolk","TraitMetal":"Metal","TraitMetamagic":"Metamagic","TraitMindless":"Mindless","TraitMinion":"Minion","TraitMindshift":"Mindshift","TraitMisfortune":"Misfortune","TraitModification":"Modification","TraitModular":"Modular B, P, or S","TraitMonitor":"Monitor","TraitMonk":"Monk","TraitMorlock":"Morlock","TraitMorph":"Morph","TraitMortic":"Mortic","TraitMounted":"Mounted","TraitMove":"Move","TraitMulticlass":"Multiclass","TraitMummy":"Mummy","TraitMunavri":"Munavri","TraitMutagen":"Mutagen","TraitMutant":"Mutant","TraitNagaji":"Nagaji","TraitNecromancy":"Necromancy","TraitNegative":"Negative","TraitNoisy":"Noisy","TraitNonlethal":"Nonlethal","TraitNonlethalAttacks":"Nonlethal Attacks","TraitNonmagicalAttacks":"Non-magical Attacks","TraitNymph":"Nymph","TraitOath":"Oath","TraitObjectImmunities":"Object Immunities","TraitOccult":"Occult","TraitOil":"Oil","TraitOlfactory":"Olfactory","TraitOni":"Oni","TraitOoze":"Ooze","TraitOpen":"Open","TraitOracle":"Oracle","TraitOrc":"Orc","TraitOread":"Oread","TraitPaaridar":"Paaridar","TraitParry":"Parry","TraitPervasiveMagic":"Pervasive Magic","TraitPetitioner":"Petitioner","TraitPhantom":"Phantom","TraitPhysical":"Physical","TraitPiercing":"Piercing","TraitPlant":"Plant","TraitPoison":"Poison","TraitPolymorph":"Polymorph","TraitPortable":"Portable","TraitPoppet":"Poppet","TraitPositive":"Positive","TraitPossession":"Possession","TraitPotion":"Potion","TraitPrecious":"Precious","TraitPrecision":"Precision","TraitPrediction":"Prediction","TraitPress":"Press","TraitPrimal":"Primal","TraitPropulsive":"Propulsive","TraitProtean":"Protean","TraitProteanAnatomy":"Protean Anatomy","TraitPsychopomp":"Psychopomp","TraitPsyche":"Psyche","TraitPsychic":"Psychic","TraitQlippoth":"Qlippoth","TraitRadiation":"Radiation","TraitRage":"Rage","TraitRakshasa":"Rakshasa","TraitRange5":"Range 5 ft","TraitRange10":"Range 10 ft","TraitRange15":"Range 15 ft","TraitRange20":"Range 20 ft","TraitRange25":"Range 25 ft","TraitRange30":"Range 30 ft","TraitRange40":"Range 40 ft","TraitRange50":"Range 50 ft","TraitRange60":"Range 60 ft","TraitRange70":"Range 70 ft","TraitRange80":"Range 80 ft","TraitRange90":"Range 90 ft","TraitRange100":"Range 100 ft","TraitRange120":"Range 120 ft","TraitRange150":"Range 150 ft","TraitRange180":"Range 180 ft","TraitRange200":"Range 200 ft","TraitRange240":"Range 240 ft","TraitRange300":"Range 300 ft","TraitRange500":"Range 500 ft","TraitRangeIncrement10":"Range Increment 10 ft","TraitRangeIncrement100":"Range Increment 100 ft","TraitRangeIncrement110":"Range Increment 110 ft","TraitRangeIncrement120":"Range Increment 120 ft","TraitRangeIncrement130":"Range Increment 130 ft","TraitRangeIncrement140":"Range Increment 140 ft","TraitRangeIncrement15":"Range Increment 15 ft","TraitRangeIncrement150":"Range Increment 150 ft","TraitRangeIncrement160":"Range Increment 160 ft","TraitRangeIncrement170":"Range Increment 170 ft","TraitRangeIncrement180":"Range Increment 180 ft","TraitRangeIncrement190":"Range Increment 190 ft","TraitRangeIncrement20":"Range Increment 20 ft","TraitRangeIncrement200":"Range Increment 200 ft","TraitRangeIncrement210":"Range Increment 210 ft","TraitRangeIncrement220":"Range Increment 220 ft","TraitRangeIncrement230":"Range Increment 230 ft","TraitRangeIncrement240":"Range Increment 240 ft","TraitRangeIncrement250":"Range Increment 250 ft","TraitRangeIncrement260":"Range Increment 260 ft","TraitRangeIncrement270":"Range Increment 270 ft","TraitRangeIncrement280":"Range Increment 280 ft","TraitRangeIncrement290":"Range Increment 290 ft","TraitRangeIncrement30":"Range Increment 30 ft","TraitRangeIncrement300":"Range Increment 300 ft","TraitRangeIncrement310":"Range Increment 310 ft","TraitRangeIncrement320":"Range Increment 320 ft","TraitRangeIncrement40":"Range Increment 40 ft","TraitRangeIncrement5":"Range Increment 5 ft","TraitRangeIncrement50":"Range Increment 50 ft","TraitRangeIncrement60":"Range Increment 60 ft","TraitRangeIncrement70":"Range Increment 70 ft","TraitRangeIncrement75":"Range Increment 75 ft","TraitRangeIncrement80":"Range Increment 80 ft","TraitRangeIncrement90":"Range Increment 90 ft","TraitRangedTrip":"Ranged Trip","TraitRanger":"Ranger","TraitRare":"Rare","TraitRatajin":"Ratajin","TraitRatfolk":"Ratfolk","TraitReach":"Reach","TraitReach0":"Reach 0 ft","TraitReach10":"Reach 10 ft","TraitReach15":"Reach 15 ft","TraitReach20":"Reach 20 ft","TraitReach25":"Reach 25 ft","TraitReach30":"Reach 30 ft","TraitReach40":"Reach 40 ft","TraitReach50":"Reach 50 ft","TraitReach60":"Reach 60 ft","TraitReach100":"Reach 100 ft","TraitReach1000":"Reach 1,000 ft","TraitReckless":"Reckless","TraitReflection":"Reflection","TraitReload0":"Reload 0","TraitReload1":"Reload 1","TraitReload2":"Reload 2","TraitReload1Min":"Reload 1 min","TraitRepeating":"Repeating","TraitResonant":"Resonant","TraitRevelation":"Revelation","TraitRogue":"Rogue","TraitSaggorak":"Saggorak","TraitSahkil":"Sahkil","TraitSalt":"Salt","TraitSaltWater":"Salt Water","TraitSamsaran":"Samsaran","TraitScatter5":"Scatter 5","TraitScatter10":"Scatter 10","TraitScatter15":"Scatter 15","TraitScroll":"Scroll","TraitScrying":"Scrying","TraitSeaDevil":"Sea Devil","TraitSeugathi":"Seugathi","TraitSewnIntoClothing":"Sewn Into Clothing","TraitSecret":"Secret","TraitSerpentfolk":"Serpentfolk","TraitShabti":"Shabti","TraitShadow":"Shadow","TraitShisk":"Shisk","TraitShobhad":"Shobhad","TraitShoony":"Shoony","TraitShove":"Shove","TraitSiktempora":"Siktempora","TraitSkeleton":"Skeleton","TraitSkelm":"Skelm","TraitSkill":"Skill","TraitSkulk":"Skulk","TraitSlashing":"Slashing","TraitSleep":"Sleep","TraitSnare":"Snare","TraitSocial":"Social","TraitSonic":"Sonic","TraitSorcerer":"Sorcerer","TraitSoulbound":"Soulbound","TraitSpellDeflection":"Spell Deflection","TraitSpellheart":"Spellheart","TraitSpellshot":"Spellshot","TraitSpirit":"Spirit","TraitSplash":"Splash","TraitSplashDamage":"Splash Damage","TraitSplash10":"Splash 10 ft","TraitSpriggan":"Spriggan","TraitSprite":"Sprite","TraitStaff":"Staff","TraitStamina":"Stamina","TraitStance":"Stance","TraitSteam":"Steam","TraitStheno":"Stheno","TraitStrix":"Strix","TraitStructure":"Structure","TraitSuli":"Suli","TraitSummon":"Summon","TraitSummoned":"Summoned","TraitSummoner":"Summoner","TraitSwarmAttacks":"Swarm Attacks","TraitSwarmMind":"Swarm Mind","TraitSwashbuckler":"Swashbuckler","TraitSwarm":"Swarm","TraitSweep":"Sweep","TraitSylph":"Sylph","TraitTalisman":"Talisman","TraitTandem":"Tandem","TraitTane":"Tane","TraitTanggal":"Tanggal","TraitTattoo":"Tattoo","TraitTech":"Tech","TraitTechnological":"Technological","TraitTelepathy":"Telepathy","TraitTeleportation":"Teleportation","TraitTengu":"Tengu","TraitTethered":"Tethered","TraitThaumaturge":"Thaumaturge","TraitThrown":"Thrown","TraitThrown10":"Thrown 10 ft.","TraitThrown15":"Thrown 15 ft.","TraitThrown20":"Thrown 20 ft.","TraitThrown30":"Thrown 30 ft.","TraitThrown40":"Thrown 40 ft.","TraitThrown60":"Thrown 60 ft.","TraitThrown80":"Thrown 80 ft.","TraitThrown100":"Thrown 100 ft.","TraitThrown200":"Thrown 200 ft.","TraitTiefling":"Tiefling","TraitTime":"Time","TraitTitan":"Titan","TraitTransmutation":"Transmutation","TraitTrap":"Trap","TraitTrip":"Trip","TraitTroll":"Troll","TraitTroop":"Troop","TraitTrueName":"True Name","TraitTwin":"Twin","TraitTwoHandD10":"Two-Hand d10","TraitTwoHandD12":"Two-Hand d12","TraitTwoHandD6":"Two-Hand d6","TraitTwoHandD8":"Two-Hand d8","TraitTwoHandedHelp":"This item can be wielded in two hands. To toggle the two-handed strike, click the two-handed trait in the strikes tab.","TraitUnarmed":"Unarmed","TraitUncommon":"Uncommon","TraitUndead":"Undead","TraitUndine":"Undine","TraitUnique":"Unique","TraitUnstable":"Unstable","TraitUntyped":"Untyped","TraitUrdefhan":"Urdefhan","TraitVampire":"Vampire","TraitVampireWeaknesses":"Vampire Weaknesses","TraitVanara":"Vanara","TraitVelstrac":"Velstrac","TraitVersatileAcid":"Versatile Acid","TraitVersatileB":"Versatile B","TraitVersatileChaotic":"Versatile Chaotic","TraitVersatileCold":"Versatile Cold","TraitVersatileElectricity":"Versatile Electricity","TraitVersatileEvil":"Versatile Evil","TraitVersatileFire":"Versatile Fire","TraitVersatileForce":"Versatile Force","TraitVersatileGood":"Versatile Good","TraitVersatileHeritage":"Versatile Heritage","TraitVersatileLawful":"Versatile Lawful","TraitVersatileNegative":"Versatile Negative","TraitVersatileP":"Versatile P","TraitVersatilePositive":"Versatile Positive","TraitVersatileS":"Versatile S","TraitVersatileSonic":"Versatile Sonic","TraitVigilante":"Vigilante","TraitVirulent":"Virulent","TraitVishkanya":"Vishkanya","TraitVisual":"Visual","TraitVolley20":"Volley 20 ft.","TraitVolley30":"Volley 30 ft.","TraitVolley50":"Volley 50 ft.","TraitVorpalFear":"Vorpal Fear","TraitVulnerableToSunlight":"Vulnerable to Sunlight","TraitWand":"Wand","TraitWater":"Water","TraitWayang":"Wayang","TraitWeapons":"Weapons","TraitWerecreature":"Werecreature","TraitWight":"Wight","TraitWildHunt":"Wild Hunt","TraitWitch":"Witch","TraitWizard":"Wizard","TraitWraith":"Wraith","TraitWyrwood":"Wyrwood","TraitXulgath":"Xulgath","TraitZombie":"Zombie","TraitHeldOneHand":"Held in 1 hand","TraitHeldTwoHands":"Held in 2 hands","TraitTattooedOnTheBody":"Tattooed on the Body","TraitWorn":"Worn","TraitWornAndAttachedToTwoWeapons":"Worn and Attached to Two Weapons","TraitWornUnderArmor":"Worn Under Light Armor or Clothes","TraitWornAmulet":"Worn Amulet","TraitWornArmbands":"Worn Armbands","TraitWornBackpack":"Worn Backpack","TraitWornBracelet":"Worn Bracelet","TraitWornClothing":"Worn Clothing","TraitWornNecklace":"Worn Necklace","TraitWornHeadwear":"Worn Headwear","TraitWornGarment":"Worn Garment","TraitWornGloves":"Worn Gloves","TraitWornRing":"Worn Ring","TraitWornOnWrists":"Worn on Wrists","TraitWornMask":"Worn Mask","TraitWornBracers":"Worn Bracers","TraitWornEpaulet":"Worn Epaulets","TraitWornCloak":"Worn Cloak","TraitWornCrown":"Worn Crown","TraitWornEyepiece":"Worn Eyepiece","TraitWornBelt":"Worn Belt","TraitWornBeltPouch":"Worn Belt Pouch","TraitWornShoes":"Worn Shoes","TraitWornCollar":"Worn Collar","TraitWornAnklets":"Worn Anklets","TraitWornCirclet":"Worn Circlet","TraitWornHorseshoes":"Worn Horseshoes","TraitWornBarding":"Worn Barding","TraitWornOnBelt":"Worn on Belt","TraitWornSaddle":"Worn Saddle","TraitWornOrOneHand":"Worn or Held in One Hand","TraitEtchedOntoArmor":"Etched onto Armor","TraitEtchedOntoMedHeavyArmor":"Etched onto Medium or Heavy Armor","TraitEtchedOntoAWeapon":"Etched onto a Weapon","TraitEtchedOntoAThrownWeapon":"Etched on Thrown Weapon","TraitEtchedOntoAMeleeWeapon":"Etched on Melee Weapon","TraitEtchedOntoAClanDagger":"Etched on Clan Dagger","TraitEtchedOntoLightMedNMArmor":"Etched on L/M Nonmetal Armor","TraitBonded":"Bonded","TraitsLabel":"Traits","Trap":"Trap","TravelSpeed":{"Name":"Name","Title":"Travel Duration Calculator (Alpha)","PartySpeed":"Party Speed","Speed":"Speed","TravelDuration":"Travel Duration","ExplorationActivity":"Exploration Activity","ExplorationSpeed":"Exploration Speed","DetectionMode":"Detection Mode","Feet":"Feet","Hours":"Hours","HoursPerDay":"Hours Spent Traveling Per Day","HustleMinutes":"Minutes Spent Hustling Per Day","Days":"Days","Weeks":"Weeks","FeetAcronym":"ft","Miles":"Miles","None":"Full Speed","DetectEverything":"Notice Everything","DetectBeforeRunningIntoIt":"Notice Everything in Advance","Journey":"Journey","NormalTerrain":"Normal Terrain Speed","DifficultTerrain":"Difficult Terrain Speed","GreaterDifficultTerrain":"Greater Difficult Terrain Speed","Distance":"Distance","TerrainSlowdown":"Terrain Speed","ExplorationActivities":{"AvoidNotice":"Avoid Notice","CoverTracks":"Cover Tracks","Defend":"Defend","DetectMagic":"Detect Magic","Investigate":"Investigate","RepeatASpell":"Repeat a Spell","Scout":"Scout","Search":"Search","Track":"Track","None":"None (Full Speed)","HalfSpeed":"Other (Half Speed)"}},"TrickMagicItemPopup":{"Label":"Select a skill to use with Trick Magic Item.","Title":"Trick Magic Item","InvalidActor":"Only a character or NPC can use Trick Magic Item."},"UI":{"applyDamage":{"by":"by","damaged":"damaged for ","healed":"healed for ","shieldActive":"and their {shield} gets ","shieldInActive":"gets"},"errorTargetToken":"Select at least one token.","noDamageInfoForOutcome":"No damage information for outcome {outcome}.","shiftModifyDamageLabel":"Modifier:","shiftModifyDamageTitle":"Modify the rolled damage/healing"},"UnitPriceLabel":"Unit price","UnprepareItemTitle":"Unprepare Item","UpdateActorLabel":"Update Actor","UpdateLabelUniversal":"Update","UserSettings":{"DarkvisionFilter":{"Label":"Darkvision Filter","Hint":"Add a (usually monochrome) filter when viewing a scene through the sight of a creature with darkvision"}},"ValueLabel":"Value","WandFromSpell":"Wand of {name} (Level {level})","WeaknessesLabel":"Weaknesses","Weapon":{"Base":{"adze":"Adze","aklys":"Aklys","alchemical-bomb":"Alchemical Bomb","alchemical-crossbow":"Alchemical Crossbow","aldori-dueling-sword":"Aldori Dueling Sword","air-repeater":"Air Repeater","arquebus":"Arquebus","axe-musket":"Axe Musket","asp-coil":"Asp Coil","bastard-sword":"Bastard Sword","battle-axe":"Battle Axe","battle-lute":"Battle Lute","big-boom-gun":"Big Boom Gun","black-powder-knuckle-dusters":"Black Powder Knuckle Dusters","bladed-diabolo":"Bladed Diabolo","bladed-gauntlet":"Bladed Gauntlet","bladed-hoop":"Bladed Hoop","bladed-scarf":"Bladed Scarf","blowgun-darts":"Blowgun Darts","blowgun":"Blowgun","blunderbuss":"Blunderbuss","bo-staff":"Bo Staff","boarding-axe":"Boarding Axe","boarding-pike":"Boarding Pike","bola":"Bola","broadspear":"Broadspear","butchering-axe":"Butchering Axe","butterfly-sword":"Butterfly Sword","buugeng":"Buugeng","cane-pistol":"Cane Pistol","chakram":"Chakram","chakri":"Chakri","clan-dagger":"Clan Dagger","clan-pistol":"Clan Pistol","claw":"Claw","claw-blade":"Claw Blade","club":"Club","coat-pistol":"Coat Pistol","combat-grapnel":"Combat Grapnel","composite-longbow":"Composite Longbow","composite-shortbow":"Composite Shortbow","crossbow":"Crossbow","dagger":"Dagger","dagger-pistol":"Dagger Pistol","daikyu":"Daikyu","dandpatta":"Dandpatta","dart":"Dart","dogslicer":"Dogslicer","donchak":"Donchak","double-barreled-musket":"Double-Barreled Musket","double-barreled-pistol":"Double-Barreled Pistol","dragon-mouth-pistol":"Dragon Mouth Pistol","dueling-pistol":"Dueling Pistol","dueling-spear":"Dueling Spear","dwarven-scattergun":"Dwarven Scattergun","dwarven-war-axe":"Dwarven War Axe","elven-branched-spear":"Elven Branched Spear","elven-curve-blade":"Elven Curve Blade","explosive-dogslicer":"Explosive Dogslicer","exquisite-sword-cane-sheath":"Exquisite Sword Cane Sheath","exquisite-sword-cane":"Exquisite Sword Cane","falchion":"Falchion","fangwire":"Fangwire","fauchard":"Fauchard","fighting-fan":"Fighting Fan","fighting-stick":"Fighting Stick","filchers-fork":"Filcher\'s Fork","fire-lance":"Fire Lance","fire-poi":"Fire Poi","fist":"Fist","flail":"Flail","flingflenser":"Flingflenser","flintlock-musket":"Flintlock Musket","flintlock-pistol":"Flintlock Pistol","flying-talon":"Flying Talon","forked-bipod":"Forked Bipod","hand-cannon":"Hand Cannon","harmona-gun":"Harmona Gun","hook-sword":"Hook Sword","gada":"Gada","gaff":"Gaff","gauntlet":"Gauntlet","gill-hook":"Gill Hook","glaive":"Glaive","gnome-amalgam-musket":"Gnome Amalgam Musket","gnome-flickmace":"Gnome Flickmace","gnome-hooked-hammer":"Gnome Hooked Hammer","greataxe":"Greataxe","greatclub":"Greatclub","greatpick":"Greatpick","greatsword":"Greatsword","griffon-cane":"Griffon Cane","guisarme":"Guisarme","gun-sword":"Gun Sword","halberd":"Halberd","halfling-sling-staff":"Halfling Sling Staff","hammer-gun":"Hammer Gun","hand-adze":"Hand Adze","hand-crossbow":"Hand Crossbow","hatchet":"Hatchet","heavy-crossbow":"Heavy Crossbow","hongali-hornbow":"Hongali Hornbow","horsechopper":"Horsechopper","injection-spear":"Injection Spear","javelin":"Javelin","jaws":"Jaws","jezail":"Jezail","juggling-club":"Juggling Club","kalis":"Kalis","kama":"Kama","karambit":"Karambit","katana":"Katana","katar":"Katar","khakkara":"Khakkara","khopesh":"Khopesh","knuckle-duster":"Knuckle Duster","kris":"Kris","kukri":"Kukri","kusarigama":"Kusarigama","lance":"Lance","leiomano":"Leiomano","light-hammer":"Light Hammer","light-mace":"Light Mace","light-pick":"Light Pick","lion-scythe":"Lion Scythe","long-air-repeater":"Long Air Repeater","longbow":"Longbow","longspear":"Longspear","longsword":"Longsword","mace":"Mace","mace-multipistol":"Mace Multipistol","machete":"Machete","main-gauche":"Main-Gauche","mambele":"Mambele","maul":"Maul","meteor-hammer":"Meteor Hammer","mithral-tree":"Mithral Tree","monkeys-fist":"Monkey\'s Fist","morningstar":"Morningstar","naginata":"Naginata","nightstick":"Nightstick","nine-ring-sword":"Nine-Ring Sword","nunchaku":"Nunchaku","ogre-hook":"Ogre Hook","orc-knuckle-dagger":"Orc Knuckle Dagger","orc-necksplitter":"Orc Necksplitter","panabas":"Panabas","pepperbox":"Pepperbox","piercing-wind":"Piercing Wind","pick":"Pick","piranha-kiss":"Piranha Kiss","poi":"Poi","polytool":"Polytool","probing-cane":"Probing Cane","ranseur":"Ranseur","rapier":"Rapier","rapier-pistol":"Rapier Pistol","reinforced-wheels":"Reinforced Wheels","repeating-crossbow":"Repeating Crossbow","repeating-hand-crossbow":"Repeating Hand Crossbow","repeating-heavy-crossbow":"Repeating Heavy Crossbow","rhoka-sword":"Rhoka Sword","rungu":"Rungu","sai":"Sai","sap":"Sap","sawtooth-saber":"Sawtooth Saber","scimitar":"Scimitar","scorpion-whip":"Scorpion Whip","scourge":"Scourge","scythe":"Scythe","shauth-lash":"Shauth Lash","shears":"Shears","shield-bash":"Shield Bash","shield-boss":"Shield Boss","shield-spikes":"Shield Spikes","shobhad-longrifle":"Shobhad Longrifle","shortbow":"Shortbow","shortsword":"Shortsword","shuriken":"Shuriken","sickle":"Sickle","sickle-saber":"Sickle-saber","slide-pistol":"Slide Pistol","sling-bullets":"Sling Bullets","sling":"Sling","spear":"Spear","spiked-chain":"Spiked Chain","spiked-gauntlet":"Spiked Gauntlet","spiral-rapier":"Spiral Rapier","spoon-gun":"Spoon Gun","staff":"Staff","starknife":"Starknife","stiletto-pen":"Stiletto Pen","sun-sling":"Sun Sling","switchscythe":"Switchscythe","sword-cane":"Sword Cane","talwar":"Talwar","tamchal-chakram":"Tamchal Chakram","taw-launcher":"Taw Launcher","tekko-kagi":"Tekko-kagi","temple-sword":"Temple Sword","tengu-gale-blade":"Tengu Gale Blade","thorn-whip":"Thorn whip","three-peaked-tree":"Three Peaked Tree","throwing-knife":"Throwing Knife","thunder-sling":"Thunder Sling","thundermace":"Thundermace","tonfa":"Tonfa","tri-bladed-katar":"Tri-bladed Katar","tricky-pick":"Tricky Pick","trident":"Trident","triggerbrand":"Triggerbrand","urumi":"Urumi","visap":"Visap","wakizashi":"Wakizashi","war-flail":"War Flail","war-lance":"War Lance","war-razor":"War Razor","warhammer":"Warhammer","wheel-blades":"Wheel Blades","wheel-spikes":"Wheel Spikes","whip":"Whip","whip-claw":"Whip Claw","wind-and-fire-wheel":"Wind and Fire Wheel","wish-blade":"Wish Blade","wish-knife":"Wish Knife","wooden-taws":"Wooden Taws","zulfikar":"Zulfikar"}},"WeaponAbilityLabel":"Weapon Ability","WeaponBaseLabel":"Base","WeaponBonusAttackLabel":"Bonus Attack","WeaponBonusDamageLabel":"Bonus Damage","WeaponBaseDamageLabel":"Base Weapon Damage","WeaponBaseDamageTitle":"This section configures the base damage for the weapon. Additional die from Striking runes should not be added here and instead configured in the Weapon Runes section above.","WeaponCustomDamageLabel":"Additional Custom Damage","WeaponCustomDamageTitle":"This section adds any custom damage that is not covered by the Rune system. The Strike Effect and Critcal Effect attributes are not currently used in the system and are informational only.","WeaponDamageLabel":"Base Damage","WeaponGroups":"Weapon Groups","WeaponGroupAxe":"Axe","WeaponGroupBomb":"Bomb","WeaponGroupBow":"Bow","WeaponGroupBrawling":"Brawling","WeaponGroupClub":"Club","WeaponGroupDart":"Dart","WeaponGroupFirearm":"Firearm","WeaponGroupFlail":"Flail","WeaponGroupHammer":"Hammer","WeaponGroupKnife":"Knife","WeaponGroupLabel":"Group","WeaponGroupPick":"Pick","WeaponGroupPolearm":"Polearm","WeaponGroupShield":"Shield","WeaponGroupSling":"Sling","WeaponGroupSpear":"Spear","WeaponGroupSword":"Sword","WeaponHands1":"One","WeaponHands1Plus":"One Plus","WeaponHands2":"Two","WeaponMAPDefaultOption":"Default (uses Agile trait if present)","WeaponMAPLabel":"Multiple Attack Penalty","WeaponPotencyRune1":"Weapon Potency (+1)","WeaponPotencyRune2":"Weapon Potency (+2)","WeaponPotencyRune3":"Weapon Potency (+3)","WeaponPotencyRune4":"Weapon Potency (+4)","WeaponPropertyCriticalDamageLabel":"Critical Damage","WeaponPropertyCriticalEffectLabel":"Critical Effect","WeaponPropertyRune":{"anarchic":{"Name":"Anarchic","Note":{"criticalSuccess":"When you critically succeed at a Strike with this weapon against a lawful creature, roll [[/r 1d6 #Anarchic Rune]]. On a 1 or 2, you deal double minimum damage; on a 3 or 4, double your damage normally; on a 5 or 6, you deal double maximum damage."}},"ancestralEchoing":{"Name":"Ancestral Echoing"},"anchoring":{"Name":"Anchoring","Note":{"criticalSuccess":"If you critically hit a target with an anchoring weapon, the weapon casts <em>@UUID[Compendium.pf2e.spells-srd.ksLCg62cLOojw3gN]{Dimensional Anchor}</em> on the target (@Check[type:will|dc:27|name:Anchoring Rune], counteract modifier [[/r 1d20+17 # Anchoring Rune Counteract Check]]{+17})."}},"axiomatic":{"Name":"Axiomatic","Note":{"criticalSuccess":"When you critically succeed at an attack roll with this weapon against a chaotic creature, instead of rolling, count each weapon damage die as average damage rounded up (3 for d4, 4 for d6, 5 for d8, 6 for d10, 7 for d12)."}},"bane":{"Name":"Bane"},"bloodbane":{"Name":"Bloodbane"},"bloodthirsty":{"Name":"Bloodthirsty","Note":{"criticalSuccess":"When you critically hit a target that\'s taking @UUID[Compendium.pf2e.conditionitems.lDVqvLKA6eF3Df60]{Persistent Bleed Damage}, your target becomes @UUID[Compendium.pf2e.conditionitems.4D2KBtexWXa6oUMR]{Drained 1}."}},"brilliant":{"Name":"Brilliant","Note":{"criticalSuccess":"On a critical hit, the target must succeed at a @Check[type:fortitude|dc:29|name:Brilliant Rune] save or be @UUID[Compendium.pf2e.conditionitems.XgEqL1kFApUbl5Z2]{Blinded} for 1 round."}},"conducting":{"Name":"Conducting"},"corrosive":{"Name":"Corrosive","Note":{"criticalSuccess":"On a critical hit, the target\'s armor (if any) takes [[/r {3d6}[acid] #Corrosive Rune]]{3d6 acid} damage (before applying Hardness); if the target has a shield raised, the shield takes this damage instead."}},"crushing":{"Name":"Crushing","Note":{"criticalSuccess":"When you critically hit a target with this weapon, your target becomes @UUID[Compendium.pf2e.conditionitems.i3OJZU2nk64Df3xm]{Clumsy 1} and @UUID[Compendium.pf2e.conditionitems.MIRkyAjyBeXivMa7]{Enfeebled 1} until the end of your next turn."}},"cunning":{"Name":"Cunning"},"dancing":{"Name":"Dancing"},"disrupting":{"Name":"Disrupting","Note":{"criticalSuccess":"On a critical hit, the undead is also @UUID[Compendium.pf2e.conditionitems.MIRkyAjyBeXivMa7]{Enfeebled 1} until the end of your next turn."}},"energizing":{"Name":"Energizing"},"extending":{"Name":"Extending"},"fanged":{"Name":"Fanged"},"fearsome":{"Name":"Fearsome","Note":{"criticalSuccess":"When you critically hit with this weapon, the target becomes @UUID[Compendium.pf2e.conditionitems.TBSHQspnbcqxsmjL]{Frightened 1}."}},"flaming":{"Name":"Flaming","Note":{"criticalSuccess":"When you critically succeed at a Strike with this weapon, you deal an additional [[/r {1d10}[persistent,fire]]] @UUID[Compendium.pf2e.conditionitems.lDVqvLKA6eF3Df60]{Persistent Fire Damage}."}},"frost":{"Name":"Frost","Note":{"criticalSuccess":"On a critical hit, the target is also @UUID[Compendium.pf2e.conditionitems.xYTAsEpcJE1Ccni3]{Slowed 1} until the end of your next turn unless it succeeds at a @Check[type:fortitude|dc:24|name:Frost Rune] save."}},"ghostTouch":{"Name":"Ghost Touch","Note":"The weapon can harm creatures without physical form. A ghost touch weapon is particularly effective against incorporeal creatures, which almost always have a specific vulnerability to ghost touch weapons. Incorporeal creatures can touch, hold, and wield ghost touch weapons (unlike most physical objects)."},"greaterAnchoring":{"Name":"Greater Anchoring","Note":{"criticalSuccess":"When you critically hit a target with a weapon with the anchoring rune, the weapon casts 8th-level <em>@UUID[Compendium.pf2e.spells-srd.ksLCg62cLOojw3gN]{Dimensional Anchor}</em> on the target (@Check[type:will|dc:38|name:Greater Anchoring Rune], counteract modifier [[/r 1d20+28 #Greater Anchoring Rune Counteract Check]]{+28}), except that if the target critically succeeds at its Will save, instead of having no effect, the <em>dimensional anchor</em> lasts for 1 round.","success":"<strong>Greater Anchoring Rune</strong> When you hit a target with the weapon but don\'t critically hit, the target is affected by 4th-level <em>@UUID[Compendium.pf2e.spells-srd.ksLCg62cLOojw3gN]{Dimensional Anchor}</em> for 1 round without a save (counteract modifier [[/r 1d20+28 #Greater Anchoring Rune Counteract Check]]{+28})."}},"greaterBloodbane":{"Name":"Greater Bloodbane"},"greaterBrilliant":{"Name":"Greater Brilliant","Note":{"criticalSuccess":"Damage dealt by this weapon ignores the target\'s fire, good, or positive resistance. On a critical hit, the target must succeed at a @Check[type:fortitude|dc:41|name:Greater Brilliant Rune] save or be @UUID[Compendium.pf2e.conditionitems.XgEqL1kFApUbl5Z2]{Blinded} for 1 round.","success":"<strong>Greater Brilliant Rune</strong> Damage dealt by this weapon ignores the target\'s fire, good, or positive resistance."}},"greaterCorrosive":{"Name":"Greater Corrosive","Note":{"criticalSuccess":"The acid damage dealt by this weapon ignores the target\'s acid resistance. On a critical hit, the target\'s armor (if any) takes [[/r {6d6}[acid]]]{6d6 acid} damage (before applying Hardness); if the target has a shield raised, the shield takes this damage instead.","success":"<strong>Greater Corrosive Rune</strong> The acid damage dealt by this weapon ignores the target\'s acid resistance."}},"greaterCrushing":{"Name":"Greater Crushing","Note":{"criticalSuccess":"Your critical hits leave the target @UUID[Compendium.pf2e.conditionitems.i3OJZU2nk64Df3xm]{Clumsy 2} and @UUID[Compendium.pf2e.conditionitems.MIRkyAjyBeXivMa7]{Enfeebled 2} until the end of your next turn."}},"greaterDisrupting":{"Name":"Greater Disrupting","Note":{"criticalSuccess":"On a critical hit, the undead creature must attempt a @Check[type:fortitude|dc:34|traits:incapacitation|name:Greater Disrupting Rune] save with the following effects. This is an incapacitation effect.<br /><br /><strong>Critical Success</strong> It\'s @UUID[Compendium.pf2e.conditionitems.MIRkyAjyBeXivMa7]{Enfeebled 1} until the end of your next turn.<br /><strong>Success</strong> It\'s @UUID[Compendium.pf2e.conditionitems.MIRkyAjyBeXivMa7]{Enfeebled 2} until the end of your next turn.<br /><strong>Failure</strong> It\'s @UUID[Compendium.pf2e.conditionitems.MIRkyAjyBeXivMa7]{Enfeebled 3} until the end of your next turn.<br /><strong>Critical Failure</strong> It\'s destroyed."}},"greaterExtending":{"Name":"Greater Extending"},"greaterFanged":{"Name":"Greater Fanged"},"greaterFearsome":{"Name":"Greater Fearsome","Note":{"criticalSuccess":"When you critically hit with this weapon, the target becomes @UUID[Compendium.pf2e.conditionitems.TBSHQspnbcqxsmjL]{Frightened 2}."}},"greaterFlaming":{"Name":"Greater Flaming","Note":{"criticalSuccess":"Fire damage dealt by this weapon (including the persistent fire damage) ignores the target\'s fire resistance. When you critically succeed at a Strike with this weapon, you deal an additional [[/r {2d10}[persistent,fire]]] @UUID[Compendium.pf2e.conditionitems.lDVqvLKA6eF3Df60]{Persistent Fire Damage}.","success":"Fire damage dealt by this weapon ignores the target\'s fire resistance."}},"greaterFrost":{"Name":"Greater Frost","Note":{"criticalSuccess":"Cold damage dealt by this weapon ignores the target\'s cold resistance. On a critical hit, the target is also @UUID[Compendium.pf2e.conditionitems.xYTAsEpcJE1Ccni3]{Slowed 1} until the end of your next turn unless it succeeds at a @Check[type:fortitude|dc:34|name:Greater Thundering Rune] save.","success":"<strong>Greater Frost Rune</strong> Cold damage dealt by this weapon ignores the target\'s cold resistance."}},"greaterHauling":{"Name":"Greater Hauling"},"greaterImpactful":{"Name":"Greater Impactful","Note":{"criticalSuccess":"On a critical hit, you can choose to force the target to succeed at a @Check[type:fortitude|dc:37|name:Greater Impactful Rune] save or be pushed 10 feet away from you."}},"greaterShock":{"Name":"Greater Shock","Note":{"criticalSuccess":"Electricity damage dealt by this weapon ignores the targets electricity resistance (and the other creatures\' on a critical hit). On a critical hit, electricity arcs out to deal an equal amount of electricity damage to up to two other creatures of your choice within 10 feet of the target.","success":"Electricity damage dealt by this weapon ignores the target\'s electricity resistance."}},"greaterThundering":{"Name":"Greater Thundering","Note":{"criticalSuccess":"Sonic damage dealt by this weapon ignores the target\'s sonic resistance. On a critical hit, the target has to succeed at a @Check[type:fortitude|dc:34|name:Greater Thundering Rune] save or be @UUID[Compendium.pf2e.conditionitems.9PR9y0bi4JPKnHPR]{Deafened} permanently.","success":"Sonic damage dealt by this weapon ignores the target\'s sonic resistance."}},"grievous":{"Name":"Grievous","Note":{"Axe":"<strong>Grievous Rune</strong> You can damage a third creature, with the same restrictions.","Bow":"<strong>Grievous Rune</strong> The Athletics check to pull the missile free is DC 20.","Brawling":"<strong>Grievous Rune</strong> The target takes a -4 circumstance penalty to its save.","Club":"<strong>Grievous Rune</strong> You can knock the target up to 15 feet away.","Dart":"<strong>Grievous Rune</strong> The base persistent bleed damage increases to [[/r {2d6}[persistent,bleed]]] @UUID[Compendium.pf2e.conditionitems.lDVqvLKA6eF3Df60]{Persistent Bleed Damage}.","Flail":"<strong>Grievous Rune</strong> You move the target 5 feet. You can\'t move it away from you, but you can move it in another direction of your choice.","Hammer":"<strong>Grievous Rune</strong> You can also knock the target 5 feet away from you.","Knife":"<strong>Grievous Rune</strong> The target takes a -5-foot status penalty to its Speed while it has the @UUID[Compendium.pf2e.conditionitems.lDVqvLKA6eF3Df60]{Persistent Bleed Damage}.","Pick":"<strong>Grievous Rune</strong> The extra damage from the critical specialization effect increases to 4 per weapon damage die.","Polearm":"<strong>Grievous Rune</strong> You can move the target up to 10 feet.","Shield":"<strong>Grievous Rune</strong> You can knock the target up to 10 feet away.","Sling":"<strong>Grievous Rune</strong> The target also takes a -10-foot status penalty to its Speed for 1 round if it fails the save.","Spear":"<strong>Grievous Rune</strong> The clumsy condition lasts for 2 rounds.","Sword":"<strong>Grievous Rune</strong> The target is flat-footed until the end of your next turn."}},"hauling":{"Name":"Hauling"},"holy":{"Name":"Holy","Note":{"criticalSuccess":"(<span class=\\"pf2-icon\\">R</span> command; once per day)<br /><br /><strong>Trigger</strong> You critically succeed at an attack roll against an evil creature with the weapon<br /><br /><strong>Effect</strong> You regain HP equal to double the evil creature\'s level. This is a good, positive, healing effect."}},"hopeful":{"Name":"Hopeful","Note":{"criticalSuccess":"On a critical hit with this weapon, you inspire your comrades, pushing them to fight harder and stand for your shared convictions. Allies within 30 feet that share at least one alignment component with you gain a +1 status bonus to attack rolls until the end of your next turn."}},"impactful":{"Name":"Impactful","Note":{"criticalSuccess":"On a critical hit, you can choose to force the target to succeed at a @Check[type:fortitude|dc:27|name:Impactful Rune] save or be pushed 5 feet away from you."}},"keen":{"Name":"Keen","Note":"Attacks with this weapon are a critical hit on a 19 on the die as long as that result is a success. This property has no effect on a 19 if the result would be a failure."},"kinWarding":{"Name":"Kin-Warding"},"majorFanged":{"Name":"Major Fanged"},"pacifying":{"Name":"Pacifying"},"returning":{"Name":"Returning","Note":"<strong>Returning Rune</strong> When you make a thrown Strike with this weapon, it flies back to your hand after the Strike is complete. If your hands are full when the weapon returns, it falls to the ground in your space."},"serrating":{"Name":"Serrating"},"shifting":{"Name":"Shifting"},"shock":{"Name":"Shock","Note":{"criticalSuccess":"On a critical hit, electricity arcs out to deal an equal amount of electricity damage to up to two other creatures of your choice within 10 feet of the target."}},"speed":{"Name":"Speed"},"spellStoring":{"Name":"Spell-Storing"},"thundering":{"Name":"Thundering","Note":{"criticalSuccess":"On a critical hit, the target has to succeed at a @Check[type:fortitude|dc:24|name:Thundering Rune] save or be @UUID[Compendium.pf2e.conditionitems.9PR9y0bi4JPKnHPR]{Deafened} for 1 minute (or 1 hour on a critical failure)."}},"unholy":{"Name":"Unholy","Note":{"criticalSuccess":"(<span class=\\"pf2-icon\\">R</span> command; once per day)<br /><br /><strong>Trigger</strong> You critically succeed at an attack roll against a good creature with the weapon<br /><br /><strong>Effect</strong> The target takes @UUID[Compendium.pf2e.conditionitems.lDVqvLKA6eF3Df60]{Persistent Bleed Damage} equal to 1d8 per weapon damage die of the etched weapon."}},"vorpal":{"Name":"Vorpal","Note":{"criticalSuccess":"(<span class=\\"pf2-icon\\">R</span> envision (death, incapacitation))<br /><br /><strong>Trigger</strong> You roll a natural 20 on a Strike with the weapon, critically succeed, and deal slashing damage. The target must have a head<br /><br /><strong>Effect</strong> The target must succeed at a @Check[type:fortitude|dc:37|traits:death,incapacitation]|name:Vorpal Rune] save or be decapitated. This kills any creature except ones that don\'t require a head to live. For creatures with multiple heads, this usually kills the creature only if you sever its last head."}},"wounding":{"Name":"Wounding","Note":{"criticalSuccess":"When you critically hit a creature with a wounding weapon, you deal an extra [[/r {1d6*2}[persistent,bleed]]] @UUID[Compendium.pf2e.conditionitems.lDVqvLKA6eF3Df60]{Persistent Bleed Damage}.","success":"When you hit a creature with a wounding weapon, you deal an extra [[/r {1d6}[persistent,bleed]]] @UUID[Compendium.pf2e.conditionitems.lDVqvLKA6eF3Df60]{Persistent Bleed Damage}."}}},"WeaponPropertyStrikeDamageLabel":"Strike Damage","WeaponPropertyStrikeEffectLabel":"Strike Effect","WeaponRange10":"10 ft.","WeaponRange100":"100 ft.","WeaponRange120":"120 ft.","WeaponRange140":"140 ft.","WeaponRange150":"150 ft.","WeaponRange180":"180 ft.","WeaponRange20":"20 ft.","WeaponRange240":"240 ft.","WeaponRange30":"30 ft.","WeaponRange300":"300 ft.","WeaponRange40":"40 ft.","WeaponRange50":"50 ft.","WeaponRange60":"60 ft.","WeaponRange70":"70 ft.","WeaponRange80":"80 ft.","WeaponRange90":"90 ft.","WeaponRangeLabel":"Weapon Range","WeaponRangeMelee":"Melee","WeaponRangeN":"{range} ft.","WeaponRangeReach":"Reach","WeaponReloadLabel":"Reload Time","WeaponSpecialization":"Weapon Specialization","WeaponSplashDamageLabel":"Splash Damage","WeaponStrikeLabel":"Strike","WeaponTypeAdvanced":"Advanced Weapon","WeaponTypeLabel":"Category","WeaponTypeMartial":"Martial Weapon","WeaponTypeSimple":"Simple Weapon","WeaponTypeSpecial":"Other Weapons","WeaponTypeUnarmed":"Unarmed Attack","Weight":"Weight","WeightTitle":"Your weight","WorldClock":{"Button":{"AddOneRound":"1 Round","AddOneMinute":"1 Minute","AddTenMinutes":"10 Minutes","AddOneHour":"1 Hour","AddOneDay":"1 Day","AddOneWeek":"1 Week","Advance":"Advance","Retract":"Retract","TimeOfDay":{"Advance":{"Dawn":"Advance to Dawn","Dusk":"Advance to Dusk","Noon":"Advance to Noon","Midnight":"Advance to Midnight"},"Retract":{"Dawn":"Retract to Dawn","Dusk":"Retract to Dusk","Noon":"Retract to Noon","Midnight":"Retract to Midnight"}}},"Placeholder":"Number","Title":"World Clock","AR":{"Era":"AR","Months":{"January":"Abadius","February":"Calistril","March":"Pharast","April":"Gozran","May":"Desnus","June":"Sarenith","July":"Erastus","August":"Arodus","September":"Rova","October":"Lamashan","November":"Neth","December":"Kuthona"},"Weekdays":{"Monday":"Moonday","Tuesday":"Toilday","Wednesday":"Wealday","Thursday":"Oathday","Friday":"Fireday","Saturday":"Starday","Sunday":"Sunday"}},"IC":{"Era":"IC"},"AD":{"Era":"AD"},"CE":{"Era":"CE"},"Date":"{weekday}, {day} of {month}, {year} {era}"},"condition":{"group":{"detection":"Degrees of Detection","attitudes":"Attitudes","senses":"Senses","death":"Death and Dying"},"blinded":{"name":"Blinded","rules":"<p>You can\'t see. All normal terrain is difficult terrain to you. You can\'t detect anything using vision. You automatically critically fail Perception checks that require you to be able to see, and if vision is your only precise sense, you take a -4 status penalty to Perception checks. You are immune to visual effects. Blinded overrides dazzled.</p>","summary":"You\'re unable to see."},"broken":{"name":"Broken","rules":"<p>Broken is a condition that affects objects. An object is broken when damage has reduced its Hit Points to equal or less than its Broken Threshold. A broken object can\'t be used for its normal function, nor does it grant bonuses-with the exception of armor. Broken armor still grants its item bonus to AC, but it also imparts a status penalty to AC depending on its category: -1 for broken light armor, -2 for broken medium armor, or -3 for broken heavy armor.</p>\\n<p>A broken item still imposes penalties and limitations normally incurred by carrying, holding, or wearing it. For example, broken armor would still impose its Dexterity modifier cap, check penalty, and so forth.</p>\\n<p>If an effect makes an item broken automatically and the item has more HP than its Broken Threshold, that effect also reduces the item\'s current HP to the Broken Threshold.</p>","summary":"This item can\'t be used for its normal function until repaired."},"clumsy":{"name":"Clumsy","rules":"<p>Your movements become clumsy and inexact. Clumsy always includes a value. You take a status penalty equal to the condition value to Dexterity-based checks and DCs, including AC, Reflex saves, ranged attack rolls, and skill checks using Acrobatics, Stealth, and Thievery.</p>","summary":"You can\'t move as easily or gracefully as usual."},"concealed":{"name":"Concealed","rules":"<p>While you are concealed from a creature, such as in a thick fog, you are difficult for that creature to see. You can still be observed, but you\'re tougher to target. A creature that you\'re concealed from must succeed at a @Check[type:flat|dc:5] when targeting you with an attack, spell, or other effect.</p>\\n<p>Area effects aren\'t subject to this flat check. If the check fails, the attack, spell, or effect doesn\'t affect you.</p>","summary":"Fog or similar obscuration makes you difficult to see and target."},"confused":{"name":"Confused","rules":"<p>You don\'t have your wits about you, and you attack wildly. You are flat-footed, you don\'t treat anyone as your ally (though they might still treat you as theirs), and you can\'t Delay, Ready, or use reactions.<p></p>You use all your actions to Strike or cast offensive cantrips, though the GM can have you use other actions to facilitate attack, such as draw a weapon, move so that a target is in reach, and so forth. Your targets are determined randomly by the GM. If you have no other viable targets, you target yourself, automatically hitting but not scoring a critical hit. If it\'s impossible for you to attack or cast spells, you babble incoherently, wasting your actions.</p>\\n<p>Each time you take damage from an attack or spell, you can attempt a @Check[type:flat|dc:11] to recover from your confusion and end the condition.</p>","summary":"You attack indiscriminately."},"controlled":{"name":"Controlled","rules":"<p>Someone else is making your decisions for you, usually because you\'re being commanded or magically dominated. The controller dictates how you act and can make you use any of your actions, including attacks, reactions, or even Delay. The controller usually does not have to spend their own actions when controlling you.</p>","summary":"Another creature determines your actions."},"dazzled":{"name":"Dazzled","rules":"<p>Your eyes are overstimulated. If vision is your only precise sense, all creatures and objects are concealed from you.</p>","summary":"Everything is concealed to you."},"deafened":{"name":"Deafened","rules":"<p>You can\'t hear. You automatically critically fail Perception checks that require you to be able to hear. You take a -2 status penalty to Perception checks for initiative and checks that involve sound but also rely on other senses. If you perform an action with the auditory trait, you must succeed at a @Check[type:flat|dc:5] or the action is lost; attempt the check after spending the action but before any effects are applied. You are immune to auditory effects.</p>","summary":"You\'re unable to hear."},"doomed":{"name":"Doomed","rules":"<p>Your life is ebbing away, bringing you ever closer to death. Some powerful spells and evil creatures can inflict the doomed condition on you. Doomed always includes a value. The maximum dying value at which you die is reduced by your doomed value. For example, if you were doomed 1, you would die upon reaching dying 3 instead of dying 4. If your maximum dying value is ever reduced to 0, you instantly die. When you die, you\'re no longer doomed.</p>\\n<p>Your doomed value decreases by 1 each time you get a full night\'s rest.</p>","summary":"With your soul in peril, you are now closer to death."},"drained":{"name":"Drained","rules":"<p>When a creature successfully drains you of blood or life force, you become less healthy. Drained always includes a value. You take a status penalty equal to your drained value on Constitution-based checks, such as Fortitude saves. You also lose a number of Hit Points equal to your level (minimum 1) times the drained value, and your maximum Hit Points are reduced by the same amount. For example, if you\'re hit by an effect that inflicts drained 3 and you\'re a 3rd-level character, you lose 9 Hit Points and reduce your maximum Hit Points by 9. Losing these Hit Points doesn\'t count as taking damage.</p>\\n<p>Each time you get a full night\'s rest, your drained value decreases by 1. This increases your maximum Hit Points, but you don\'t immediately recover the lost Hit Points.</p>","summary":"Blood loss or something similar has leached your vitality."},"dying":{"name":"Dying","rules":"<p>You are bleeding out or otherwise at death\'s door. While you have this condition, you are unconscious. Dying always includes a value, and if it ever reaches dying 4, you die. If you\'re dying, you must attempt a recovery check at the start of your turn each round to determine whether you get better or worse. Your dying condition increases by 1 if you take damage while dying, or by 2 if you take damage from an enemy\'s critical hit or a critical failure on your save.</p>\\n<p>If you lose the dying condition by succeeding at a recovery check and are still at 0 Hit Points, you remain unconscious, but you can wake up as described in that condition. You lose the dying condition automatically and wake up if you ever have 1 Hit Point or more. Any time you lose the dying condition, you gain the wounded 1 condition, or increase your wounded condition value by 1 if you already have that condition.</p>","summary":"You\'re slipping closer to death."},"encumbered":{"name":"Encumbered","rules":"<p>You are carrying more weight than you can manage. While you\'re encumbered, you\'re clumsy 1 and take a 10-foot penalty to all your Speeds. As with all penalties to your Speed, this can\'t reduce your Speed below 5 feet.</p>","summary":"You\'re carrying more weight than you can manage."},"enfeebled":{"name":"Enfeebled","rules":"<p>You\'re physically weakened. Enfeebled always includes a value. When you are enfeebled, you take a status penalty equal to the condition value to Strength-based rolls and DCs, including Strength-based melee attack rolls, Strength-based damage rolls, and Athletics checks.</p>","summary":"Your strength has been sapped away."},"fascinated":{"name":"Fascinated","rules":"<p>You are compelled to focus your attention on something, distracting you from whatever else is going on around you. You take a -2 status penalty to Perception and skill checks, and you can\'t use actions with the concentrate trait unless they or their intended consequences are related to the subject of your fascination (as determined by the GM). For instance, you might be able to Seek and Recall Knowledge about the subject, but you likely couldn\'t cast a spell targeting a different creature. This condition ends if a creature uses hostile actions against you or any of your allies.</p>","summary":"You are compelled to focus your attention on something."},"fatigued":{"name":"Fatigued","rules":"<p>You\'re tired and can\'t summon much energy. You take a -1 status penalty to AC and saving throws. While exploring, you can\'t choose an exploration activity.</p>\\n<p>You recover from fatigue after a full night\'s rest.</p>","summary":"Your defenses are lower and you can\'t focus while exploring."},"flat-footed":{"name":"Flat-Footed","rules":"<p>You\'re distracted or otherwise unable to focus your full attention on defense. You take a -2 circumstance penalty to AC. Some effects give you the flat-footed condition only to certain creatures or against certain attacks. Others- especially conditions-can make you universally flatfooted against everything. If a rule doesn\'t specify that the condition applies only to certain circumstances, it applies to all of them; for example, many effects simply say \\"The target is flat-footed.\\"</p>","summary":"You\'re unable to defend yourself to your full capability."},"fleeing":{"name":"Fleeing","rules":"<p>You\'re forced to run away due to fear or some other compulsion. On your turn, you must spend each of your actions trying to escape the source of the fleeing condition as expediently as possible (such as by using move actions to flee, or opening doors barring your escape). The source is usually the effect or caster that gave you the condition, though some effects might define something else as the source. You can\'t Delay or Ready while fleeing.</p>","summary":"You must run away."},"friendly":{"name":"Friendly","rules":"<p>This condition reflects a creature\'s disposition toward a particular character, and only supernatural effects (like a spell) can impose these conditions on player characters. A creature that is friendly to a character likes that character. The character can attempt to make a Request of a friendly creature, and the friendly creature is likely to agree to a simple and safe request that doesn\'t cost it much to fulfill. If the character or one of their allies uses hostile actions against the creature, the creature gains a worse attitude condition depending on the severity of the hostile action, as determined by the GM.</p>","summary":"An NPC with this condition has a good attitude toward you."},"frightened":{"name":"Frightened","rules":"<p>You\'re gripped by fear and struggle to control your nerves. The frightened condition always includes a value. You take a status penalty equal to this value to all your checks and DCs. Unless specified otherwise, at the end of each of your turns, the value of your frightened condition decreases by 1.</p>","summary":"Fear makes you less capable of attacking and defending."},"grabbed":{"name":"Grabbed","rules":"<p>You\'re held in place by another creature, giving you the flat-footed and immobilized conditions. If you attempt a manipulate action while grabbed, you must succeed at a @Check[type:flat|dc:5] or it is lost; roll the check after spending the action, but before any effects are applied.</p>","summary":"A creature, object, or magic holds you in place."},"helpful":{"name":"Helpful","rules":"<p>This condition reflects a creature\'s disposition toward a particular character, and only supernatural effects (like a spell) can impose these conditions on player characters. A creature that is helpful to a character wishes to actively aid that character. It will accept reasonable Requests from that character, as long as such requests aren\'t at the expense of the helpful creature\'s goals or quality of life. If the character or one of their allies uses a hostile action against the creature, the creature gains a worse attitude condition depending on the severity of the hostile action, as determined by the GM.</p>","summary":"An NPC with this condition wants to assist you."},"hidden":{"name":"Hidden","rules":"<p>While you\'re hidden from a creature, that creature knows the space you\'re in but can\'t tell precisely where you are. You typically become hidden by using Stealth to Hide. When Seeking a creature using only imprecise senses, it remains hidden, rather than observed. A creature you\'re hidden from is flat-footed to you, and it must succeed at a @Check[type:flat|dc:11] when targeting you with an attack, spell, or other effect or it fails affect you. Area effects aren\'t subject to this flat check.</p>\\n<p>A creature might be able to use the Seek action to try to observe you.</p>","summary":"A creature you\'re hidden from knows your location but can\'t see you."},"hostile":{"name":"Hostile","rules":"<p>This condition reflects a creature\'s disposition toward a particular character, and only supernatural effects (like a spell) can impose these conditions on player characters. A creature that is hostile to a character actively seeks to harm that character. It doesn\'t necessarily attack, but it won\'t accept Requests from the character.</p>","summary":"An NPC with this condition wants to harm you."},"immobilized":{"name":"Immobilized","rules":"<p>You can\'t use any action with the move trait. If you\'re immobilized by something holding you in place and an external force would move you out of your space, the force must succeed at a check against either the DC of the effect holding you in place or the relevant defense (usually Fortitude DC) of the monster holding you in place.</p>","summary":"You can\'t move."},"indifferent":{"name":"Indifferent","rules":"<p>This condition reflects a creature\'s disposition toward a particular character, and only supernatural effects (like a spell) can impose these conditions on player characters. A creature that is indifferent to a character doesn\'t really care one way or the other about that character. Assume a creature\'s attitude to a given character is indifferent unless specified otherwise.</p>","summary":"An NPC with this condition doesn\'t have a strong opinion about you."},"invisible":{"name":"Invisible","rules":"<p>While invisible, you can\'t be seen. You\'re undetected to everyone. Creatures can Seek to attempt to detect you; if a creature succeeds at its Perception check against your Stealth DC, you become hidden to that creature until you Sneak to become undetected again. If you become invisible while someone can already see you, you start out hidden to the observer (instead of undetected) until you successfully Sneak. You can\'t become observed while invisible except via special abilities or magic.</p>","summary":"Creatures can\'t see you."},"observed":{"name":"Observed","rules":"<p>Anything in plain view is observed by you. If a creature takes measures to avoid detection, such as by using Stealth to Hide, it can become hidden or undetected instead of observed. If you have another precise sense instead of or in addition to sight, you might be able to observe a creature or object using that sense instead. You can observe a creature only with precise senses. When Seeking a creature using only imprecise senses, it remains hidden, rather than observed.</p>","summary":"You\'re in plain view."},"paralyzed":{"name":"Paralyzed","rules":"<p>Your body is frozen in place. You have the flat-footed condition and can\'t act except to Recall Knowledge and use actions that require only the use of your mind (as determined by the GM). Your senses still function, but only in the areas you can perceive without moving your body, so you can\'t Seek while paralyzed.</p>","summary":"Your body is frozen in place."},"persistent-damage":{"name":"Persistent Damage","rules":"<p>Persistent damage comes from effects like acid, being on fire, or many other situations. It appears as \\"X persistent [type] damage,\\" where \\"X\\" is the amount of damage dealt and \\"[type]\\" is the damage type. Instead of taking persistent damage immediately, you take it at the end of each of your turns as long as you have the condition, rolling any damage dice anew each time. After you take persistent damage, roll a @Check[type:flat|dc:15] to see if you recover from the persistent damage. If you succeed, the condition ends.</p>","summary":"You keep taking damage every round."},"petrified":{"name":"Petrified","rules":"<p>You have been turned to stone. You can\'t act, nor can you sense anything. You become an object with a Bulk double your normal Bulk (typically 12 for a petrified Medium creature or 6 for a petrified Small creature), AC 9, Hardness 8, and the same current Hit Points you had when alive. You don\'t have a Broken Threshold. When you\'re turned back into flesh, you have the same number of Hit Points you had as a statue. If the statue is destroyed, you immediately die. While petrified, your mind and body are in stasis, so you don\'t age or notice the passing of time.</p>","summary":"You\'ve been turned to stone."},"prone":{"name":"Prone","rules":"<p>You\'re lying on the ground. You are flat-footed and take a -2 circumstance penalty to attack rolls. The only move actions you can use while you\'re prone are Crawl and Stand. Standing up ends the prone condition. You can Take Cover while prone to hunker down and gain cover against ranged attacks, even if you don\'t have an object to get behind, gaining a +4 circumstance bonus to AC against ranged attacks (but you remain flat-footed).</p>\\n<p>If you would be knocked prone while you\'re Climbing or Flying, you fall. You can\'t be knocked prone when Swimming.</p>","summary":"You\'re lying on the ground and are easier to attack."},"quickened":{"name":"Quickened","rules":"<p>You gain 1 additional action at the start of your turn each round. Many effects that make you quickened specify the types of actions you can use with this additional action. If you become quickened from multiple sources, you can use the extra action you\'ve been granted for any single action allowed by any of the effects that made you quickened. Because quickened has its effect at the start of your turn, you don\'t immediately gain actions if you become quickened during your turn.</p>","summary":"You get an extra action each turn."},"restrained":{"name":"Restrained","rules":"<p>You\'re tied up and can barely move, or a creature has you pinned. You have the flat-footed and immobilized conditions, and you can\'t use any actions with the attack or manipulate traits except to attempt to Escape or Force Open your bonds. Restrained overrides grabbed.</p>","summary":"You\'re tied up and can\'t move, or a grappling creature has you pinned."},"sickened":{"name":"Sickened","rules":"<p>You feel ill. Sickened always includes a value. You take a status penalty equal to this value on all your checks and DCs. You can\'t willingly ingest anything-including elixirs and potions-while sickened.</p>\\n<p>You can spend a single action retching in an attempt to recover, which lets you immediately attempt a Fortitude save against the DC of the effect that made you sickened. On a success, you reduce your sickened value by 1 (or by 2 on a critical success).</p>","summary":"You\'re sick to your stomach."},"slowed":{"name":"Slowed","rules":"<p>You have fewer actions. Slowed always includes a value. When you regain your actions at the start of your turn, reduce the number of actions you regain by your slowed value. Because slowed has its effect at the start of your turn, you don\'t immediately lose actions if you become slowed during your turn.</p>","summary":"You lose actions each turn."},"stunned":{"name":"Stunned","rules":"<p>You\'ve become senseless. You can\'t act while stunned. Stunned usually includes a value, which indicates how many total actions you lose, possibly over multiple turns, from being stunned. Each time you regain actions (such as at the start of your turn), reduce the number you regain by your stunned value, then reduce your stunned value by the number of actions you lost. For example, if you were stunned 4, you would lose all 3 of your actions on your turn, reducing you to stunned 1; on your next turn, you would lose 1 more action, and then be able to use your remaining 2 actions normally. Stunned might also have a duration instead of a value, such as \\"stunned for 1 minute.\\" In this case, you lose all your actions for the listed duration.</p>\\n<p>Stunned overrides slowed. If the duration of your stunned condition ends while you are slowed, you count the actions lost to the stunned condition toward those lost to being slowed. So, if you were stunned 1 and slowed 2 at the beginning of your turn, you would lose 1 action from stunned, and then lose only 1 additional action by being slowed, so you would still have 1 action remaining to use that turn.</p>","summary":"You can\'t use actions."},"stupefied":{"name":"Stupefied","rules":"<p>Your thoughts and instincts are clouded. Stupefied always includes a value. You take a status penalty equal to this value on Intelligence-, Wisdom-, and Charisma-based checks and DCs, including Will saving throws, spell attack rolls, spell DCs, and skill checks that use these ability scores. Any time you attempt to Cast a Spell while stupefied, the spell is disrupted unless you succeed at a flat check with a DC equal to 5 + your stupefied value.</p>","summary":"You can\'t access your full mental faculties, and you have trouble casting spells."},"unconscious":{"name":"Unconscious","rules":"<p>You\'re sleeping, or you\'ve been knocked out. You can\'t act. You take a -4 status penalty to AC, Perception, and Reflex saves, and you have the blinded and flat-footed conditions. When you gain this condition, you fall prone and drop items you are wielding or holding unless the effect states otherwise or the GM determines you\'re in a position in which you wouldn\'t.</p>\\n<p>If you\'re unconscious because you\'re dying, you can\'t wake up while you have 0 Hit Points. If you are restored to 1 Hit Point or more via healing, you lose the dying and unconscious conditions and can act normally on your next turn.</p>\\n<p>If you are unconscious and at 0 Hit Points, but not dying, you naturally return to 1 Hit Point and awaken after sufficient time passes. The GM determines how long you remain unconscious, from a minimum of 10 minutes to several hours. If you receive healing during this time, you lose the unconscious condition and can act normally on your next turn.</p>\\n<p>If you\'re unconscious and have more than 1 Hit Point (typically because you are asleep or unconscious due to an effect), you wake up in one of the following ways. Each causes you to lose the unconscious condition.</p><ul><li>You take damage, provided the damage doesn\'t reduce you to 0 Hit Points. If the damage reduces you to 0 Hit Points, you remain unconscious and gain the dying condition as normal.</li><li>You receive healing, other than the natural healing you get from resting.</li><li>Someone shakes you awake with an Interact action.</li><li>There\'s loud noise going on around you-though this isn\'t automatic. At the start of your turn, you automatically attempt a Perception check against the noise\'s DC (or the lowest DC if there is more than one noise), waking up if you succeed. If creatures are attempting to stay quiet around you, this Perception check uses their Stealth DCs. Some magical effects make you sleep so deeply that they don\'t allow you to attempt this Perception check.</li><li>If you are simply asleep, the GM decides you wake up either because you have had a restful night\'s sleep or something disrupted that rest.</ul>","summary":"You\'re asleep or knocked out."},"undetected":{"name":"Undetected","rules":"<p>When you are undetected by a creature, that creature cannot see you at all, has no idea what space you occupy, and can\'t target you, though you still can be affected by abilities that target an area. When you\'re undetected by a creature, that creature is flat-footed to you.</p>\\n<p>A creature you\'re undetected by can guess which square you\'re in to try targeting you. It must pick a square and attempt an attack. This works like targeting a hidden creature (requiring a @Check[type:flat|dc:11]), but the flat check and attack roll are rolled in secret by the GM, who doesn\'t reveal whether the attack missed due to failing the flat check, failing the attack roll, or choosing the wrong square.</p>\\n<p>A creature can use the Seek action to try to find you.</p>","summary":"A creature you\'re undetected by doesn\'t know where you are."},"unfriendly":{"name":"Unfriendly","rules":"<p>This condition reflects a creature\'s disposition toward a particular character, and only supernatural effects (like a spell) can impose these conditions on player characters. A creature that is unfriendly to a character dislikes and specifically distrusts that character. The unfriendly creature won\'t accept Requests from the character.</p>","summary":"An NPC with this condition doesn\'t like you."},"unnoticed":{"name":"Unnoticed","rules":"<p>If you are unnoticed by a creature, that creature has no idea you are present at all. When you\'re unnoticed, you\'re also undetected by the creature. This condition matters for abilities that can be used only against targets totally unaware of your presence.</p>","summary":"A creature is entirely unaware you\'re present."},"wounded":{"name":"Wounded","rules":"<p>You have been seriously injured. If you lose the dying condition and do not already have the wounded condition, you become wounded 1. If you already have the wounded condition when you lose the dying condition, your wounded condition value increases by 1. If you gain the dying condition while wounded, increase your dying condition value by your wounded value.</p>\\n<p>The wounded condition ends if someone successfully restores Hit Points to you with Treat Wounds, or if you are restored to full Hit Points and rest for 10 minutes.</p>","summary":"You\'ve been brought back from the brink of death but haven\'t fully recovered."}},"ui":{"equipmentInvested":"Toggle investing your equipment","armorEquipped":"Toggle wearing your equipment","sell":"Sell","weaponEquipped":"Toggle holding your weapon"},"UnitedPaizoWorkers":{"Title":"Announcement: United Paizo Workers","ReleaseIntro":"Redmond, WA (October 14th, 2021) — Today, the workers at Paizo, Inc - publisher of the Pathfinder and Starfinder roleplaying games - are announcing their formation of the United Paizo Workers union (UPW), with the Communication Workers of America\'s CODE-CWA project. This union is the first of its kind in the tabletop roleplaying games industry.","PFSNote":"Note for Pathfinder Society players: In support of UPW, merchandise purchased from the union store will count in the Online PFS region for the <span class=\\"hover\\" title=\\"When you use a Hero Point to reroll a check, add a +1 cirumstance bonus to the reroll\\">Promotional Vestments</a> boon."},"identification":{"Identify":"Identify Item","PostSkillsToChat":"Post skill checks to chat","PostSkillsToChatText":"Identify item: Skill checks","IsIdentified":"Identified?","IdentifyMagicDCs":"Identify Magic DCs","IdentifyAlchemyDCs":"Identify Alchemy DCs","IdentifyGenericDCs":"Identify Generic DCs","MisidentifiedItem":"Misidentified {item}","Misidentify":"Misidentify Item","Mystify":"Mystify Item","MystificationStatus":"Mystification status","Identified":"Identified","Unidentified":"Unidentified","TraitGMNote":"Note: this trait is hidden from players.","UnidentifiedDescription":"The nature of this {item} is unclear.","UnidentifiedHint":"Change the basic display details of this item when unidentified.","UnidentifiedItem":"Unusual {item}","UnidentifiedType":{"Amulet":"Amulet","Anklets":"Anklets","Armbands":"Armbands","Backpack":"Backpack","Belt":"Belt","Circlet":"Circlet","Cloak":"Cloak","Collar":"Collar","Book":"Book","Bracers":"Bracers","Epaulets":"Epaulets","Eyepiece":"Eyepiece","Garment":"Garment","Gloves":"Gloves","Headwear":"Headwear","Horseshoes":"Horseshoes","Liquid":"Liquid","Mask":"Mask","Necklace":"Necklace","Object":"Object","Ring":"Ring","Saddle":"Saddle","Shoes":"Shoes","Substance":"Substance","Tool":"Tool"}},"loot":{"EditLootLabel":"Configure Loot?","GMSettings":"GM Settings","PermissionError":"A GM must be online in order to loot or stow an item.","InsufficientCurrencyError":"Insufficient currency for purchase by {buyer}","LootDescription":"Allows for distribution of coins across players","LootLabel":"Loot","LootNamePlaceholder":"Loot","LootNPCsPopupHeader":"Choose tokens to loot from","LootNPCsLabel":"Loot selected tokens","MerchantDescription":"Allows players to purchase items directly from the sheet.","MerchantLabel":"Merchant","MoveLoot":"Move Items","PurchaseLoot":"Purchase Items","MoveLootMessage":"How many items do you wish to move?","PurchaseLootMessage":"How many items do you wish to purchase?","MoveLootPopupTitle":"Item Quantity","TakeSubtitle":"Take item","DepositSubtitle":"Deposit item","TransferSubtitle":"Transfer item","LootSubtitle":"Loot item","HiddenWhenEmpty":{"Label":"Hidden when empty","Hint":"Hide this actor\'s token(s) when its inventory is empty"},"PlantSubtitle":"Plant Item","BuySubtitle":"Buy item","SellSubtitle":"Sell item","GiveSubtitle":"Give item","TakeMessage":"{taker} takes {quantity} × {item} from {container}.","DepositMessage":"{depositor} deposits {quantity} × {item} in {container}.","TransferMessage":"{transferrer} moves {quantity} × {item} from {fromContainer} to {toContainer}.","LootMessage":"{looter} loots {quantity} × {item} off {corpse}.","PlantMessage":"{planter} plants {quantity} × {item} on {corpse}.","SellMessage":"{seller} sells {quantity} × {item} to {buyer}.","GiveMessage":"{giver} gives {quantity} × {item} to {recipient}.","InsufficientFundsMessage":"{buyer} reaches for their coins but comes up short!","GMSupervisionError":"A GM must be online in order to interact with {loot}.","Quantity":"Quantity","SheetType":"Sheet Type","SplitCoinsLabel":"Distribute Coins","SplitCoinsPopupHeader":"Choose actors to receive a share","Stack":"Create new stack?"},"vehicle":{"VehicleString":"Vehicle","NamePlaceholder":"Vehicle","VehicleLevelLabel":"Vehicle","DescriptionHeading":"Description","PilotingCheckLabel":"Piloting Check","CrewLabel":"Crew","PassengersLabel":"Passengers","collisionDCLabel":"Collision DC","collisionDamageLabel":"Collision Damage","SpaceLongLabel":"Length","SpaceWideLabel":"Width","SpaceHighLabel":"Height","BrokenThresholdShortLabel":"BT","CurrentHPTitel":"Current Hitpoints","MaxHPTitle":"Maximum Hitpoints","HardnessShortLabel":"Hard.","HardnessLabel":"Hardness","PropertyDescriptionPrice":"Vehicle\'s Price. This does not include creatures for pulling a vehicle, materials needed to power the vehicle, or the cost of rowers.","PropertyDescriptionSpace":"Vehicle\'s dimensions, not including any creatures pulling the vehicle.","PropertyDescriptionCrew":"The crew members required to operate the vehicle.","PropertyDescriptionPassengers":"The number of passengers the vehicle is typically configured to carry, if any.","PropertyDescriptionPilotingCheck":"This entry lists the skills that can be used for piloting checks while operating the vehicle. Some skills may increase the DC; these list the DC adjustment in parentheses following the skill name.","PropertyDescriptionSpeed":"The vehicle\'s Speeds, each followed by the propulsion type for that Speed in parentheses. A pulled vehicle indicates the number and size of the pulling creatures.","PropertyDescriptionCollisionDC":"The vehicles\'s DC for saving throws to mitigate damage.","PropertyDescriptionCollisionDamage":"The vehicle\'s collision damage. Unless otherwise stated, collisions deal bludgeoning damage."},"Familiar":{"Master":"Master","MasterActor":"Master Actor","MasterLevel":"Master Level","SelectMaster":"Select a master...","MasterSpellcastingAbility":"Master Spellcasting Ability","TotalNumberFamiliarAbilities":"Total # of Familiar Abilities","Familiar":"Familiar","Creature":"Creature","CreatureType":"Creature Type","Perception":"Perception","Defenses":"Defense","ArmorClass":"Armor Class","Offenses":"Offenses","AttackRoll":"Attack Roll","Skills":"Skills"},"NPC":{"Abilities":{"Glossary":{"AllAroundVision":"<p>This monster can see in all directions simultaneously, and therefore can\'t be flanked.</p>","AquaticAmbush":"<p><strong>Requirements</strong> The monster is hiding in water and a creature that hasn\'t detected it is within the listed number of feet.</p>\\n<hr />\\n<p><strong>Effect</strong> The monster moves up to its swim Speed + 10 feet toward the triggering creature, traveling on water and on land. Once the creature is in reach, the monster makes a Strike against it. The creature is @UUID[Compendium.pf2e.conditionitems.AJh5ex99aV6VTggg]{Flat-Footed} against this Strike.</p>","AttackOfOpportunity":"<p><strong>Trigger</strong> A creature within the monster\'s reach uses a manipulate action or a move action, makes a ranged attack, or leaves a square during a move action it\'s using.</p>\\n<hr />\\n<p><strong>Effect</strong> The monster attempts a melee Strike against the triggering creature. If the attack is a critical hit and the trigger was a manipulate action, the monster disrupts that action. This Strike doesn\'t count toward the monster\'s multiple attack penalty, and its multiple attack penalty doesn\'t apply to this Strike.</p>","AtWillSpells":"<p>The monster can cast its at-will spells any number of times without using up spell slots.</p>","Aura":"<p>A monster\'s aura automatically affects everything within a specified emanation around that monster. The monster doesn\'t need to spend actions on the aura; rather, the aura\'s effects are applied at specific times, such as when a creature ends its turn in the aura or when creatures enter the aura.</p>\\n<p>If an aura does nothing but deal damage, its entry lists only the radius, damage, and saving throw. Such auras deal this damage to a creature when the creature enters the aura and when a creature starts its turn in the aura. A creature can take damage from the aura only once per round.</p>\\n<p>The GM might determine that a monster\'s aura doesn\'t affect its own allies. For example, a creature might be immune to a monster\'s frightful presence if they have been around each other for a long time.</p>","Buck":"<hr />\\n<p>Most monsters that serve as mounts can attempt to buck off unwanted or annoying riders, but most mounts will not use this reaction against a trusted creature unless the mounts are spooked or mistreated.</p>\\n<p><strong>Trigger</strong> A creature @UUID[Compendium.pf2e.actionspf2e.PM5jvValFkbFH3TV]{Mounts} or uses the @UUID[Compendium.pf2e.actionspf2e.q9nbyIF0PEBqMtYe]{Command an Animal} action while riding the monster.</p>\\n<hr />\\n<p><strong>Effect</strong> The triggering creature must succeed at a Reflex saving throw against the listed DC or fall off the creature and land @UUID[Compendium.pf2e.conditionitems.j91X7x0XSomq8d60]{Prone}. If the save is a critical failure, the triggering creature also takes [[/roll {1d6}[bludgeoning]]]{1d6 bludgeoning damage} in addition to the normal damage for the fall.</p>","CatchRock":"<p><strong>Requirements</strong> The monster must have a free hand but can @UUID[Compendium.pf2e.actionspf2e.wQYmDStjdjn0I26t]{Release} anything it\'s holding as part of this reaction.</p>\\n<p><strong>Trigger</strong> The monster is targeted with a thrown rock Strike or a rock would fall on the monster.</p>\\n<hr />\\n<p><strong>Effect</strong> The monster gains a +4 circumstance bonus to its AC against the triggering attack or to any defense against the falling rock. If the attack misses or the monster successfully defends against the falling rock, the monster catches the rock, takes no damage, and is now holding the rock</p>","ChangeShape":"<p>The monster changes its shape indefinitely. It can use this action again to return to its natural shape or adopt a new shape. Unless otherwise noted, a monster cannot use Change Shape to appear as a specific individual. Using Change Shape counts as creating a disguise for the @UUID[Compendium.pf2e.actionspf2e.AJstokjdG6iDjVjE]{Impersonate} use of Deception. The monster\'s transformation automatically defeats Perception DCs to determine whether the creature is a member of the ancestry or creature type into which it transformed, and it gains a +4 status bonus to its Deception DC to prevent others from seeing through its disguise. Change Shape abilities specify what shapes the monster can adopt. The monster doesn\'t gain any special abilities of the new shape, only its physical form. For example, in each shape, it replaces its normal Speeds and Strikes, and might potentially change its senses or size. Any changes are listed in its stat block.</p>","ConstantSpells":"<p>A constant spell affects the monster without the monster needing to cast it, and its duration is unlimited. If a constant spell gets counteracted, the monster can reactivate it by spending the normal spellcasting actions the spell requires.</p>","Constrict":"<p>The monster deals the listed amount of damage to any number of creatures @UUID[Compendium.pf2e.conditionitems.kWc1fhmv9LBiTuei]{Grabbed} or @UUID[Compendium.pf2e.conditionitems.VcDeM8A5oI6VqhbM]{Restrained} by it. Each of those creatures can attempt a basic Fortitude save with the listed DC.</p>","Coven":"<p>This monster can form a coven with two or more other creatures who also have the coven ability. This involves performing an 8-hour ceremony with all prospective coven members. After the coven is formed, each of its members gains elite adjustments, adjusting their levels accordingly. Coven members can sense other members\' locations and conditions by spending a single action, which has the concentrate trait, and can sense what another coven member is sensing as a two-action activity, which has the concentrate trait as well.</p>\\n<p>Covens also grant spells and rituals to their members, but these can be cast only in cooperation between three coven members who are all within 30 feet of one another. A coven member can contribute to a coven spell with a single-action spellcasting activity that has a single verbal component. If two coven members have contributed these actions within the last round, a third member can cast a coven spell on her turn by spending the normal spellcasting actions. A coven can cast its coven spells an unlimited number of times but can cast only one coven spell each round. All covens grant the 8th-level <em>@UUID[Compendium.pf2e.spells-srd.dN8QBNuTiaBHCKUe]{Baleful Polymorph}</em> spell and all the following spells, which the coven can cast at any level up to 5th: <em>@UUID[Compendium.pf2e.spells-srd.41TZEjhO6D1nWw2X]{Augury}</em>, <em>@UUID[Compendium.pf2e.spells-srd.vLA0q0WOK2YPuJs6]{Charm}</em>, <em>@UUID[Compendium.pf2e.spells-srd.HXhWYJviWalN5tQ2]{Clairaudience}</em>, <em>@UUID[Compendium.pf2e.spells-srd.zvKWclOZ7A53DObE]{Clairvoyance}</em>, <em>@UUID[Compendium.pf2e.spells-srd.yM3KTTSAIHhyuP14]{Dream Message}</em>, <em>@UUID[Compendium.pf2e.spells-srd.i35dpZFI7jZcRoBo]{Illusory Disguise}</em>, <em>@UUID[Compendium.pf2e.spells-srd.Ucf8eynbZMfUucjE]{Illusory Scene}</em>, <em>@UUID[Compendium.pf2e.spells-srd.Ek5XI0aEdZhBgm21]{Prying Eye}</em>, and <em>@UUID[Compendium.pf2e.spells-srd.FM3SmEW8N1FCRjqt]{Talking Corpse}</em>. Individual creatures with the coven ability also grant additional spells to any coven they join. A coven can also cast the <em>@UUID[Compendium.pf2e.spells-srd.XkDCzMIyc0YOjw05]{Control Weather}</em> ritual, with a DC of 23 instead of the standard DC.</p>\\n<p>If a coven member leaving the coven or the death of a coven member brings the coven below three members, the remaining members keep their elite adjustments for 24 hours, but without enough members to contribute the necessary actions, they can\'t cast coven spells.</p>","Darkvision":"<p>A monster with darkvision can see perfectly well in areas of darkness and dim light, though such vision is in black and white only. Some forms of magical darkness, such as a 4th-level <em>@UUID[Compendium.pf2e.spells-srd.4GE2ZdODgIQtg51c]{Darkness}</em> spell, block normal darkvision. A monster with @UUID[Compendium.pf2e.bestiary-ability-glossary-srd.4Ho2xMPEC05aSxzr]{Greater Darkvision}, however, can see through even these forms of magical darkness.</p>","Disease":"<p>When a creature is exposed to a monster\'s disease, it attempts a Fortitude save or succumbs to the disease. The level of a disease is the level of the monster inflicting the disease. The disease follows the rules for afflictions.</p>","Engulf":"<p>The monster Strides up to double its Speed and can move through the spaces of any creatures in its path. Any creature of the monster\'s size or smaller whose space the monster moves through can attempt a Reflex save with the listed DC to avoid being engulfed. A creature unable to act automatically critically fails this save. If a creature succeeds at its save, it can choose to be either pushed aside (out of the monster\'s path) or pushed in front of the monster to the end of the monster\'s movement. The monster can attempt to Engulf the same creature only once in a single use of Engulf. The monster can contain as many creatures as can fit in its space.</p>\\n<p>A creature that fails its save is pulled into the monster\'s body. It is @UUID[Compendium.pf2e.conditionitems.kWc1fhmv9LBiTuei]{Grabbed}, is @UUID[Compendium.pf2e.conditionitems.xYTAsEpcJE1Ccni3]{Slowed 1}, and has to hold its breath or start suffocating. The creature takes the listed amount of damage when first engulfed and at the end of each of its turns while it\'s engulfed. An engulfed creature can get free by @UUID[Compendium.pf2e.actionspf2e.SkZAQRkLLkmBQNB9]{Escaping} against the listed escape DC. An engulfed creature can attack the monster engulfing it, but only with unarmed attacks or with weapons of light Bulk or less. The engulfing creature is @UUID[Compendium.pf2e.conditionitems.AJh5ex99aV6VTggg]{Flat-Footed} against the attack. If the monster takes piercing or slashing damage equaling or exceeding the listed Rupture value from a single attack or spell, the engulfed creature cuts itself free. A creature that gets free by either method can immediately breathe and exits the swallowing monster\'s space.</p>\\n<p>If the monster dies, all creatures it has engulfed are automatically released as the monster\'s form loses cohesion.</p>","FastHealing":"<p>A monster with this ability regains the given number of Hit Points each round at the beginning of its turn.</p>","Ferocity":"<p><strong>Trigger</strong> The monster is reduced to 0 HP.</p>\\n<hr />\\n<p><strong>Effect</strong> The monster avoids being knocked out and remains at 1 HP, but its @UUID[Compendium.pf2e.conditionitems.Yl48xTdMh3aeQYL2]{Wounded} value increases by 1. When it is Wounded 3, it can no longer use this ability</p>","FormUp":"<p>The troop chooses one of the squares it currently occupies and redistributes its squares to any configuration in which all squares are contiguous and within 15 feet of the chosen square. The troop can\'t share its space with other creatures.</p>","FrightfulPresence":"<p>A creature that first enters the area must attempt a Will save.</p>\\n<p>Regardless of the result of the saving throw, the creature is temporarily immune to this monster\'s Frightful Presence for 1 minute.</p>\\n<hr />\\n<p><strong>Critical Success</strong> The creature is unaffected by the presence.</p>\\n<p><strong>Success</strong> The creature is @UUID[Compendium.pf2e.conditionitems.TBSHQspnbcqxsmjL]{Frightened 1}.</p>\\n<p><strong>Failure</strong> The creature is @UUID[Compendium.pf2e.conditionitems.TBSHQspnbcqxsmjL]{Frightened 2}.</p>\\n<p><strong>Critical Failure</strong> The creature is @UUID[Compendium.pf2e.conditionitems.TBSHQspnbcqxsmjL]{Frightened 4}.</p>","Grab":"<p><strong>Requirements</strong> The monster\'s last action was a success with a Strike that lists Grab in its damage entry, or it has a creature grabbed using this action.</p>\\n<hr />\\n<p><strong>Effect</strong> The monster automatically Grabs the target until the end of the monster\'s next turn. The creature is @UUID[Compendium.pf2e.conditionitems.kWc1fhmv9LBiTuei]{Grabbed} by whichever body part the monster attacked with, and that body part can\'t be used to Strike creatures until the grab is ended. Using Grab extends the duration of the monster\'s Grab until the end of its next turn for all creatures grabbed by it. A grabbed creature can use the @UUID[Compendium.pf2e.actionspf2e.SkZAQRkLLkmBQNB9]{Escape} action to get out of the grab, and the Grab ends for a grabbed creatures if the monster moves away from it.</p>","GreaterConstrict":"<p>The monster deals the listed amount of damage to any number of creatures @UUID[Compendium.pf2e.conditionitems.kWc1fhmv9LBiTuei]{Grabbed} or @UUID[Compendium.pf2e.conditionitems.VcDeM8A5oI6VqhbM]{Restrained} by it. Each of those creatures can attempt a basic Fortitude save with the listed DC. A creature that fails this save falls @UUID[Compendium.pf2e.conditionitems.fBnFDH2MTzgFijKf]{Unconscious}, and a creature that succeeds is then temporarily immune to falling unconscious from Greater Constrict for 1 minute.</p>","GreaterDarkvision":"<p>A creature with greater darkvision can see perfectly well in areas of darkness and dim light, though such vision is in black and white only. Some forms of magical darkness, such as a 4th-level <em>@UUID[Compendium.pf2e.spells-srd.4GE2ZdODgIQtg51c]{Darkness}</em> spell, block normal @UUID[Compendium.pf2e.bestiary-ability-glossary-srd.qCCLZhnp2HhP3Ex6]{Darkvision}. A creature with greater darkvision, however, can see through even these forms of magical darkness.</p>","ImprovedGrab":"<p>The monster can use @UUID[Compendium.pf2e.bestiary-ability-glossary-srd.Tkd8sH4pwFIPzqTr]{Grab} as a free action triggered by a hit with its initial attack. A monster with Improved Grab still needs to spend an action to extend the duration for creatures it already has @UUID[Compendium.pf2e.conditionitems.kWc1fhmv9LBiTuei]{Grabbed}.</p>","ImprovedKnockdown":"<p>The monster can use @UUID[Compendium.pf2e.bestiary-ability-glossary-srd.BCLvAx4Pz4MLa2pu]{Knockdown} as a free action triggered by a hit with its initial attack.</p>","ImprovedPush":"<p>The monster can use @UUID[Compendium.pf2e.bestiary-ability-glossary-srd.t6cx9FOODmeZQNYl]{Push} as a free action triggered by a hit with its initial attack.</p>","Knockdown":"<p><strong>Requirements</strong> The monster\'s last action was a success with a Strike that lists Knockdown in its damage entry.</p>\\n<hr />\\n<p><strong>Effect</strong> The monster knocks the target @UUID[Compendium.pf2e.conditionitems.j91X7x0XSomq8d60]{Prone}.</p>","Lifesense":"<p>Lifesense allows a monster to sense the vital essence of living and undead creatures within the listed range. The sense can distinguish between the positive energy animating living creatures and the negative energy animating undead creatures, much as sight distinguishes colors.</p>","LightBlindness":"<p>When first exposed to bright light, the monster is @UUID[Compendium.pf2e.conditionitems.XgEqL1kFApUbl5Z2]{Blinded} until the end of its next turn. After this exposure, light doesn\'t blind the monster again until after it spends 1 hour in darkness. However, as long as the monster is in an area of bright light, it\'s @UUID[Compendium.pf2e.conditionitems.TkIyaNPgTZFBCCuh]{Dazzled}.</p>","LowLightVision":"<p>The monster can see in dim light as though it were bright light, so it ignores the @UUID[Compendium.pf2e.conditionitems.DmAIPqOBomZ7H95W]{Concealed} condition due to dim light.</p>","NegativeHealing":"<p>A creature with negative healing draws health from negative energy rather than positive energy. It is damaged by positive damage and is not healed by positive healing effects. It does not take negative damage, and it is healed by negative effects that heal undead.</p>","Poison":"<p>When a creature is exposed to a monster\'s poison, it attempts a Fortitude save to avoid becoming poisoned. The level of a poison is the level of the monster inflicting the poison. The poison follows the rules for afflictions.</p>","PowerAttack":"<p><strong>Frequency</strong> once per round</p>\\n<hr />\\n<p><strong>Effect</strong> The monster makes a melee Strike. This counts as two attacks when calculating the monster\'s multiple attack penalty. If this Strike hits, the monster deals an extra die of weapon damage.</p>","Push":"<p><strong>Requirements</strong> The monster\'s last action was a success with a Strike that lists Push in its damage entry.</p>\\n<hr />\\n<p><strong>Effect</strong> The monster automatically knocks the target away from the monster. Unless otherwise noted in the ability description, the creature is pushed 5 feet. If the attack was a critical hit, this distance is doubled.</p>","Regeneration":"<p>This monster regains the listed number of Hit Points each round at the beginning of its turn. Its @UUID[Compendium.pf2e.conditionitems.yZRUzMqrMmfLu0V1]{Dying} condition never increases beyond Dying 3 as long as its regeneration is active. However, if it takes damage of a type listed in the regeneration entry, its regeneration deactivates until the end of its next turn. Deactivate the regeneration before applying any damage of a listed type, since that damage might kill the monster by bringing it to Dying 4.</p>","Rend":"<p>A Rend entry lists a Strike the monster has.</p>\\n<p><strong>Requirements</strong> The monster hit the same enemy with two consecutive Strikes of the listed type in the same round.</p>\\n<hr />\\n<p><strong>Effect</strong> The monster automatically deals that Strike\'s damage again to the enemy.</p>","RetributiveStrike":"<p><strong>Trigger</strong> An enemy damages the monster\'s ally, and both are within 15 feet of the monster.</p>\\n<hr />\\n<p><strong>Effect</strong> The ally gains resistance to all damage against the triggering damage equal to 2 + the monster\'s level. If the foe is within reach, the monster makes a melee Strike against it.</p>","Scent":"<p>Scent involves sensing creatures or objects by smell, and is usually a vague sense. The range is listed in the ability, and it functions only if the creature or object being detected emits an aroma (for instance, incorporeal creatures usually do not exude an aroma).</p>\\n<p>If a creature emits a heavy aroma or is upwind, the GM can double or even triple the range of scent abilities used to detect that creature, and the GM can reduce the range if a creature is downwind.</p>","ShieldBlock":"<p><strong>Trigger</strong> The monster has its shield raised and takes damage from a physical attack.</p>\\n<hr />\\n<p><strong>Effect</strong> The monster snaps its shield into place to deflect a blow. The shield prevents the monster from taking an amount of damage up to the shield\'s Hardness. The monster and the shield each take any remaining damage, possibly breaking or destroying the shield.</p>","SneakAttack":"<p>When the monster Strikes a creature that has the @UUID[Compendium.pf2e.conditionitems.AJh5ex99aV6VTggg]{Flat-Footed} condition with an agile or finesse melee weapon, an agile or finesse unarmed attack, or a ranged weapon attack, it also deals the listed precision damage. For a ranged attack with a thrown weapon, that weapon must also be an agile or finesse weapon.</p>","SwallowWhole":"<p>The monster attempts to swallow a creature of the listed size or smaller that it has grabbed in its jaws or mouth. If a swallowed creature is of the maximum size listed, the monster can\'t use Swallow Whole again. If the creature is smaller than the maximum, the monster can usually swallow more creatures; the GM determines the maximum. The monster attempts an Athletics check opposed by the grabbed creature\'s Reflex DC. If it succeeds, it swallows the creature. The monster\'s mouth or jaws no longer grab a creature it has swallowed, so the monster is free to use them to Strike or Grab once again. The monster can\'t attack creatures it has swallowed.</p>\\n<p>A swallowed creature is @UUID[Compendium.pf2e.conditionitems.kWc1fhmv9LBiTuei]{Grabbed}, is @UUID[Compendium.pf2e.conditionitems.xYTAsEpcJE1Ccni3]{Slowed 1}, and has to hold its breath or start suffocating. The swallowed creature takes the listed amount of damage when first swallowed and at the end of each of its turns while it\'s swallowed. If the victim @UUID[Compendium.pf2e.actionspf2e.SkZAQRkLLkmBQNB9]{Escapes} this ability\'s grabbed condition, it exits through the monster\'s mouth. This frees any other creature grabbed in the monster\'s mouth or jaws. A swallowed creature can attack the monster that has swallowed it, but only with unarmed attacks or with weapons of light Bulk or less. The swallowing creature is @UUID[Compendium.pf2e.conditionitems.AJh5ex99aV6VTggg]{Flat-Footed} against the attack. If the monster takes piercing or slashing damage equaling or exceeding the listed Rupture value from a single attack or spell, the swallowed creature cuts itself free. A creature that gets free by either Escaping or cutting itself free can immediately breathe and exits the swallowing monster\'s space.</p>\\n<p>If the monster dies, a swallowed creature can be freed by creatures adjacent to the corpse if they spend a combined total of 3 actions cutting the monster open with a weapon or unarmed attack that deals piercing or slashing damage.</p>","SwarmMind":"<p>This monster doesn\'t have a single mind (typically because it\'s a swarm of smaller creatures), and is immune to mental effects that target only a specific number of creatures. It is still subject to mental effects that affect all creatures in an area.</p>","Telepathy":"<p>A monster with telepathy can communicate mentally with any creatures within the listed radius, as long as they share a language. This doesn\'t give any special access to their thoughts, and communicates no more information than normal speech would.</p>","Thoughtsense":"<p>Thoughtsense allows a monster to sense all non-mindless creatures at the listed range.</p>","ThrowRock":"<p>The monster picks up a rock within reach or retrieves a stowed rock and throws it, making a ranged Strike.</p>","Trample":"<p>The monster Strides up to double its Speed and can move through the spaces of creatures of the listed size, Trampling each creature whose space it enters. The monster can attempt to Trample the same creature only once in a single use of Trample. The monster deals the damage of the listed Strike, but trampled creatures can attempt a basic Reflex save at the listed DC (no damage on a critical success, half damage on a success, double damage on a critical failure).</p>","Tremorsense":"<p>Tremorsense allows a monster to feel the vibrations through a solid surface caused by movement. It is an imprecise sense with a limited range (listed in the ability). Tremorsense functions only if the monster is on the same surface as the subject, and only if the subject is moving along (or burrowing through) the surface.</p>","TroopDefenses":"<p>Troops are composed of many individuals, and over the course of enough attacks and downed comrades, troops shrink in size. Most troops start with 16 squares (4 by 4), and their Hit Points have two listed thresholds, typically the first is at 2/3 their maximum Hit Points and the second is at 1/3 their maximum Hit Points. Once the troop drops below the first threshold, it loses 4 squares, leaving 12 squares remaining, and the first threshold becomes the troop\'s new maximum Hit Points. Once the troop falls below the second threshold, it loses another 4 squares, leaving 8 squares remaining, and the second threshold becomes the troop\'s new maximum Hit Points. In order to restore its size and maximum Hit Points, a troop needs to spend downtime to use long-term treatment on casualties or recruit new members to replace the fallen. At 0 Hit Points, the troop is reduced down to 4 squares, which is too few to sustain the troop, so it disperses entirely, with the few remaining members surrendering, fleeing, or easily dispatched, depending on their nature.</p>\\n<p>A damaging single-target effect, such as a Strike, can\'t force a troop to pass through more than one threshold at once. For instance, if a troop had 60 Hit Points, with thresholds at 40 and 20, a Strike for 50 damage would leave the troop at 21 Hit Points, just above the second threshold. A damaging area effect or multi-target effect can cross multiple thresholds at once and could potentially destroy the entire troop in one shot.</p>\\n<p>Non-damaging effects with an area or that target all creatures in a certain proximity affect a troop normally if they affect the entire area occupied by the troop. If an effect has a smaller area or numbers of targets, it typically has no effect on the troop. However, if the effect can target at least four creatures or cover at least four squares in the troop, and if it would prevent its targets from acting, cause them to flee, or otherwise make them unable to function as part of the troop for a round or more, the troop loses loses a number of Hit Points equal to the amount required to bring it to the next threshold, removing 4 squares. If an effect would both deal damage and automatically cross a threshold due to incapacitating some of the creatures in the troop, apply the damage first. If the damage wasn\'t enough to cross a threshold on its own, then reduce the Hit Points to cross the threshold for the incapacitating effect.</p>","Wavesense":"<p>This sense allows a monster to feel vibrations caused by movement through a liquid. It\'s an imprecise sense with a limited range (listed in the ability). Wavesense functions only if monster and the subject are in the same body of liquid, and only if the subject is moving through the liquid.</p>"}},"ActionsList":{"ActionName":"Name","Type":"Type","Cost":"Cost","Traits":"Traits"},"AddAction":"Add Action","AddArmor":"Armor","AddConsumable":"Consumable","AddEquipment":"Equipment","AddItem":"Add Item","AddSkill":"Add Skill","AddTrait":"Add Trait","AddTreasure":"Treasure","AddWeapon":"Weapon","Adjustment":{"EliteLabel":"Elite","EliteNameFormat":"Elite {name}","NormalLabel":"Normal","WeakLabel":"Weak","WeakNameFormat":"Weak {name}"},"ArmorExtraInfoLabelPlaceholder":"AC details...","Attacks":"Attacks","AttackType":{"Melee":"NPC Melee Attack","Ranged":"NPC Ranged Attack","Weapon":"Compendium Weapon"},"Creature":"Creature","Dead":"Dead","Edit":"Edit","EditImmunities":"Edit Immunities","EditLanguages":"Edit Languages","EditResistances":"Edit Resistances","EditSenses":"Edit Senses","EditSkills":"Edit Skills","EditSpeed":"Edit Speed","EditTraits":"Edit Traits","EditWeaknesses":"Edit Weaknesses","EffectsTab":"Effects","MainTab":"Main","NotesTab":"Notes","PassivesLabel":"Passives","PublicNotes":"Public Notes","PrivateNotes":"Private Notes","Remove":"Remove","SendToChat":"Send to chat","SpeedLabel":"Speed","SpellsTab":"Spells","HPExtraInfoLabelPlaceholder":"HP details...","Inventory":{"Header":{"NameLabel":"Name","ValueLabel":"Value","QuantityLabel":"Quantity"}},"InventoryTab":"Inventory","SavesExtraInfoLabelPlaceholder":"Bonus to all saves...","SensesLabel":"Senses","SpeedExtraInfoLabelPlaceholder":"Speed details...","Spells":{"AttackLabel":"Attack","DCLabel":"DC","PreparedLabel":"Prepared","PreparedShortLabel":"Prep."},"SkillRollFlavor":"{skillName} Skill Check ({rank})","SkillsEditor":{"BonusLabel":"Bonus","NameLabel":"Skill Name","SpecialCaseLabel":"Special case","TitleLabel":"NPC Skills Editor"}},"DamageButton":{"Full":"Apply full damage to selected tokens.","FullContext":"Apply Damage","FullShort":"Damage","Half":"Apply half damage to selected tokens.","HalfContext":"Half Damage","HalfShort":"Half","Double":"Apply double damage to selected tokens.","DoubleContext":"Double Damage","DoubleShort":"Double","Triple":"Apply triple damage to selected tokens.","TripleContext":"Apply Triple Damage","TripleShort":"Triple","ShieldBlock":"Toggle the shield block status of the selected tokens.","ShieldBlockContext":"Shield Block","ShieldBlockShort":"Block","Healing":"Apply full healing to selected tokens.","HealingContext":"Apply Healing","HealingShort":"Heal"}}}')}},__webpack_module_cache__={};function __webpack_require__(moduleId){var cachedModule=__webpack_module_cache__[moduleId];if(void 0!==cachedModule)return cachedModule.exports;var module=__webpack_module_cache__[moduleId]={exports:{}};return __webpack_modules__[moduleId].call(module.exports,module,module.exports,__webpack_require__),module.exports}__webpack_require__.m=__webpack_modules__,deferred=[],__webpack_require__.O=(result,chunkIds,fn,priority)=>{if(!chunkIds){var notFulfilled=1/0;for(i=0;i<deferred.length;i++){for(var[chunkIds,fn,priority]=deferred[i],fulfilled=!0,j=0;j<chunkIds.length;j++)(!1&priority||notFulfilled>=priority)&&Object.keys(__webpack_require__.O).every((key=>__webpack_require__.O[key](chunkIds[j])))?chunkIds.splice(j--,1):(fulfilled=!1,priority<notFulfilled&&(notFulfilled=priority));if(fulfilled){deferred.splice(i--,1);var r=fn();void 0!==r&&(result=r)}}return result}priority=priority||0;for(var i=deferred.length;i>0&&deferred[i-1][2]>priority;i--)deferred[i]=deferred[i-1];deferred[i]=[chunkIds,fn,priority]},__webpack_require__.d=(exports,definition)=>{for(var key in definition)__webpack_require__.o(definition,key)&&!__webpack_require__.o(exports,key)&&Object.defineProperty(exports,key,{enumerable:!0,get:definition[key]})},__webpack_require__.o=(obj,prop)=>Object.prototype.hasOwnProperty.call(obj,prop),__webpack_require__.r=exports=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(exports,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(exports,"__esModule",{value:!0})},(()=>{var installedChunks={179:0};__webpack_require__.O.j=chunkId=>0===installedChunks[chunkId];var webpackJsonpCallback=(parentChunkLoadingFunction,data)=>{var moduleId,chunkId,[chunkIds,moreModules,runtime]=data,i=0;if(chunkIds.some((id=>0!==installedChunks[id]))){for(moduleId in moreModules)__webpack_require__.o(moreModules,moduleId)&&(__webpack_require__.m[moduleId]=moreModules[moduleId]);if(runtime)var result=runtime(__webpack_require__)}for(parentChunkLoadingFunction&&parentChunkLoadingFunction(data);i<chunkIds.length;i++)chunkId=chunkIds[i],__webpack_require__.o(installedChunks,chunkId)&&installedChunks[chunkId]&&installedChunks[chunkId][0](),installedChunks[chunkId]=0;return __webpack_require__.O(result)},chunkLoadingGlobal=self.webpackChunkfoundry_pf2e=self.webpackChunkfoundry_pf2e||[];chunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null,0)),chunkLoadingGlobal.push=webpackJsonpCallback.bind(null,chunkLoadingGlobal.push.bind(chunkLoadingGlobal))})();var __webpack_exports__=__webpack_require__.O(void 0,[736],(()=>__webpack_require__(30417)));__webpack_exports__=__webpack_require__.O(__webpack_exports__)})();